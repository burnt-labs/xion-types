// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/store/v1beta1/listening.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fstore_2fv1beta1_2flistening_2eproto_2epb_2eh
#define cosmos_2fstore_2fv1beta1_2flistening_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tendermint/abci/types.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fstore_2fv1beta1_2flistening_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fstore_2fv1beta1_2flistening_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto;
namespace cosmos {
namespace store {
namespace v1beta1 {
class BlockMetadata;
struct BlockMetadataDefaultTypeInternal;
extern BlockMetadataDefaultTypeInternal _BlockMetadata_default_instance_;
class StoreKVPair;
struct StoreKVPairDefaultTypeInternal;
extern StoreKVPairDefaultTypeInternal _StoreKVPair_default_instance_;
}  // namespace v1beta1
}  // namespace store
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace store {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class StoreKVPair final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.store.v1beta1.StoreKVPair) */ {
 public:
  inline StoreKVPair() : StoreKVPair(nullptr) {}
  ~StoreKVPair() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StoreKVPair* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StoreKVPair));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StoreKVPair(
      ::google::protobuf::internal::ConstantInitialized);

  inline StoreKVPair(const StoreKVPair& from) : StoreKVPair(nullptr, from) {}
  inline StoreKVPair(StoreKVPair&& from) noexcept
      : StoreKVPair(nullptr, std::move(from)) {}
  inline StoreKVPair& operator=(const StoreKVPair& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreKVPair& operator=(StoreKVPair&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StoreKVPair& default_instance() {
    return *internal_default_instance();
  }
  static inline const StoreKVPair* internal_default_instance() {
    return reinterpret_cast<const StoreKVPair*>(
        &_StoreKVPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StoreKVPair& a, StoreKVPair& b) { a.Swap(&b); }
  inline void Swap(StoreKVPair* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreKVPair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StoreKVPair* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StoreKVPair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StoreKVPair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StoreKVPair& from) { StoreKVPair::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StoreKVPair* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.store.v1beta1.StoreKVPair"; }

 protected:
  explicit StoreKVPair(::google::protobuf::Arena* arena);
  StoreKVPair(::google::protobuf::Arena* arena, const StoreKVPair& from);
  StoreKVPair(::google::protobuf::Arena* arena, StoreKVPair&& from) noexcept
      : StoreKVPair(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStoreKeyFieldNumber = 1,
    kKeyFieldNumber = 3,
    kValueFieldNumber = 4,
    kDeleteFieldNumber = 2,
  };
  // string store_key = 1 [json_name = "storeKey"];
  void clear_store_key() ;
  const std::string& store_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_store_key(Arg_&& arg, Args_... args);
  std::string* mutable_store_key();
  PROTOBUF_NODISCARD std::string* release_store_key();
  void set_allocated_store_key(std::string* value);

  private:
  const std::string& _internal_store_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_store_key(
      const std::string& value);
  std::string* _internal_mutable_store_key();

  public:
  // bytes key = 3 [json_name = "key"];
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes value = 4 [json_name = "value"];
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // bool delete = 2 [json_name = "delete"];
  void clear_delete_() ;
  bool delete_() const;
  void set_delete_(bool value);

  private:
  bool _internal_delete_() const;
  void _internal_set_delete_(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.store.v1beta1.StoreKVPair)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StoreKVPair& from_msg);
    ::google::protobuf::internal::ArenaStringPtr store_key_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    bool delete__;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstore_2fv1beta1_2flistening_2eproto;
};
// -------------------------------------------------------------------

class BlockMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.store.v1beta1.BlockMetadata) */ {
 public:
  inline BlockMetadata() : BlockMetadata(nullptr) {}
  ~BlockMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockMetadata(const BlockMetadata& from) : BlockMetadata(nullptr, from) {}
  inline BlockMetadata(BlockMetadata&& from) noexcept
      : BlockMetadata(nullptr, std::move(from)) {}
  inline BlockMetadata& operator=(const BlockMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockMetadata& operator=(BlockMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockMetadata* internal_default_instance() {
    return reinterpret_cast<const BlockMetadata*>(
        &_BlockMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BlockMetadata& a, BlockMetadata& b) { a.Swap(&b); }
  inline void Swap(BlockMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockMetadata& from) { BlockMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.store.v1beta1.BlockMetadata"; }

 protected:
  explicit BlockMetadata(::google::protobuf::Arena* arena);
  BlockMetadata(::google::protobuf::Arena* arena, const BlockMetadata& from);
  BlockMetadata(::google::protobuf::Arena* arena, BlockMetadata&& from) noexcept
      : BlockMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponseCommitFieldNumber = 6,
    kRequestFinalizeBlockFieldNumber = 7,
    kResponseFinalizeBlockFieldNumber = 8,
  };
  // .tendermint.abci.ResponseCommit response_commit = 6 [json_name = "responseCommit"];
  bool has_response_commit() const;
  void clear_response_commit() ;
  const ::tendermint::abci::ResponseCommit& response_commit() const;
  PROTOBUF_NODISCARD ::tendermint::abci::ResponseCommit* release_response_commit();
  ::tendermint::abci::ResponseCommit* mutable_response_commit();
  void set_allocated_response_commit(::tendermint::abci::ResponseCommit* value);
  void unsafe_arena_set_allocated_response_commit(::tendermint::abci::ResponseCommit* value);
  ::tendermint::abci::ResponseCommit* unsafe_arena_release_response_commit();

  private:
  const ::tendermint::abci::ResponseCommit& _internal_response_commit() const;
  ::tendermint::abci::ResponseCommit* _internal_mutable_response_commit();

  public:
  // .tendermint.abci.RequestFinalizeBlock request_finalize_block = 7 [json_name = "requestFinalizeBlock"];
  bool has_request_finalize_block() const;
  void clear_request_finalize_block() ;
  const ::tendermint::abci::RequestFinalizeBlock& request_finalize_block() const;
  PROTOBUF_NODISCARD ::tendermint::abci::RequestFinalizeBlock* release_request_finalize_block();
  ::tendermint::abci::RequestFinalizeBlock* mutable_request_finalize_block();
  void set_allocated_request_finalize_block(::tendermint::abci::RequestFinalizeBlock* value);
  void unsafe_arena_set_allocated_request_finalize_block(::tendermint::abci::RequestFinalizeBlock* value);
  ::tendermint::abci::RequestFinalizeBlock* unsafe_arena_release_request_finalize_block();

  private:
  const ::tendermint::abci::RequestFinalizeBlock& _internal_request_finalize_block() const;
  ::tendermint::abci::RequestFinalizeBlock* _internal_mutable_request_finalize_block();

  public:
  // .tendermint.abci.ResponseFinalizeBlock response_finalize_block = 8 [json_name = "responseFinalizeBlock"];
  bool has_response_finalize_block() const;
  void clear_response_finalize_block() ;
  const ::tendermint::abci::ResponseFinalizeBlock& response_finalize_block() const;
  PROTOBUF_NODISCARD ::tendermint::abci::ResponseFinalizeBlock* release_response_finalize_block();
  ::tendermint::abci::ResponseFinalizeBlock* mutable_response_finalize_block();
  void set_allocated_response_finalize_block(::tendermint::abci::ResponseFinalizeBlock* value);
  void unsafe_arena_set_allocated_response_finalize_block(::tendermint::abci::ResponseFinalizeBlock* value);
  ::tendermint::abci::ResponseFinalizeBlock* unsafe_arena_release_response_finalize_block();

  private:
  const ::tendermint::abci::ResponseFinalizeBlock& _internal_response_finalize_block() const;
  ::tendermint::abci::ResponseFinalizeBlock* _internal_mutable_response_finalize_block();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.store.v1beta1.BlockMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tendermint::abci::ResponseCommit* response_commit_;
    ::tendermint::abci::RequestFinalizeBlock* request_finalize_block_;
    ::tendermint::abci::ResponseFinalizeBlock* response_finalize_block_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstore_2fv1beta1_2flistening_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StoreKVPair

// string store_key = 1 [json_name = "storeKey"];
inline void StoreKVPair::clear_store_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_key_.ClearToEmpty();
}
inline const std::string& StoreKVPair::store_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.StoreKVPair.store_key)
  return _internal_store_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StoreKVPair::set_store_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.store.v1beta1.StoreKVPair.store_key)
}
inline std::string* StoreKVPair::mutable_store_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_store_key();
  // @@protoc_insertion_point(field_mutable:cosmos.store.v1beta1.StoreKVPair.store_key)
  return _s;
}
inline const std::string& StoreKVPair::_internal_store_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.store_key_.Get();
}
inline void StoreKVPair::_internal_set_store_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_key_.Set(value, GetArena());
}
inline std::string* StoreKVPair::_internal_mutable_store_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.store_key_.Mutable( GetArena());
}
inline std::string* StoreKVPair::release_store_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.v1beta1.StoreKVPair.store_key)
  return _impl_.store_key_.Release();
}
inline void StoreKVPair::set_allocated_store_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.store_key_.IsDefault()) {
    _impl_.store_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.v1beta1.StoreKVPair.store_key)
}

// bool delete = 2 [json_name = "delete"];
inline void StoreKVPair::clear_delete_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete__ = false;
}
inline bool StoreKVPair::delete_() const {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.StoreKVPair.delete)
  return _internal_delete_();
}
inline void StoreKVPair::set_delete_(bool value) {
  _internal_set_delete_(value);
  // @@protoc_insertion_point(field_set:cosmos.store.v1beta1.StoreKVPair.delete)
}
inline bool StoreKVPair::_internal_delete_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delete__;
}
inline void StoreKVPair::_internal_set_delete_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete__ = value;
}

// bytes key = 3 [json_name = "key"];
inline void StoreKVPair::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& StoreKVPair::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.StoreKVPair.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StoreKVPair::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.store.v1beta1.StoreKVPair.key)
}
inline std::string* StoreKVPair::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:cosmos.store.v1beta1.StoreKVPair.key)
  return _s;
}
inline const std::string& StoreKVPair::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void StoreKVPair::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* StoreKVPair::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* StoreKVPair::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.v1beta1.StoreKVPair.key)
  return _impl_.key_.Release();
}
inline void StoreKVPair::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.v1beta1.StoreKVPair.key)
}

// bytes value = 4 [json_name = "value"];
inline void StoreKVPair::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& StoreKVPair::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.StoreKVPair.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StoreKVPair::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.store.v1beta1.StoreKVPair.value)
}
inline std::string* StoreKVPair::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:cosmos.store.v1beta1.StoreKVPair.value)
  return _s;
}
inline const std::string& StoreKVPair::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void StoreKVPair::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* StoreKVPair::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* StoreKVPair::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.v1beta1.StoreKVPair.value)
  return _impl_.value_.Release();
}
inline void StoreKVPair::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.v1beta1.StoreKVPair.value)
}

// -------------------------------------------------------------------

// BlockMetadata

// .tendermint.abci.ResponseCommit response_commit = 6 [json_name = "responseCommit"];
inline bool BlockMetadata::has_response_commit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_commit_ != nullptr);
  return value;
}
inline const ::tendermint::abci::ResponseCommit& BlockMetadata::_internal_response_commit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::abci::ResponseCommit* p = _impl_.response_commit_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::abci::ResponseCommit&>(::tendermint::abci::_ResponseCommit_default_instance_);
}
inline const ::tendermint::abci::ResponseCommit& BlockMetadata::response_commit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.BlockMetadata.response_commit)
  return _internal_response_commit();
}
inline void BlockMetadata::unsafe_arena_set_allocated_response_commit(::tendermint::abci::ResponseCommit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_commit_);
  }
  _impl_.response_commit_ = reinterpret_cast<::tendermint::abci::ResponseCommit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.store.v1beta1.BlockMetadata.response_commit)
}
inline ::tendermint::abci::ResponseCommit* BlockMetadata::release_response_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::abci::ResponseCommit* released = _impl_.response_commit_;
  _impl_.response_commit_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::abci::ResponseCommit* BlockMetadata::unsafe_arena_release_response_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.v1beta1.BlockMetadata.response_commit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::abci::ResponseCommit* temp = _impl_.response_commit_;
  _impl_.response_commit_ = nullptr;
  return temp;
}
inline ::tendermint::abci::ResponseCommit* BlockMetadata::_internal_mutable_response_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_commit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::abci::ResponseCommit>(GetArena());
    _impl_.response_commit_ = reinterpret_cast<::tendermint::abci::ResponseCommit*>(p);
  }
  return _impl_.response_commit_;
}
inline ::tendermint::abci::ResponseCommit* BlockMetadata::mutable_response_commit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::abci::ResponseCommit* _msg = _internal_mutable_response_commit();
  // @@protoc_insertion_point(field_mutable:cosmos.store.v1beta1.BlockMetadata.response_commit)
  return _msg;
}
inline void BlockMetadata::set_allocated_response_commit(::tendermint::abci::ResponseCommit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_commit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.response_commit_ = reinterpret_cast<::tendermint::abci::ResponseCommit*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.v1beta1.BlockMetadata.response_commit)
}

// .tendermint.abci.RequestFinalizeBlock request_finalize_block = 7 [json_name = "requestFinalizeBlock"];
inline bool BlockMetadata::has_request_finalize_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_finalize_block_ != nullptr);
  return value;
}
inline const ::tendermint::abci::RequestFinalizeBlock& BlockMetadata::_internal_request_finalize_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::abci::RequestFinalizeBlock* p = _impl_.request_finalize_block_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::abci::RequestFinalizeBlock&>(::tendermint::abci::_RequestFinalizeBlock_default_instance_);
}
inline const ::tendermint::abci::RequestFinalizeBlock& BlockMetadata::request_finalize_block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.BlockMetadata.request_finalize_block)
  return _internal_request_finalize_block();
}
inline void BlockMetadata::unsafe_arena_set_allocated_request_finalize_block(::tendermint::abci::RequestFinalizeBlock* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_finalize_block_);
  }
  _impl_.request_finalize_block_ = reinterpret_cast<::tendermint::abci::RequestFinalizeBlock*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.store.v1beta1.BlockMetadata.request_finalize_block)
}
inline ::tendermint::abci::RequestFinalizeBlock* BlockMetadata::release_request_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::abci::RequestFinalizeBlock* released = _impl_.request_finalize_block_;
  _impl_.request_finalize_block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::abci::RequestFinalizeBlock* BlockMetadata::unsafe_arena_release_request_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.v1beta1.BlockMetadata.request_finalize_block)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::abci::RequestFinalizeBlock* temp = _impl_.request_finalize_block_;
  _impl_.request_finalize_block_ = nullptr;
  return temp;
}
inline ::tendermint::abci::RequestFinalizeBlock* BlockMetadata::_internal_mutable_request_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_finalize_block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::abci::RequestFinalizeBlock>(GetArena());
    _impl_.request_finalize_block_ = reinterpret_cast<::tendermint::abci::RequestFinalizeBlock*>(p);
  }
  return _impl_.request_finalize_block_;
}
inline ::tendermint::abci::RequestFinalizeBlock* BlockMetadata::mutable_request_finalize_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tendermint::abci::RequestFinalizeBlock* _msg = _internal_mutable_request_finalize_block();
  // @@protoc_insertion_point(field_mutable:cosmos.store.v1beta1.BlockMetadata.request_finalize_block)
  return _msg;
}
inline void BlockMetadata::set_allocated_request_finalize_block(::tendermint::abci::RequestFinalizeBlock* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_finalize_block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.request_finalize_block_ = reinterpret_cast<::tendermint::abci::RequestFinalizeBlock*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.v1beta1.BlockMetadata.request_finalize_block)
}

// .tendermint.abci.ResponseFinalizeBlock response_finalize_block = 8 [json_name = "responseFinalizeBlock"];
inline bool BlockMetadata::has_response_finalize_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_finalize_block_ != nullptr);
  return value;
}
inline const ::tendermint::abci::ResponseFinalizeBlock& BlockMetadata::_internal_response_finalize_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::abci::ResponseFinalizeBlock* p = _impl_.response_finalize_block_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::abci::ResponseFinalizeBlock&>(::tendermint::abci::_ResponseFinalizeBlock_default_instance_);
}
inline const ::tendermint::abci::ResponseFinalizeBlock& BlockMetadata::response_finalize_block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.v1beta1.BlockMetadata.response_finalize_block)
  return _internal_response_finalize_block();
}
inline void BlockMetadata::unsafe_arena_set_allocated_response_finalize_block(::tendermint::abci::ResponseFinalizeBlock* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_finalize_block_);
  }
  _impl_.response_finalize_block_ = reinterpret_cast<::tendermint::abci::ResponseFinalizeBlock*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.store.v1beta1.BlockMetadata.response_finalize_block)
}
inline ::tendermint::abci::ResponseFinalizeBlock* BlockMetadata::release_response_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tendermint::abci::ResponseFinalizeBlock* released = _impl_.response_finalize_block_;
  _impl_.response_finalize_block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::abci::ResponseFinalizeBlock* BlockMetadata::unsafe_arena_release_response_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.v1beta1.BlockMetadata.response_finalize_block)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tendermint::abci::ResponseFinalizeBlock* temp = _impl_.response_finalize_block_;
  _impl_.response_finalize_block_ = nullptr;
  return temp;
}
inline ::tendermint::abci::ResponseFinalizeBlock* BlockMetadata::_internal_mutable_response_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_finalize_block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::abci::ResponseFinalizeBlock>(GetArena());
    _impl_.response_finalize_block_ = reinterpret_cast<::tendermint::abci::ResponseFinalizeBlock*>(p);
  }
  return _impl_.response_finalize_block_;
}
inline ::tendermint::abci::ResponseFinalizeBlock* BlockMetadata::mutable_response_finalize_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tendermint::abci::ResponseFinalizeBlock* _msg = _internal_mutable_response_finalize_block();
  // @@protoc_insertion_point(field_mutable:cosmos.store.v1beta1.BlockMetadata.response_finalize_block)
  return _msg;
}
inline void BlockMetadata::set_allocated_response_finalize_block(::tendermint::abci::ResponseFinalizeBlock* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_finalize_block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.response_finalize_block_ = reinterpret_cast<::tendermint::abci::ResponseFinalizeBlock*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.v1beta1.BlockMetadata.response_finalize_block)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace store
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fstore_2fv1beta1_2flistening_2eproto_2epb_2eh
