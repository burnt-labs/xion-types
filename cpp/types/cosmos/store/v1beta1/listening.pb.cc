// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/store/v1beta1/listening.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/store/v1beta1/listening.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace store {
namespace v1beta1 {

inline constexpr StoreKVPair::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : store_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delete__{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StoreKVPair::StoreKVPair(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StoreKVPairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreKVPairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreKVPairDefaultTypeInternal() {}
  union {
    StoreKVPair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreKVPairDefaultTypeInternal _StoreKVPair_default_instance_;

inline constexpr BlockMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        response_commit_{nullptr},
        request_finalize_block_{nullptr},
        response_finalize_block_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BlockMetadata::BlockMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockMetadataDefaultTypeInternal() {}
  union {
    BlockMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockMetadataDefaultTypeInternal _BlockMetadata_default_instance_;
}  // namespace v1beta1
}  // namespace store
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fstore_2fv1beta1_2flistening_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fstore_2fv1beta1_2flistening_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fstore_2fv1beta1_2flistening_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::StoreKVPair, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::StoreKVPair, _impl_.store_key_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::StoreKVPair, _impl_.delete__),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::StoreKVPair, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::StoreKVPair, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::BlockMetadata, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::BlockMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::BlockMetadata, _impl_.response_commit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::BlockMetadata, _impl_.request_finalize_block_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::v1beta1::BlockMetadata, _impl_.response_finalize_block_),
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::store::v1beta1::StoreKVPair)},
        {12, 23, -1, sizeof(::cosmos::store::v1beta1::BlockMetadata)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::store::v1beta1::_StoreKVPair_default_instance_._instance,
    &::cosmos::store::v1beta1::_BlockMetadata_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fstore_2fv1beta1_2flistening_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$cosmos/store/v1beta1/listening.proto\022\024"
    "cosmos.store.v1beta1\032\033tendermint/abci/ty"
    "pes.proto\032\031cosmos_proto/cosmos.proto\"\177\n\013"
    "StoreKVPair\022\033\n\tstore_key\030\001 \001(\tR\010storeKey"
    "\022\026\n\006delete\030\002 \001(\010R\006delete\022\020\n\003key\030\003 \001(\014R\003k"
    "ey\022\024\n\005value\030\004 \001(\014R\005value:\023\322\264-\017cosmos-sdk"
    " 0.43\"\264\002\n\rBlockMetadata\022H\n\017response_comm"
    "it\030\006 \001(\0132\037.tendermint.abci.ResponseCommi"
    "tR\016responseCommit\022[\n\026request_finalize_bl"
    "ock\030\007 \001(\0132%.tendermint.abci.RequestFinal"
    "izeBlockR\024requestFinalizeBlock\022^\n\027respon"
    "se_finalize_block\030\010 \001(\0132&.tendermint.abc"
    "i.ResponseFinalizeBlockR\025responseFinaliz"
    "eBlockJ\004\010\001\020\002J\004\010\002\020\003J\004\010\003\020\004J\004\010\004\020\005J\004\010\005\020\006B\032Z\030"
    "cosmossdk.io/store/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto_deps[2] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_tendermint_2fabci_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto = {
    false,
    false,
    592,
    descriptor_table_protodef_cosmos_2fstore_2fv1beta1_2flistening_2eproto,
    "cosmos/store/v1beta1/listening.proto",
    &descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto_once,
    descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fstore_2fv1beta1_2flistening_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fstore_2fv1beta1_2flistening_2eproto,
    file_level_service_descriptors_cosmos_2fstore_2fv1beta1_2flistening_2eproto,
};
namespace cosmos {
namespace store {
namespace v1beta1 {
// ===================================================================

class StoreKVPair::_Internal {
 public:
};

StoreKVPair::StoreKVPair(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.store.v1beta1.StoreKVPair)
}
inline PROTOBUF_NDEBUG_INLINE StoreKVPair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::store::v1beta1::StoreKVPair& from_msg)
      : store_key_(arena, from.store_key_),
        key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

StoreKVPair::StoreKVPair(
    ::google::protobuf::Arena* arena,
    const StoreKVPair& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StoreKVPair* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.delete__ = from._impl_.delete__;

  // @@protoc_insertion_point(copy_constructor:cosmos.store.v1beta1.StoreKVPair)
}
inline PROTOBUF_NDEBUG_INLINE StoreKVPair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : store_key_(arena),
        key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void StoreKVPair::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.delete__ = {};
}
StoreKVPair::~StoreKVPair() {
  // @@protoc_insertion_point(destructor:cosmos.store.v1beta1.StoreKVPair)
  SharedDtor(*this);
}
inline void StoreKVPair::SharedDtor(MessageLite& self) {
  StoreKVPair& this_ = static_cast<StoreKVPair&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.store_key_.Destroy();
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StoreKVPair::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StoreKVPair(arena);
}
constexpr auto StoreKVPair::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StoreKVPair),
                                            alignof(StoreKVPair));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StoreKVPair::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StoreKVPair_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StoreKVPair::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StoreKVPair>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StoreKVPair::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StoreKVPair>(), &StoreKVPair::ByteSizeLong,
            &StoreKVPair::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_._cached_size_),
        false,
    },
    &StoreKVPair::kDescriptorMethods,
    &descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StoreKVPair::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 50, 2> StoreKVPair::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::store::v1beta1::StoreKVPair>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes value = 4 [json_name = "value"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.value_)}},
    // string store_key = 1 [json_name = "storeKey"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.store_key_)}},
    // bool delete = 2 [json_name = "delete"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StoreKVPair, _impl_.delete__), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.delete__)}},
    // bytes key = 3 [json_name = "key"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string store_key = 1 [json_name = "storeKey"];
    {PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.store_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool delete = 2 [json_name = "delete"];
    {PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.delete__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes key = 3 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes value = 4 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(StoreKVPair, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\0\0\0\0\0\0"
    "cosmos.store.v1beta1.StoreKVPair"
    "store_key"
  }},
};

PROTOBUF_NOINLINE void StoreKVPair::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.store.v1beta1.StoreKVPair)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.store_key_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.delete__ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StoreKVPair::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StoreKVPair& this_ = static_cast<const StoreKVPair&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StoreKVPair::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StoreKVPair& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.store.v1beta1.StoreKVPair)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string store_key = 1 [json_name = "storeKey"];
          if (!this_._internal_store_key().empty()) {
            const std::string& _s = this_._internal_store_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.store.v1beta1.StoreKVPair.store_key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool delete = 2 [json_name = "delete"];
          if (this_._internal_delete_() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_delete_(), target);
          }

          // bytes key = 3 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes value = 4 [json_name = "value"];
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.store.v1beta1.StoreKVPair)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StoreKVPair::ByteSizeLong(const MessageLite& base) {
          const StoreKVPair& this_ = static_cast<const StoreKVPair&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StoreKVPair::ByteSizeLong() const {
          const StoreKVPair& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.store.v1beta1.StoreKVPair)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string store_key = 1 [json_name = "storeKey"];
            if (!this_._internal_store_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_store_key());
            }
            // bytes key = 3 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_key());
            }
            // bytes value = 4 [json_name = "value"];
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_value());
            }
            // bool delete = 2 [json_name = "delete"];
            if (this_._internal_delete_() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StoreKVPair::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreKVPair*>(&to_msg);
  auto& from = static_cast<const StoreKVPair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.store.v1beta1.StoreKVPair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_store_key().empty()) {
    _this->_internal_set_store_key(from._internal_store_key());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_delete_() != 0) {
    _this->_impl_.delete__ = from._impl_.delete__;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreKVPair::CopyFrom(const StoreKVPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.store.v1beta1.StoreKVPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StoreKVPair::InternalSwap(StoreKVPair* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.store_key_, &other->_impl_.store_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.delete__, other->_impl_.delete__);
}

::google::protobuf::Metadata StoreKVPair::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockMetadata::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BlockMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_._has_bits_);
};

void BlockMetadata::clear_response_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_commit_ != nullptr) _impl_.response_commit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BlockMetadata::clear_request_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_finalize_block_ != nullptr) _impl_.request_finalize_block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void BlockMetadata::clear_response_finalize_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_finalize_block_ != nullptr) _impl_.response_finalize_block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
BlockMetadata::BlockMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.store.v1beta1.BlockMetadata)
}
inline PROTOBUF_NDEBUG_INLINE BlockMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::store::v1beta1::BlockMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BlockMetadata::BlockMetadata(
    ::google::protobuf::Arena* arena,
    const BlockMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.response_commit_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCommit>(
                              arena, *from._impl_.response_commit_)
                        : nullptr;
  _impl_.request_finalize_block_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFinalizeBlock>(
                              arena, *from._impl_.request_finalize_block_)
                        : nullptr;
  _impl_.response_finalize_block_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFinalizeBlock>(
                              arena, *from._impl_.response_finalize_block_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.store.v1beta1.BlockMetadata)
}
inline PROTOBUF_NDEBUG_INLINE BlockMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BlockMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, response_commit_),
           0,
           offsetof(Impl_, response_finalize_block_) -
               offsetof(Impl_, response_commit_) +
               sizeof(Impl_::response_finalize_block_));
}
BlockMetadata::~BlockMetadata() {
  // @@protoc_insertion_point(destructor:cosmos.store.v1beta1.BlockMetadata)
  SharedDtor(*this);
}
inline void BlockMetadata::SharedDtor(MessageLite& self) {
  BlockMetadata& this_ = static_cast<BlockMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.response_commit_;
  delete this_._impl_.request_finalize_block_;
  delete this_._impl_.response_finalize_block_;
  this_._impl_.~Impl_();
}

inline void* BlockMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockMetadata(arena);
}
constexpr auto BlockMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BlockMetadata),
                                            alignof(BlockMetadata));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockMetadata>(), &BlockMetadata::ByteSizeLong,
            &BlockMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_._cached_size_),
        false,
    },
    &BlockMetadata::kDescriptorMethods,
    &descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> BlockMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_._has_bits_),
    0, // no _extensions_
    8, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967071,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::store::v1beta1::BlockMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.ResponseFinalizeBlock response_finalize_block = 8 [json_name = "responseFinalizeBlock"];
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.response_finalize_block_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.abci.ResponseCommit response_commit = 6 [json_name = "responseCommit"];
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.response_commit_)}},
    // .tendermint.abci.RequestFinalizeBlock request_finalize_block = 7 [json_name = "requestFinalizeBlock"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.request_finalize_block_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.ResponseCommit response_commit = 6 [json_name = "responseCommit"];
    {PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.response_commit_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestFinalizeBlock request_finalize_block = 7 [json_name = "requestFinalizeBlock"];
    {PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.request_finalize_block_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseFinalizeBlock response_finalize_block = 8 [json_name = "responseFinalizeBlock"];
    {PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.response_finalize_block_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseCommit>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestFinalizeBlock>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseFinalizeBlock>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BlockMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.store.v1beta1.BlockMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.response_commit_ != nullptr);
      _impl_.response_commit_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.request_finalize_block_ != nullptr);
      _impl_.request_finalize_block_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.response_finalize_block_ != nullptr);
      _impl_.response_finalize_block_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockMetadata& this_ = static_cast<const BlockMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.store.v1beta1.BlockMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.ResponseCommit response_commit = 6 [json_name = "responseCommit"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.response_commit_, this_._impl_.response_commit_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.abci.RequestFinalizeBlock request_finalize_block = 7 [json_name = "requestFinalizeBlock"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.request_finalize_block_, this_._impl_.request_finalize_block_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.abci.ResponseFinalizeBlock response_finalize_block = 8 [json_name = "responseFinalizeBlock"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.response_finalize_block_, this_._impl_.response_finalize_block_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.store.v1beta1.BlockMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockMetadata::ByteSizeLong(const MessageLite& base) {
          const BlockMetadata& this_ = static_cast<const BlockMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockMetadata::ByteSizeLong() const {
          const BlockMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.store.v1beta1.BlockMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .tendermint.abci.ResponseCommit response_commit = 6 [json_name = "responseCommit"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_commit_);
            }
            // .tendermint.abci.RequestFinalizeBlock request_finalize_block = 7 [json_name = "requestFinalizeBlock"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_finalize_block_);
            }
            // .tendermint.abci.ResponseFinalizeBlock response_finalize_block = 8 [json_name = "responseFinalizeBlock"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_finalize_block_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockMetadata*>(&to_msg);
  auto& from = static_cast<const BlockMetadata&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.store.v1beta1.BlockMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.response_commit_ != nullptr);
      if (_this->_impl_.response_commit_ == nullptr) {
        _this->_impl_.response_commit_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCommit>(arena, *from._impl_.response_commit_);
      } else {
        _this->_impl_.response_commit_->MergeFrom(*from._impl_.response_commit_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.request_finalize_block_ != nullptr);
      if (_this->_impl_.request_finalize_block_ == nullptr) {
        _this->_impl_.request_finalize_block_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFinalizeBlock>(arena, *from._impl_.request_finalize_block_);
      } else {
        _this->_impl_.request_finalize_block_->MergeFrom(*from._impl_.request_finalize_block_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.response_finalize_block_ != nullptr);
      if (_this->_impl_.response_finalize_block_ == nullptr) {
        _this->_impl_.response_finalize_block_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFinalizeBlock>(arena, *from._impl_.response_finalize_block_);
      } else {
        _this->_impl_.response_finalize_block_->MergeFrom(*from._impl_.response_finalize_block_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockMetadata::CopyFrom(const BlockMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.store.v1beta1.BlockMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockMetadata::InternalSwap(BlockMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.response_finalize_block_)
      + sizeof(BlockMetadata::_impl_.response_finalize_block_)
      - PROTOBUF_FIELD_OFFSET(BlockMetadata, _impl_.response_commit_)>(
          reinterpret_cast<char*>(&_impl_.response_commit_),
          reinterpret_cast<char*>(&other->_impl_.response_commit_));
}

::google::protobuf::Metadata BlockMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace store
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
