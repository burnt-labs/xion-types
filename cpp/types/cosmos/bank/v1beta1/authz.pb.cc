// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/bank/v1beta1/authz.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/bank/v1beta1/authz.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace bank {
namespace v1beta1 {

inline constexpr SendAuthorization::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : spend_limit_{},
        allow_list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SendAuthorization::SendAuthorization(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendAuthorizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendAuthorizationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendAuthorizationDefaultTypeInternal() {}
  union {
    SendAuthorization _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendAuthorizationDefaultTypeInternal _SendAuthorization_default_instance_;
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fbank_2fv1beta1_2fauthz_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fbank_2fv1beta1_2fauthz_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fbank_2fv1beta1_2fauthz_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::SendAuthorization, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::SendAuthorization, _impl_.spend_limit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::SendAuthorization, _impl_.allow_list_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::bank::v1beta1::SendAuthorization)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::bank::v1beta1::_SendAuthorization_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fbank_2fv1beta1_2fauthz_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037cosmos/bank/v1beta1/authz.proto\022\023cosmo"
    "s.bank.v1beta1\032\021amino/amino.proto\032\024gogop"
    "roto/gogo.proto\032\031cosmos_proto/cosmos.pro"
    "to\032\036cosmos/base/v1beta1/coin.proto\"\300\002\n\021S"
    "endAuthorization\022\202\001\n\013spend_limit\030\001 \003(\0132\031"
    ".cosmos.base.v1beta1.CoinBF\310\336\037\000\252\337\037(githu"
    "b.com/cosmos/cosmos-sdk/types.Coins\232\347\260*\014"
    "legacy_coins\250\347\260*\001R\nspendLimit\022J\n\nallow_l"
    "ist\030\002 \003(\tB+\322\264-\024cosmos.AddressString\332\264-\017c"
    "osmos-sdk 0.47R\tallowList:Z\312\264-\"cosmos.au"
    "thz.v1beta1.Authorization\322\264-\017cosmos-sdk "
    "0.43\212\347\260*\034cosmos-sdk/SendAuthorizationB+Z"
    ")github.com/cosmos/cosmos-sdk/x/bank/typ"
    "esb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto_deps[4] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto = {
    false,
    false,
    530,
    descriptor_table_protodef_cosmos_2fbank_2fv1beta1_2fauthz_2eproto,
    "cosmos/bank/v1beta1/authz.proto",
    &descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto_once,
    descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto_deps,
    4,
    1,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fbank_2fv1beta1_2fauthz_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fbank_2fv1beta1_2fauthz_2eproto,
    file_level_service_descriptors_cosmos_2fbank_2fv1beta1_2fauthz_2eproto,
};
namespace cosmos {
namespace bank {
namespace v1beta1 {
// ===================================================================

class SendAuthorization::_Internal {
 public:
};

void SendAuthorization::clear_spend_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_limit_.Clear();
}
SendAuthorization::SendAuthorization(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.bank.v1beta1.SendAuthorization)
}
inline PROTOBUF_NDEBUG_INLINE SendAuthorization::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::bank::v1beta1::SendAuthorization& from_msg)
      : spend_limit_{visibility, arena, from.spend_limit_},
        allow_list_{visibility, arena, from.allow_list_},
        _cached_size_{0} {}

SendAuthorization::SendAuthorization(
    ::google::protobuf::Arena* arena,
    const SendAuthorization& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendAuthorization* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.bank.v1beta1.SendAuthorization)
}
inline PROTOBUF_NDEBUG_INLINE SendAuthorization::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : spend_limit_{visibility, arena},
        allow_list_{visibility, arena},
        _cached_size_{0} {}

inline void SendAuthorization::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SendAuthorization::~SendAuthorization() {
  // @@protoc_insertion_point(destructor:cosmos.bank.v1beta1.SendAuthorization)
  SharedDtor(*this);
}
inline void SendAuthorization::SharedDtor(MessageLite& self) {
  SendAuthorization& this_ = static_cast<SendAuthorization&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SendAuthorization::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SendAuthorization(arena);
}
constexpr auto SendAuthorization::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_.spend_limit_) +
          decltype(SendAuthorization::_impl_.spend_limit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_.allow_list_) +
          decltype(SendAuthorization::_impl_.allow_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SendAuthorization), alignof(SendAuthorization), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SendAuthorization::PlacementNew_,
                                 sizeof(SendAuthorization),
                                 alignof(SendAuthorization));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SendAuthorization::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SendAuthorization_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SendAuthorization::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SendAuthorization>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SendAuthorization::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SendAuthorization>(), &SendAuthorization::ByteSizeLong,
            &SendAuthorization::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_._cached_size_),
        false,
    },
    &SendAuthorization::kDescriptorMethods,
    &descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SendAuthorization::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 56, 2> SendAuthorization::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::bank::v1beta1::SendAuthorization>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string allow_list = 2 [json_name = "allowList", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_.allow_list_)}},
    // repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_.spend_limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_.spend_limit_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string allow_list = 2 [json_name = "allowList", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {PROTOBUF_FIELD_OFFSET(SendAuthorization, _impl_.allow_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\45\0\12\0\0\0\0\0"
    "cosmos.bank.v1beta1.SendAuthorization"
    "allow_list"
  }},
};

PROTOBUF_NOINLINE void SendAuthorization::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.bank.v1beta1.SendAuthorization)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spend_limit_.Clear();
  _impl_.allow_list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SendAuthorization::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SendAuthorization& this_ = static_cast<const SendAuthorization&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SendAuthorization::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SendAuthorization& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.bank.v1beta1.SendAuthorization)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_spend_limit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_spend_limit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string allow_list = 2 [json_name = "allowList", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
          for (int i = 0, n = this_._internal_allow_list_size(); i < n; ++i) {
            const auto& s = this_._internal_allow_list().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.bank.v1beta1.SendAuthorization.allow_list");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.bank.v1beta1.SendAuthorization)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SendAuthorization::ByteSizeLong(const MessageLite& base) {
          const SendAuthorization& this_ = static_cast<const SendAuthorization&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SendAuthorization::ByteSizeLong() const {
          const SendAuthorization& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.bank.v1beta1.SendAuthorization)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_spend_limit_size();
              for (const auto& msg : this_._internal_spend_limit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string allow_list = 2 [json_name = "allowList", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_allow_list().size());
              for (int i = 0, n = this_._internal_allow_list().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_allow_list().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SendAuthorization::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendAuthorization*>(&to_msg);
  auto& from = static_cast<const SendAuthorization&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.bank.v1beta1.SendAuthorization)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spend_limit()->MergeFrom(
      from._internal_spend_limit());
  _this->_internal_mutable_allow_list()->MergeFrom(from._internal_allow_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendAuthorization::CopyFrom(const SendAuthorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.bank.v1beta1.SendAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendAuthorization::InternalSwap(SendAuthorization* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.spend_limit_.InternalSwap(&other->_impl_.spend_limit_);
  _impl_.allow_list_.InternalSwap(&other->_impl_.allow_list_);
}

::google::protobuf::Metadata SendAuthorization::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fbank_2fv1beta1_2fauthz_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
