// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/bank/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbank_2fv1beta1_2fgenesis_2eproto_2epb_2eh
#define cosmos_2fbank_2fv1beta1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/bank/v1beta1/bank.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbank_2fv1beta1_2fgenesis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbank_2fv1beta1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbank_2fv1beta1_2fgenesis_2eproto;
namespace cosmos {
namespace bank {
namespace v1beta1 {
class Balance;
struct BalanceDefaultTypeInternal;
extern BalanceDefaultTypeInternal _Balance_default_instance_;
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace bank {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class Balance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.Balance) */ {
 public:
  inline Balance() : Balance(nullptr) {}
  ~Balance() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Balance* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Balance));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Balance(
      ::google::protobuf::internal::ConstantInitialized);

  inline Balance(const Balance& from) : Balance(nullptr, from) {}
  inline Balance(Balance&& from) noexcept
      : Balance(nullptr, std::move(from)) {}
  inline Balance& operator=(const Balance& from) {
    CopyFrom(from);
    return *this;
  }
  inline Balance& operator=(Balance&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Balance& default_instance() {
    return *internal_default_instance();
  }
  static inline const Balance* internal_default_instance() {
    return reinterpret_cast<const Balance*>(
        &_Balance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Balance& a, Balance& b) { a.Swap(&b); }
  inline void Swap(Balance* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Balance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Balance* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Balance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Balance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Balance& from) { Balance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Balance* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.bank.v1beta1.Balance"; }

 protected:
  explicit Balance(::google::protobuf::Arena* arena);
  Balance(::google::protobuf::Arena* arena, const Balance& from);
  Balance(::google::protobuf::Arena* arena, Balance&& from) noexcept
      : Balance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoinsFieldNumber = 2,
    kAddressFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin coins = 2 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int coins_size() const;
  private:
  int _internal_coins_size() const;

  public:
  void clear_coins() ;
  ::cosmos::base::v1beta1::Coin* mutable_coins(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_coins();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_coins() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_coins();
  public:
  const ::cosmos::base::v1beta1::Coin& coins(int index) const;
  ::cosmos::base::v1beta1::Coin* add_coins();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& coins() const;
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.Balance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Balance& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > coins_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class GenesisState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.bank.v1beta1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenesisState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenesisState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenesisState(const GenesisState& from) : GenesisState(nullptr, from) {}
  inline GenesisState(GenesisState&& from) noexcept
      : GenesisState(nullptr, std::move(from)) {}
  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
        &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GenesisState& a, GenesisState& b) { a.Swap(&b); }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenesisState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenesisState& from) { GenesisState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenesisState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.bank.v1beta1.GenesisState"; }

 protected:
  explicit GenesisState(::google::protobuf::Arena* arena);
  GenesisState(::google::protobuf::Arena* arena, const GenesisState& from);
  GenesisState(::google::protobuf::Arena* arena, GenesisState&& from) noexcept
      : GenesisState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBalancesFieldNumber = 2,
    kSupplyFieldNumber = 3,
    kDenomMetadataFieldNumber = 4,
    kSendEnabledFieldNumber = 5,
    kParamsFieldNumber = 1,
  };
  // repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int balances_size() const;
  private:
  int _internal_balances_size() const;

  public:
  void clear_balances() ;
  ::cosmos::bank::v1beta1::Balance* mutable_balances(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>* mutable_balances();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>& _internal_balances() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>* _internal_mutable_balances();
  public:
  const ::cosmos::bank::v1beta1::Balance& balances(int index) const;
  ::cosmos::bank::v1beta1::Balance* add_balances();
  const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>& balances() const;
  // repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int supply_size() const;
  private:
  int _internal_supply_size() const;

  public:
  void clear_supply() ;
  ::cosmos::base::v1beta1::Coin* mutable_supply(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_supply();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_supply() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_supply();
  public:
  const ::cosmos::base::v1beta1::Coin& supply(int index) const;
  ::cosmos::base::v1beta1::Coin* add_supply();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& supply() const;
  // repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int denom_metadata_size() const;
  private:
  int _internal_denom_metadata_size() const;

  public:
  void clear_denom_metadata() ;
  ::cosmos::bank::v1beta1::Metadata* mutable_denom_metadata(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>* mutable_denom_metadata();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>& _internal_denom_metadata() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>* _internal_mutable_denom_metadata();
  public:
  const ::cosmos::bank::v1beta1::Metadata& denom_metadata(int index) const;
  ::cosmos::bank::v1beta1::Metadata* add_denom_metadata();
  const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>& denom_metadata() const;
  // repeated .cosmos.bank.v1beta1.SendEnabled send_enabled = 5 [json_name = "sendEnabled", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47", (.amino.dont_omitempty) = true];
  int send_enabled_size() const;
  private:
  int _internal_send_enabled_size() const;

  public:
  void clear_send_enabled() ;
  ::cosmos::bank::v1beta1::SendEnabled* mutable_send_enabled(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>* mutable_send_enabled();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>& _internal_send_enabled() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>* _internal_mutable_send_enabled();
  public:
  const ::cosmos::bank::v1beta1::SendEnabled& send_enabled(int index) const;
  ::cosmos::bank::v1beta1::SendEnabled* add_send_enabled();
  const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>& send_enabled() const;
  // .cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::bank::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::bank::v1beta1::Params* release_params();
  ::cosmos::bank::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::bank::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::bank::v1beta1::Params* value);
  ::cosmos::bank::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::bank::v1beta1::Params& _internal_params() const;
  ::cosmos::bank::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.bank.v1beta1.GenesisState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 5,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenesisState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::bank::v1beta1::Balance > balances_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > supply_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::bank::v1beta1::Metadata > denom_metadata_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::bank::v1beta1::SendEnabled > send_enabled_;
    ::cosmos::bank::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbank_2fv1beta1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenesisState

// .cosmos.bank.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool GenesisState::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::bank::v1beta1::Params& GenesisState::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::bank::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::bank::v1beta1::Params&>(::cosmos::bank::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::bank::v1beta1::Params& GenesisState::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.GenesisState.params)
  return _internal_params();
}
inline void GenesisState::unsafe_arena_set_allocated_params(::cosmos::bank::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::bank::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.bank.v1beta1.GenesisState.params)
}
inline ::cosmos::bank::v1beta1::Params* GenesisState::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::bank::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::bank::v1beta1::Params* GenesisState::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.GenesisState.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::bank::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::bank::v1beta1::Params* GenesisState::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::bank::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::bank::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::bank::v1beta1::Params* GenesisState::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::bank::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.GenesisState.params)
  return _msg;
}
inline void GenesisState::set_allocated_params(::cosmos::bank::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::bank::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.GenesisState.params)
}

// repeated .cosmos.bank.v1beta1.Balance balances = 2 [json_name = "balances", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_balances_size() const {
  return _internal_balances().size();
}
inline int GenesisState::balances_size() const {
  return _internal_balances_size();
}
inline void GenesisState::clear_balances() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balances_.Clear();
}
inline ::cosmos::bank::v1beta1::Balance* GenesisState::mutable_balances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.GenesisState.balances)
  return _internal_mutable_balances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>* GenesisState::mutable_balances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.GenesisState.balances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_balances();
}
inline const ::cosmos::bank::v1beta1::Balance& GenesisState::balances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.GenesisState.balances)
  return _internal_balances().Get(index);
}
inline ::cosmos::bank::v1beta1::Balance* GenesisState::add_balances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::bank::v1beta1::Balance* _add = _internal_mutable_balances()->Add();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.GenesisState.balances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>& GenesisState::balances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.GenesisState.balances)
  return _internal_balances();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>&
GenesisState::_internal_balances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balances_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Balance>*
GenesisState::_internal_mutable_balances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.balances_;
}

// repeated .cosmos.base.v1beta1.Coin supply = 3 [json_name = "supply", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_supply_size() const {
  return _internal_supply().size();
}
inline int GenesisState::supply_size() const {
  return _internal_supply_size();
}
inline ::cosmos::base::v1beta1::Coin* GenesisState::mutable_supply(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.GenesisState.supply)
  return _internal_mutable_supply()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* GenesisState::mutable_supply()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.GenesisState.supply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_supply();
}
inline const ::cosmos::base::v1beta1::Coin& GenesisState::supply(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.GenesisState.supply)
  return _internal_supply().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* GenesisState::add_supply() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_supply()->Add();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.GenesisState.supply)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& GenesisState::supply() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.GenesisState.supply)
  return _internal_supply();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
GenesisState::_internal_supply() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.supply_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
GenesisState::_internal_mutable_supply() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.supply_;
}

// repeated .cosmos.bank.v1beta1.Metadata denom_metadata = 4 [json_name = "denomMetadata", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_denom_metadata_size() const {
  return _internal_denom_metadata().size();
}
inline int GenesisState::denom_metadata_size() const {
  return _internal_denom_metadata_size();
}
inline ::cosmos::bank::v1beta1::Metadata* GenesisState::mutable_denom_metadata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.GenesisState.denom_metadata)
  return _internal_mutable_denom_metadata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>* GenesisState::mutable_denom_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.GenesisState.denom_metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_denom_metadata();
}
inline const ::cosmos::bank::v1beta1::Metadata& GenesisState::denom_metadata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.GenesisState.denom_metadata)
  return _internal_denom_metadata().Get(index);
}
inline ::cosmos::bank::v1beta1::Metadata* GenesisState::add_denom_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::bank::v1beta1::Metadata* _add = _internal_mutable_denom_metadata()->Add();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.GenesisState.denom_metadata)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>& GenesisState::denom_metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.GenesisState.denom_metadata)
  return _internal_denom_metadata();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>&
GenesisState::_internal_denom_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.denom_metadata_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::Metadata>*
GenesisState::_internal_mutable_denom_metadata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.denom_metadata_;
}

// repeated .cosmos.bank.v1beta1.SendEnabled send_enabled = 5 [json_name = "sendEnabled", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47", (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_send_enabled_size() const {
  return _internal_send_enabled().size();
}
inline int GenesisState::send_enabled_size() const {
  return _internal_send_enabled_size();
}
inline ::cosmos::bank::v1beta1::SendEnabled* GenesisState::mutable_send_enabled(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.GenesisState.send_enabled)
  return _internal_mutable_send_enabled()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>* GenesisState::mutable_send_enabled()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.GenesisState.send_enabled)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_send_enabled();
}
inline const ::cosmos::bank::v1beta1::SendEnabled& GenesisState::send_enabled(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.GenesisState.send_enabled)
  return _internal_send_enabled().Get(index);
}
inline ::cosmos::bank::v1beta1::SendEnabled* GenesisState::add_send_enabled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::bank::v1beta1::SendEnabled* _add = _internal_mutable_send_enabled()->Add();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.GenesisState.send_enabled)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>& GenesisState::send_enabled() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.GenesisState.send_enabled)
  return _internal_send_enabled();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>&
GenesisState::_internal_send_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_enabled_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::bank::v1beta1::SendEnabled>*
GenesisState::_internal_mutable_send_enabled() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.send_enabled_;
}

// -------------------------------------------------------------------

// Balance

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void Balance::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& Balance::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.Balance.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Balance::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.bank.v1beta1.Balance.address)
}
inline std::string* Balance::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.Balance.address)
  return _s;
}
inline const std::string& Balance::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void Balance::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* Balance::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* Balance::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.bank.v1beta1.Balance.address)
  return _impl_.address_.Release();
}
inline void Balance::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.bank.v1beta1.Balance.address)
}

// repeated .cosmos.base.v1beta1.Coin coins = 2 [json_name = "coins", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int Balance::_internal_coins_size() const {
  return _internal_coins().size();
}
inline int Balance::coins_size() const {
  return _internal_coins_size();
}
inline ::cosmos::base::v1beta1::Coin* Balance::mutable_coins(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.bank.v1beta1.Balance.coins)
  return _internal_mutable_coins()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* Balance::mutable_coins()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.bank.v1beta1.Balance.coins)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_coins();
}
inline const ::cosmos::base::v1beta1::Coin& Balance::coins(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.bank.v1beta1.Balance.coins)
  return _internal_coins().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* Balance::add_coins() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_coins()->Add();
  // @@protoc_insertion_point(field_add:cosmos.bank.v1beta1.Balance.coins)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& Balance::coins() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.bank.v1beta1.Balance.coins)
  return _internal_coins();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
Balance::_internal_coins() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.coins_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
Balance::_internal_mutable_coins() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.coins_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbank_2fv1beta1_2fgenesis_2eproto_2epb_2eh
