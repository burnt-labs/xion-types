// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/distribution/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_2epb_2eh
#define cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/distribution/v1beta1/distribution.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
namespace cosmos {
namespace distribution {
namespace v1beta1 {
class DelegatorStartingInfoRecord;
struct DelegatorStartingInfoRecordDefaultTypeInternal;
extern DelegatorStartingInfoRecordDefaultTypeInternal _DelegatorStartingInfoRecord_default_instance_;
class DelegatorWithdrawInfo;
struct DelegatorWithdrawInfoDefaultTypeInternal;
extern DelegatorWithdrawInfoDefaultTypeInternal _DelegatorWithdrawInfo_default_instance_;
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
class ValidatorAccumulatedCommissionRecord;
struct ValidatorAccumulatedCommissionRecordDefaultTypeInternal;
extern ValidatorAccumulatedCommissionRecordDefaultTypeInternal _ValidatorAccumulatedCommissionRecord_default_instance_;
class ValidatorCurrentRewardsRecord;
struct ValidatorCurrentRewardsRecordDefaultTypeInternal;
extern ValidatorCurrentRewardsRecordDefaultTypeInternal _ValidatorCurrentRewardsRecord_default_instance_;
class ValidatorHistoricalRewardsRecord;
struct ValidatorHistoricalRewardsRecordDefaultTypeInternal;
extern ValidatorHistoricalRewardsRecordDefaultTypeInternal _ValidatorHistoricalRewardsRecord_default_instance_;
class ValidatorOutstandingRewardsRecord;
struct ValidatorOutstandingRewardsRecordDefaultTypeInternal;
extern ValidatorOutstandingRewardsRecordDefaultTypeInternal _ValidatorOutstandingRewardsRecord_default_instance_;
class ValidatorSlashEventRecord;
struct ValidatorSlashEventRecordDefaultTypeInternal;
extern ValidatorSlashEventRecordDefaultTypeInternal _ValidatorSlashEventRecord_default_instance_;
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace distribution {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class DelegatorWithdrawInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.DelegatorWithdrawInfo) */ {
 public:
  inline DelegatorWithdrawInfo() : DelegatorWithdrawInfo(nullptr) {}
  ~DelegatorWithdrawInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DelegatorWithdrawInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DelegatorWithdrawInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DelegatorWithdrawInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline DelegatorWithdrawInfo(const DelegatorWithdrawInfo& from) : DelegatorWithdrawInfo(nullptr, from) {}
  inline DelegatorWithdrawInfo(DelegatorWithdrawInfo&& from) noexcept
      : DelegatorWithdrawInfo(nullptr, std::move(from)) {}
  inline DelegatorWithdrawInfo& operator=(const DelegatorWithdrawInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelegatorWithdrawInfo& operator=(DelegatorWithdrawInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelegatorWithdrawInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelegatorWithdrawInfo* internal_default_instance() {
    return reinterpret_cast<const DelegatorWithdrawInfo*>(
        &_DelegatorWithdrawInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DelegatorWithdrawInfo& a, DelegatorWithdrawInfo& b) { a.Swap(&b); }
  inline void Swap(DelegatorWithdrawInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelegatorWithdrawInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelegatorWithdrawInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DelegatorWithdrawInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DelegatorWithdrawInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DelegatorWithdrawInfo& from) { DelegatorWithdrawInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DelegatorWithdrawInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.DelegatorWithdrawInfo"; }

 protected:
  explicit DelegatorWithdrawInfo(::google::protobuf::Arena* arena);
  DelegatorWithdrawInfo(::google::protobuf::Arena* arena, const DelegatorWithdrawInfo& from);
  DelegatorWithdrawInfo(::google::protobuf::Arena* arena, DelegatorWithdrawInfo&& from) noexcept
      : DelegatorWithdrawInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kWithdrawAddressFieldNumber = 2,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_withdraw_address() ;
  const std::string& withdraw_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_withdraw_address(Arg_&& arg, Args_... args);
  std::string* mutable_withdraw_address();
  PROTOBUF_NODISCARD std::string* release_withdraw_address();
  void set_allocated_withdraw_address(std::string* value);

  private:
  const std::string& _internal_withdraw_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_withdraw_address(
      const std::string& value);
  std::string* _internal_mutable_withdraw_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      91, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DelegatorWithdrawInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr withdraw_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class ValidatorSlashEventRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.ValidatorSlashEventRecord) */ {
 public:
  inline ValidatorSlashEventRecord() : ValidatorSlashEventRecord(nullptr) {}
  ~ValidatorSlashEventRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorSlashEventRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorSlashEventRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorSlashEventRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorSlashEventRecord(const ValidatorSlashEventRecord& from) : ValidatorSlashEventRecord(nullptr, from) {}
  inline ValidatorSlashEventRecord(ValidatorSlashEventRecord&& from) noexcept
      : ValidatorSlashEventRecord(nullptr, std::move(from)) {}
  inline ValidatorSlashEventRecord& operator=(const ValidatorSlashEventRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorSlashEventRecord& operator=(ValidatorSlashEventRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorSlashEventRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorSlashEventRecord* internal_default_instance() {
    return reinterpret_cast<const ValidatorSlashEventRecord*>(
        &_ValidatorSlashEventRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ValidatorSlashEventRecord& a, ValidatorSlashEventRecord& b) { a.Swap(&b); }
  inline void Swap(ValidatorSlashEventRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorSlashEventRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorSlashEventRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorSlashEventRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorSlashEventRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorSlashEventRecord& from) { ValidatorSlashEventRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorSlashEventRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.ValidatorSlashEventRecord"; }

 protected:
  explicit ValidatorSlashEventRecord(::google::protobuf::Arena* arena);
  ValidatorSlashEventRecord(::google::protobuf::Arena* arena, const ValidatorSlashEventRecord& from);
  ValidatorSlashEventRecord(::google::protobuf::Arena* arena, ValidatorSlashEventRecord&& from) noexcept
      : ValidatorSlashEventRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddressFieldNumber = 1,
    kValidatorSlashEventFieldNumber = 4,
    kHeightFieldNumber = 2,
    kPeriodFieldNumber = 3,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4 [json_name = "validatorSlashEvent", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_validator_slash_event() const;
  void clear_validator_slash_event() ;
  const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& validator_slash_event() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::ValidatorSlashEvent* release_validator_slash_event();
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* mutable_validator_slash_event();
  void set_allocated_validator_slash_event(::cosmos::distribution::v1beta1::ValidatorSlashEvent* value);
  void unsafe_arena_set_allocated_validator_slash_event(::cosmos::distribution::v1beta1::ValidatorSlashEvent* value);
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* unsafe_arena_release_validator_slash_event();

  private:
  const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& _internal_validator_slash_event() const;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* _internal_mutable_validator_slash_event();

  public:
  // uint64 height = 2 [json_name = "height"];
  void clear_height() ;
  ::uint64_t height() const;
  void set_height(::uint64_t value);

  private:
  ::uint64_t _internal_height() const;
  void _internal_set_height(::uint64_t value);

  public:
  // uint64 period = 3 [json_name = "period"];
  void clear_period() ;
  ::uint64_t period() const;
  void set_period(::uint64_t value);

  private:
  ::uint64_t _internal_period() const;
  void _internal_set_period(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      79, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorSlashEventRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::distribution::v1beta1::ValidatorSlashEvent* validator_slash_event_;
    ::uint64_t height_;
    ::uint64_t period_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class ValidatorOutstandingRewardsRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord) */ {
 public:
  inline ValidatorOutstandingRewardsRecord() : ValidatorOutstandingRewardsRecord(nullptr) {}
  ~ValidatorOutstandingRewardsRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorOutstandingRewardsRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorOutstandingRewardsRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorOutstandingRewardsRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorOutstandingRewardsRecord(const ValidatorOutstandingRewardsRecord& from) : ValidatorOutstandingRewardsRecord(nullptr, from) {}
  inline ValidatorOutstandingRewardsRecord(ValidatorOutstandingRewardsRecord&& from) noexcept
      : ValidatorOutstandingRewardsRecord(nullptr, std::move(from)) {}
  inline ValidatorOutstandingRewardsRecord& operator=(const ValidatorOutstandingRewardsRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorOutstandingRewardsRecord& operator=(ValidatorOutstandingRewardsRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorOutstandingRewardsRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorOutstandingRewardsRecord* internal_default_instance() {
    return reinterpret_cast<const ValidatorOutstandingRewardsRecord*>(
        &_ValidatorOutstandingRewardsRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ValidatorOutstandingRewardsRecord& a, ValidatorOutstandingRewardsRecord& b) { a.Swap(&b); }
  inline void Swap(ValidatorOutstandingRewardsRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorOutstandingRewardsRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorOutstandingRewardsRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorOutstandingRewardsRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorOutstandingRewardsRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorOutstandingRewardsRecord& from) { ValidatorOutstandingRewardsRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorOutstandingRewardsRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord"; }

 protected:
  explicit ValidatorOutstandingRewardsRecord(::google::protobuf::Arena* arena);
  ValidatorOutstandingRewardsRecord(::google::protobuf::Arena* arena, const ValidatorOutstandingRewardsRecord& from);
  ValidatorOutstandingRewardsRecord(::google::protobuf::Arena* arena, ValidatorOutstandingRewardsRecord&& from) noexcept
      : ValidatorOutstandingRewardsRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutstandingRewardsFieldNumber = 2,
    kValidatorAddressFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.DecCoin outstanding_rewards = 2 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
  int outstanding_rewards_size() const;
  private:
  int _internal_outstanding_rewards_size() const;

  public:
  void clear_outstanding_rewards() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_outstanding_rewards(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* mutable_outstanding_rewards();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_outstanding_rewards() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_outstanding_rewards();
  public:
  const ::cosmos::base::v1beta1::DecCoin& outstanding_rewards(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_outstanding_rewards();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& outstanding_rewards() const;
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorOutstandingRewardsRecord& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > outstanding_rewards_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class DelegatorStartingInfoRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord) */ {
 public:
  inline DelegatorStartingInfoRecord() : DelegatorStartingInfoRecord(nullptr) {}
  ~DelegatorStartingInfoRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DelegatorStartingInfoRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DelegatorStartingInfoRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DelegatorStartingInfoRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline DelegatorStartingInfoRecord(const DelegatorStartingInfoRecord& from) : DelegatorStartingInfoRecord(nullptr, from) {}
  inline DelegatorStartingInfoRecord(DelegatorStartingInfoRecord&& from) noexcept
      : DelegatorStartingInfoRecord(nullptr, std::move(from)) {}
  inline DelegatorStartingInfoRecord& operator=(const DelegatorStartingInfoRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline DelegatorStartingInfoRecord& operator=(DelegatorStartingInfoRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DelegatorStartingInfoRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const DelegatorStartingInfoRecord* internal_default_instance() {
    return reinterpret_cast<const DelegatorStartingInfoRecord*>(
        &_DelegatorStartingInfoRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DelegatorStartingInfoRecord& a, DelegatorStartingInfoRecord& b) { a.Swap(&b); }
  inline void Swap(DelegatorStartingInfoRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DelegatorStartingInfoRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DelegatorStartingInfoRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DelegatorStartingInfoRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DelegatorStartingInfoRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DelegatorStartingInfoRecord& from) { DelegatorStartingInfoRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DelegatorStartingInfoRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.DelegatorStartingInfoRecord"; }

 protected:
  explicit DelegatorStartingInfoRecord(::google::protobuf::Arena* arena);
  DelegatorStartingInfoRecord(::google::protobuf::Arena* arena, const DelegatorStartingInfoRecord& from);
  DelegatorStartingInfoRecord(::google::protobuf::Arena* arena, DelegatorStartingInfoRecord&& from) noexcept
      : DelegatorStartingInfoRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorAddressFieldNumber = 2,
    kStartingInfoFieldNumber = 3,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3 [json_name = "startingInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_starting_info() const;
  void clear_starting_info() ;
  const ::cosmos::distribution::v1beta1::DelegatorStartingInfo& starting_info() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::DelegatorStartingInfo* release_starting_info();
  ::cosmos::distribution::v1beta1::DelegatorStartingInfo* mutable_starting_info();
  void set_allocated_starting_info(::cosmos::distribution::v1beta1::DelegatorStartingInfo* value);
  void unsafe_arena_set_allocated_starting_info(::cosmos::distribution::v1beta1::DelegatorStartingInfo* value);
  ::cosmos::distribution::v1beta1::DelegatorStartingInfo* unsafe_arena_release_starting_info();

  private:
  const ::cosmos::distribution::v1beta1::DelegatorStartingInfo& _internal_starting_info() const;
  ::cosmos::distribution::v1beta1::DelegatorStartingInfo* _internal_mutable_starting_info();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      98, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DelegatorStartingInfoRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::distribution::v1beta1::DelegatorStartingInfo* starting_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class ValidatorHistoricalRewardsRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord) */ {
 public:
  inline ValidatorHistoricalRewardsRecord() : ValidatorHistoricalRewardsRecord(nullptr) {}
  ~ValidatorHistoricalRewardsRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorHistoricalRewardsRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorHistoricalRewardsRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorHistoricalRewardsRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorHistoricalRewardsRecord(const ValidatorHistoricalRewardsRecord& from) : ValidatorHistoricalRewardsRecord(nullptr, from) {}
  inline ValidatorHistoricalRewardsRecord(ValidatorHistoricalRewardsRecord&& from) noexcept
      : ValidatorHistoricalRewardsRecord(nullptr, std::move(from)) {}
  inline ValidatorHistoricalRewardsRecord& operator=(const ValidatorHistoricalRewardsRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorHistoricalRewardsRecord& operator=(ValidatorHistoricalRewardsRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorHistoricalRewardsRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorHistoricalRewardsRecord* internal_default_instance() {
    return reinterpret_cast<const ValidatorHistoricalRewardsRecord*>(
        &_ValidatorHistoricalRewardsRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ValidatorHistoricalRewardsRecord& a, ValidatorHistoricalRewardsRecord& b) { a.Swap(&b); }
  inline void Swap(ValidatorHistoricalRewardsRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorHistoricalRewardsRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorHistoricalRewardsRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorHistoricalRewardsRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorHistoricalRewardsRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorHistoricalRewardsRecord& from) { ValidatorHistoricalRewardsRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorHistoricalRewardsRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord"; }

 protected:
  explicit ValidatorHistoricalRewardsRecord(::google::protobuf::Arena* arena);
  ValidatorHistoricalRewardsRecord(::google::protobuf::Arena* arena, const ValidatorHistoricalRewardsRecord& from);
  ValidatorHistoricalRewardsRecord(::google::protobuf::Arena* arena, ValidatorHistoricalRewardsRecord&& from) noexcept
      : ValidatorHistoricalRewardsRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddressFieldNumber = 1,
    kRewardsFieldNumber = 3,
    kPeriodFieldNumber = 2,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_rewards() const;
  void clear_rewards() ;
  const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards& rewards() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* release_rewards();
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* mutable_rewards();
  void set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* value);
  void unsafe_arena_set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* value);
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* unsafe_arena_release_rewards();

  private:
  const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards& _internal_rewards() const;
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* _internal_mutable_rewards();

  public:
  // uint64 period = 2 [json_name = "period"];
  void clear_period() ;
  ::uint64_t period() const;
  void set_period(::uint64_t value);

  private:
  ::uint64_t _internal_period() const;
  void _internal_set_period(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      86, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorHistoricalRewardsRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* rewards_;
    ::uint64_t period_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class ValidatorCurrentRewardsRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord) */ {
 public:
  inline ValidatorCurrentRewardsRecord() : ValidatorCurrentRewardsRecord(nullptr) {}
  ~ValidatorCurrentRewardsRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorCurrentRewardsRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorCurrentRewardsRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorCurrentRewardsRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorCurrentRewardsRecord(const ValidatorCurrentRewardsRecord& from) : ValidatorCurrentRewardsRecord(nullptr, from) {}
  inline ValidatorCurrentRewardsRecord(ValidatorCurrentRewardsRecord&& from) noexcept
      : ValidatorCurrentRewardsRecord(nullptr, std::move(from)) {}
  inline ValidatorCurrentRewardsRecord& operator=(const ValidatorCurrentRewardsRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorCurrentRewardsRecord& operator=(ValidatorCurrentRewardsRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorCurrentRewardsRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorCurrentRewardsRecord* internal_default_instance() {
    return reinterpret_cast<const ValidatorCurrentRewardsRecord*>(
        &_ValidatorCurrentRewardsRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ValidatorCurrentRewardsRecord& a, ValidatorCurrentRewardsRecord& b) { a.Swap(&b); }
  inline void Swap(ValidatorCurrentRewardsRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorCurrentRewardsRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorCurrentRewardsRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorCurrentRewardsRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorCurrentRewardsRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorCurrentRewardsRecord& from) { ValidatorCurrentRewardsRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorCurrentRewardsRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord"; }

 protected:
  explicit ValidatorCurrentRewardsRecord(::google::protobuf::Arena* arena);
  ValidatorCurrentRewardsRecord(::google::protobuf::Arena* arena, const ValidatorCurrentRewardsRecord& from);
  ValidatorCurrentRewardsRecord(::google::protobuf::Arena* arena, ValidatorCurrentRewardsRecord&& from) noexcept
      : ValidatorCurrentRewardsRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddressFieldNumber = 1,
    kRewardsFieldNumber = 2,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_rewards() const;
  void clear_rewards() ;
  const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards& rewards() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* release_rewards();
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* mutable_rewards();
  void set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorCurrentRewards* value);
  void unsafe_arena_set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorCurrentRewards* value);
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* unsafe_arena_release_rewards();

  private:
  const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards& _internal_rewards() const;
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* _internal_mutable_rewards();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorCurrentRewardsRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* rewards_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class ValidatorAccumulatedCommissionRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord) */ {
 public:
  inline ValidatorAccumulatedCommissionRecord() : ValidatorAccumulatedCommissionRecord(nullptr) {}
  ~ValidatorAccumulatedCommissionRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorAccumulatedCommissionRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorAccumulatedCommissionRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorAccumulatedCommissionRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorAccumulatedCommissionRecord(const ValidatorAccumulatedCommissionRecord& from) : ValidatorAccumulatedCommissionRecord(nullptr, from) {}
  inline ValidatorAccumulatedCommissionRecord(ValidatorAccumulatedCommissionRecord&& from) noexcept
      : ValidatorAccumulatedCommissionRecord(nullptr, std::move(from)) {}
  inline ValidatorAccumulatedCommissionRecord& operator=(const ValidatorAccumulatedCommissionRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorAccumulatedCommissionRecord& operator=(ValidatorAccumulatedCommissionRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorAccumulatedCommissionRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorAccumulatedCommissionRecord* internal_default_instance() {
    return reinterpret_cast<const ValidatorAccumulatedCommissionRecord*>(
        &_ValidatorAccumulatedCommissionRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ValidatorAccumulatedCommissionRecord& a, ValidatorAccumulatedCommissionRecord& b) { a.Swap(&b); }
  inline void Swap(ValidatorAccumulatedCommissionRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorAccumulatedCommissionRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorAccumulatedCommissionRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorAccumulatedCommissionRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorAccumulatedCommissionRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorAccumulatedCommissionRecord& from) { ValidatorAccumulatedCommissionRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorAccumulatedCommissionRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord"; }

 protected:
  explicit ValidatorAccumulatedCommissionRecord(::google::protobuf::Arena* arena);
  ValidatorAccumulatedCommissionRecord(::google::protobuf::Arena* arena, const ValidatorAccumulatedCommissionRecord& from);
  ValidatorAccumulatedCommissionRecord(::google::protobuf::Arena* arena, ValidatorAccumulatedCommissionRecord&& from) noexcept
      : ValidatorAccumulatedCommissionRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddressFieldNumber = 1,
    kAccumulatedFieldNumber = 2,
  };
  // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2 [json_name = "accumulated", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_accumulated() const;
  void clear_accumulated() ;
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& accumulated() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* release_accumulated();
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* mutable_accumulated();
  void set_allocated_accumulated(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* value);
  void unsafe_arena_set_allocated_accumulated(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* value);
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* unsafe_arena_release_accumulated();

  private:
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& _internal_accumulated() const;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* _internal_mutable_accumulated();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorAccumulatedCommissionRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* accumulated_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class GenesisState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.distribution.v1beta1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenesisState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenesisState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenesisState(const GenesisState& from) : GenesisState(nullptr, from) {}
  inline GenesisState(GenesisState&& from) noexcept
      : GenesisState(nullptr, std::move(from)) {}
  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
        &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GenesisState& a, GenesisState& b) { a.Swap(&b); }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenesisState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenesisState& from) { GenesisState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenesisState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.distribution.v1beta1.GenesisState"; }

 protected:
  explicit GenesisState(::google::protobuf::Arena* arena);
  GenesisState(::google::protobuf::Arena* arena, const GenesisState& from);
  GenesisState(::google::protobuf::Arena* arena, GenesisState&& from) noexcept
      : GenesisState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorWithdrawInfosFieldNumber = 3,
    kOutstandingRewardsFieldNumber = 5,
    kValidatorAccumulatedCommissionsFieldNumber = 6,
    kValidatorHistoricalRewardsFieldNumber = 7,
    kValidatorCurrentRewardsFieldNumber = 8,
    kDelegatorStartingInfosFieldNumber = 9,
    kValidatorSlashEventsFieldNumber = 10,
    kPreviousProposerFieldNumber = 4,
    kParamsFieldNumber = 1,
    kFeePoolFieldNumber = 2,
  };
  // repeated .cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3 [json_name = "delegatorWithdrawInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int delegator_withdraw_infos_size() const;
  private:
  int _internal_delegator_withdraw_infos_size() const;

  public:
  void clear_delegator_withdraw_infos() ;
  ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo* mutable_delegator_withdraw_infos(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>* mutable_delegator_withdraw_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>& _internal_delegator_withdraw_infos() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>* _internal_mutable_delegator_withdraw_infos();
  public:
  const ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo& delegator_withdraw_infos(int index) const;
  ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo* add_delegator_withdraw_infos();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>& delegator_withdraw_infos() const;
  // repeated .cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int outstanding_rewards_size() const;
  private:
  int _internal_outstanding_rewards_size() const;

  public:
  void clear_outstanding_rewards() ;
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord* mutable_outstanding_rewards(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>* mutable_outstanding_rewards();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>& _internal_outstanding_rewards() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>* _internal_mutable_outstanding_rewards();
  public:
  const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord& outstanding_rewards(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord* add_outstanding_rewards();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>& outstanding_rewards() const;
  // repeated .cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6 [json_name = "validatorAccumulatedCommissions", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validator_accumulated_commissions_size() const;
  private:
  int _internal_validator_accumulated_commissions_size() const;

  public:
  void clear_validator_accumulated_commissions() ;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord* mutable_validator_accumulated_commissions(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>* mutable_validator_accumulated_commissions();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>& _internal_validator_accumulated_commissions() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>* _internal_mutable_validator_accumulated_commissions();
  public:
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord& validator_accumulated_commissions(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord* add_validator_accumulated_commissions();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>& validator_accumulated_commissions() const;
  // repeated .cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7 [json_name = "validatorHistoricalRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validator_historical_rewards_size() const;
  private:
  int _internal_validator_historical_rewards_size() const;

  public:
  void clear_validator_historical_rewards() ;
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord* mutable_validator_historical_rewards(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>* mutable_validator_historical_rewards();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>& _internal_validator_historical_rewards() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>* _internal_mutable_validator_historical_rewards();
  public:
  const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord& validator_historical_rewards(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord* add_validator_historical_rewards();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>& validator_historical_rewards() const;
  // repeated .cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8 [json_name = "validatorCurrentRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validator_current_rewards_size() const;
  private:
  int _internal_validator_current_rewards_size() const;

  public:
  void clear_validator_current_rewards() ;
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord* mutable_validator_current_rewards(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>* mutable_validator_current_rewards();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>& _internal_validator_current_rewards() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>* _internal_mutable_validator_current_rewards();
  public:
  const ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord& validator_current_rewards(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord* add_validator_current_rewards();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>& validator_current_rewards() const;
  // repeated .cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9 [json_name = "delegatorStartingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int delegator_starting_infos_size() const;
  private:
  int _internal_delegator_starting_infos_size() const;

  public:
  void clear_delegator_starting_infos() ;
  ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord* mutable_delegator_starting_infos(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>* mutable_delegator_starting_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>& _internal_delegator_starting_infos() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>* _internal_mutable_delegator_starting_infos();
  public:
  const ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord& delegator_starting_infos(int index) const;
  ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord* add_delegator_starting_infos();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>& delegator_starting_infos() const;
  // repeated .cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validator_slash_events_size() const;
  private:
  int _internal_validator_slash_events_size() const;

  public:
  void clear_validator_slash_events() ;
  ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord* mutable_validator_slash_events(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>* mutable_validator_slash_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>& _internal_validator_slash_events() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>* _internal_mutable_validator_slash_events();
  public:
  const ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord& validator_slash_events(int index) const;
  ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord* add_validator_slash_events();
  const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>& validator_slash_events() const;
  // string previous_proposer = 4 [json_name = "previousProposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_previous_proposer() ;
  const std::string& previous_proposer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_previous_proposer(Arg_&& arg, Args_... args);
  std::string* mutable_previous_proposer();
  PROTOBUF_NODISCARD std::string* release_previous_proposer();
  void set_allocated_previous_proposer(std::string* value);

  private:
  const std::string& _internal_previous_proposer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_previous_proposer(
      const std::string& value);
  std::string* _internal_mutable_previous_proposer();

  public:
  // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::distribution::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::Params* release_params();
  ::cosmos::distribution::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::distribution::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::distribution::v1beta1::Params* value);
  ::cosmos::distribution::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::distribution::v1beta1::Params& _internal_params() const;
  ::cosmos::distribution::v1beta1::Params* _internal_mutable_params();

  public:
  // .cosmos.distribution.v1beta1.FeePool fee_pool = 2 [json_name = "feePool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_fee_pool() const;
  void clear_fee_pool() ;
  const ::cosmos::distribution::v1beta1::FeePool& fee_pool() const;
  PROTOBUF_NODISCARD ::cosmos::distribution::v1beta1::FeePool* release_fee_pool();
  ::cosmos::distribution::v1beta1::FeePool* mutable_fee_pool();
  void set_allocated_fee_pool(::cosmos::distribution::v1beta1::FeePool* value);
  void unsafe_arena_set_allocated_fee_pool(::cosmos::distribution::v1beta1::FeePool* value);
  ::cosmos::distribution::v1beta1::FeePool* unsafe_arena_release_fee_pool();

  private:
  const ::cosmos::distribution::v1beta1::FeePool& _internal_fee_pool() const;
  ::cosmos::distribution::v1beta1::FeePool* _internal_mutable_fee_pool();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.distribution.v1beta1.GenesisState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 9,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenesisState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo > delegator_withdraw_infos_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord > outstanding_rewards_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord > validator_accumulated_commissions_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord > validator_historical_rewards_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord > validator_current_rewards_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord > delegator_starting_infos_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord > validator_slash_events_;
    ::google::protobuf::internal::ArenaStringPtr previous_proposer_;
    ::cosmos::distribution::v1beta1::Params* params_;
    ::cosmos::distribution::v1beta1::FeePool* fee_pool_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DelegatorWithdrawInfo

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void DelegatorWithdrawInfo::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& DelegatorWithdrawInfo::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DelegatorWithdrawInfo::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.delegator_address)
}
inline std::string* DelegatorWithdrawInfo::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.delegator_address)
  return _s;
}
inline const std::string& DelegatorWithdrawInfo::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void DelegatorWithdrawInfo::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* DelegatorWithdrawInfo::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* DelegatorWithdrawInfo::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void DelegatorWithdrawInfo::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.delegator_address)
}

// string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void DelegatorWithdrawInfo::clear_withdraw_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withdraw_address_.ClearToEmpty();
}
inline const std::string& DelegatorWithdrawInfo::withdraw_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.withdraw_address)
  return _internal_withdraw_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DelegatorWithdrawInfo::set_withdraw_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withdraw_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.withdraw_address)
}
inline std::string* DelegatorWithdrawInfo::mutable_withdraw_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_withdraw_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.withdraw_address)
  return _s;
}
inline const std::string& DelegatorWithdrawInfo::_internal_withdraw_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.withdraw_address_.Get();
}
inline void DelegatorWithdrawInfo::_internal_set_withdraw_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withdraw_address_.Set(value, GetArena());
}
inline std::string* DelegatorWithdrawInfo::_internal_mutable_withdraw_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.withdraw_address_.Mutable( GetArena());
}
inline std::string* DelegatorWithdrawInfo::release_withdraw_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.withdraw_address)
  return _impl_.withdraw_address_.Release();
}
inline void DelegatorWithdrawInfo::set_allocated_withdraw_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.withdraw_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.withdraw_address_.IsDefault()) {
    _impl_.withdraw_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.DelegatorWithdrawInfo.withdraw_address)
}

// -------------------------------------------------------------------

// ValidatorOutstandingRewardsRecord

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void ValidatorOutstandingRewardsRecord::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& ValidatorOutstandingRewardsRecord::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidatorOutstandingRewardsRecord::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.validator_address)
}
inline std::string* ValidatorOutstandingRewardsRecord::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.validator_address)
  return _s;
}
inline const std::string& ValidatorOutstandingRewardsRecord::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void ValidatorOutstandingRewardsRecord::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* ValidatorOutstandingRewardsRecord::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* ValidatorOutstandingRewardsRecord::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.validator_address)
  return _impl_.validator_address_.Release();
}
inline void ValidatorOutstandingRewardsRecord::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.validator_address)
}

// repeated .cosmos.base.v1beta1.DecCoin outstanding_rewards = 2 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
inline int ValidatorOutstandingRewardsRecord::_internal_outstanding_rewards_size() const {
  return _internal_outstanding_rewards().size();
}
inline int ValidatorOutstandingRewardsRecord::outstanding_rewards_size() const {
  return _internal_outstanding_rewards_size();
}
inline ::cosmos::base::v1beta1::DecCoin* ValidatorOutstandingRewardsRecord::mutable_outstanding_rewards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.outstanding_rewards)
  return _internal_mutable_outstanding_rewards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* ValidatorOutstandingRewardsRecord::mutable_outstanding_rewards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.outstanding_rewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outstanding_rewards();
}
inline const ::cosmos::base::v1beta1::DecCoin& ValidatorOutstandingRewardsRecord::outstanding_rewards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.outstanding_rewards)
  return _internal_outstanding_rewards().Get(index);
}
inline ::cosmos::base::v1beta1::DecCoin* ValidatorOutstandingRewardsRecord::add_outstanding_rewards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_mutable_outstanding_rewards()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.outstanding_rewards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& ValidatorOutstandingRewardsRecord::outstanding_rewards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.outstanding_rewards)
  return _internal_outstanding_rewards();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
ValidatorOutstandingRewardsRecord::_internal_outstanding_rewards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outstanding_rewards_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
ValidatorOutstandingRewardsRecord::_internal_mutable_outstanding_rewards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outstanding_rewards_;
}

// -------------------------------------------------------------------

// ValidatorAccumulatedCommissionRecord

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void ValidatorAccumulatedCommissionRecord::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& ValidatorAccumulatedCommissionRecord::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidatorAccumulatedCommissionRecord::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.validator_address)
}
inline std::string* ValidatorAccumulatedCommissionRecord::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.validator_address)
  return _s;
}
inline const std::string& ValidatorAccumulatedCommissionRecord::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void ValidatorAccumulatedCommissionRecord::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* ValidatorAccumulatedCommissionRecord::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* ValidatorAccumulatedCommissionRecord::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.validator_address)
  return _impl_.validator_address_.Release();
}
inline void ValidatorAccumulatedCommissionRecord::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.validator_address)
}

// .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2 [json_name = "accumulated", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool ValidatorAccumulatedCommissionRecord::has_accumulated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.accumulated_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& ValidatorAccumulatedCommissionRecord::_internal_accumulated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* p = _impl_.accumulated_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission&>(::cosmos::distribution::v1beta1::_ValidatorAccumulatedCommission_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& ValidatorAccumulatedCommissionRecord::accumulated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.accumulated)
  return _internal_accumulated();
}
inline void ValidatorAccumulatedCommissionRecord::unsafe_arena_set_allocated_accumulated(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accumulated_);
  }
  _impl_.accumulated_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.accumulated)
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* ValidatorAccumulatedCommissionRecord::release_accumulated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* released = _impl_.accumulated_;
  _impl_.accumulated_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* ValidatorAccumulatedCommissionRecord::unsafe_arena_release_accumulated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.accumulated)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* temp = _impl_.accumulated_;
  _impl_.accumulated_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* ValidatorAccumulatedCommissionRecord::_internal_mutable_accumulated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accumulated_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission>(GetArena());
    _impl_.accumulated_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission*>(p);
  }
  return _impl_.accumulated_;
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* ValidatorAccumulatedCommissionRecord::mutable_accumulated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* _msg = _internal_mutable_accumulated();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.accumulated)
  return _msg;
}
inline void ValidatorAccumulatedCommissionRecord::set_allocated_accumulated(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.accumulated_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.accumulated_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.accumulated)
}

// -------------------------------------------------------------------

// ValidatorHistoricalRewardsRecord

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void ValidatorHistoricalRewardsRecord::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& ValidatorHistoricalRewardsRecord::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidatorHistoricalRewardsRecord::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.validator_address)
}
inline std::string* ValidatorHistoricalRewardsRecord::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.validator_address)
  return _s;
}
inline const std::string& ValidatorHistoricalRewardsRecord::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void ValidatorHistoricalRewardsRecord::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* ValidatorHistoricalRewardsRecord::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* ValidatorHistoricalRewardsRecord::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.validator_address)
  return _impl_.validator_address_.Release();
}
inline void ValidatorHistoricalRewardsRecord::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.validator_address)
}

// uint64 period = 2 [json_name = "period"];
inline void ValidatorHistoricalRewardsRecord::clear_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = ::uint64_t{0u};
}
inline ::uint64_t ValidatorHistoricalRewardsRecord::period() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.period)
  return _internal_period();
}
inline void ValidatorHistoricalRewardsRecord::set_period(::uint64_t value) {
  _internal_set_period(value);
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.period)
}
inline ::uint64_t ValidatorHistoricalRewardsRecord::_internal_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.period_;
}
inline void ValidatorHistoricalRewardsRecord::_internal_set_period(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = value;
}

// .cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool ValidatorHistoricalRewardsRecord::has_rewards() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rewards_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards& ValidatorHistoricalRewardsRecord::_internal_rewards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* p = _impl_.rewards_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards&>(::cosmos::distribution::v1beta1::_ValidatorHistoricalRewards_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards& ValidatorHistoricalRewardsRecord::rewards() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.rewards)
  return _internal_rewards();
}
inline void ValidatorHistoricalRewardsRecord::unsafe_arena_set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rewards_);
  }
  _impl_.rewards_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.rewards)
}
inline ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* ValidatorHistoricalRewardsRecord::release_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* released = _impl_.rewards_;
  _impl_.rewards_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* ValidatorHistoricalRewardsRecord::unsafe_arena_release_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.rewards)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* temp = _impl_.rewards_;
  _impl_.rewards_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* ValidatorHistoricalRewardsRecord::_internal_mutable_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rewards_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards>(GetArena());
    _impl_.rewards_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards*>(p);
  }
  return _impl_.rewards_;
}
inline ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* ValidatorHistoricalRewardsRecord::mutable_rewards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* _msg = _internal_mutable_rewards();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.rewards)
  return _msg;
}
inline void ValidatorHistoricalRewardsRecord::set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rewards_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rewards_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.rewards)
}

// -------------------------------------------------------------------

// ValidatorCurrentRewardsRecord

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void ValidatorCurrentRewardsRecord::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& ValidatorCurrentRewardsRecord::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidatorCurrentRewardsRecord::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.validator_address)
}
inline std::string* ValidatorCurrentRewardsRecord::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.validator_address)
  return _s;
}
inline const std::string& ValidatorCurrentRewardsRecord::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void ValidatorCurrentRewardsRecord::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* ValidatorCurrentRewardsRecord::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* ValidatorCurrentRewardsRecord::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.validator_address)
  return _impl_.validator_address_.Release();
}
inline void ValidatorCurrentRewardsRecord::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.validator_address)
}

// .cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool ValidatorCurrentRewardsRecord::has_rewards() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rewards_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards& ValidatorCurrentRewardsRecord::_internal_rewards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* p = _impl_.rewards_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards&>(::cosmos::distribution::v1beta1::_ValidatorCurrentRewards_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards& ValidatorCurrentRewardsRecord::rewards() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.rewards)
  return _internal_rewards();
}
inline void ValidatorCurrentRewardsRecord::unsafe_arena_set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorCurrentRewards* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rewards_);
  }
  _impl_.rewards_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorCurrentRewards*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.rewards)
}
inline ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* ValidatorCurrentRewardsRecord::release_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* released = _impl_.rewards_;
  _impl_.rewards_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* ValidatorCurrentRewardsRecord::unsafe_arena_release_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.rewards)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* temp = _impl_.rewards_;
  _impl_.rewards_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* ValidatorCurrentRewardsRecord::_internal_mutable_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rewards_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::ValidatorCurrentRewards>(GetArena());
    _impl_.rewards_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorCurrentRewards*>(p);
  }
  return _impl_.rewards_;
}
inline ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* ValidatorCurrentRewardsRecord::mutable_rewards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewards* _msg = _internal_mutable_rewards();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.rewards)
  return _msg;
}
inline void ValidatorCurrentRewardsRecord::set_allocated_rewards(::cosmos::distribution::v1beta1::ValidatorCurrentRewards* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rewards_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rewards_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorCurrentRewards*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.rewards)
}

// -------------------------------------------------------------------

// DelegatorStartingInfoRecord

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void DelegatorStartingInfoRecord::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& DelegatorStartingInfoRecord::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DelegatorStartingInfoRecord::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.delegator_address)
}
inline std::string* DelegatorStartingInfoRecord::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.delegator_address)
  return _s;
}
inline const std::string& DelegatorStartingInfoRecord::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void DelegatorStartingInfoRecord::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* DelegatorStartingInfoRecord::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* DelegatorStartingInfoRecord::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void DelegatorStartingInfoRecord::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.delegator_address)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void DelegatorStartingInfoRecord::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& DelegatorStartingInfoRecord::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DelegatorStartingInfoRecord::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.validator_address)
}
inline std::string* DelegatorStartingInfoRecord::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.validator_address)
  return _s;
}
inline const std::string& DelegatorStartingInfoRecord::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void DelegatorStartingInfoRecord::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* DelegatorStartingInfoRecord::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* DelegatorStartingInfoRecord::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.validator_address)
  return _impl_.validator_address_.Release();
}
inline void DelegatorStartingInfoRecord::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.validator_address)
}

// .cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3 [json_name = "startingInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool DelegatorStartingInfoRecord::has_starting_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.starting_info_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::DelegatorStartingInfo& DelegatorStartingInfoRecord::_internal_starting_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::DelegatorStartingInfo* p = _impl_.starting_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::DelegatorStartingInfo&>(::cosmos::distribution::v1beta1::_DelegatorStartingInfo_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::DelegatorStartingInfo& DelegatorStartingInfoRecord::starting_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.starting_info)
  return _internal_starting_info();
}
inline void DelegatorStartingInfoRecord::unsafe_arena_set_allocated_starting_info(::cosmos::distribution::v1beta1::DelegatorStartingInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.starting_info_);
  }
  _impl_.starting_info_ = reinterpret_cast<::cosmos::distribution::v1beta1::DelegatorStartingInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.starting_info)
}
inline ::cosmos::distribution::v1beta1::DelegatorStartingInfo* DelegatorStartingInfoRecord::release_starting_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::DelegatorStartingInfo* released = _impl_.starting_info_;
  _impl_.starting_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::DelegatorStartingInfo* DelegatorStartingInfoRecord::unsafe_arena_release_starting_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.starting_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::DelegatorStartingInfo* temp = _impl_.starting_info_;
  _impl_.starting_info_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::DelegatorStartingInfo* DelegatorStartingInfoRecord::_internal_mutable_starting_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.starting_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::DelegatorStartingInfo>(GetArena());
    _impl_.starting_info_ = reinterpret_cast<::cosmos::distribution::v1beta1::DelegatorStartingInfo*>(p);
  }
  return _impl_.starting_info_;
}
inline ::cosmos::distribution::v1beta1::DelegatorStartingInfo* DelegatorStartingInfoRecord::mutable_starting_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::distribution::v1beta1::DelegatorStartingInfo* _msg = _internal_mutable_starting_info();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.starting_info)
  return _msg;
}
inline void DelegatorStartingInfoRecord::set_allocated_starting_info(::cosmos::distribution::v1beta1::DelegatorStartingInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.starting_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.starting_info_ = reinterpret_cast<::cosmos::distribution::v1beta1::DelegatorStartingInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.starting_info)
}

// -------------------------------------------------------------------

// ValidatorSlashEventRecord

// string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void ValidatorSlashEventRecord::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& ValidatorSlashEventRecord::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidatorSlashEventRecord::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_address)
}
inline std::string* ValidatorSlashEventRecord::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_address)
  return _s;
}
inline const std::string& ValidatorSlashEventRecord::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void ValidatorSlashEventRecord::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* ValidatorSlashEventRecord::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* ValidatorSlashEventRecord::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_address)
  return _impl_.validator_address_.Release();
}
inline void ValidatorSlashEventRecord::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_address)
}

// uint64 height = 2 [json_name = "height"];
inline void ValidatorSlashEventRecord::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::uint64_t{0u};
}
inline ::uint64_t ValidatorSlashEventRecord::height() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.height)
  return _internal_height();
}
inline void ValidatorSlashEventRecord::set_height(::uint64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.height)
}
inline ::uint64_t ValidatorSlashEventRecord::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void ValidatorSlashEventRecord::_internal_set_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// uint64 period = 3 [json_name = "period"];
inline void ValidatorSlashEventRecord::clear_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = ::uint64_t{0u};
}
inline ::uint64_t ValidatorSlashEventRecord::period() const {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.period)
  return _internal_period();
}
inline void ValidatorSlashEventRecord::set_period(::uint64_t value) {
  _internal_set_period(value);
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.period)
}
inline ::uint64_t ValidatorSlashEventRecord::_internal_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.period_;
}
inline void ValidatorSlashEventRecord::_internal_set_period(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = value;
}

// .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4 [json_name = "validatorSlashEvent", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool ValidatorSlashEventRecord::has_validator_slash_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validator_slash_event_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& ValidatorSlashEventRecord::_internal_validator_slash_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::ValidatorSlashEvent* p = _impl_.validator_slash_event_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::ValidatorSlashEvent&>(::cosmos::distribution::v1beta1::_ValidatorSlashEvent_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& ValidatorSlashEventRecord::validator_slash_event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_slash_event)
  return _internal_validator_slash_event();
}
inline void ValidatorSlashEventRecord::unsafe_arena_set_allocated_validator_slash_event(::cosmos::distribution::v1beta1::ValidatorSlashEvent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_slash_event_);
  }
  _impl_.validator_slash_event_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorSlashEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_slash_event)
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* ValidatorSlashEventRecord::release_validator_slash_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* released = _impl_.validator_slash_event_;
  _impl_.validator_slash_event_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* ValidatorSlashEventRecord::unsafe_arena_release_validator_slash_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_slash_event)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* temp = _impl_.validator_slash_event_;
  _impl_.validator_slash_event_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* ValidatorSlashEventRecord::_internal_mutable_validator_slash_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_slash_event_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::ValidatorSlashEvent>(GetArena());
    _impl_.validator_slash_event_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorSlashEvent*>(p);
  }
  return _impl_.validator_slash_event_;
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEvent* ValidatorSlashEventRecord::mutable_validator_slash_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::distribution::v1beta1::ValidatorSlashEvent* _msg = _internal_mutable_validator_slash_event();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_slash_event)
  return _msg;
}
inline void ValidatorSlashEventRecord::set_allocated_validator_slash_event(::cosmos::distribution::v1beta1::ValidatorSlashEvent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_slash_event_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.validator_slash_event_ = reinterpret_cast<::cosmos::distribution::v1beta1::ValidatorSlashEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_slash_event)
}

// -------------------------------------------------------------------

// GenesisState

// .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool GenesisState::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::Params& GenesisState::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::Params&>(::cosmos::distribution::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::Params& GenesisState::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.params)
  return _internal_params();
}
inline void GenesisState::unsafe_arena_set_allocated_params(::cosmos::distribution::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::distribution::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.GenesisState.params)
}
inline ::cosmos::distribution::v1beta1::Params* GenesisState::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::Params* GenesisState::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.GenesisState.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::distribution::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::Params* GenesisState::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::distribution::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::distribution::v1beta1::Params* GenesisState::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::distribution::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.params)
  return _msg;
}
inline void GenesisState::set_allocated_params(::cosmos::distribution::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::distribution::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.GenesisState.params)
}

// .cosmos.distribution.v1beta1.FeePool fee_pool = 2 [json_name = "feePool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool GenesisState::has_fee_pool() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fee_pool_ != nullptr);
  return value;
}
inline const ::cosmos::distribution::v1beta1::FeePool& GenesisState::_internal_fee_pool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::distribution::v1beta1::FeePool* p = _impl_.fee_pool_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::distribution::v1beta1::FeePool&>(::cosmos::distribution::v1beta1::_FeePool_default_instance_);
}
inline const ::cosmos::distribution::v1beta1::FeePool& GenesisState::fee_pool() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.fee_pool)
  return _internal_fee_pool();
}
inline void GenesisState::unsafe_arena_set_allocated_fee_pool(::cosmos::distribution::v1beta1::FeePool* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fee_pool_);
  }
  _impl_.fee_pool_ = reinterpret_cast<::cosmos::distribution::v1beta1::FeePool*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.distribution.v1beta1.GenesisState.fee_pool)
}
inline ::cosmos::distribution::v1beta1::FeePool* GenesisState::release_fee_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::distribution::v1beta1::FeePool* released = _impl_.fee_pool_;
  _impl_.fee_pool_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::distribution::v1beta1::FeePool* GenesisState::unsafe_arena_release_fee_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.GenesisState.fee_pool)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::distribution::v1beta1::FeePool* temp = _impl_.fee_pool_;
  _impl_.fee_pool_ = nullptr;
  return temp;
}
inline ::cosmos::distribution::v1beta1::FeePool* GenesisState::_internal_mutable_fee_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fee_pool_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::distribution::v1beta1::FeePool>(GetArena());
    _impl_.fee_pool_ = reinterpret_cast<::cosmos::distribution::v1beta1::FeePool*>(p);
  }
  return _impl_.fee_pool_;
}
inline ::cosmos::distribution::v1beta1::FeePool* GenesisState::mutable_fee_pool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::distribution::v1beta1::FeePool* _msg = _internal_mutable_fee_pool();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.fee_pool)
  return _msg;
}
inline void GenesisState::set_allocated_fee_pool(::cosmos::distribution::v1beta1::FeePool* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fee_pool_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.fee_pool_ = reinterpret_cast<::cosmos::distribution::v1beta1::FeePool*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.GenesisState.fee_pool)
}

// repeated .cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3 [json_name = "delegatorWithdrawInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_delegator_withdraw_infos_size() const {
  return _internal_delegator_withdraw_infos().size();
}
inline int GenesisState::delegator_withdraw_infos_size() const {
  return _internal_delegator_withdraw_infos_size();
}
inline void GenesisState::clear_delegator_withdraw_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_withdraw_infos_.Clear();
}
inline ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo* GenesisState::mutable_delegator_withdraw_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.delegator_withdraw_infos)
  return _internal_mutable_delegator_withdraw_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>* GenesisState::mutable_delegator_withdraw_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.delegator_withdraw_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_delegator_withdraw_infos();
}
inline const ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo& GenesisState::delegator_withdraw_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.delegator_withdraw_infos)
  return _internal_delegator_withdraw_infos().Get(index);
}
inline ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo* GenesisState::add_delegator_withdraw_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo* _add = _internal_mutable_delegator_withdraw_infos()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.delegator_withdraw_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>& GenesisState::delegator_withdraw_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.delegator_withdraw_infos)
  return _internal_delegator_withdraw_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>&
GenesisState::_internal_delegator_withdraw_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_withdraw_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>*
GenesisState::_internal_mutable_delegator_withdraw_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.delegator_withdraw_infos_;
}

// string previous_proposer = 4 [json_name = "previousProposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void GenesisState::clear_previous_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_proposer_.ClearToEmpty();
}
inline const std::string& GenesisState::previous_proposer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.previous_proposer)
  return _internal_previous_proposer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenesisState::set_previous_proposer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_proposer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.distribution.v1beta1.GenesisState.previous_proposer)
}
inline std::string* GenesisState::mutable_previous_proposer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_previous_proposer();
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.previous_proposer)
  return _s;
}
inline const std::string& GenesisState::_internal_previous_proposer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previous_proposer_.Get();
}
inline void GenesisState::_internal_set_previous_proposer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_proposer_.Set(value, GetArena());
}
inline std::string* GenesisState::_internal_mutable_previous_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.previous_proposer_.Mutable( GetArena());
}
inline std::string* GenesisState::release_previous_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.distribution.v1beta1.GenesisState.previous_proposer)
  return _impl_.previous_proposer_.Release();
}
inline void GenesisState::set_allocated_previous_proposer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_proposer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.previous_proposer_.IsDefault()) {
    _impl_.previous_proposer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.distribution.v1beta1.GenesisState.previous_proposer)
}

// repeated .cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_outstanding_rewards_size() const {
  return _internal_outstanding_rewards().size();
}
inline int GenesisState::outstanding_rewards_size() const {
  return _internal_outstanding_rewards_size();
}
inline void GenesisState::clear_outstanding_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outstanding_rewards_.Clear();
}
inline ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord* GenesisState::mutable_outstanding_rewards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.outstanding_rewards)
  return _internal_mutable_outstanding_rewards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>* GenesisState::mutable_outstanding_rewards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.outstanding_rewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outstanding_rewards();
}
inline const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord& GenesisState::outstanding_rewards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.outstanding_rewards)
  return _internal_outstanding_rewards().Get(index);
}
inline ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord* GenesisState::add_outstanding_rewards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord* _add = _internal_mutable_outstanding_rewards()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.outstanding_rewards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>& GenesisState::outstanding_rewards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.outstanding_rewards)
  return _internal_outstanding_rewards();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>&
GenesisState::_internal_outstanding_rewards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outstanding_rewards_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>*
GenesisState::_internal_mutable_outstanding_rewards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outstanding_rewards_;
}

// repeated .cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6 [json_name = "validatorAccumulatedCommissions", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_validator_accumulated_commissions_size() const {
  return _internal_validator_accumulated_commissions().size();
}
inline int GenesisState::validator_accumulated_commissions_size() const {
  return _internal_validator_accumulated_commissions_size();
}
inline void GenesisState::clear_validator_accumulated_commissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_accumulated_commissions_.Clear();
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord* GenesisState::mutable_validator_accumulated_commissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.validator_accumulated_commissions)
  return _internal_mutable_validator_accumulated_commissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>* GenesisState::mutable_validator_accumulated_commissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.validator_accumulated_commissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validator_accumulated_commissions();
}
inline const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord& GenesisState::validator_accumulated_commissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.validator_accumulated_commissions)
  return _internal_validator_accumulated_commissions().Get(index);
}
inline ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord* GenesisState::add_validator_accumulated_commissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord* _add = _internal_mutable_validator_accumulated_commissions()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.validator_accumulated_commissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>& GenesisState::validator_accumulated_commissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.validator_accumulated_commissions)
  return _internal_validator_accumulated_commissions();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>&
GenesisState::_internal_validator_accumulated_commissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_accumulated_commissions_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>*
GenesisState::_internal_mutable_validator_accumulated_commissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validator_accumulated_commissions_;
}

// repeated .cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7 [json_name = "validatorHistoricalRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_validator_historical_rewards_size() const {
  return _internal_validator_historical_rewards().size();
}
inline int GenesisState::validator_historical_rewards_size() const {
  return _internal_validator_historical_rewards_size();
}
inline void GenesisState::clear_validator_historical_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_historical_rewards_.Clear();
}
inline ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord* GenesisState::mutable_validator_historical_rewards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.validator_historical_rewards)
  return _internal_mutable_validator_historical_rewards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>* GenesisState::mutable_validator_historical_rewards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.validator_historical_rewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validator_historical_rewards();
}
inline const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord& GenesisState::validator_historical_rewards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.validator_historical_rewards)
  return _internal_validator_historical_rewards().Get(index);
}
inline ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord* GenesisState::add_validator_historical_rewards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord* _add = _internal_mutable_validator_historical_rewards()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.validator_historical_rewards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>& GenesisState::validator_historical_rewards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.validator_historical_rewards)
  return _internal_validator_historical_rewards();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>&
GenesisState::_internal_validator_historical_rewards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_historical_rewards_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>*
GenesisState::_internal_mutable_validator_historical_rewards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validator_historical_rewards_;
}

// repeated .cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8 [json_name = "validatorCurrentRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_validator_current_rewards_size() const {
  return _internal_validator_current_rewards().size();
}
inline int GenesisState::validator_current_rewards_size() const {
  return _internal_validator_current_rewards_size();
}
inline void GenesisState::clear_validator_current_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_current_rewards_.Clear();
}
inline ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord* GenesisState::mutable_validator_current_rewards(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.validator_current_rewards)
  return _internal_mutable_validator_current_rewards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>* GenesisState::mutable_validator_current_rewards()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.validator_current_rewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validator_current_rewards();
}
inline const ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord& GenesisState::validator_current_rewards(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.validator_current_rewards)
  return _internal_validator_current_rewards().Get(index);
}
inline ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord* GenesisState::add_validator_current_rewards() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord* _add = _internal_mutable_validator_current_rewards()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.validator_current_rewards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>& GenesisState::validator_current_rewards() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.validator_current_rewards)
  return _internal_validator_current_rewards();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>&
GenesisState::_internal_validator_current_rewards() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_current_rewards_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>*
GenesisState::_internal_mutable_validator_current_rewards() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validator_current_rewards_;
}

// repeated .cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9 [json_name = "delegatorStartingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_delegator_starting_infos_size() const {
  return _internal_delegator_starting_infos().size();
}
inline int GenesisState::delegator_starting_infos_size() const {
  return _internal_delegator_starting_infos_size();
}
inline void GenesisState::clear_delegator_starting_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_starting_infos_.Clear();
}
inline ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord* GenesisState::mutable_delegator_starting_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.delegator_starting_infos)
  return _internal_mutable_delegator_starting_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>* GenesisState::mutable_delegator_starting_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.delegator_starting_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_delegator_starting_infos();
}
inline const ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord& GenesisState::delegator_starting_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.delegator_starting_infos)
  return _internal_delegator_starting_infos().Get(index);
}
inline ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord* GenesisState::add_delegator_starting_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord* _add = _internal_mutable_delegator_starting_infos()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.delegator_starting_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>& GenesisState::delegator_starting_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.delegator_starting_infos)
  return _internal_delegator_starting_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>&
GenesisState::_internal_delegator_starting_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_starting_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>*
GenesisState::_internal_mutable_delegator_starting_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.delegator_starting_infos_;
}

// repeated .cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_validator_slash_events_size() const {
  return _internal_validator_slash_events().size();
}
inline int GenesisState::validator_slash_events_size() const {
  return _internal_validator_slash_events_size();
}
inline void GenesisState::clear_validator_slash_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_slash_events_.Clear();
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord* GenesisState::mutable_validator_slash_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.distribution.v1beta1.GenesisState.validator_slash_events)
  return _internal_mutable_validator_slash_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>* GenesisState::mutable_validator_slash_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.distribution.v1beta1.GenesisState.validator_slash_events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validator_slash_events();
}
inline const ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord& GenesisState::validator_slash_events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.distribution.v1beta1.GenesisState.validator_slash_events)
  return _internal_validator_slash_events().Get(index);
}
inline ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord* GenesisState::add_validator_slash_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord* _add = _internal_mutable_validator_slash_events()->Add();
  // @@protoc_insertion_point(field_add:cosmos.distribution.v1beta1.GenesisState.validator_slash_events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>& GenesisState::validator_slash_events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.distribution.v1beta1.GenesisState.validator_slash_events)
  return _internal_validator_slash_events();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>&
GenesisState::_internal_validator_slash_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_slash_events_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>*
GenesisState::_internal_mutable_validator_slash_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validator_slash_events_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_2epb_2eh
