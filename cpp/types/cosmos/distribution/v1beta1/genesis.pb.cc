// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/distribution/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/distribution/v1beta1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace distribution {
namespace v1beta1 {

inline constexpr DelegatorWithdrawInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        withdraw_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DelegatorWithdrawInfo::DelegatorWithdrawInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DelegatorWithdrawInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelegatorWithdrawInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelegatorWithdrawInfoDefaultTypeInternal() {}
  union {
    DelegatorWithdrawInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelegatorWithdrawInfoDefaultTypeInternal _DelegatorWithdrawInfo_default_instance_;

inline constexpr ValidatorSlashEventRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_slash_event_{nullptr},
        height_{::uint64_t{0u}},
        period_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorSlashEventRecord::ValidatorSlashEventRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorSlashEventRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorSlashEventRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorSlashEventRecordDefaultTypeInternal() {}
  union {
    ValidatorSlashEventRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorSlashEventRecordDefaultTypeInternal _ValidatorSlashEventRecord_default_instance_;

inline constexpr ValidatorOutstandingRewardsRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : outstanding_rewards_{},
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorOutstandingRewardsRecord::ValidatorOutstandingRewardsRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorOutstandingRewardsRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorOutstandingRewardsRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorOutstandingRewardsRecordDefaultTypeInternal() {}
  union {
    ValidatorOutstandingRewardsRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorOutstandingRewardsRecordDefaultTypeInternal _ValidatorOutstandingRewardsRecord_default_instance_;

inline constexpr DelegatorStartingInfoRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        starting_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DelegatorStartingInfoRecord::DelegatorStartingInfoRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DelegatorStartingInfoRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelegatorStartingInfoRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelegatorStartingInfoRecordDefaultTypeInternal() {}
  union {
    DelegatorStartingInfoRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelegatorStartingInfoRecordDefaultTypeInternal _DelegatorStartingInfoRecord_default_instance_;

inline constexpr ValidatorHistoricalRewardsRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rewards_{nullptr},
        period_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorHistoricalRewardsRecord::ValidatorHistoricalRewardsRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorHistoricalRewardsRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorHistoricalRewardsRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorHistoricalRewardsRecordDefaultTypeInternal() {}
  union {
    ValidatorHistoricalRewardsRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorHistoricalRewardsRecordDefaultTypeInternal _ValidatorHistoricalRewardsRecord_default_instance_;

inline constexpr ValidatorCurrentRewardsRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rewards_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorCurrentRewardsRecord::ValidatorCurrentRewardsRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorCurrentRewardsRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorCurrentRewardsRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorCurrentRewardsRecordDefaultTypeInternal() {}
  union {
    ValidatorCurrentRewardsRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorCurrentRewardsRecordDefaultTypeInternal _ValidatorCurrentRewardsRecord_default_instance_;

inline constexpr ValidatorAccumulatedCommissionRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accumulated_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorAccumulatedCommissionRecord::ValidatorAccumulatedCommissionRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorAccumulatedCommissionRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorAccumulatedCommissionRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorAccumulatedCommissionRecordDefaultTypeInternal() {}
  union {
    ValidatorAccumulatedCommissionRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorAccumulatedCommissionRecordDefaultTypeInternal _ValidatorAccumulatedCommissionRecord_default_instance_;

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        delegator_withdraw_infos_{},
        outstanding_rewards_{},
        validator_accumulated_commissions_{},
        validator_historical_rewards_{},
        validator_current_rewards_{},
        delegator_starting_infos_{},
        validator_slash_events_{},
        previous_proposer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        params_{nullptr},
        fee_pool_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorWithdrawInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorWithdrawInfo, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorWithdrawInfo, _impl_.withdraw_address_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord, _impl_.outstanding_rewards_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord, _impl_.accumulated_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord, _impl_.period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord, _impl_.rewards_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord, _impl_.rewards_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord, _impl_.starting_info_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord, _impl_.period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord, _impl_.validator_slash_event_),
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.params_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.fee_pool_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.delegator_withdraw_infos_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.previous_proposer_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.outstanding_rewards_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.validator_accumulated_commissions_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.validator_historical_rewards_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.validator_current_rewards_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.delegator_starting_infos_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::GenesisState, _impl_.validator_slash_events_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::distribution::v1beta1::DelegatorWithdrawInfo)},
        {10, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord)},
        {20, 30, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord)},
        {32, 43, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord)},
        {46, 56, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord)},
        {58, 69, -1, sizeof(::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord)},
        {72, 84, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorSlashEventRecord)},
        {88, 106, -1, sizeof(::cosmos::distribution::v1beta1::GenesisState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::distribution::v1beta1::_DelegatorWithdrawInfo_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorOutstandingRewardsRecord_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorAccumulatedCommissionRecord_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorHistoricalRewardsRecord_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorCurrentRewardsRecord_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_DelegatorStartingInfoRecord_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorSlashEventRecord_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_GenesisState_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n)cosmos/distribution/v1beta1/genesis.pr"
    "oto\022\033cosmos.distribution.v1beta1\032\024gogopr"
    "oto/gogo.proto\032\036cosmos/base/v1beta1/coin"
    ".proto\032.cosmos/distribution/v1beta1/dist"
    "ribution.proto\032\031cosmos_proto/cosmos.prot"
    "o\032\021amino/amino.proto\"\255\001\n\025DelegatorWithdr"
    "awInfo\022E\n\021delegator_address\030\001 \001(\tB\030\322\264-\024c"
    "osmos.AddressStringR\020delegatorAddress\022C\n"
    "\020withdraw_address\030\002 \001(\tB\030\322\264-\024cosmos.Addr"
    "essStringR\017withdrawAddress:\010\210\240\037\000\350\240\037\000\"\207\002\n"
    "!ValidatorOutstandingRewardsRecord\022N\n\021va"
    "lidator_address\030\001 \001(\tB!\322\264-\035cosmos.Valida"
    "torAddressStringR\020validatorAddress\022\207\001\n\023o"
    "utstanding_rewards\030\002 \003(\0132\034.cosmos.base.v"
    "1beta1.DecCoinB8\310\336\037\000\252\337\037+github.com/cosmo"
    "s/cosmos-sdk/types.DecCoins\250\347\260*\001R\022outsta"
    "ndingRewards:\010\210\240\037\000\350\240\037\000\"\352\001\n$ValidatorAccu"
    "mulatedCommissionRecord\022N\n\021validator_add"
    "ress\030\001 \001(\tB!\322\264-\035cosmos.ValidatorAddressS"
    "tringR\020validatorAddress\022h\n\013accumulated\030\002"
    " \001(\0132;.cosmos.distribution.v1beta1.Valid"
    "atorAccumulatedCommissionB\t\310\336\037\000\250\347\260*\001R\013ac"
    "cumulated:\010\210\240\037\000\350\240\037\000\"\362\001\n ValidatorHistori"
    "calRewardsRecord\022N\n\021validator_address\030\001 "
    "\001(\tB!\322\264-\035cosmos.ValidatorAddressStringR\020"
    "validatorAddress\022\026\n\006period\030\002 \001(\004R\006period"
    "\022\\\n\007rewards\030\003 \001(\01327.cosmos.distribution."
    "v1beta1.ValidatorHistoricalRewardsB\t\310\336\037\000"
    "\250\347\260*\001R\007rewards:\010\210\240\037\000\350\240\037\000\"\324\001\n\035ValidatorCu"
    "rrentRewardsRecord\022N\n\021validator_address\030"
    "\001 \001(\tB!\322\264-\035cosmos.ValidatorAddressString"
    "R\020validatorAddress\022Y\n\007rewards\030\002 \001(\01324.co"
    "smos.distribution.v1beta1.ValidatorCurre"
    "ntRewardsB\t\310\336\037\000\250\347\260*\001R\007rewards:\010\210\240\037\000\350\240\037\000\""
    "\242\002\n\033DelegatorStartingInfoRecord\022E\n\021deleg"
    "ator_address\030\001 \001(\tB\030\322\264-\024cosmos.AddressSt"
    "ringR\020delegatorAddress\022N\n\021validator_addr"
    "ess\030\002 \001(\tB!\322\264-\035cosmos.ValidatorAddressSt"
    "ringR\020validatorAddress\022b\n\rstarting_info\030"
    "\003 \001(\01322.cosmos.distribution.v1beta1.Dele"
    "gatorStartingInfoB\t\310\336\037\000\250\347\260*\001R\014startingIn"
    "fo:\010\210\240\037\000\350\240\037\000\"\226\002\n\031ValidatorSlashEventReco"
    "rd\022N\n\021validator_address\030\001 \001(\tB!\322\264-\035cosmo"
    "s.ValidatorAddressStringR\020validatorAddre"
    "ss\022\026\n\006height\030\002 \001(\004R\006height\022\026\n\006period\030\003 \001"
    "(\004R\006period\022o\n\025validator_slash_event\030\004 \001("
    "\01320.cosmos.distribution.v1beta1.Validato"
    "rSlashEventB\t\310\336\037\000\250\347\260*\001R\023validatorSlashEv"
    "ent:\010\210\240\037\000\350\240\037\000\"\214\t\n\014GenesisState\022F\n\006params"
    "\030\001 \001(\0132#.cosmos.distribution.v1beta1.Par"
    "amsB\t\310\336\037\000\250\347\260*\001R\006params\022J\n\010fee_pool\030\002 \001(\013"
    "2$.cosmos.distribution.v1beta1.FeePoolB\t"
    "\310\336\037\000\250\347\260*\001R\007feePool\022w\n\030delegator_withdraw"
    "_infos\030\003 \003(\01322.cosmos.distribution.v1bet"
    "a1.DelegatorWithdrawInfoB\t\310\336\037\000\250\347\260*\001R\026del"
    "egatorWithdrawInfos\022E\n\021previous_proposer"
    "\030\004 \001(\tB\030\322\264-\024cosmos.AddressStringR\020previo"
    "usProposer\022z\n\023outstanding_rewards\030\005 \003(\0132"
    ">.cosmos.distribution.v1beta1.ValidatorO"
    "utstandingRewardsRecordB\t\310\336\037\000\250\347\260*\001R\022outs"
    "tandingRewards\022\230\001\n!validator_accumulated"
    "_commissions\030\006 \003(\0132A.cosmos.distribution"
    ".v1beta1.ValidatorAccumulatedCommissionR"
    "ecordB\t\310\336\037\000\250\347\260*\001R\037validatorAccumulatedCo"
    "mmissions\022\212\001\n\034validator_historical_rewar"
    "ds\030\007 \003(\0132=.cosmos.distribution.v1beta1.V"
    "alidatorHistoricalRewardsRecordB\t\310\336\037\000\250\347\260"
    "*\001R\032validatorHistoricalRewards\022\201\001\n\031valid"
    "ator_current_rewards\030\010 \003(\0132:.cosmos.dist"
    "ribution.v1beta1.ValidatorCurrentRewards"
    "RecordB\t\310\336\037\000\250\347\260*\001R\027validatorCurrentRewar"
    "ds\022}\n\030delegator_starting_infos\030\t \003(\01328.c"
    "osmos.distribution.v1beta1.DelegatorStar"
    "tingInfoRecordB\t\310\336\037\000\250\347\260*\001R\026delegatorStar"
    "tingInfos\022w\n\026validator_slash_events\030\n \003("
    "\01326.cosmos.distribution.v1beta1.Validato"
    "rSlashEventRecordB\t\310\336\037\000\250\347\260*\001R\024validatorS"
    "lashEvents:\010\210\240\037\000\350\240\037\000B7Z1github.com/cosmo"
    "s/cosmos-sdk/x/distribution/types\250\342\036\001b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_deps[5] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto = {
    false,
    false,
    3165,
    descriptor_table_protodef_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    "cosmos/distribution/v1beta1/genesis.proto",
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_once,
    descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto_deps,
    5,
    8,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    file_level_service_descriptors_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
};
namespace cosmos {
namespace distribution {
namespace v1beta1 {
// ===================================================================

class DelegatorWithdrawInfo::_Internal {
 public:
};

DelegatorWithdrawInfo::DelegatorWithdrawInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
}
inline PROTOBUF_NDEBUG_INLINE DelegatorWithdrawInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::DelegatorWithdrawInfo& from_msg)
      : delegator_address_(arena, from.delegator_address_),
        withdraw_address_(arena, from.withdraw_address_),
        _cached_size_{0} {}

DelegatorWithdrawInfo::DelegatorWithdrawInfo(
    ::google::protobuf::Arena* arena,
    const DelegatorWithdrawInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DelegatorWithdrawInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
}
inline PROTOBUF_NDEBUG_INLINE DelegatorWithdrawInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : delegator_address_(arena),
        withdraw_address_(arena),
        _cached_size_{0} {}

inline void DelegatorWithdrawInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DelegatorWithdrawInfo::~DelegatorWithdrawInfo() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
  SharedDtor(*this);
}
inline void DelegatorWithdrawInfo::SharedDtor(MessageLite& self) {
  DelegatorWithdrawInfo& this_ = static_cast<DelegatorWithdrawInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.withdraw_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DelegatorWithdrawInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DelegatorWithdrawInfo(arena);
}
constexpr auto DelegatorWithdrawInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DelegatorWithdrawInfo),
                                            alignof(DelegatorWithdrawInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DelegatorWithdrawInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DelegatorWithdrawInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DelegatorWithdrawInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DelegatorWithdrawInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DelegatorWithdrawInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DelegatorWithdrawInfo>(), &DelegatorWithdrawInfo::ByteSizeLong,
            &DelegatorWithdrawInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DelegatorWithdrawInfo, _impl_._cached_size_),
        false,
    },
    &DelegatorWithdrawInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DelegatorWithdrawInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 91, 2> DelegatorWithdrawInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorWithdrawInfo, _impl_.withdraw_address_)}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorWithdrawInfo, _impl_.delegator_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(DelegatorWithdrawInfo, _impl_.delegator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(DelegatorWithdrawInfo, _impl_.withdraw_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\21\20\0\0\0\0\0"
    "cosmos.distribution.v1beta1.DelegatorWithdrawInfo"
    "delegator_address"
    "withdraw_address"
  }},
};

PROTOBUF_NOINLINE void DelegatorWithdrawInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.withdraw_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DelegatorWithdrawInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DelegatorWithdrawInfo& this_ = static_cast<const DelegatorWithdrawInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DelegatorWithdrawInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DelegatorWithdrawInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.DelegatorWithdrawInfo.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_withdraw_address().empty()) {
            const std::string& _s = this_._internal_withdraw_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.DelegatorWithdrawInfo.withdraw_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DelegatorWithdrawInfo::ByteSizeLong(const MessageLite& base) {
          const DelegatorWithdrawInfo& this_ = static_cast<const DelegatorWithdrawInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DelegatorWithdrawInfo::ByteSizeLong() const {
          const DelegatorWithdrawInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string withdraw_address = 2 [json_name = "withdrawAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_withdraw_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_withdraw_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DelegatorWithdrawInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DelegatorWithdrawInfo*>(&to_msg);
  auto& from = static_cast<const DelegatorWithdrawInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_withdraw_address().empty()) {
    _this->_internal_set_withdraw_address(from._internal_withdraw_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DelegatorWithdrawInfo::CopyFrom(const DelegatorWithdrawInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.DelegatorWithdrawInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DelegatorWithdrawInfo::InternalSwap(DelegatorWithdrawInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.withdraw_address_, &other->_impl_.withdraw_address_, arena);
}

::google::protobuf::Metadata DelegatorWithdrawInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorOutstandingRewardsRecord::_Internal {
 public:
};

void ValidatorOutstandingRewardsRecord::clear_outstanding_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outstanding_rewards_.Clear();
}
ValidatorOutstandingRewardsRecord::ValidatorOutstandingRewardsRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorOutstandingRewardsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord& from_msg)
      : outstanding_rewards_{visibility, arena, from.outstanding_rewards_},
        validator_address_(arena, from.validator_address_),
        _cached_size_{0} {}

ValidatorOutstandingRewardsRecord::ValidatorOutstandingRewardsRecord(
    ::google::protobuf::Arena* arena,
    const ValidatorOutstandingRewardsRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorOutstandingRewardsRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorOutstandingRewardsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : outstanding_rewards_{visibility, arena},
        validator_address_(arena),
        _cached_size_{0} {}

inline void ValidatorOutstandingRewardsRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidatorOutstandingRewardsRecord::~ValidatorOutstandingRewardsRecord() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
  SharedDtor(*this);
}
inline void ValidatorOutstandingRewardsRecord::SharedDtor(MessageLite& self) {
  ValidatorOutstandingRewardsRecord& this_ = static_cast<ValidatorOutstandingRewardsRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validator_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ValidatorOutstandingRewardsRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorOutstandingRewardsRecord(arena);
}
constexpr auto ValidatorOutstandingRewardsRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewardsRecord, _impl_.outstanding_rewards_) +
          decltype(ValidatorOutstandingRewardsRecord::_impl_.outstanding_rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ValidatorOutstandingRewardsRecord), alignof(ValidatorOutstandingRewardsRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorOutstandingRewardsRecord::PlacementNew_,
                                 sizeof(ValidatorOutstandingRewardsRecord),
                                 alignof(ValidatorOutstandingRewardsRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorOutstandingRewardsRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorOutstandingRewardsRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorOutstandingRewardsRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorOutstandingRewardsRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorOutstandingRewardsRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorOutstandingRewardsRecord>(), &ValidatorOutstandingRewardsRecord::ByteSizeLong,
            &ValidatorOutstandingRewardsRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewardsRecord, _impl_._cached_size_),
        false,
    },
    &ValidatorOutstandingRewardsRecord::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorOutstandingRewardsRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 87, 2> ValidatorOutstandingRewardsRecord::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.DecCoin outstanding_rewards = 2 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewardsRecord, _impl_.outstanding_rewards_)}},
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewardsRecord, _impl_.validator_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewardsRecord, _impl_.validator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.DecCoin outstanding_rewards = 2 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewardsRecord, _impl_.outstanding_rewards_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
    "\75\21\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void ValidatorOutstandingRewardsRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.outstanding_rewards_.Clear();
  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorOutstandingRewardsRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorOutstandingRewardsRecord& this_ = static_cast<const ValidatorOutstandingRewardsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorOutstandingRewardsRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorOutstandingRewardsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord.validator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .cosmos.base.v1beta1.DecCoin outstanding_rewards = 2 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outstanding_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outstanding_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorOutstandingRewardsRecord::ByteSizeLong(const MessageLite& base) {
          const ValidatorOutstandingRewardsRecord& this_ = static_cast<const ValidatorOutstandingRewardsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorOutstandingRewardsRecord::ByteSizeLong() const {
          const ValidatorOutstandingRewardsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin outstanding_rewards = 2 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_outstanding_rewards_size();
              for (const auto& msg : this_._internal_outstanding_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorOutstandingRewardsRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorOutstandingRewardsRecord*>(&to_msg);
  auto& from = static_cast<const ValidatorOutstandingRewardsRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_outstanding_rewards()->MergeFrom(
      from._internal_outstanding_rewards());
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorOutstandingRewardsRecord::CopyFrom(const ValidatorOutstandingRewardsRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorOutstandingRewardsRecord::InternalSwap(ValidatorOutstandingRewardsRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.outstanding_rewards_.InternalSwap(&other->_impl_.outstanding_rewards_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
}

::google::protobuf::Metadata ValidatorOutstandingRewardsRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorAccumulatedCommissionRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ValidatorAccumulatedCommissionRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_._has_bits_);
};

void ValidatorAccumulatedCommissionRecord::clear_accumulated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accumulated_ != nullptr) _impl_.accumulated_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ValidatorAccumulatedCommissionRecord::ValidatorAccumulatedCommissionRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorAccumulatedCommissionRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validator_address_(arena, from.validator_address_) {}

ValidatorAccumulatedCommissionRecord::ValidatorAccumulatedCommissionRecord(
    ::google::protobuf::Arena* arena,
    const ValidatorAccumulatedCommissionRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorAccumulatedCommissionRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.accumulated_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission>(
                              arena, *from._impl_.accumulated_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorAccumulatedCommissionRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validator_address_(arena) {}

inline void ValidatorAccumulatedCommissionRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accumulated_ = {};
}
ValidatorAccumulatedCommissionRecord::~ValidatorAccumulatedCommissionRecord() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
  SharedDtor(*this);
}
inline void ValidatorAccumulatedCommissionRecord::SharedDtor(MessageLite& self) {
  ValidatorAccumulatedCommissionRecord& this_ = static_cast<ValidatorAccumulatedCommissionRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validator_address_.Destroy();
  delete this_._impl_.accumulated_;
  this_._impl_.~Impl_();
}

inline void* ValidatorAccumulatedCommissionRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorAccumulatedCommissionRecord(arena);
}
constexpr auto ValidatorAccumulatedCommissionRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorAccumulatedCommissionRecord),
                                            alignof(ValidatorAccumulatedCommissionRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorAccumulatedCommissionRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorAccumulatedCommissionRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorAccumulatedCommissionRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorAccumulatedCommissionRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorAccumulatedCommissionRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorAccumulatedCommissionRecord>(), &ValidatorAccumulatedCommissionRecord::ByteSizeLong,
            &ValidatorAccumulatedCommissionRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_._cached_size_),
        false,
    },
    &ValidatorAccumulatedCommissionRecord::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorAccumulatedCommissionRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 90, 2> ValidatorAccumulatedCommissionRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2 [json_name = "accumulated", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_.accumulated_)}},
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_.validator_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_.validator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2 [json_name = "accumulated", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommissionRecord, _impl_.accumulated_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission>()},
  }}, {{
    "\100\21\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void ValidatorAccumulatedCommissionRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.accumulated_ != nullptr);
    _impl_.accumulated_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorAccumulatedCommissionRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorAccumulatedCommissionRecord& this_ = static_cast<const ValidatorAccumulatedCommissionRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorAccumulatedCommissionRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorAccumulatedCommissionRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord.validator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2 [json_name = "accumulated", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.accumulated_, this_._impl_.accumulated_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorAccumulatedCommissionRecord::ByteSizeLong(const MessageLite& base) {
          const ValidatorAccumulatedCommissionRecord& this_ = static_cast<const ValidatorAccumulatedCommissionRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorAccumulatedCommissionRecord::ByteSizeLong() const {
          const ValidatorAccumulatedCommissionRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
           {
            // .cosmos.distribution.v1beta1.ValidatorAccumulatedCommission accumulated = 2 [json_name = "accumulated", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.accumulated_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorAccumulatedCommissionRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorAccumulatedCommissionRecord*>(&to_msg);
  auto& from = static_cast<const ValidatorAccumulatedCommissionRecord&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.accumulated_ != nullptr);
    if (_this->_impl_.accumulated_ == nullptr) {
      _this->_impl_.accumulated_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission>(arena, *from._impl_.accumulated_);
    } else {
      _this->_impl_.accumulated_->MergeFrom(*from._impl_.accumulated_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorAccumulatedCommissionRecord::CopyFrom(const ValidatorAccumulatedCommissionRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorAccumulatedCommissionRecord::InternalSwap(ValidatorAccumulatedCommissionRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  swap(_impl_.accumulated_, other->_impl_.accumulated_);
}

::google::protobuf::Metadata ValidatorAccumulatedCommissionRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorHistoricalRewardsRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ValidatorHistoricalRewardsRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_._has_bits_);
};

void ValidatorHistoricalRewardsRecord::clear_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rewards_ != nullptr) _impl_.rewards_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ValidatorHistoricalRewardsRecord::ValidatorHistoricalRewardsRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorHistoricalRewardsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validator_address_(arena, from.validator_address_) {}

ValidatorHistoricalRewardsRecord::ValidatorHistoricalRewardsRecord(
    ::google::protobuf::Arena* arena,
    const ValidatorHistoricalRewardsRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorHistoricalRewardsRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rewards_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards>(
                              arena, *from._impl_.rewards_)
                        : nullptr;
  _impl_.period_ = from._impl_.period_;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorHistoricalRewardsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validator_address_(arena) {}

inline void ValidatorHistoricalRewardsRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rewards_),
           0,
           offsetof(Impl_, period_) -
               offsetof(Impl_, rewards_) +
               sizeof(Impl_::period_));
}
ValidatorHistoricalRewardsRecord::~ValidatorHistoricalRewardsRecord() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
  SharedDtor(*this);
}
inline void ValidatorHistoricalRewardsRecord::SharedDtor(MessageLite& self) {
  ValidatorHistoricalRewardsRecord& this_ = static_cast<ValidatorHistoricalRewardsRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validator_address_.Destroy();
  delete this_._impl_.rewards_;
  this_._impl_.~Impl_();
}

inline void* ValidatorHistoricalRewardsRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorHistoricalRewardsRecord(arena);
}
constexpr auto ValidatorHistoricalRewardsRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorHistoricalRewardsRecord),
                                            alignof(ValidatorHistoricalRewardsRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorHistoricalRewardsRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorHistoricalRewardsRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorHistoricalRewardsRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorHistoricalRewardsRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorHistoricalRewardsRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorHistoricalRewardsRecord>(), &ValidatorHistoricalRewardsRecord::ByteSizeLong,
            &ValidatorHistoricalRewardsRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_._cached_size_),
        false,
    },
    &ValidatorHistoricalRewardsRecord::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorHistoricalRewardsRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 86, 2> ValidatorHistoricalRewardsRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.validator_address_)}},
    // uint64 period = 2 [json_name = "period"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorHistoricalRewardsRecord, _impl_.period_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.period_)}},
    // .cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.rewards_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.validator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 period = 2 [json_name = "period"];
    {PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.period_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.rewards_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards>()},
  }}, {{
    "\74\21\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void ValidatorHistoricalRewardsRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rewards_ != nullptr);
    _impl_.rewards_->Clear();
  }
  _impl_.period_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorHistoricalRewardsRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorHistoricalRewardsRecord& this_ = static_cast<const ValidatorHistoricalRewardsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorHistoricalRewardsRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorHistoricalRewardsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.validator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 period = 2 [json_name = "period"];
          if (this_._internal_period() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_period(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.rewards_, this_._impl_.rewards_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorHistoricalRewardsRecord::ByteSizeLong(const MessageLite& base) {
          const ValidatorHistoricalRewardsRecord& this_ = static_cast<const ValidatorHistoricalRewardsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorHistoricalRewardsRecord::ByteSizeLong() const {
          const ValidatorHistoricalRewardsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
           {
            // .cosmos.distribution.v1beta1.ValidatorHistoricalRewards rewards = 3 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rewards_);
            }
          }
           {
            // uint64 period = 2 [json_name = "period"];
            if (this_._internal_period() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_period());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorHistoricalRewardsRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorHistoricalRewardsRecord*>(&to_msg);
  auto& from = static_cast<const ValidatorHistoricalRewardsRecord&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rewards_ != nullptr);
    if (_this->_impl_.rewards_ == nullptr) {
      _this->_impl_.rewards_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards>(arena, *from._impl_.rewards_);
    } else {
      _this->_impl_.rewards_->MergeFrom(*from._impl_.rewards_);
    }
  }
  if (from._internal_period() != 0) {
    _this->_impl_.period_ = from._impl_.period_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorHistoricalRewardsRecord::CopyFrom(const ValidatorHistoricalRewardsRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorHistoricalRewardsRecord::InternalSwap(ValidatorHistoricalRewardsRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.period_)
      + sizeof(ValidatorHistoricalRewardsRecord::_impl_.period_)
      - PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewardsRecord, _impl_.rewards_)>(
          reinterpret_cast<char*>(&_impl_.rewards_),
          reinterpret_cast<char*>(&other->_impl_.rewards_));
}

::google::protobuf::Metadata ValidatorHistoricalRewardsRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorCurrentRewardsRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ValidatorCurrentRewardsRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_._has_bits_);
};

void ValidatorCurrentRewardsRecord::clear_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rewards_ != nullptr) _impl_.rewards_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ValidatorCurrentRewardsRecord::ValidatorCurrentRewardsRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorCurrentRewardsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validator_address_(arena, from.validator_address_) {}

ValidatorCurrentRewardsRecord::ValidatorCurrentRewardsRecord(
    ::google::protobuf::Arena* arena,
    const ValidatorCurrentRewardsRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorCurrentRewardsRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rewards_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorCurrentRewards>(
                              arena, *from._impl_.rewards_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorCurrentRewardsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validator_address_(arena) {}

inline void ValidatorCurrentRewardsRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rewards_ = {};
}
ValidatorCurrentRewardsRecord::~ValidatorCurrentRewardsRecord() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
  SharedDtor(*this);
}
inline void ValidatorCurrentRewardsRecord::SharedDtor(MessageLite& self) {
  ValidatorCurrentRewardsRecord& this_ = static_cast<ValidatorCurrentRewardsRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validator_address_.Destroy();
  delete this_._impl_.rewards_;
  this_._impl_.~Impl_();
}

inline void* ValidatorCurrentRewardsRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorCurrentRewardsRecord(arena);
}
constexpr auto ValidatorCurrentRewardsRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorCurrentRewardsRecord),
                                            alignof(ValidatorCurrentRewardsRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorCurrentRewardsRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorCurrentRewardsRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorCurrentRewardsRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorCurrentRewardsRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorCurrentRewardsRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorCurrentRewardsRecord>(), &ValidatorCurrentRewardsRecord::ByteSizeLong,
            &ValidatorCurrentRewardsRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_._cached_size_),
        false,
    },
    &ValidatorCurrentRewardsRecord::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorCurrentRewardsRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 83, 2> ValidatorCurrentRewardsRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_.rewards_)}},
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_.validator_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_.validator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewardsRecord, _impl_.rewards_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorCurrentRewards>()},
  }}, {{
    "\71\21\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void ValidatorCurrentRewardsRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rewards_ != nullptr);
    _impl_.rewards_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorCurrentRewardsRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorCurrentRewardsRecord& this_ = static_cast<const ValidatorCurrentRewardsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorCurrentRewardsRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorCurrentRewardsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord.validator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.rewards_, this_._impl_.rewards_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorCurrentRewardsRecord::ByteSizeLong(const MessageLite& base) {
          const ValidatorCurrentRewardsRecord& this_ = static_cast<const ValidatorCurrentRewardsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorCurrentRewardsRecord::ByteSizeLong() const {
          const ValidatorCurrentRewardsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
           {
            // .cosmos.distribution.v1beta1.ValidatorCurrentRewards rewards = 2 [json_name = "rewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rewards_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorCurrentRewardsRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorCurrentRewardsRecord*>(&to_msg);
  auto& from = static_cast<const ValidatorCurrentRewardsRecord&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.rewards_ != nullptr);
    if (_this->_impl_.rewards_ == nullptr) {
      _this->_impl_.rewards_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorCurrentRewards>(arena, *from._impl_.rewards_);
    } else {
      _this->_impl_.rewards_->MergeFrom(*from._impl_.rewards_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorCurrentRewardsRecord::CopyFrom(const ValidatorCurrentRewardsRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorCurrentRewardsRecord::InternalSwap(ValidatorCurrentRewardsRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  swap(_impl_.rewards_, other->_impl_.rewards_);
}

::google::protobuf::Metadata ValidatorCurrentRewardsRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DelegatorStartingInfoRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DelegatorStartingInfoRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_._has_bits_);
};

void DelegatorStartingInfoRecord::clear_starting_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.starting_info_ != nullptr) _impl_.starting_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DelegatorStartingInfoRecord::DelegatorStartingInfoRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
}
inline PROTOBUF_NDEBUG_INLINE DelegatorStartingInfoRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        delegator_address_(arena, from.delegator_address_),
        validator_address_(arena, from.validator_address_) {}

DelegatorStartingInfoRecord::DelegatorStartingInfoRecord(
    ::google::protobuf::Arena* arena,
    const DelegatorStartingInfoRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DelegatorStartingInfoRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.starting_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::DelegatorStartingInfo>(
                              arena, *from._impl_.starting_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
}
inline PROTOBUF_NDEBUG_INLINE DelegatorStartingInfoRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        delegator_address_(arena),
        validator_address_(arena) {}

inline void DelegatorStartingInfoRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.starting_info_ = {};
}
DelegatorStartingInfoRecord::~DelegatorStartingInfoRecord() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
  SharedDtor(*this);
}
inline void DelegatorStartingInfoRecord::SharedDtor(MessageLite& self) {
  DelegatorStartingInfoRecord& this_ = static_cast<DelegatorStartingInfoRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.validator_address_.Destroy();
  delete this_._impl_.starting_info_;
  this_._impl_.~Impl_();
}

inline void* DelegatorStartingInfoRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DelegatorStartingInfoRecord(arena);
}
constexpr auto DelegatorStartingInfoRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DelegatorStartingInfoRecord),
                                            alignof(DelegatorStartingInfoRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DelegatorStartingInfoRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DelegatorStartingInfoRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DelegatorStartingInfoRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DelegatorStartingInfoRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DelegatorStartingInfoRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DelegatorStartingInfoRecord>(), &DelegatorStartingInfoRecord::ByteSizeLong,
            &DelegatorStartingInfoRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_._cached_size_),
        false,
    },
    &DelegatorStartingInfoRecord::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DelegatorStartingInfoRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 98, 2> DelegatorStartingInfoRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_.delegator_address_)}},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_.validator_address_)}},
    // .cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3 [json_name = "startingInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_.starting_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_.delegator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_.validator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3 [json_name = "startingInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DelegatorStartingInfoRecord, _impl_.starting_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegatorStartingInfo>()},
  }}, {{
    "\67\21\21\0\0\0\0\0"
    "cosmos.distribution.v1beta1.DelegatorStartingInfoRecord"
    "delegator_address"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void DelegatorStartingInfoRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.starting_info_ != nullptr);
    _impl_.starting_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DelegatorStartingInfoRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DelegatorStartingInfoRecord& this_ = static_cast<const DelegatorStartingInfoRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DelegatorStartingInfoRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DelegatorStartingInfoRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.validator_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3 [json_name = "startingInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.starting_info_, this_._impl_.starting_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DelegatorStartingInfoRecord::ByteSizeLong(const MessageLite& base) {
          const DelegatorStartingInfoRecord& this_ = static_cast<const DelegatorStartingInfoRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DelegatorStartingInfoRecord::ByteSizeLong() const {
          const DelegatorStartingInfoRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
           {
            // .cosmos.distribution.v1beta1.DelegatorStartingInfo starting_info = 3 [json_name = "startingInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.starting_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DelegatorStartingInfoRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DelegatorStartingInfoRecord*>(&to_msg);
  auto& from = static_cast<const DelegatorStartingInfoRecord&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.starting_info_ != nullptr);
    if (_this->_impl_.starting_info_ == nullptr) {
      _this->_impl_.starting_info_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::DelegatorStartingInfo>(arena, *from._impl_.starting_info_);
    } else {
      _this->_impl_.starting_info_->MergeFrom(*from._impl_.starting_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DelegatorStartingInfoRecord::CopyFrom(const DelegatorStartingInfoRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.DelegatorStartingInfoRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DelegatorStartingInfoRecord::InternalSwap(DelegatorStartingInfoRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  swap(_impl_.starting_info_, other->_impl_.starting_info_);
}

::google::protobuf::Metadata DelegatorStartingInfoRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorSlashEventRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ValidatorSlashEventRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_._has_bits_);
};

void ValidatorSlashEventRecord::clear_validator_slash_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_slash_event_ != nullptr) _impl_.validator_slash_event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ValidatorSlashEventRecord::ValidatorSlashEventRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSlashEventRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorSlashEventRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validator_address_(arena, from.validator_address_) {}

ValidatorSlashEventRecord::ValidatorSlashEventRecord(
    ::google::protobuf::Arena* arena,
    const ValidatorSlashEventRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorSlashEventRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validator_slash_event_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorSlashEvent>(
                              arena, *from._impl_.validator_slash_event_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, period_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::period_));

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSlashEventRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validator_address_(arena) {}

inline void ValidatorSlashEventRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validator_slash_event_),
           0,
           offsetof(Impl_, period_) -
               offsetof(Impl_, validator_slash_event_) +
               sizeof(Impl_::period_));
}
ValidatorSlashEventRecord::~ValidatorSlashEventRecord() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
  SharedDtor(*this);
}
inline void ValidatorSlashEventRecord::SharedDtor(MessageLite& self) {
  ValidatorSlashEventRecord& this_ = static_cast<ValidatorSlashEventRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validator_address_.Destroy();
  delete this_._impl_.validator_slash_event_;
  this_._impl_.~Impl_();
}

inline void* ValidatorSlashEventRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorSlashEventRecord(arena);
}
constexpr auto ValidatorSlashEventRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorSlashEventRecord),
                                            alignof(ValidatorSlashEventRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorSlashEventRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorSlashEventRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorSlashEventRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorSlashEventRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorSlashEventRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorSlashEventRecord>(), &ValidatorSlashEventRecord::ByteSizeLong,
            &ValidatorSlashEventRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_._cached_size_),
        false,
    },
    &ValidatorSlashEventRecord::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorSlashEventRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 79, 2> ValidatorSlashEventRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4 [json_name = "validatorSlashEvent", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.validator_slash_event_)}},
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.validator_address_)}},
    // uint64 height = 2 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorSlashEventRecord, _impl_.height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.height_)}},
    // uint64 period = 3 [json_name = "period"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorSlashEventRecord, _impl_.period_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.validator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 height = 2 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 period = 3 [json_name = "period"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.period_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4 [json_name = "validatorSlashEvent", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.validator_slash_event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorSlashEvent>()},
  }}, {{
    "\65\21\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.ValidatorSlashEventRecord"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void ValidatorSlashEventRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.validator_slash_event_ != nullptr);
    _impl_.validator_slash_event_->Clear();
  }
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.period_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.period_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorSlashEventRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorSlashEventRecord& this_ = static_cast<const ValidatorSlashEventRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorSlashEventRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorSlashEventRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.ValidatorSlashEventRecord.validator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 height = 2 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_height(), target);
          }

          // uint64 period = 3 [json_name = "period"];
          if (this_._internal_period() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_period(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4 [json_name = "validatorSlashEvent", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.validator_slash_event_, this_._impl_.validator_slash_event_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorSlashEventRecord::ByteSizeLong(const MessageLite& base) {
          const ValidatorSlashEventRecord& this_ = static_cast<const ValidatorSlashEventRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorSlashEventRecord::ByteSizeLong() const {
          const ValidatorSlashEventRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
           {
            // .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_event = 4 [json_name = "validatorSlashEvent", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validator_slash_event_);
            }
          }
           {
            // uint64 height = 2 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
            // uint64 period = 3 [json_name = "period"];
            if (this_._internal_period() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_period());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorSlashEventRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorSlashEventRecord*>(&to_msg);
  auto& from = static_cast<const ValidatorSlashEventRecord&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.validator_slash_event_ != nullptr);
    if (_this->_impl_.validator_slash_event_ == nullptr) {
      _this->_impl_.validator_slash_event_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::ValidatorSlashEvent>(arena, *from._impl_.validator_slash_event_);
    } else {
      _this->_impl_.validator_slash_event_->MergeFrom(*from._impl_.validator_slash_event_);
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_period() != 0) {
    _this->_impl_.period_ = from._impl_.period_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorSlashEventRecord::CopyFrom(const ValidatorSlashEventRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorSlashEventRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorSlashEventRecord::InternalSwap(ValidatorSlashEventRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.period_)
      + sizeof(ValidatorSlashEventRecord::_impl_.period_)
      - PROTOBUF_FIELD_OFFSET(ValidatorSlashEventRecord, _impl_.validator_slash_event_)>(
          reinterpret_cast<char*>(&_impl_.validator_slash_event_),
          reinterpret_cast<char*>(&other->_impl_.validator_slash_event_));
}

::google::protobuf::Metadata ValidatorSlashEventRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
};

void GenesisState::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenesisState::clear_fee_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fee_pool_ != nullptr) _impl_.fee_pool_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::GenesisState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        delegator_withdraw_infos_{visibility, arena, from.delegator_withdraw_infos_},
        outstanding_rewards_{visibility, arena, from.outstanding_rewards_},
        validator_accumulated_commissions_{visibility, arena, from.validator_accumulated_commissions_},
        validator_historical_rewards_{visibility, arena, from.validator_historical_rewards_},
        validator_current_rewards_{visibility, arena, from.validator_current_rewards_},
        delegator_starting_infos_{visibility, arena, from.delegator_starting_infos_},
        validator_slash_events_{visibility, arena, from.validator_slash_events_},
        previous_proposer_(arena, from.previous_proposer_) {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::Params>(
                              arena, *from._impl_.params_)
                        : nullptr;
  _impl_.fee_pool_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::FeePool>(
                              arena, *from._impl_.fee_pool_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        delegator_withdraw_infos_{visibility, arena},
        outstanding_rewards_{visibility, arena},
        validator_accumulated_commissions_{visibility, arena},
        validator_historical_rewards_{visibility, arena},
        validator_current_rewards_{visibility, arena},
        delegator_starting_infos_{visibility, arena},
        validator_slash_events_{visibility, arena},
        previous_proposer_(arena) {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, params_),
           0,
           offsetof(Impl_, fee_pool_) -
               offsetof(Impl_, params_) +
               sizeof(Impl_::fee_pool_));
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.previous_proposer_.Destroy();
  delete this_._impl_.params_;
  delete this_._impl_.fee_pool_;
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.delegator_withdraw_infos_) +
          decltype(GenesisState::_impl_.delegator_withdraw_infos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.outstanding_rewards_) +
          decltype(GenesisState::_impl_.outstanding_rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_accumulated_commissions_) +
          decltype(GenesisState::_impl_.validator_accumulated_commissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_historical_rewards_) +
          decltype(GenesisState::_impl_.validator_historical_rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_current_rewards_) +
          decltype(GenesisState::_impl_.validator_current_rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.delegator_starting_infos_) +
          decltype(GenesisState::_impl_.delegator_starting_infos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_slash_events_) +
          decltype(GenesisState::_impl_.validator_slash_events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 9, 74, 2> GenesisState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_)}},
    // .cosmos.distribution.v1beta1.FeePool fee_pool = 2 [json_name = "feePool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.fee_pool_)}},
    // repeated .cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3 [json_name = "delegatorWithdrawInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.delegator_withdraw_infos_)}},
    // string previous_proposer = 4 [json_name = "previousProposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.previous_proposer_)}},
    // repeated .cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.outstanding_rewards_)}},
    // repeated .cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6 [json_name = "validatorAccumulatedCommissions", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_accumulated_commissions_)}},
    // repeated .cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7 [json_name = "validatorHistoricalRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 5, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_historical_rewards_)}},
    // repeated .cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8 [json_name = "validatorCurrentRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 6, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_current_rewards_)}},
    // repeated .cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9 [json_name = "delegatorStartingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 7, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.delegator_starting_infos_)}},
    // repeated .cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 8, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_slash_events_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.distribution.v1beta1.FeePool fee_pool = 2 [json_name = "feePool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.fee_pool_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3 [json_name = "delegatorWithdrawInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.delegator_withdraw_infos_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string previous_proposer = 4 [json_name = "previousProposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.previous_proposer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.outstanding_rewards_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6 [json_name = "validatorAccumulatedCommissions", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_accumulated_commissions_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7 [json_name = "validatorHistoricalRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_historical_rewards_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8 [json_name = "validatorCurrentRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_current_rewards_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9 [json_name = "delegatorStartingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.delegator_starting_infos_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.validator_slash_events_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::Params>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::FeePool>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegatorWithdrawInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorOutstandingRewardsRecord>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommissionRecord>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorHistoricalRewardsRecord>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorCurrentRewardsRecord>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegatorStartingInfoRecord>()},
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorSlashEventRecord>()},
  }}, {{
    "\50\0\0\0\21\0\0\0\0\0\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.GenesisState"
    "previous_proposer"
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_withdraw_infos_.Clear();
  _impl_.outstanding_rewards_.Clear();
  _impl_.validator_accumulated_commissions_.Clear();
  _impl_.validator_historical_rewards_.Clear();
  _impl_.validator_current_rewards_.Clear();
  _impl_.delegator_starting_infos_.Clear();
  _impl_.validator_slash_events_.Clear();
  _impl_.previous_proposer_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.params_ != nullptr);
      _impl_.params_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.fee_pool_ != nullptr);
      _impl_.fee_pool_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.params_, this_._impl_.params_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.distribution.v1beta1.FeePool fee_pool = 2 [json_name = "feePool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.fee_pool_, this_._impl_.fee_pool_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3 [json_name = "delegatorWithdrawInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_delegator_withdraw_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_delegator_withdraw_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string previous_proposer = 4 [json_name = "previousProposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_previous_proposer().empty()) {
            const std::string& _s = this_._internal_previous_proposer();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.GenesisState.previous_proposer");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated .cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outstanding_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outstanding_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6 [json_name = "validatorAccumulatedCommissions", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validator_accumulated_commissions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validator_accumulated_commissions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7 [json_name = "validatorHistoricalRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validator_historical_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validator_historical_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8 [json_name = "validatorCurrentRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validator_current_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validator_current_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9 [json_name = "delegatorStartingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_delegator_starting_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_delegator_starting_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validator_slash_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validator_slash_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.distribution.v1beta1.DelegatorWithdrawInfo delegator_withdraw_infos = 3 [json_name = "delegatorWithdrawInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_delegator_withdraw_infos_size();
              for (const auto& msg : this_._internal_delegator_withdraw_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.distribution.v1beta1.ValidatorOutstandingRewardsRecord outstanding_rewards = 5 [json_name = "outstandingRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_outstanding_rewards_size();
              for (const auto& msg : this_._internal_outstanding_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.distribution.v1beta1.ValidatorAccumulatedCommissionRecord validator_accumulated_commissions = 6 [json_name = "validatorAccumulatedCommissions", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_validator_accumulated_commissions_size();
              for (const auto& msg : this_._internal_validator_accumulated_commissions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord validator_historical_rewards = 7 [json_name = "validatorHistoricalRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_validator_historical_rewards_size();
              for (const auto& msg : this_._internal_validator_historical_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.distribution.v1beta1.ValidatorCurrentRewardsRecord validator_current_rewards = 8 [json_name = "validatorCurrentRewards", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_validator_current_rewards_size();
              for (const auto& msg : this_._internal_validator_current_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.distribution.v1beta1.DelegatorStartingInfoRecord delegator_starting_infos = 9 [json_name = "delegatorStartingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_delegator_starting_infos_size();
              for (const auto& msg : this_._internal_delegator_starting_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.distribution.v1beta1.ValidatorSlashEventRecord validator_slash_events = 10 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_validator_slash_events_size();
              for (const auto& msg : this_._internal_validator_slash_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string previous_proposer = 4 [json_name = "previousProposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_previous_proposer().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_previous_proposer());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .cosmos.distribution.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.params_);
            }
            // .cosmos.distribution.v1beta1.FeePool fee_pool = 2 [json_name = "feePool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.fee_pool_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_delegator_withdraw_infos()->MergeFrom(
      from._internal_delegator_withdraw_infos());
  _this->_internal_mutable_outstanding_rewards()->MergeFrom(
      from._internal_outstanding_rewards());
  _this->_internal_mutable_validator_accumulated_commissions()->MergeFrom(
      from._internal_validator_accumulated_commissions());
  _this->_internal_mutable_validator_historical_rewards()->MergeFrom(
      from._internal_validator_historical_rewards());
  _this->_internal_mutable_validator_current_rewards()->MergeFrom(
      from._internal_validator_current_rewards());
  _this->_internal_mutable_delegator_starting_infos()->MergeFrom(
      from._internal_delegator_starting_infos());
  _this->_internal_mutable_validator_slash_events()->MergeFrom(
      from._internal_validator_slash_events());
  if (!from._internal_previous_proposer().empty()) {
    _this->_internal_set_previous_proposer(from._internal_previous_proposer());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.params_ != nullptr);
      if (_this->_impl_.params_ == nullptr) {
        _this->_impl_.params_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::Params>(arena, *from._impl_.params_);
      } else {
        _this->_impl_.params_->MergeFrom(*from._impl_.params_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.fee_pool_ != nullptr);
      if (_this->_impl_.fee_pool_ == nullptr) {
        _this->_impl_.fee_pool_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::distribution::v1beta1::FeePool>(arena, *from._impl_.fee_pool_);
      } else {
        _this->_impl_.fee_pool_->MergeFrom(*from._impl_.fee_pool_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.delegator_withdraw_infos_.InternalSwap(&other->_impl_.delegator_withdraw_infos_);
  _impl_.outstanding_rewards_.InternalSwap(&other->_impl_.outstanding_rewards_);
  _impl_.validator_accumulated_commissions_.InternalSwap(&other->_impl_.validator_accumulated_commissions_);
  _impl_.validator_historical_rewards_.InternalSwap(&other->_impl_.validator_historical_rewards_);
  _impl_.validator_current_rewards_.InternalSwap(&other->_impl_.validator_current_rewards_);
  _impl_.delegator_starting_infos_.InternalSwap(&other->_impl_.delegator_starting_infos_);
  _impl_.validator_slash_events_.InternalSwap(&other->_impl_.validator_slash_events_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.previous_proposer_, &other->_impl_.previous_proposer_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.fee_pool_)
      + sizeof(GenesisState::_impl_.fee_pool_)
      - PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_)>(
          reinterpret_cast<char*>(&_impl_.params_),
          reinterpret_cast<char*>(&other->_impl_.params_));
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fdistribution_2fv1beta1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
