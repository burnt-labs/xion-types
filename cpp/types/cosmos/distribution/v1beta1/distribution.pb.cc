// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/distribution/v1beta1/distribution.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/distribution/v1beta1/distribution.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace distribution {
namespace v1beta1 {

inline constexpr ValidatorSlashEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fraction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_period_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorSlashEvent::ValidatorSlashEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorSlashEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorSlashEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorSlashEventDefaultTypeInternal() {}
  union {
    ValidatorSlashEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorSlashEventDefaultTypeInternal _ValidatorSlashEvent_default_instance_;

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : community_tax_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_proposer_reward_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bonus_proposer_reward_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        withdraw_addr_enabled_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;

inline constexpr DelegatorStartingInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : stake_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        previous_period_{::uint64_t{0u}},
        height_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DelegatorStartingInfo::DelegatorStartingInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DelegatorStartingInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelegatorStartingInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelegatorStartingInfoDefaultTypeInternal() {}
  union {
    DelegatorStartingInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelegatorStartingInfoDefaultTypeInternal _DelegatorStartingInfo_default_instance_;

inline constexpr CommunityPoolSpendProposalWithDeposit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deposit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommunityPoolSpendProposalWithDeposit::CommunityPoolSpendProposalWithDeposit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommunityPoolSpendProposalWithDepositDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunityPoolSpendProposalWithDepositDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunityPoolSpendProposalWithDepositDefaultTypeInternal() {}
  union {
    CommunityPoolSpendProposalWithDeposit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunityPoolSpendProposalWithDepositDefaultTypeInternal _CommunityPoolSpendProposalWithDeposit_default_instance_;

inline constexpr ValidatorSlashEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : validator_slash_events_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorSlashEvents::ValidatorSlashEvents(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorSlashEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorSlashEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorSlashEventsDefaultTypeInternal() {}
  union {
    ValidatorSlashEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorSlashEventsDefaultTypeInternal _ValidatorSlashEvents_default_instance_;

inline constexpr ValidatorOutstandingRewards::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rewards_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorOutstandingRewards::ValidatorOutstandingRewards(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorOutstandingRewardsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorOutstandingRewardsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorOutstandingRewardsDefaultTypeInternal() {}
  union {
    ValidatorOutstandingRewards _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorOutstandingRewardsDefaultTypeInternal _ValidatorOutstandingRewards_default_instance_;

inline constexpr ValidatorHistoricalRewards::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cumulative_reward_ratio_{},
        reference_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorHistoricalRewards::ValidatorHistoricalRewards(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorHistoricalRewardsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorHistoricalRewardsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorHistoricalRewardsDefaultTypeInternal() {}
  union {
    ValidatorHistoricalRewards _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorHistoricalRewardsDefaultTypeInternal _ValidatorHistoricalRewards_default_instance_;

inline constexpr ValidatorCurrentRewards::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rewards_{},
        period_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorCurrentRewards::ValidatorCurrentRewards(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorCurrentRewardsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorCurrentRewardsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorCurrentRewardsDefaultTypeInternal() {}
  union {
    ValidatorCurrentRewards _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorCurrentRewardsDefaultTypeInternal _ValidatorCurrentRewards_default_instance_;

inline constexpr ValidatorAccumulatedCommission::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : commission_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorAccumulatedCommission::ValidatorAccumulatedCommission(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorAccumulatedCommissionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorAccumulatedCommissionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorAccumulatedCommissionDefaultTypeInternal() {}
  union {
    ValidatorAccumulatedCommission _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorAccumulatedCommissionDefaultTypeInternal _ValidatorAccumulatedCommission_default_instance_;

inline constexpr FeePool::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : community_pool_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FeePool::FeePool(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FeePoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeePoolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeePoolDefaultTypeInternal() {}
  union {
    FeePool _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeePoolDefaultTypeInternal _FeePool_default_instance_;

inline constexpr DelegationDelegatorReward::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reward_{},
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DelegationDelegatorReward::DelegationDelegatorReward(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DelegationDelegatorRewardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelegationDelegatorRewardDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelegationDelegatorRewardDefaultTypeInternal() {}
  union {
    DelegationDelegatorReward _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelegationDelegatorRewardDefaultTypeInternal _DelegationDelegatorReward_default_instance_;

inline constexpr CommunityPoolSpendProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : amount_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommunityPoolSpendProposal::CommunityPoolSpendProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommunityPoolSpendProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommunityPoolSpendProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommunityPoolSpendProposalDefaultTypeInternal() {}
  union {
    CommunityPoolSpendProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommunityPoolSpendProposalDefaultTypeInternal _CommunityPoolSpendProposal_default_instance_;
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::Params, _impl_.community_tax_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::Params, _impl_.base_proposer_reward_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::Params, _impl_.bonus_proposer_reward_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::Params, _impl_.withdraw_addr_enabled_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards, _impl_.cumulative_reward_ratio_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards, _impl_.reference_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewards, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewards, _impl_.rewards_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorCurrentRewards, _impl_.period_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission, _impl_.commission_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorOutstandingRewards, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorOutstandingRewards, _impl_.rewards_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEvent, _impl_.validator_period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEvent, _impl_.fraction_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::ValidatorSlashEvents, _impl_.validator_slash_events_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::FeePool, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::FeePool, _impl_.community_pool_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposal, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposal, _impl_.amount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfo, _impl_.previous_period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfo, _impl_.stake_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegatorStartingInfo, _impl_.height_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegationDelegatorReward, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegationDelegatorReward, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::DelegationDelegatorReward, _impl_.reward_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit, _impl_.deposit_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::distribution::v1beta1::Params)},
        {12, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorHistoricalRewards)},
        {22, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorCurrentRewards)},
        {32, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission)},
        {41, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorOutstandingRewards)},
        {50, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorSlashEvent)},
        {60, -1, -1, sizeof(::cosmos::distribution::v1beta1::ValidatorSlashEvents)},
        {69, -1, -1, sizeof(::cosmos::distribution::v1beta1::FeePool)},
        {78, -1, -1, sizeof(::cosmos::distribution::v1beta1::CommunityPoolSpendProposal)},
        {90, -1, -1, sizeof(::cosmos::distribution::v1beta1::DelegatorStartingInfo)},
        {101, -1, -1, sizeof(::cosmos::distribution::v1beta1::DelegationDelegatorReward)},
        {111, -1, -1, sizeof(::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::distribution::v1beta1::_Params_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorHistoricalRewards_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorCurrentRewards_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorAccumulatedCommission_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorOutstandingRewards_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorSlashEvent_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_ValidatorSlashEvents_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_FeePool_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_CommunityPoolSpendProposal_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_DelegatorStartingInfo_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_DelegationDelegatorReward_default_instance_._instance,
    &::cosmos::distribution::v1beta1::_CommunityPoolSpendProposalWithDeposit_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.cosmos/distribution/v1beta1/distributi"
    "on.proto\022\033cosmos.distribution.v1beta1\032\024g"
    "ogoproto/gogo.proto\032\036cosmos/base/v1beta1"
    "/coin.proto\032\031cosmos_proto/cosmos.proto\032\021"
    "amino/amino.proto\"\232\003\n\006Params\022[\n\rcommunit"
    "y_tax\030\001 \001(\tB6\310\336\037\000\332\336\037\033cosmossdk.io/math.L"
    "egacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\014communityTa"
    "x\022j\n\024base_proposer_reward\030\002 \001(\tB8\030\001\310\336\037\000\332"
    "\336\037\033cosmossdk.io/math.LegacyDec\322\264-\ncosmos"
    ".Dec\250\347\260*\001R\022baseProposerReward\022l\n\025bonus_p"
    "roposer_reward\030\003 \001(\tB8\030\001\310\336\037\000\332\336\037\033cosmossd"
    "k.io/math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\023"
    "bonusProposerReward\0222\n\025withdraw_addr_ena"
    "bled\030\004 \001(\010R\023withdrawAddrEnabled:%\212\347\260* co"
    "smos-sdk/x/distribution/Params\"\326\001\n\032Valid"
    "atorHistoricalRewards\022\216\001\n\027cumulative_rew"
    "ard_ratio\030\001 \003(\0132\034.cosmos.base.v1beta1.De"
    "cCoinB8\310\336\037\000\252\337\037+github.com/cosmos/cosmos-"
    "sdk/types.DecCoins\250\347\260*\001R\025cumulativeRewar"
    "dRatio\022\'\n\017reference_count\030\002 \001(\rR\016referen"
    "ceCount\"\243\001\n\027ValidatorCurrentRewards\022p\n\007r"
    "ewards\030\001 \003(\0132\034.cosmos.base.v1beta1.DecCo"
    "inB8\310\336\037\000\252\337\037+github.com/cosmos/cosmos-sdk"
    "/types.DecCoins\250\347\260*\001R\007rewards\022\026\n\006period\030"
    "\002 \001(\004R\006period\"\230\001\n\036ValidatorAccumulatedCo"
    "mmission\022v\n\ncommission\030\001 \003(\0132\034.cosmos.ba"
    "se.v1beta1.DecCoinB8\310\336\037\000\252\337\037+github.com/c"
    "osmos/cosmos-sdk/types.DecCoins\250\347\260*\001R\nco"
    "mmission\"\217\001\n\033ValidatorOutstandingRewards"
    "\022p\n\007rewards\030\001 \003(\0132\034.cosmos.base.v1beta1."
    "DecCoinB8\310\336\037\000\252\337\037+github.com/cosmos/cosmo"
    "s-sdk/types.DecCoins\250\347\260*\001R\007rewards\"\217\001\n\023V"
    "alidatorSlashEvent\022)\n\020validator_period\030\001"
    " \001(\004R\017validatorPeriod\022M\n\010fraction\030\002 \001(\tB"
    "1\310\336\037\000\332\336\037\033cosmossdk.io/math.LegacyDec\322\264-\n"
    "cosmos.DecR\010fraction\"\211\001\n\024ValidatorSlashE"
    "vents\022q\n\026validator_slash_events\030\001 \003(\01320."
    "cosmos.distribution.v1beta1.ValidatorSla"
    "shEventB\t\310\336\037\000\250\347\260*\001R\024validatorSlashEvents"
    "\"\210\001\n\007FeePool\022}\n\016community_pool\030\001 \003(\0132\034.c"
    "osmos.base.v1beta1.DecCoinB8\310\336\037\000\252\337\037+gith"
    "ub.com/cosmos/cosmos-sdk/types.DecCoins\250"
    "\347\260*\001R\rcommunityPool\"\227\002\n\032CommunityPoolSpe"
    "ndProposal\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013desc"
    "ription\030\002 \001(\tR\013description\022\034\n\trecipient\030"
    "\003 \001(\tR\trecipient\022y\n\006amount\030\004 \003(\0132\031.cosmo"
    "s.base.v1beta1.CoinBF\310\336\037\000\252\337\037(github.com/"
    "cosmos/cosmos-sdk/types.Coins\232\347\260*\014legacy"
    "_coins\250\347\260*\001R\006amount:(\030\001\210\240\037\000\350\240\037\000\312\264-\032cosmo"
    "s.gov.v1beta1.Content\"\324\001\n\025DelegatorStart"
    "ingInfo\022\'\n\017previous_period\030\001 \001(\004R\016previo"
    "usPeriod\022L\n\005stake\030\002 \001(\tB6\310\336\037\000\332\336\037\033cosmoss"
    "dk.io/math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R"
    "\005stake\022D\n\006height\030\003 \001(\004B,\352\336\037\017creation_hei"
    "ght\242\347\260*\017creation_height\250\347\260*\001R\006height\"\341\001\n"
    "\031DelegationDelegatorReward\022N\n\021validator_"
    "address\030\001 \001(\tB!\322\264-\035cosmos.ValidatorAddre"
    "ssStringR\020validatorAddress\022n\n\006reward\030\002 \003"
    "(\0132\034.cosmos.base.v1beta1.DecCoinB8\310\336\037\000\252\337"
    "\037+github.com/cosmos/cosmos-sdk/types.Dec"
    "Coins\250\347\260*\001R\006reward:\004\210\240\037\000\"\323\001\n%CommunityPo"
    "olSpendProposalWithDeposit\022\024\n\005title\030\001 \001("
    "\tR\005title\022 \n\013description\030\002 \001(\tR\013descripti"
    "on\022\034\n\trecipient\030\003 \001(\tR\trecipient\022\026\n\006amou"
    "nt\030\004 \001(\tR\006amount\022\030\n\007deposit\030\005 \001(\tR\007depos"
    "it:\"\210\240\037\000\312\264-\032cosmos.gov.v1beta1.ContentB7"
    "Z1github.com/cosmos/cosmos-sdk/x/distrib"
    "ution/types\250\342\036\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto_deps[4] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto = {
    false,
    false,
    2703,
    descriptor_table_protodef_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    "cosmos/distribution/v1beta1/distribution.proto",
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto_once,
    descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto_deps,
    4,
    12,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    file_level_service_descriptors_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
};
namespace cosmos {
namespace distribution {
namespace v1beta1 {
// ===================================================================

class Params::_Internal {
 public:
};

Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::Params& from_msg)
      : community_tax_(arena, from.community_tax_),
        base_proposer_reward_(arena, from.base_proposer_reward_),
        bonus_proposer_reward_(arena, from.bonus_proposer_reward_),
        _cached_size_{0} {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.withdraw_addr_enabled_ = from._impl_.withdraw_addr_enabled_;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : community_tax_(arena),
        base_proposer_reward_(arena),
        bonus_proposer_reward_(arena),
        _cached_size_{0} {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.withdraw_addr_enabled_ = {};
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.community_tax_.Destroy();
  this_._impl_.base_proposer_reward_.Destroy();
  this_._impl_.bonus_proposer_reward_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Params),
                                            alignof(Params));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 97, 2> Params::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool withdraw_addr_enabled = 4 [json_name = "withdrawAddrEnabled"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Params, _impl_.withdraw_addr_enabled_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.withdraw_addr_enabled_)}},
    // string community_tax = 1 [json_name = "communityTax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.community_tax_)}},
    // string base_proposer_reward = 2 [json_name = "baseProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.base_proposer_reward_)}},
    // string bonus_proposer_reward = 3 [json_name = "bonusProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.bonus_proposer_reward_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string community_tax = 1 [json_name = "communityTax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.community_tax_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string base_proposer_reward = 2 [json_name = "baseProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.base_proposer_reward_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bonus_proposer_reward = 3 [json_name = "bonusProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.bonus_proposer_reward_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool withdraw_addr_enabled = 4 [json_name = "withdrawAddrEnabled"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.withdraw_addr_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\42\15\24\25\0\0\0\0"
    "cosmos.distribution.v1beta1.Params"
    "community_tax"
    "base_proposer_reward"
    "bonus_proposer_reward"
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.community_tax_.ClearToEmpty();
  _impl_.base_proposer_reward_.ClearToEmpty();
  _impl_.bonus_proposer_reward_.ClearToEmpty();
  _impl_.withdraw_addr_enabled_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string community_tax = 1 [json_name = "communityTax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_community_tax().empty()) {
            const std::string& _s = this_._internal_community_tax();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.Params.community_tax");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string base_proposer_reward = 2 [json_name = "baseProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_base_proposer_reward().empty()) {
            const std::string& _s = this_._internal_base_proposer_reward();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.Params.base_proposer_reward");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string bonus_proposer_reward = 3 [json_name = "bonusProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_bonus_proposer_reward().empty()) {
            const std::string& _s = this_._internal_bonus_proposer_reward();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.Params.bonus_proposer_reward");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool withdraw_addr_enabled = 4 [json_name = "withdrawAddrEnabled"];
          if (this_._internal_withdraw_addr_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_withdraw_addr_enabled(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string community_tax = 1 [json_name = "communityTax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_community_tax().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_community_tax());
            }
            // string base_proposer_reward = 2 [json_name = "baseProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_base_proposer_reward().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_base_proposer_reward());
            }
            // string bonus_proposer_reward = 3 [json_name = "bonusProposerReward", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_bonus_proposer_reward().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bonus_proposer_reward());
            }
            // bool withdraw_addr_enabled = 4 [json_name = "withdrawAddrEnabled"];
            if (this_._internal_withdraw_addr_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_community_tax().empty()) {
    _this->_internal_set_community_tax(from._internal_community_tax());
  }
  if (!from._internal_base_proposer_reward().empty()) {
    _this->_internal_set_base_proposer_reward(from._internal_base_proposer_reward());
  }
  if (!from._internal_bonus_proposer_reward().empty()) {
    _this->_internal_set_bonus_proposer_reward(from._internal_bonus_proposer_reward());
  }
  if (from._internal_withdraw_addr_enabled() != 0) {
    _this->_impl_.withdraw_addr_enabled_ = from._impl_.withdraw_addr_enabled_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.community_tax_, &other->_impl_.community_tax_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.base_proposer_reward_, &other->_impl_.base_proposer_reward_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bonus_proposer_reward_, &other->_impl_.bonus_proposer_reward_, arena);
        swap(_impl_.withdraw_addr_enabled_, other->_impl_.withdraw_addr_enabled_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorHistoricalRewards::_Internal {
 public:
};

void ValidatorHistoricalRewards::clear_cumulative_reward_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cumulative_reward_ratio_.Clear();
}
ValidatorHistoricalRewards::ValidatorHistoricalRewards(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorHistoricalRewards::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorHistoricalRewards& from_msg)
      : cumulative_reward_ratio_{visibility, arena, from.cumulative_reward_ratio_},
        _cached_size_{0} {}

ValidatorHistoricalRewards::ValidatorHistoricalRewards(
    ::google::protobuf::Arena* arena,
    const ValidatorHistoricalRewards& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorHistoricalRewards* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.reference_count_ = from._impl_.reference_count_;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorHistoricalRewards::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cumulative_reward_ratio_{visibility, arena},
        _cached_size_{0} {}

inline void ValidatorHistoricalRewards::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reference_count_ = {};
}
ValidatorHistoricalRewards::~ValidatorHistoricalRewards() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
  SharedDtor(*this);
}
inline void ValidatorHistoricalRewards::SharedDtor(MessageLite& self) {
  ValidatorHistoricalRewards& this_ = static_cast<ValidatorHistoricalRewards&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValidatorHistoricalRewards::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorHistoricalRewards(arena);
}
constexpr auto ValidatorHistoricalRewards::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewards, _impl_.cumulative_reward_ratio_) +
          decltype(ValidatorHistoricalRewards::_impl_.cumulative_reward_ratio_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidatorHistoricalRewards), alignof(ValidatorHistoricalRewards), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorHistoricalRewards::PlacementNew_,
                                 sizeof(ValidatorHistoricalRewards),
                                 alignof(ValidatorHistoricalRewards));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorHistoricalRewards::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorHistoricalRewards_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorHistoricalRewards::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorHistoricalRewards>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorHistoricalRewards::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorHistoricalRewards>(), &ValidatorHistoricalRewards::ByteSizeLong,
            &ValidatorHistoricalRewards::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewards, _impl_._cached_size_),
        false,
    },
    &ValidatorHistoricalRewards::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorHistoricalRewards::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ValidatorHistoricalRewards::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorHistoricalRewards>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 reference_count = 2 [json_name = "referenceCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ValidatorHistoricalRewards, _impl_.reference_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewards, _impl_.reference_count_)}},
    // repeated .cosmos.base.v1beta1.DecCoin cumulative_reward_ratio = 1 [json_name = "cumulativeRewardRatio", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewards, _impl_.cumulative_reward_ratio_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.DecCoin cumulative_reward_ratio = 1 [json_name = "cumulativeRewardRatio", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewards, _impl_.cumulative_reward_ratio_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 reference_count = 2 [json_name = "referenceCount"];
    {PROTOBUF_FIELD_OFFSET(ValidatorHistoricalRewards, _impl_.reference_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorHistoricalRewards::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cumulative_reward_ratio_.Clear();
  _impl_.reference_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorHistoricalRewards::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorHistoricalRewards& this_ = static_cast<const ValidatorHistoricalRewards&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorHistoricalRewards::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorHistoricalRewards& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.DecCoin cumulative_reward_ratio = 1 [json_name = "cumulativeRewardRatio", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_cumulative_reward_ratio_size());
               i < n; i++) {
            const auto& repfield = this_._internal_cumulative_reward_ratio().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 reference_count = 2 [json_name = "referenceCount"];
          if (this_._internal_reference_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_reference_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorHistoricalRewards::ByteSizeLong(const MessageLite& base) {
          const ValidatorHistoricalRewards& this_ = static_cast<const ValidatorHistoricalRewards&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorHistoricalRewards::ByteSizeLong() const {
          const ValidatorHistoricalRewards& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin cumulative_reward_ratio = 1 [json_name = "cumulativeRewardRatio", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_cumulative_reward_ratio_size();
              for (const auto& msg : this_._internal_cumulative_reward_ratio()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 reference_count = 2 [json_name = "referenceCount"];
            if (this_._internal_reference_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_reference_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorHistoricalRewards::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorHistoricalRewards*>(&to_msg);
  auto& from = static_cast<const ValidatorHistoricalRewards&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cumulative_reward_ratio()->MergeFrom(
      from._internal_cumulative_reward_ratio());
  if (from._internal_reference_count() != 0) {
    _this->_impl_.reference_count_ = from._impl_.reference_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorHistoricalRewards::CopyFrom(const ValidatorHistoricalRewards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorHistoricalRewards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorHistoricalRewards::InternalSwap(ValidatorHistoricalRewards* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cumulative_reward_ratio_.InternalSwap(&other->_impl_.cumulative_reward_ratio_);
        swap(_impl_.reference_count_, other->_impl_.reference_count_);
}

::google::protobuf::Metadata ValidatorHistoricalRewards::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorCurrentRewards::_Internal {
 public:
};

void ValidatorCurrentRewards::clear_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewards_.Clear();
}
ValidatorCurrentRewards::ValidatorCurrentRewards(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorCurrentRewards::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorCurrentRewards& from_msg)
      : rewards_{visibility, arena, from.rewards_},
        _cached_size_{0} {}

ValidatorCurrentRewards::ValidatorCurrentRewards(
    ::google::protobuf::Arena* arena,
    const ValidatorCurrentRewards& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorCurrentRewards* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.period_ = from._impl_.period_;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorCurrentRewards::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rewards_{visibility, arena},
        _cached_size_{0} {}

inline void ValidatorCurrentRewards::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.period_ = {};
}
ValidatorCurrentRewards::~ValidatorCurrentRewards() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
  SharedDtor(*this);
}
inline void ValidatorCurrentRewards::SharedDtor(MessageLite& self) {
  ValidatorCurrentRewards& this_ = static_cast<ValidatorCurrentRewards&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValidatorCurrentRewards::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorCurrentRewards(arena);
}
constexpr auto ValidatorCurrentRewards::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewards, _impl_.rewards_) +
          decltype(ValidatorCurrentRewards::_impl_.rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidatorCurrentRewards), alignof(ValidatorCurrentRewards), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorCurrentRewards::PlacementNew_,
                                 sizeof(ValidatorCurrentRewards),
                                 alignof(ValidatorCurrentRewards));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorCurrentRewards::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorCurrentRewards_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorCurrentRewards::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorCurrentRewards>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorCurrentRewards::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorCurrentRewards>(), &ValidatorCurrentRewards::ByteSizeLong,
            &ValidatorCurrentRewards::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewards, _impl_._cached_size_),
        false,
    },
    &ValidatorCurrentRewards::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorCurrentRewards::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ValidatorCurrentRewards::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorCurrentRewards>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 period = 2 [json_name = "period"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorCurrentRewards, _impl_.period_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewards, _impl_.period_)}},
    // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewards, _impl_.rewards_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewards, _impl_.rewards_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 period = 2 [json_name = "period"];
    {PROTOBUF_FIELD_OFFSET(ValidatorCurrentRewards, _impl_.period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorCurrentRewards::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rewards_.Clear();
  _impl_.period_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorCurrentRewards::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorCurrentRewards& this_ = static_cast<const ValidatorCurrentRewards&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorCurrentRewards::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorCurrentRewards& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 period = 2 [json_name = "period"];
          if (this_._internal_period() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_period(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorCurrentRewards::ByteSizeLong(const MessageLite& base) {
          const ValidatorCurrentRewards& this_ = static_cast<const ValidatorCurrentRewards&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorCurrentRewards::ByteSizeLong() const {
          const ValidatorCurrentRewards& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_rewards_size();
              for (const auto& msg : this_._internal_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 period = 2 [json_name = "period"];
            if (this_._internal_period() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_period());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorCurrentRewards::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorCurrentRewards*>(&to_msg);
  auto& from = static_cast<const ValidatorCurrentRewards&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rewards()->MergeFrom(
      from._internal_rewards());
  if (from._internal_period() != 0) {
    _this->_impl_.period_ = from._impl_.period_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorCurrentRewards::CopyFrom(const ValidatorCurrentRewards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorCurrentRewards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorCurrentRewards::InternalSwap(ValidatorCurrentRewards* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rewards_.InternalSwap(&other->_impl_.rewards_);
        swap(_impl_.period_, other->_impl_.period_);
}

::google::protobuf::Metadata ValidatorCurrentRewards::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorAccumulatedCommission::_Internal {
 public:
};

void ValidatorAccumulatedCommission::clear_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commission_.Clear();
}
ValidatorAccumulatedCommission::ValidatorAccumulatedCommission(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorAccumulatedCommission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission& from_msg)
      : commission_{visibility, arena, from.commission_},
        _cached_size_{0} {}

ValidatorAccumulatedCommission::ValidatorAccumulatedCommission(
    ::google::protobuf::Arena* arena,
    const ValidatorAccumulatedCommission& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorAccumulatedCommission* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorAccumulatedCommission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : commission_{visibility, arena},
        _cached_size_{0} {}

inline void ValidatorAccumulatedCommission::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidatorAccumulatedCommission::~ValidatorAccumulatedCommission() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
  SharedDtor(*this);
}
inline void ValidatorAccumulatedCommission::SharedDtor(MessageLite& self) {
  ValidatorAccumulatedCommission& this_ = static_cast<ValidatorAccumulatedCommission&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValidatorAccumulatedCommission::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorAccumulatedCommission(arena);
}
constexpr auto ValidatorAccumulatedCommission::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommission, _impl_.commission_) +
          decltype(ValidatorAccumulatedCommission::_impl_.commission_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidatorAccumulatedCommission), alignof(ValidatorAccumulatedCommission), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorAccumulatedCommission::PlacementNew_,
                                 sizeof(ValidatorAccumulatedCommission),
                                 alignof(ValidatorAccumulatedCommission));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorAccumulatedCommission::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorAccumulatedCommission_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorAccumulatedCommission::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorAccumulatedCommission>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorAccumulatedCommission::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorAccumulatedCommission>(), &ValidatorAccumulatedCommission::ByteSizeLong,
            &ValidatorAccumulatedCommission::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommission, _impl_._cached_size_),
        false,
    },
    &ValidatorAccumulatedCommission::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorAccumulatedCommission::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ValidatorAccumulatedCommission::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorAccumulatedCommission>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.DecCoin commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommission, _impl_.commission_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.DecCoin commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorAccumulatedCommission, _impl_.commission_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorAccumulatedCommission::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commission_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorAccumulatedCommission::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorAccumulatedCommission& this_ = static_cast<const ValidatorAccumulatedCommission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorAccumulatedCommission::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorAccumulatedCommission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.DecCoin commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_commission_size());
               i < n; i++) {
            const auto& repfield = this_._internal_commission().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorAccumulatedCommission::ByteSizeLong(const MessageLite& base) {
          const ValidatorAccumulatedCommission& this_ = static_cast<const ValidatorAccumulatedCommission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorAccumulatedCommission::ByteSizeLong() const {
          const ValidatorAccumulatedCommission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin commission = 1 [json_name = "commission", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_commission_size();
              for (const auto& msg : this_._internal_commission()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorAccumulatedCommission::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorAccumulatedCommission*>(&to_msg);
  auto& from = static_cast<const ValidatorAccumulatedCommission&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_commission()->MergeFrom(
      from._internal_commission());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorAccumulatedCommission::CopyFrom(const ValidatorAccumulatedCommission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorAccumulatedCommission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorAccumulatedCommission::InternalSwap(ValidatorAccumulatedCommission* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.commission_.InternalSwap(&other->_impl_.commission_);
}

::google::protobuf::Metadata ValidatorAccumulatedCommission::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorOutstandingRewards::_Internal {
 public:
};

void ValidatorOutstandingRewards::clear_rewards() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rewards_.Clear();
}
ValidatorOutstandingRewards::ValidatorOutstandingRewards(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorOutstandingRewards::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorOutstandingRewards& from_msg)
      : rewards_{visibility, arena, from.rewards_},
        _cached_size_{0} {}

ValidatorOutstandingRewards::ValidatorOutstandingRewards(
    ::google::protobuf::Arena* arena,
    const ValidatorOutstandingRewards& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorOutstandingRewards* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorOutstandingRewards::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rewards_{visibility, arena},
        _cached_size_{0} {}

inline void ValidatorOutstandingRewards::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidatorOutstandingRewards::~ValidatorOutstandingRewards() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
  SharedDtor(*this);
}
inline void ValidatorOutstandingRewards::SharedDtor(MessageLite& self) {
  ValidatorOutstandingRewards& this_ = static_cast<ValidatorOutstandingRewards&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValidatorOutstandingRewards::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorOutstandingRewards(arena);
}
constexpr auto ValidatorOutstandingRewards::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewards, _impl_.rewards_) +
          decltype(ValidatorOutstandingRewards::_impl_.rewards_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidatorOutstandingRewards), alignof(ValidatorOutstandingRewards), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorOutstandingRewards::PlacementNew_,
                                 sizeof(ValidatorOutstandingRewards),
                                 alignof(ValidatorOutstandingRewards));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorOutstandingRewards::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorOutstandingRewards_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorOutstandingRewards::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorOutstandingRewards>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorOutstandingRewards::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorOutstandingRewards>(), &ValidatorOutstandingRewards::ByteSizeLong,
            &ValidatorOutstandingRewards::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewards, _impl_._cached_size_),
        false,
    },
    &ValidatorOutstandingRewards::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorOutstandingRewards::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ValidatorOutstandingRewards::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorOutstandingRewards>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewards, _impl_.rewards_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorOutstandingRewards, _impl_.rewards_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorOutstandingRewards::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rewards_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorOutstandingRewards::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorOutstandingRewards& this_ = static_cast<const ValidatorOutstandingRewards&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorOutstandingRewards::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorOutstandingRewards& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rewards_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rewards().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorOutstandingRewards::ByteSizeLong(const MessageLite& base) {
          const ValidatorOutstandingRewards& this_ = static_cast<const ValidatorOutstandingRewards&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorOutstandingRewards::ByteSizeLong() const {
          const ValidatorOutstandingRewards& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [json_name = "rewards", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_rewards_size();
              for (const auto& msg : this_._internal_rewards()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorOutstandingRewards::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorOutstandingRewards*>(&to_msg);
  auto& from = static_cast<const ValidatorOutstandingRewards&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rewards()->MergeFrom(
      from._internal_rewards());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorOutstandingRewards::CopyFrom(const ValidatorOutstandingRewards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorOutstandingRewards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorOutstandingRewards::InternalSwap(ValidatorOutstandingRewards* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rewards_.InternalSwap(&other->_impl_.rewards_);
}

::google::protobuf::Metadata ValidatorOutstandingRewards::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorSlashEvent::_Internal {
 public:
};

ValidatorSlashEvent::ValidatorSlashEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorSlashEvent)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSlashEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorSlashEvent& from_msg)
      : fraction_(arena, from.fraction_),
        _cached_size_{0} {}

ValidatorSlashEvent::ValidatorSlashEvent(
    ::google::protobuf::Arena* arena,
    const ValidatorSlashEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorSlashEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.validator_period_ = from._impl_.validator_period_;

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorSlashEvent)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSlashEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : fraction_(arena),
        _cached_size_{0} {}

inline void ValidatorSlashEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.validator_period_ = {};
}
ValidatorSlashEvent::~ValidatorSlashEvent() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorSlashEvent)
  SharedDtor(*this);
}
inline void ValidatorSlashEvent::SharedDtor(MessageLite& self) {
  ValidatorSlashEvent& this_ = static_cast<ValidatorSlashEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.fraction_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ValidatorSlashEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorSlashEvent(arena);
}
constexpr auto ValidatorSlashEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorSlashEvent),
                                            alignof(ValidatorSlashEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorSlashEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorSlashEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorSlashEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorSlashEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorSlashEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorSlashEvent>(), &ValidatorSlashEvent::ByteSizeLong,
            &ValidatorSlashEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorSlashEvent, _impl_._cached_size_),
        false,
    },
    &ValidatorSlashEvent::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorSlashEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> ValidatorSlashEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorSlashEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string fraction = 2 [json_name = "fraction", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEvent, _impl_.fraction_)}},
    // uint64 validator_period = 1 [json_name = "validatorPeriod"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorSlashEvent, _impl_.validator_period_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEvent, _impl_.validator_period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 validator_period = 1 [json_name = "validatorPeriod"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEvent, _impl_.validator_period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string fraction = 2 [json_name = "fraction", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEvent, _impl_.fraction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\0\10\0\0\0\0\0"
    "cosmos.distribution.v1beta1.ValidatorSlashEvent"
    "fraction"
  }},
};

PROTOBUF_NOINLINE void ValidatorSlashEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorSlashEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fraction_.ClearToEmpty();
  _impl_.validator_period_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorSlashEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorSlashEvent& this_ = static_cast<const ValidatorSlashEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorSlashEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorSlashEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorSlashEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 validator_period = 1 [json_name = "validatorPeriod"];
          if (this_._internal_validator_period() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_validator_period(), target);
          }

          // string fraction = 2 [json_name = "fraction", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_fraction().empty()) {
            const std::string& _s = this_._internal_fraction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.ValidatorSlashEvent.fraction");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorSlashEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorSlashEvent::ByteSizeLong(const MessageLite& base) {
          const ValidatorSlashEvent& this_ = static_cast<const ValidatorSlashEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorSlashEvent::ByteSizeLong() const {
          const ValidatorSlashEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorSlashEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string fraction = 2 [json_name = "fraction", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_fraction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_fraction());
            }
            // uint64 validator_period = 1 [json_name = "validatorPeriod"];
            if (this_._internal_validator_period() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_validator_period());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorSlashEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorSlashEvent*>(&to_msg);
  auto& from = static_cast<const ValidatorSlashEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorSlashEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_fraction().empty()) {
    _this->_internal_set_fraction(from._internal_fraction());
  }
  if (from._internal_validator_period() != 0) {
    _this->_impl_.validator_period_ = from._impl_.validator_period_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorSlashEvent::CopyFrom(const ValidatorSlashEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorSlashEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorSlashEvent::InternalSwap(ValidatorSlashEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fraction_, &other->_impl_.fraction_, arena);
        swap(_impl_.validator_period_, other->_impl_.validator_period_);
}

::google::protobuf::Metadata ValidatorSlashEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorSlashEvents::_Internal {
 public:
};

ValidatorSlashEvents::ValidatorSlashEvents(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.ValidatorSlashEvents)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSlashEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::ValidatorSlashEvents& from_msg)
      : validator_slash_events_{visibility, arena, from.validator_slash_events_},
        _cached_size_{0} {}

ValidatorSlashEvents::ValidatorSlashEvents(
    ::google::protobuf::Arena* arena,
    const ValidatorSlashEvents& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorSlashEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.ValidatorSlashEvents)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSlashEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : validator_slash_events_{visibility, arena},
        _cached_size_{0} {}

inline void ValidatorSlashEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidatorSlashEvents::~ValidatorSlashEvents() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.ValidatorSlashEvents)
  SharedDtor(*this);
}
inline void ValidatorSlashEvents::SharedDtor(MessageLite& self) {
  ValidatorSlashEvents& this_ = static_cast<ValidatorSlashEvents&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValidatorSlashEvents::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorSlashEvents(arena);
}
constexpr auto ValidatorSlashEvents::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorSlashEvents, _impl_.validator_slash_events_) +
          decltype(ValidatorSlashEvents::_impl_.validator_slash_events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidatorSlashEvents), alignof(ValidatorSlashEvents), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorSlashEvents::PlacementNew_,
                                 sizeof(ValidatorSlashEvents),
                                 alignof(ValidatorSlashEvents));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorSlashEvents::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorSlashEvents_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorSlashEvents::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorSlashEvents>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorSlashEvents::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorSlashEvents>(), &ValidatorSlashEvents::ByteSizeLong,
            &ValidatorSlashEvents::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorSlashEvents, _impl_._cached_size_),
        false,
    },
    &ValidatorSlashEvents::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorSlashEvents::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ValidatorSlashEvents::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorSlashEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_events = 1 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSlashEvents, _impl_.validator_slash_events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_events = 1 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorSlashEvents, _impl_.validator_slash_events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::ValidatorSlashEvent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorSlashEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.ValidatorSlashEvents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validator_slash_events_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorSlashEvents::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorSlashEvents& this_ = static_cast<const ValidatorSlashEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorSlashEvents::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorSlashEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.ValidatorSlashEvents)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_events = 1 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validator_slash_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validator_slash_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.ValidatorSlashEvents)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorSlashEvents::ByteSizeLong(const MessageLite& base) {
          const ValidatorSlashEvents& this_ = static_cast<const ValidatorSlashEvents&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorSlashEvents::ByteSizeLong() const {
          const ValidatorSlashEvents& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.ValidatorSlashEvents)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.distribution.v1beta1.ValidatorSlashEvent validator_slash_events = 1 [json_name = "validatorSlashEvents", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_validator_slash_events_size();
              for (const auto& msg : this_._internal_validator_slash_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorSlashEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorSlashEvents*>(&to_msg);
  auto& from = static_cast<const ValidatorSlashEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.ValidatorSlashEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validator_slash_events()->MergeFrom(
      from._internal_validator_slash_events());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorSlashEvents::CopyFrom(const ValidatorSlashEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.ValidatorSlashEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorSlashEvents::InternalSwap(ValidatorSlashEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.validator_slash_events_.InternalSwap(&other->_impl_.validator_slash_events_);
}

::google::protobuf::Metadata ValidatorSlashEvents::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FeePool::_Internal {
 public:
};

void FeePool::clear_community_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.community_pool_.Clear();
}
FeePool::FeePool(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.FeePool)
}
inline PROTOBUF_NDEBUG_INLINE FeePool::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::FeePool& from_msg)
      : community_pool_{visibility, arena, from.community_pool_},
        _cached_size_{0} {}

FeePool::FeePool(
    ::google::protobuf::Arena* arena,
    const FeePool& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FeePool* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.FeePool)
}
inline PROTOBUF_NDEBUG_INLINE FeePool::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : community_pool_{visibility, arena},
        _cached_size_{0} {}

inline void FeePool::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FeePool::~FeePool() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.FeePool)
  SharedDtor(*this);
}
inline void FeePool::SharedDtor(MessageLite& self) {
  FeePool& this_ = static_cast<FeePool&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FeePool::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FeePool(arena);
}
constexpr auto FeePool::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FeePool, _impl_.community_pool_) +
          decltype(FeePool::_impl_.community_pool_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FeePool), alignof(FeePool), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FeePool::PlacementNew_,
                                 sizeof(FeePool),
                                 alignof(FeePool));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FeePool::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FeePool_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FeePool::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FeePool>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FeePool::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FeePool>(), &FeePool::ByteSizeLong,
            &FeePool::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FeePool, _impl_._cached_size_),
        false,
    },
    &FeePool::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FeePool::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> FeePool::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::FeePool>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.DecCoin community_pool = 1 [json_name = "communityPool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeePool, _impl_.community_pool_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.DecCoin community_pool = 1 [json_name = "communityPool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(FeePool, _impl_.community_pool_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FeePool::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.FeePool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.community_pool_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FeePool::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FeePool& this_ = static_cast<const FeePool&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FeePool::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FeePool& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.FeePool)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.DecCoin community_pool = 1 [json_name = "communityPool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_community_pool_size());
               i < n; i++) {
            const auto& repfield = this_._internal_community_pool().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.FeePool)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FeePool::ByteSizeLong(const MessageLite& base) {
          const FeePool& this_ = static_cast<const FeePool&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FeePool::ByteSizeLong() const {
          const FeePool& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.FeePool)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin community_pool = 1 [json_name = "communityPool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_community_pool_size();
              for (const auto& msg : this_._internal_community_pool()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FeePool::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeePool*>(&to_msg);
  auto& from = static_cast<const FeePool&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.FeePool)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_community_pool()->MergeFrom(
      from._internal_community_pool());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeePool::CopyFrom(const FeePool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.FeePool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FeePool::InternalSwap(FeePool* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.community_pool_.InternalSwap(&other->_impl_.community_pool_);
}

::google::protobuf::Metadata FeePool::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommunityPoolSpendProposal::_Internal {
 public:
};

void CommunityPoolSpendProposal::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_.Clear();
}
CommunityPoolSpendProposal::CommunityPoolSpendProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
}
inline PROTOBUF_NDEBUG_INLINE CommunityPoolSpendProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::CommunityPoolSpendProposal& from_msg)
      : amount_{visibility, arena, from.amount_},
        title_(arena, from.title_),
        description_(arena, from.description_),
        recipient_(arena, from.recipient_),
        _cached_size_{0} {}

CommunityPoolSpendProposal::CommunityPoolSpendProposal(
    ::google::protobuf::Arena* arena,
    const CommunityPoolSpendProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommunityPoolSpendProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
}
inline PROTOBUF_NDEBUG_INLINE CommunityPoolSpendProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : amount_{visibility, arena},
        title_(arena),
        description_(arena),
        recipient_(arena),
        _cached_size_{0} {}

inline void CommunityPoolSpendProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommunityPoolSpendProposal::~CommunityPoolSpendProposal() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
  SharedDtor(*this);
}
inline void CommunityPoolSpendProposal::SharedDtor(MessageLite& self) {
  CommunityPoolSpendProposal& this_ = static_cast<CommunityPoolSpendProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.recipient_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CommunityPoolSpendProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommunityPoolSpendProposal(arena);
}
constexpr auto CommunityPoolSpendProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.amount_) +
          decltype(CommunityPoolSpendProposal::_impl_.amount_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CommunityPoolSpendProposal), alignof(CommunityPoolSpendProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CommunityPoolSpendProposal::PlacementNew_,
                                 sizeof(CommunityPoolSpendProposal),
                                 alignof(CommunityPoolSpendProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommunityPoolSpendProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommunityPoolSpendProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommunityPoolSpendProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommunityPoolSpendProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommunityPoolSpendProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommunityPoolSpendProposal>(), &CommunityPoolSpendProposal::ByteSizeLong,
            &CommunityPoolSpendProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_._cached_size_),
        false,
    },
    &CommunityPoolSpendProposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommunityPoolSpendProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 88, 2> CommunityPoolSpendProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::CommunityPoolSpendProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.amount_)}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.description_)}},
    // string recipient = 3 [json_name = "recipient"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.recipient_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient = 3 [json_name = "recipient"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposal, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\66\5\13\11\0\0\0\0"
    "cosmos.distribution.v1beta1.CommunityPoolSpendProposal"
    "title"
    "description"
    "recipient"
  }},
};

PROTOBUF_NOINLINE void CommunityPoolSpendProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.amount_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.recipient_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommunityPoolSpendProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommunityPoolSpendProposal& this_ = static_cast<const CommunityPoolSpendProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommunityPoolSpendProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommunityPoolSpendProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string recipient = 3 [json_name = "recipient"];
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposal.recipient");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_amount_size());
               i < n; i++) {
            const auto& repfield = this_._internal_amount().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommunityPoolSpendProposal::ByteSizeLong(const MessageLite& base) {
          const CommunityPoolSpendProposal& this_ = static_cast<const CommunityPoolSpendProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommunityPoolSpendProposal::ByteSizeLong() const {
          const CommunityPoolSpendProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_amount_size();
              for (const auto& msg : this_._internal_amount()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string recipient = 3 [json_name = "recipient"];
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommunityPoolSpendProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommunityPoolSpendProposal*>(&to_msg);
  auto& from = static_cast<const CommunityPoolSpendProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(
      from._internal_amount());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommunityPoolSpendProposal::CopyFrom(const CommunityPoolSpendProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommunityPoolSpendProposal::InternalSwap(CommunityPoolSpendProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.amount_.InternalSwap(&other->_impl_.amount_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
}

::google::protobuf::Metadata CommunityPoolSpendProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DelegatorStartingInfo::_Internal {
 public:
};

DelegatorStartingInfo::DelegatorStartingInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.DelegatorStartingInfo)
}
inline PROTOBUF_NDEBUG_INLINE DelegatorStartingInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::DelegatorStartingInfo& from_msg)
      : stake_(arena, from.stake_),
        _cached_size_{0} {}

DelegatorStartingInfo::DelegatorStartingInfo(
    ::google::protobuf::Arena* arena,
    const DelegatorStartingInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DelegatorStartingInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, previous_period_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, previous_period_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, previous_period_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.DelegatorStartingInfo)
}
inline PROTOBUF_NDEBUG_INLINE DelegatorStartingInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : stake_(arena),
        _cached_size_{0} {}

inline void DelegatorStartingInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, previous_period_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, previous_period_) +
               sizeof(Impl_::height_));
}
DelegatorStartingInfo::~DelegatorStartingInfo() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.DelegatorStartingInfo)
  SharedDtor(*this);
}
inline void DelegatorStartingInfo::SharedDtor(MessageLite& self) {
  DelegatorStartingInfo& this_ = static_cast<DelegatorStartingInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.stake_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DelegatorStartingInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DelegatorStartingInfo(arena);
}
constexpr auto DelegatorStartingInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DelegatorStartingInfo),
                                            alignof(DelegatorStartingInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DelegatorStartingInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DelegatorStartingInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DelegatorStartingInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DelegatorStartingInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DelegatorStartingInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DelegatorStartingInfo>(), &DelegatorStartingInfo::ByteSizeLong,
            &DelegatorStartingInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_._cached_size_),
        false,
    },
    &DelegatorStartingInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DelegatorStartingInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> DelegatorStartingInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegatorStartingInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 previous_period = 1 [json_name = "previousPeriod"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DelegatorStartingInfo, _impl_.previous_period_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.previous_period_)}},
    // string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.stake_)}},
    // uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.amino.field_name) = "creation_height", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DelegatorStartingInfo, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 previous_period = 1 [json_name = "previousPeriod"];
    {PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.previous_period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.stake_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.amino.field_name) = "creation_height", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\61\0\5\0\0\0\0\0"
    "cosmos.distribution.v1beta1.DelegatorStartingInfo"
    "stake"
  }},
};

PROTOBUF_NOINLINE void DelegatorStartingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.DelegatorStartingInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stake_.ClearToEmpty();
  ::memset(&_impl_.previous_period_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.previous_period_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DelegatorStartingInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DelegatorStartingInfo& this_ = static_cast<const DelegatorStartingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DelegatorStartingInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DelegatorStartingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.DelegatorStartingInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 previous_period = 1 [json_name = "previousPeriod"];
          if (this_._internal_previous_period() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_previous_period(), target);
          }

          // string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_stake().empty()) {
            const std::string& _s = this_._internal_stake();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.DelegatorStartingInfo.stake");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.amino.field_name) = "creation_height", (.amino.dont_omitempty) = true];
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_height(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.DelegatorStartingInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DelegatorStartingInfo::ByteSizeLong(const MessageLite& base) {
          const DelegatorStartingInfo& this_ = static_cast<const DelegatorStartingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DelegatorStartingInfo::ByteSizeLong() const {
          const DelegatorStartingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.DelegatorStartingInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string stake = 2 [json_name = "stake", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_stake().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stake());
            }
            // uint64 previous_period = 1 [json_name = "previousPeriod"];
            if (this_._internal_previous_period() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_previous_period());
            }
            // uint64 height = 3 [json_name = "height", (.gogoproto.jsontag) = "creation_height", (.amino.field_name) = "creation_height", (.amino.dont_omitempty) = true];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DelegatorStartingInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DelegatorStartingInfo*>(&to_msg);
  auto& from = static_cast<const DelegatorStartingInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.DelegatorStartingInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stake().empty()) {
    _this->_internal_set_stake(from._internal_stake());
  }
  if (from._internal_previous_period() != 0) {
    _this->_impl_.previous_period_ = from._impl_.previous_period_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DelegatorStartingInfo::CopyFrom(const DelegatorStartingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.DelegatorStartingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DelegatorStartingInfo::InternalSwap(DelegatorStartingInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stake_, &other->_impl_.stake_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.height_)
      + sizeof(DelegatorStartingInfo::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(DelegatorStartingInfo, _impl_.previous_period_)>(
          reinterpret_cast<char*>(&_impl_.previous_period_),
          reinterpret_cast<char*>(&other->_impl_.previous_period_));
}

::google::protobuf::Metadata DelegatorStartingInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DelegationDelegatorReward::_Internal {
 public:
};

void DelegationDelegatorReward::clear_reward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reward_.Clear();
}
DelegationDelegatorReward::DelegationDelegatorReward(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.DelegationDelegatorReward)
}
inline PROTOBUF_NDEBUG_INLINE DelegationDelegatorReward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::DelegationDelegatorReward& from_msg)
      : reward_{visibility, arena, from.reward_},
        validator_address_(arena, from.validator_address_),
        _cached_size_{0} {}

DelegationDelegatorReward::DelegationDelegatorReward(
    ::google::protobuf::Arena* arena,
    const DelegationDelegatorReward& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DelegationDelegatorReward* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.DelegationDelegatorReward)
}
inline PROTOBUF_NDEBUG_INLINE DelegationDelegatorReward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reward_{visibility, arena},
        validator_address_(arena),
        _cached_size_{0} {}

inline void DelegationDelegatorReward::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DelegationDelegatorReward::~DelegationDelegatorReward() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.DelegationDelegatorReward)
  SharedDtor(*this);
}
inline void DelegationDelegatorReward::SharedDtor(MessageLite& self) {
  DelegationDelegatorReward& this_ = static_cast<DelegationDelegatorReward&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.validator_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DelegationDelegatorReward::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DelegationDelegatorReward(arena);
}
constexpr auto DelegationDelegatorReward::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DelegationDelegatorReward, _impl_.reward_) +
          decltype(DelegationDelegatorReward::_impl_.reward_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DelegationDelegatorReward), alignof(DelegationDelegatorReward), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DelegationDelegatorReward::PlacementNew_,
                                 sizeof(DelegationDelegatorReward),
                                 alignof(DelegationDelegatorReward));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DelegationDelegatorReward::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DelegationDelegatorReward_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DelegationDelegatorReward::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DelegationDelegatorReward>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DelegationDelegatorReward::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DelegationDelegatorReward>(), &DelegationDelegatorReward::ByteSizeLong,
            &DelegationDelegatorReward::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DelegationDelegatorReward, _impl_._cached_size_),
        false,
    },
    &DelegationDelegatorReward::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DelegationDelegatorReward::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 79, 2> DelegationDelegatorReward::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::DelegationDelegatorReward>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.DecCoin reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DelegationDelegatorReward, _impl_.reward_)}},
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DelegationDelegatorReward, _impl_.validator_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(DelegationDelegatorReward, _impl_.validator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.DecCoin reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DelegationDelegatorReward, _impl_.reward_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::DecCoin>()},
  }}, {{
    "\65\21\0\0\0\0\0\0"
    "cosmos.distribution.v1beta1.DelegationDelegatorReward"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void DelegationDelegatorReward::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.DelegationDelegatorReward)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reward_.Clear();
  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DelegationDelegatorReward::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DelegationDelegatorReward& this_ = static_cast<const DelegationDelegatorReward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DelegationDelegatorReward::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DelegationDelegatorReward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.DelegationDelegatorReward)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.DelegationDelegatorReward.validator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .cosmos.base.v1beta1.DecCoin reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_reward_size());
               i < n; i++) {
            const auto& repfield = this_._internal_reward().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.DelegationDelegatorReward)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DelegationDelegatorReward::ByteSizeLong(const MessageLite& base) {
          const DelegationDelegatorReward& this_ = static_cast<const DelegationDelegatorReward&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DelegationDelegatorReward::ByteSizeLong() const {
          const DelegationDelegatorReward& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.DelegationDelegatorReward)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.DecCoin reward = 2 [json_name = "reward", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_reward_size();
              for (const auto& msg : this_._internal_reward()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string validator_address = 1 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DelegationDelegatorReward::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DelegationDelegatorReward*>(&to_msg);
  auto& from = static_cast<const DelegationDelegatorReward&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.DelegationDelegatorReward)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reward()->MergeFrom(
      from._internal_reward());
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DelegationDelegatorReward::CopyFrom(const DelegationDelegatorReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.DelegationDelegatorReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DelegationDelegatorReward::InternalSwap(DelegationDelegatorReward* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.reward_.InternalSwap(&other->_impl_.reward_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
}

::google::protobuf::Metadata DelegationDelegatorReward::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommunityPoolSpendProposalWithDeposit::_Internal {
 public:
};

CommunityPoolSpendProposalWithDeposit::CommunityPoolSpendProposalWithDeposit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
}
inline PROTOBUF_NDEBUG_INLINE CommunityPoolSpendProposalWithDeposit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        recipient_(arena, from.recipient_),
        amount_(arena, from.amount_),
        deposit_(arena, from.deposit_),
        _cached_size_{0} {}

CommunityPoolSpendProposalWithDeposit::CommunityPoolSpendProposalWithDeposit(
    ::google::protobuf::Arena* arena,
    const CommunityPoolSpendProposalWithDeposit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommunityPoolSpendProposalWithDeposit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
}
inline PROTOBUF_NDEBUG_INLINE CommunityPoolSpendProposalWithDeposit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        recipient_(arena),
        amount_(arena),
        deposit_(arena),
        _cached_size_{0} {}

inline void CommunityPoolSpendProposalWithDeposit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommunityPoolSpendProposalWithDeposit::~CommunityPoolSpendProposalWithDeposit() {
  // @@protoc_insertion_point(destructor:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
  SharedDtor(*this);
}
inline void CommunityPoolSpendProposalWithDeposit::SharedDtor(MessageLite& self) {
  CommunityPoolSpendProposalWithDeposit& this_ = static_cast<CommunityPoolSpendProposalWithDeposit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.recipient_.Destroy();
  this_._impl_.amount_.Destroy();
  this_._impl_.deposit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CommunityPoolSpendProposalWithDeposit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommunityPoolSpendProposalWithDeposit(arena);
}
constexpr auto CommunityPoolSpendProposalWithDeposit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommunityPoolSpendProposalWithDeposit),
                                            alignof(CommunityPoolSpendProposalWithDeposit));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommunityPoolSpendProposalWithDeposit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommunityPoolSpendProposalWithDeposit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommunityPoolSpendProposalWithDeposit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommunityPoolSpendProposalWithDeposit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommunityPoolSpendProposalWithDeposit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommunityPoolSpendProposalWithDeposit>(), &CommunityPoolSpendProposalWithDeposit::ByteSizeLong,
            &CommunityPoolSpendProposalWithDeposit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_._cached_size_),
        false,
    },
    &CommunityPoolSpendProposalWithDeposit::kDescriptorMethods,
    &descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommunityPoolSpendProposalWithDeposit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 112, 2> CommunityPoolSpendProposalWithDeposit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::distribution::v1beta1::CommunityPoolSpendProposalWithDeposit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.description_)}},
    // string recipient = 3 [json_name = "recipient"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.recipient_)}},
    // string amount = 4 [json_name = "amount"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.amount_)}},
    // string deposit = 5 [json_name = "deposit"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.deposit_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string recipient = 3 [json_name = "recipient"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.recipient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string amount = 4 [json_name = "amount"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string deposit = 5 [json_name = "deposit"];
    {PROTOBUF_FIELD_OFFSET(CommunityPoolSpendProposalWithDeposit, _impl_.deposit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\5\13\11\6\7\0\0"
    "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit"
    "title"
    "description"
    "recipient"
    "amount"
    "deposit"
  }},
};

PROTOBUF_NOINLINE void CommunityPoolSpendProposalWithDeposit::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.recipient_.ClearToEmpty();
  _impl_.amount_.ClearToEmpty();
  _impl_.deposit_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommunityPoolSpendProposalWithDeposit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommunityPoolSpendProposalWithDeposit& this_ = static_cast<const CommunityPoolSpendProposalWithDeposit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommunityPoolSpendProposalWithDeposit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommunityPoolSpendProposalWithDeposit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string recipient = 3 [json_name = "recipient"];
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.recipient");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string amount = 4 [json_name = "amount"];
          if (!this_._internal_amount().empty()) {
            const std::string& _s = this_._internal_amount();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.amount");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string deposit = 5 [json_name = "deposit"];
          if (!this_._internal_deposit().empty()) {
            const std::string& _s = this_._internal_deposit();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit.deposit");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommunityPoolSpendProposalWithDeposit::ByteSizeLong(const MessageLite& base) {
          const CommunityPoolSpendProposalWithDeposit& this_ = static_cast<const CommunityPoolSpendProposalWithDeposit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommunityPoolSpendProposalWithDeposit::ByteSizeLong() const {
          const CommunityPoolSpendProposalWithDeposit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string recipient = 3 [json_name = "recipient"];
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
            // string amount = 4 [json_name = "amount"];
            if (!this_._internal_amount().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_amount());
            }
            // string deposit = 5 [json_name = "deposit"];
            if (!this_._internal_deposit().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_deposit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommunityPoolSpendProposalWithDeposit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommunityPoolSpendProposalWithDeposit*>(&to_msg);
  auto& from = static_cast<const CommunityPoolSpendProposalWithDeposit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (!from._internal_amount().empty()) {
    _this->_internal_set_amount(from._internal_amount());
  }
  if (!from._internal_deposit().empty()) {
    _this->_internal_set_deposit(from._internal_deposit());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommunityPoolSpendProposalWithDeposit::CopyFrom(const CommunityPoolSpendProposalWithDeposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommunityPoolSpendProposalWithDeposit::InternalSwap(CommunityPoolSpendProposalWithDeposit* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.amount_, &other->_impl_.amount_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.deposit_, &other->_impl_.deposit_, arena);
}

::google::protobuf::Metadata CommunityPoolSpendProposalWithDeposit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace distribution
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fdistribution_2fv1beta1_2fdistribution_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
