// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/tx/v1beta1/service.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2ftx_2fv1beta1_2fservice_2eproto_2epb_2eh
#define cosmos_2ftx_2fv1beta1_2fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "cosmos/base/abci/v1beta1/abci.pb.h"
#include "cosmos/tx/v1beta1/tx.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "tendermint/types/block.pb.h"
#include "tendermint/types/types.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2ftx_2fv1beta1_2fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
namespace cosmos {
namespace tx {
namespace v1beta1 {
class BroadcastTxRequest;
struct BroadcastTxRequestDefaultTypeInternal;
extern BroadcastTxRequestDefaultTypeInternal _BroadcastTxRequest_default_instance_;
class BroadcastTxResponse;
struct BroadcastTxResponseDefaultTypeInternal;
extern BroadcastTxResponseDefaultTypeInternal _BroadcastTxResponse_default_instance_;
class GetBlockWithTxsRequest;
struct GetBlockWithTxsRequestDefaultTypeInternal;
extern GetBlockWithTxsRequestDefaultTypeInternal _GetBlockWithTxsRequest_default_instance_;
class GetBlockWithTxsResponse;
struct GetBlockWithTxsResponseDefaultTypeInternal;
extern GetBlockWithTxsResponseDefaultTypeInternal _GetBlockWithTxsResponse_default_instance_;
class GetTxRequest;
struct GetTxRequestDefaultTypeInternal;
extern GetTxRequestDefaultTypeInternal _GetTxRequest_default_instance_;
class GetTxResponse;
struct GetTxResponseDefaultTypeInternal;
extern GetTxResponseDefaultTypeInternal _GetTxResponse_default_instance_;
class GetTxsEventRequest;
struct GetTxsEventRequestDefaultTypeInternal;
extern GetTxsEventRequestDefaultTypeInternal _GetTxsEventRequest_default_instance_;
class GetTxsEventResponse;
struct GetTxsEventResponseDefaultTypeInternal;
extern GetTxsEventResponseDefaultTypeInternal _GetTxsEventResponse_default_instance_;
class SimulateRequest;
struct SimulateRequestDefaultTypeInternal;
extern SimulateRequestDefaultTypeInternal _SimulateRequest_default_instance_;
class SimulateResponse;
struct SimulateResponseDefaultTypeInternal;
extern SimulateResponseDefaultTypeInternal _SimulateResponse_default_instance_;
class TxDecodeAminoRequest;
struct TxDecodeAminoRequestDefaultTypeInternal;
extern TxDecodeAminoRequestDefaultTypeInternal _TxDecodeAminoRequest_default_instance_;
class TxDecodeAminoResponse;
struct TxDecodeAminoResponseDefaultTypeInternal;
extern TxDecodeAminoResponseDefaultTypeInternal _TxDecodeAminoResponse_default_instance_;
class TxDecodeRequest;
struct TxDecodeRequestDefaultTypeInternal;
extern TxDecodeRequestDefaultTypeInternal _TxDecodeRequest_default_instance_;
class TxDecodeResponse;
struct TxDecodeResponseDefaultTypeInternal;
extern TxDecodeResponseDefaultTypeInternal _TxDecodeResponse_default_instance_;
class TxEncodeAminoRequest;
struct TxEncodeAminoRequestDefaultTypeInternal;
extern TxEncodeAminoRequestDefaultTypeInternal _TxEncodeAminoRequest_default_instance_;
class TxEncodeAminoResponse;
struct TxEncodeAminoResponseDefaultTypeInternal;
extern TxEncodeAminoResponseDefaultTypeInternal _TxEncodeAminoResponse_default_instance_;
class TxEncodeRequest;
struct TxEncodeRequestDefaultTypeInternal;
extern TxEncodeRequestDefaultTypeInternal _TxEncodeRequest_default_instance_;
class TxEncodeResponse;
struct TxEncodeResponseDefaultTypeInternal;
extern TxEncodeResponseDefaultTypeInternal _TxEncodeResponse_default_instance_;
}  // namespace v1beta1
}  // namespace tx
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace tx {
namespace v1beta1 {
enum OrderBy : int {
  ORDER_BY_UNSPECIFIED = 0,
  ORDER_BY_ASC = 1,
  ORDER_BY_DESC = 2,
  OrderBy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderBy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderBy_IsValid(int value);
extern const uint32_t OrderBy_internal_data_[];
constexpr OrderBy OrderBy_MIN = static_cast<OrderBy>(0);
constexpr OrderBy OrderBy_MAX = static_cast<OrderBy>(2);
constexpr int OrderBy_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
OrderBy_descriptor();
template <typename T>
const std::string& OrderBy_Name(T value) {
  static_assert(std::is_same<T, OrderBy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderBy_Name().");
  return OrderBy_Name(static_cast<OrderBy>(value));
}
template <>
inline const std::string& OrderBy_Name(OrderBy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderBy_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool OrderBy_Parse(absl::string_view name, OrderBy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderBy>(
      OrderBy_descriptor(), name, value);
}
enum BroadcastMode : int {
  BROADCAST_MODE_UNSPECIFIED = 0,
  BROADCAST_MODE_BLOCK [[deprecated]] = 1,
  BROADCAST_MODE_SYNC = 2,
  BROADCAST_MODE_ASYNC = 3,
  BroadcastMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BroadcastMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BroadcastMode_IsValid(int value);
extern const uint32_t BroadcastMode_internal_data_[];
constexpr BroadcastMode BroadcastMode_MIN = static_cast<BroadcastMode>(0);
constexpr BroadcastMode BroadcastMode_MAX = static_cast<BroadcastMode>(3);
constexpr int BroadcastMode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
BroadcastMode_descriptor();
template <typename T>
const std::string& BroadcastMode_Name(T value) {
  static_assert(std::is_same<T, BroadcastMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BroadcastMode_Name().");
  return BroadcastMode_Name(static_cast<BroadcastMode>(value));
}
template <>
inline const std::string& BroadcastMode_Name(BroadcastMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BroadcastMode_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool BroadcastMode_Parse(absl::string_view name, BroadcastMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BroadcastMode>(
      BroadcastMode_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TxEncodeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxEncodeResponse) */ {
 public:
  inline TxEncodeResponse() : TxEncodeResponse(nullptr) {}
  ~TxEncodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxEncodeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxEncodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxEncodeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxEncodeResponse(const TxEncodeResponse& from) : TxEncodeResponse(nullptr, from) {}
  inline TxEncodeResponse(TxEncodeResponse&& from) noexcept
      : TxEncodeResponse(nullptr, std::move(from)) {}
  inline TxEncodeResponse& operator=(const TxEncodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxEncodeResponse& operator=(TxEncodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxEncodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxEncodeResponse* internal_default_instance() {
    return reinterpret_cast<const TxEncodeResponse*>(
        &_TxEncodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(TxEncodeResponse& a, TxEncodeResponse& b) { a.Swap(&b); }
  inline void Swap(TxEncodeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxEncodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxEncodeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxEncodeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxEncodeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxEncodeResponse& from) { TxEncodeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxEncodeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxEncodeResponse"; }

 protected:
  explicit TxEncodeResponse(::google::protobuf::Arena* arena);
  TxEncodeResponse(::google::protobuf::Arena* arena, const TxEncodeResponse& from);
  TxEncodeResponse(::google::protobuf::Arena* arena, TxEncodeResponse&& from) noexcept
      : TxEncodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxBytesFieldNumber = 1,
  };
  // bytes tx_bytes = 1 [json_name = "txBytes"];
  void clear_tx_bytes() ;
  const std::string& tx_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tx_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_tx_bytes();
  PROTOBUF_NODISCARD std::string* release_tx_bytes();
  void set_allocated_tx_bytes(std::string* value);

  private:
  const std::string& _internal_tx_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tx_bytes(
      const std::string& value);
  std::string* _internal_mutable_tx_bytes();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxEncodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxEncodeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr tx_bytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxEncodeAminoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxEncodeAminoResponse) */ {
 public:
  inline TxEncodeAminoResponse() : TxEncodeAminoResponse(nullptr) {}
  ~TxEncodeAminoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxEncodeAminoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxEncodeAminoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxEncodeAminoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxEncodeAminoResponse(const TxEncodeAminoResponse& from) : TxEncodeAminoResponse(nullptr, from) {}
  inline TxEncodeAminoResponse(TxEncodeAminoResponse&& from) noexcept
      : TxEncodeAminoResponse(nullptr, std::move(from)) {}
  inline TxEncodeAminoResponse& operator=(const TxEncodeAminoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxEncodeAminoResponse& operator=(TxEncodeAminoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxEncodeAminoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxEncodeAminoResponse* internal_default_instance() {
    return reinterpret_cast<const TxEncodeAminoResponse*>(
        &_TxEncodeAminoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(TxEncodeAminoResponse& a, TxEncodeAminoResponse& b) { a.Swap(&b); }
  inline void Swap(TxEncodeAminoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxEncodeAminoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxEncodeAminoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxEncodeAminoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxEncodeAminoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxEncodeAminoResponse& from) { TxEncodeAminoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxEncodeAminoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxEncodeAminoResponse"; }

 protected:
  explicit TxEncodeAminoResponse(::google::protobuf::Arena* arena);
  TxEncodeAminoResponse(::google::protobuf::Arena* arena, const TxEncodeAminoResponse& from);
  TxEncodeAminoResponse(::google::protobuf::Arena* arena, TxEncodeAminoResponse&& from) noexcept
      : TxEncodeAminoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAminoBinaryFieldNumber = 1,
  };
  // bytes amino_binary = 1 [json_name = "aminoBinary"];
  void clear_amino_binary() ;
  const std::string& amino_binary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_amino_binary(Arg_&& arg, Args_... args);
  std::string* mutable_amino_binary();
  PROTOBUF_NODISCARD std::string* release_amino_binary();
  void set_allocated_amino_binary(std::string* value);

  private:
  const std::string& _internal_amino_binary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_amino_binary(
      const std::string& value);
  std::string* _internal_mutable_amino_binary();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxEncodeAminoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxEncodeAminoResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr amino_binary_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxEncodeAminoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxEncodeAminoRequest) */ {
 public:
  inline TxEncodeAminoRequest() : TxEncodeAminoRequest(nullptr) {}
  ~TxEncodeAminoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxEncodeAminoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxEncodeAminoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxEncodeAminoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxEncodeAminoRequest(const TxEncodeAminoRequest& from) : TxEncodeAminoRequest(nullptr, from) {}
  inline TxEncodeAminoRequest(TxEncodeAminoRequest&& from) noexcept
      : TxEncodeAminoRequest(nullptr, std::move(from)) {}
  inline TxEncodeAminoRequest& operator=(const TxEncodeAminoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxEncodeAminoRequest& operator=(TxEncodeAminoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxEncodeAminoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxEncodeAminoRequest* internal_default_instance() {
    return reinterpret_cast<const TxEncodeAminoRequest*>(
        &_TxEncodeAminoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(TxEncodeAminoRequest& a, TxEncodeAminoRequest& b) { a.Swap(&b); }
  inline void Swap(TxEncodeAminoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxEncodeAminoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxEncodeAminoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxEncodeAminoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxEncodeAminoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxEncodeAminoRequest& from) { TxEncodeAminoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxEncodeAminoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxEncodeAminoRequest"; }

 protected:
  explicit TxEncodeAminoRequest(::google::protobuf::Arena* arena);
  TxEncodeAminoRequest(::google::protobuf::Arena* arena, const TxEncodeAminoRequest& from);
  TxEncodeAminoRequest(::google::protobuf::Arena* arena, TxEncodeAminoRequest&& from) noexcept
      : TxEncodeAminoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAminoJsonFieldNumber = 1,
  };
  // string amino_json = 1 [json_name = "aminoJson"];
  void clear_amino_json() ;
  const std::string& amino_json() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_amino_json(Arg_&& arg, Args_... args);
  std::string* mutable_amino_json();
  PROTOBUF_NODISCARD std::string* release_amino_json();
  void set_allocated_amino_json(std::string* value);

  private:
  const std::string& _internal_amino_json() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_amino_json(
      const std::string& value);
  std::string* _internal_mutable_amino_json();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxEncodeAminoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxEncodeAminoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr amino_json_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxDecodeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxDecodeRequest) */ {
 public:
  inline TxDecodeRequest() : TxDecodeRequest(nullptr) {}
  ~TxDecodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxDecodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxDecodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxDecodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxDecodeRequest(const TxDecodeRequest& from) : TxDecodeRequest(nullptr, from) {}
  inline TxDecodeRequest(TxDecodeRequest&& from) noexcept
      : TxDecodeRequest(nullptr, std::move(from)) {}
  inline TxDecodeRequest& operator=(const TxDecodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxDecodeRequest& operator=(TxDecodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxDecodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxDecodeRequest* internal_default_instance() {
    return reinterpret_cast<const TxDecodeRequest*>(
        &_TxDecodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(TxDecodeRequest& a, TxDecodeRequest& b) { a.Swap(&b); }
  inline void Swap(TxDecodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxDecodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxDecodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxDecodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxDecodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxDecodeRequest& from) { TxDecodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxDecodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxDecodeRequest"; }

 protected:
  explicit TxDecodeRequest(::google::protobuf::Arena* arena);
  TxDecodeRequest(::google::protobuf::Arena* arena, const TxDecodeRequest& from);
  TxDecodeRequest(::google::protobuf::Arena* arena, TxDecodeRequest&& from) noexcept
      : TxDecodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxBytesFieldNumber = 1,
  };
  // bytes tx_bytes = 1 [json_name = "txBytes"];
  void clear_tx_bytes() ;
  const std::string& tx_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tx_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_tx_bytes();
  PROTOBUF_NODISCARD std::string* release_tx_bytes();
  void set_allocated_tx_bytes(std::string* value);

  private:
  const std::string& _internal_tx_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tx_bytes(
      const std::string& value);
  std::string* _internal_mutable_tx_bytes();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxDecodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxDecodeRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr tx_bytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxDecodeAminoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxDecodeAminoResponse) */ {
 public:
  inline TxDecodeAminoResponse() : TxDecodeAminoResponse(nullptr) {}
  ~TxDecodeAminoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxDecodeAminoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxDecodeAminoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxDecodeAminoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxDecodeAminoResponse(const TxDecodeAminoResponse& from) : TxDecodeAminoResponse(nullptr, from) {}
  inline TxDecodeAminoResponse(TxDecodeAminoResponse&& from) noexcept
      : TxDecodeAminoResponse(nullptr, std::move(from)) {}
  inline TxDecodeAminoResponse& operator=(const TxDecodeAminoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxDecodeAminoResponse& operator=(TxDecodeAminoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxDecodeAminoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxDecodeAminoResponse* internal_default_instance() {
    return reinterpret_cast<const TxDecodeAminoResponse*>(
        &_TxDecodeAminoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(TxDecodeAminoResponse& a, TxDecodeAminoResponse& b) { a.Swap(&b); }
  inline void Swap(TxDecodeAminoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxDecodeAminoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxDecodeAminoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxDecodeAminoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxDecodeAminoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxDecodeAminoResponse& from) { TxDecodeAminoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxDecodeAminoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxDecodeAminoResponse"; }

 protected:
  explicit TxDecodeAminoResponse(::google::protobuf::Arena* arena);
  TxDecodeAminoResponse(::google::protobuf::Arena* arena, const TxDecodeAminoResponse& from);
  TxDecodeAminoResponse(::google::protobuf::Arena* arena, TxDecodeAminoResponse&& from) noexcept
      : TxDecodeAminoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAminoJsonFieldNumber = 1,
  };
  // string amino_json = 1 [json_name = "aminoJson"];
  void clear_amino_json() ;
  const std::string& amino_json() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_amino_json(Arg_&& arg, Args_... args);
  std::string* mutable_amino_json();
  PROTOBUF_NODISCARD std::string* release_amino_json();
  void set_allocated_amino_json(std::string* value);

  private:
  const std::string& _internal_amino_json() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_amino_json(
      const std::string& value);
  std::string* _internal_mutable_amino_json();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxDecodeAminoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxDecodeAminoResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr amino_json_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxDecodeAminoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxDecodeAminoRequest) */ {
 public:
  inline TxDecodeAminoRequest() : TxDecodeAminoRequest(nullptr) {}
  ~TxDecodeAminoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxDecodeAminoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxDecodeAminoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxDecodeAminoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxDecodeAminoRequest(const TxDecodeAminoRequest& from) : TxDecodeAminoRequest(nullptr, from) {}
  inline TxDecodeAminoRequest(TxDecodeAminoRequest&& from) noexcept
      : TxDecodeAminoRequest(nullptr, std::move(from)) {}
  inline TxDecodeAminoRequest& operator=(const TxDecodeAminoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxDecodeAminoRequest& operator=(TxDecodeAminoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxDecodeAminoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxDecodeAminoRequest* internal_default_instance() {
    return reinterpret_cast<const TxDecodeAminoRequest*>(
        &_TxDecodeAminoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(TxDecodeAminoRequest& a, TxDecodeAminoRequest& b) { a.Swap(&b); }
  inline void Swap(TxDecodeAminoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxDecodeAminoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxDecodeAminoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxDecodeAminoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxDecodeAminoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxDecodeAminoRequest& from) { TxDecodeAminoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxDecodeAminoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxDecodeAminoRequest"; }

 protected:
  explicit TxDecodeAminoRequest(::google::protobuf::Arena* arena);
  TxDecodeAminoRequest(::google::protobuf::Arena* arena, const TxDecodeAminoRequest& from);
  TxDecodeAminoRequest(::google::protobuf::Arena* arena, TxDecodeAminoRequest&& from) noexcept
      : TxDecodeAminoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAminoBinaryFieldNumber = 1,
  };
  // bytes amino_binary = 1 [json_name = "aminoBinary"];
  void clear_amino_binary() ;
  const std::string& amino_binary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_amino_binary(Arg_&& arg, Args_... args);
  std::string* mutable_amino_binary();
  PROTOBUF_NODISCARD std::string* release_amino_binary();
  void set_allocated_amino_binary(std::string* value);

  private:
  const std::string& _internal_amino_binary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_amino_binary(
      const std::string& value);
  std::string* _internal_mutable_amino_binary();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxDecodeAminoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxDecodeAminoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr amino_binary_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class GetTxRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.GetTxRequest) */ {
 public:
  inline GetTxRequest() : GetTxRequest(nullptr) {}
  ~GetTxRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTxRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTxRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTxRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTxRequest(const GetTxRequest& from) : GetTxRequest(nullptr, from) {}
  inline GetTxRequest(GetTxRequest&& from) noexcept
      : GetTxRequest(nullptr, std::move(from)) {}
  inline GetTxRequest& operator=(const GetTxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTxRequest& operator=(GetTxRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTxRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTxRequest* internal_default_instance() {
    return reinterpret_cast<const GetTxRequest*>(
        &_GetTxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetTxRequest& a, GetTxRequest& b) { a.Swap(&b); }
  inline void Swap(GetTxRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTxRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTxRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTxRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTxRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTxRequest& from) { GetTxRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTxRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.GetTxRequest"; }

 protected:
  explicit GetTxRequest(::google::protobuf::Arena* arena);
  GetTxRequest(::google::protobuf::Arena* arena, const GetTxRequest& from);
  GetTxRequest(::google::protobuf::Arena* arena, GetTxRequest&& from) noexcept
      : GetTxRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
  };
  // string hash = 1 [json_name = "hash"];
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.GetTxRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTxRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class BroadcastTxRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.BroadcastTxRequest) */ {
 public:
  inline BroadcastTxRequest() : BroadcastTxRequest(nullptr) {}
  ~BroadcastTxRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BroadcastTxRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BroadcastTxRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BroadcastTxRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BroadcastTxRequest(const BroadcastTxRequest& from) : BroadcastTxRequest(nullptr, from) {}
  inline BroadcastTxRequest(BroadcastTxRequest&& from) noexcept
      : BroadcastTxRequest(nullptr, std::move(from)) {}
  inline BroadcastTxRequest& operator=(const BroadcastTxRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastTxRequest& operator=(BroadcastTxRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BroadcastTxRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BroadcastTxRequest* internal_default_instance() {
    return reinterpret_cast<const BroadcastTxRequest*>(
        &_BroadcastTxRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BroadcastTxRequest& a, BroadcastTxRequest& b) { a.Swap(&b); }
  inline void Swap(BroadcastTxRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BroadcastTxRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BroadcastTxRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BroadcastTxRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BroadcastTxRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BroadcastTxRequest& from) { BroadcastTxRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BroadcastTxRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.BroadcastTxRequest"; }

 protected:
  explicit BroadcastTxRequest(::google::protobuf::Arena* arena);
  BroadcastTxRequest(::google::protobuf::Arena* arena, const BroadcastTxRequest& from);
  BroadcastTxRequest(::google::protobuf::Arena* arena, BroadcastTxRequest&& from) noexcept
      : BroadcastTxRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxBytesFieldNumber = 1,
    kModeFieldNumber = 2,
  };
  // bytes tx_bytes = 1 [json_name = "txBytes"];
  void clear_tx_bytes() ;
  const std::string& tx_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tx_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_tx_bytes();
  PROTOBUF_NODISCARD std::string* release_tx_bytes();
  void set_allocated_tx_bytes(std::string* value);

  private:
  const std::string& _internal_tx_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tx_bytes(
      const std::string& value);
  std::string* _internal_mutable_tx_bytes();

  public:
  // .cosmos.tx.v1beta1.BroadcastMode mode = 2 [json_name = "mode"];
  void clear_mode() ;
  ::cosmos::tx::v1beta1::BroadcastMode mode() const;
  void set_mode(::cosmos::tx::v1beta1::BroadcastMode value);

  private:
  ::cosmos::tx::v1beta1::BroadcastMode _internal_mode() const;
  void _internal_set_mode(::cosmos::tx::v1beta1::BroadcastMode value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.BroadcastTxRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BroadcastTxRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr tx_bytes_;
    int mode_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class GetTxsEventRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.GetTxsEventRequest) */ {
 public:
  inline GetTxsEventRequest() : GetTxsEventRequest(nullptr) {}
  ~GetTxsEventRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTxsEventRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTxsEventRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTxsEventRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTxsEventRequest(const GetTxsEventRequest& from) : GetTxsEventRequest(nullptr, from) {}
  inline GetTxsEventRequest(GetTxsEventRequest&& from) noexcept
      : GetTxsEventRequest(nullptr, std::move(from)) {}
  inline GetTxsEventRequest& operator=(const GetTxsEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTxsEventRequest& operator=(GetTxsEventRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTxsEventRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTxsEventRequest* internal_default_instance() {
    return reinterpret_cast<const GetTxsEventRequest*>(
        &_GetTxsEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetTxsEventRequest& a, GetTxsEventRequest& b) { a.Swap(&b); }
  inline void Swap(GetTxsEventRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTxsEventRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTxsEventRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTxsEventRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTxsEventRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTxsEventRequest& from) { GetTxsEventRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTxsEventRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.GetTxsEventRequest"; }

 protected:
  explicit GetTxsEventRequest(::google::protobuf::Arena* arena);
  GetTxsEventRequest(::google::protobuf::Arena* arena, const GetTxsEventRequest& from);
  GetTxsEventRequest(::google::protobuf::Arena* arena, GetTxsEventRequest&& from) noexcept
      : GetTxsEventRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventsFieldNumber = 1,
    kQueryFieldNumber = 6,
    kPaginationFieldNumber = 2,
    kPageFieldNumber = 4,
    kLimitFieldNumber = 5,
    kOrderByFieldNumber = 3,
  };
  // repeated string events = 1 [json_name = "events", deprecated = true];
  [[deprecated]]  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  [[deprecated]]  void clear_events() ;
  [[deprecated]] const std::string& events(int index) const;
  [[deprecated]] std::string* mutable_events(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_events(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_events();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_events(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& events() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_events();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_events();

  public:
  // string query = 6 [json_name = "query", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
  void clear_query() ;
  const std::string& query() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_query(Arg_&& arg, Args_... args);
  std::string* mutable_query();
  PROTOBUF_NODISCARD std::string* release_query();
  void set_allocated_query(std::string* value);

  private:
  const std::string& _internal_query() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query(
      const std::string& value);
  std::string* _internal_mutable_query();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination", deprecated = true];
  [[deprecated]]  bool has_pagination() const;
  [[deprecated]]  void clear_pagination() ;
  [[deprecated]] const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  [[deprecated]] PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  [[deprecated]] ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  [[deprecated]] void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  [[deprecated]] void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  [[deprecated]] ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // uint64 page = 4 [json_name = "page"];
  void clear_page() ;
  ::uint64_t page() const;
  void set_page(::uint64_t value);

  private:
  ::uint64_t _internal_page() const;
  void _internal_set_page(::uint64_t value);

  public:
  // uint64 limit = 5 [json_name = "limit"];
  void clear_limit() ;
  ::uint64_t limit() const;
  void set_limit(::uint64_t value);

  private:
  ::uint64_t _internal_limit() const;
  void _internal_set_limit(::uint64_t value);

  public:
  // .cosmos.tx.v1beta1.OrderBy order_by = 3 [json_name = "orderBy"];
  void clear_order_by() ;
  ::cosmos::tx::v1beta1::OrderBy order_by() const;
  void set_order_by(::cosmos::tx::v1beta1::OrderBy value);

  private:
  ::cosmos::tx::v1beta1::OrderBy _internal_order_by() const;
  void _internal_set_order_by(::cosmos::tx::v1beta1::OrderBy value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.GetTxsEventRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTxsEventRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> events_;
    ::google::protobuf::internal::ArenaStringPtr query_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::uint64_t page_;
    ::uint64_t limit_;
    int order_by_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class GetBlockWithTxsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.GetBlockWithTxsRequest) */ {
 public:
  inline GetBlockWithTxsRequest() : GetBlockWithTxsRequest(nullptr) {}
  ~GetBlockWithTxsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBlockWithTxsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBlockWithTxsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockWithTxsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockWithTxsRequest(const GetBlockWithTxsRequest& from) : GetBlockWithTxsRequest(nullptr, from) {}
  inline GetBlockWithTxsRequest(GetBlockWithTxsRequest&& from) noexcept
      : GetBlockWithTxsRequest(nullptr, std::move(from)) {}
  inline GetBlockWithTxsRequest& operator=(const GetBlockWithTxsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockWithTxsRequest& operator=(GetBlockWithTxsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockWithTxsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockWithTxsRequest* internal_default_instance() {
    return reinterpret_cast<const GetBlockWithTxsRequest*>(
        &_GetBlockWithTxsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GetBlockWithTxsRequest& a, GetBlockWithTxsRequest& b) { a.Swap(&b); }
  inline void Swap(GetBlockWithTxsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockWithTxsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockWithTxsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockWithTxsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockWithTxsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockWithTxsRequest& from) { GetBlockWithTxsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBlockWithTxsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.GetBlockWithTxsRequest"; }

 protected:
  explicit GetBlockWithTxsRequest(::google::protobuf::Arena* arena);
  GetBlockWithTxsRequest(::google::protobuf::Arena* arena, const GetBlockWithTxsRequest& from);
  GetBlockWithTxsRequest(::google::protobuf::Arena* arena, GetBlockWithTxsRequest&& from) noexcept
      : GetBlockWithTxsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 2,
    kHeightFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // int64 height = 1 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.GetBlockWithTxsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockWithTxsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::int64_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class SimulateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.SimulateResponse) */ {
 public:
  inline SimulateResponse() : SimulateResponse(nullptr) {}
  ~SimulateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SimulateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SimulateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SimulateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SimulateResponse(const SimulateResponse& from) : SimulateResponse(nullptr, from) {}
  inline SimulateResponse(SimulateResponse&& from) noexcept
      : SimulateResponse(nullptr, std::move(from)) {}
  inline SimulateResponse& operator=(const SimulateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulateResponse& operator=(SimulateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SimulateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SimulateResponse* internal_default_instance() {
    return reinterpret_cast<const SimulateResponse*>(
        &_SimulateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SimulateResponse& a, SimulateResponse& b) { a.Swap(&b); }
  inline void Swap(SimulateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SimulateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SimulateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SimulateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SimulateResponse& from) { SimulateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SimulateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.SimulateResponse"; }

 protected:
  explicit SimulateResponse(::google::protobuf::Arena* arena);
  SimulateResponse(::google::protobuf::Arena* arena, const SimulateResponse& from);
  SimulateResponse(::google::protobuf::Arena* arena, SimulateResponse&& from) noexcept
      : SimulateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGasInfoFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo"];
  bool has_gas_info() const;
  void clear_gas_info() ;
  const ::cosmos::base::abci::v1beta1::GasInfo& gas_info() const;
  PROTOBUF_NODISCARD ::cosmos::base::abci::v1beta1::GasInfo* release_gas_info();
  ::cosmos::base::abci::v1beta1::GasInfo* mutable_gas_info();
  void set_allocated_gas_info(::cosmos::base::abci::v1beta1::GasInfo* value);
  void unsafe_arena_set_allocated_gas_info(::cosmos::base::abci::v1beta1::GasInfo* value);
  ::cosmos::base::abci::v1beta1::GasInfo* unsafe_arena_release_gas_info();

  private:
  const ::cosmos::base::abci::v1beta1::GasInfo& _internal_gas_info() const;
  ::cosmos::base::abci::v1beta1::GasInfo* _internal_mutable_gas_info();

  public:
  // .cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];
  bool has_result() const;
  void clear_result() ;
  const ::cosmos::base::abci::v1beta1::Result& result() const;
  PROTOBUF_NODISCARD ::cosmos::base::abci::v1beta1::Result* release_result();
  ::cosmos::base::abci::v1beta1::Result* mutable_result();
  void set_allocated_result(::cosmos::base::abci::v1beta1::Result* value);
  void unsafe_arena_set_allocated_result(::cosmos::base::abci::v1beta1::Result* value);
  ::cosmos::base::abci::v1beta1::Result* unsafe_arena_release_result();

  private:
  const ::cosmos::base::abci::v1beta1::Result& _internal_result() const;
  ::cosmos::base::abci::v1beta1::Result* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.SimulateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SimulateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::abci::v1beta1::GasInfo* gas_info_;
    ::cosmos::base::abci::v1beta1::Result* result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class BroadcastTxResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.BroadcastTxResponse) */ {
 public:
  inline BroadcastTxResponse() : BroadcastTxResponse(nullptr) {}
  ~BroadcastTxResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BroadcastTxResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BroadcastTxResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BroadcastTxResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BroadcastTxResponse(const BroadcastTxResponse& from) : BroadcastTxResponse(nullptr, from) {}
  inline BroadcastTxResponse(BroadcastTxResponse&& from) noexcept
      : BroadcastTxResponse(nullptr, std::move(from)) {}
  inline BroadcastTxResponse& operator=(const BroadcastTxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BroadcastTxResponse& operator=(BroadcastTxResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BroadcastTxResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BroadcastTxResponse* internal_default_instance() {
    return reinterpret_cast<const BroadcastTxResponse*>(
        &_BroadcastTxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BroadcastTxResponse& a, BroadcastTxResponse& b) { a.Swap(&b); }
  inline void Swap(BroadcastTxResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BroadcastTxResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BroadcastTxResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BroadcastTxResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BroadcastTxResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BroadcastTxResponse& from) { BroadcastTxResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BroadcastTxResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.BroadcastTxResponse"; }

 protected:
  explicit BroadcastTxResponse(::google::protobuf::Arena* arena);
  BroadcastTxResponse(::google::protobuf::Arena* arena, const BroadcastTxResponse& from);
  BroadcastTxResponse(::google::protobuf::Arena* arena, BroadcastTxResponse&& from) noexcept
      : BroadcastTxResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxResponseFieldNumber = 1,
  };
  // .cosmos.base.abci.v1beta1.TxResponse tx_response = 1 [json_name = "txResponse"];
  bool has_tx_response() const;
  void clear_tx_response() ;
  const ::cosmos::base::abci::v1beta1::TxResponse& tx_response() const;
  PROTOBUF_NODISCARD ::cosmos::base::abci::v1beta1::TxResponse* release_tx_response();
  ::cosmos::base::abci::v1beta1::TxResponse* mutable_tx_response();
  void set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value);
  void unsafe_arena_set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value);
  ::cosmos::base::abci::v1beta1::TxResponse* unsafe_arena_release_tx_response();

  private:
  const ::cosmos::base::abci::v1beta1::TxResponse& _internal_tx_response() const;
  ::cosmos::base::abci::v1beta1::TxResponse* _internal_mutable_tx_response();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.BroadcastTxResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BroadcastTxResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::abci::v1beta1::TxResponse* tx_response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxEncodeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxEncodeRequest) */ {
 public:
  inline TxEncodeRequest() : TxEncodeRequest(nullptr) {}
  ~TxEncodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxEncodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxEncodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxEncodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxEncodeRequest(const TxEncodeRequest& from) : TxEncodeRequest(nullptr, from) {}
  inline TxEncodeRequest(TxEncodeRequest&& from) noexcept
      : TxEncodeRequest(nullptr, std::move(from)) {}
  inline TxEncodeRequest& operator=(const TxEncodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxEncodeRequest& operator=(TxEncodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxEncodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxEncodeRequest* internal_default_instance() {
    return reinterpret_cast<const TxEncodeRequest*>(
        &_TxEncodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(TxEncodeRequest& a, TxEncodeRequest& b) { a.Swap(&b); }
  inline void Swap(TxEncodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxEncodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxEncodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxEncodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxEncodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxEncodeRequest& from) { TxEncodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxEncodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxEncodeRequest"; }

 protected:
  explicit TxEncodeRequest(::google::protobuf::Arena* arena);
  TxEncodeRequest(::google::protobuf::Arena* arena, const TxEncodeRequest& from);
  TxEncodeRequest(::google::protobuf::Arena* arena, TxEncodeRequest&& from) noexcept
      : TxEncodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxFieldNumber = 1,
  };
  // .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx"];
  bool has_tx() const;
  void clear_tx() ;
  const ::cosmos::tx::v1beta1::Tx& tx() const;
  PROTOBUF_NODISCARD ::cosmos::tx::v1beta1::Tx* release_tx();
  ::cosmos::tx::v1beta1::Tx* mutable_tx();
  void set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  void unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  ::cosmos::tx::v1beta1::Tx* unsafe_arena_release_tx();

  private:
  const ::cosmos::tx::v1beta1::Tx& _internal_tx() const;
  ::cosmos::tx::v1beta1::Tx* _internal_mutable_tx();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxEncodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxEncodeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::tx::v1beta1::Tx* tx_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class TxDecodeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.TxDecodeResponse) */ {
 public:
  inline TxDecodeResponse() : TxDecodeResponse(nullptr) {}
  ~TxDecodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxDecodeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxDecodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxDecodeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxDecodeResponse(const TxDecodeResponse& from) : TxDecodeResponse(nullptr, from) {}
  inline TxDecodeResponse(TxDecodeResponse&& from) noexcept
      : TxDecodeResponse(nullptr, std::move(from)) {}
  inline TxDecodeResponse& operator=(const TxDecodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxDecodeResponse& operator=(TxDecodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxDecodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxDecodeResponse* internal_default_instance() {
    return reinterpret_cast<const TxDecodeResponse*>(
        &_TxDecodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(TxDecodeResponse& a, TxDecodeResponse& b) { a.Swap(&b); }
  inline void Swap(TxDecodeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxDecodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxDecodeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxDecodeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxDecodeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxDecodeResponse& from) { TxDecodeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxDecodeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.TxDecodeResponse"; }

 protected:
  explicit TxDecodeResponse(::google::protobuf::Arena* arena);
  TxDecodeResponse(::google::protobuf::Arena* arena, const TxDecodeResponse& from);
  TxDecodeResponse(::google::protobuf::Arena* arena, TxDecodeResponse&& from) noexcept
      : TxDecodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxFieldNumber = 1,
  };
  // .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx"];
  bool has_tx() const;
  void clear_tx() ;
  const ::cosmos::tx::v1beta1::Tx& tx() const;
  PROTOBUF_NODISCARD ::cosmos::tx::v1beta1::Tx* release_tx();
  ::cosmos::tx::v1beta1::Tx* mutable_tx();
  void set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  void unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  ::cosmos::tx::v1beta1::Tx* unsafe_arena_release_tx();

  private:
  const ::cosmos::tx::v1beta1::Tx& _internal_tx() const;
  ::cosmos::tx::v1beta1::Tx* _internal_mutable_tx();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.TxDecodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxDecodeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::tx::v1beta1::Tx* tx_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class SimulateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.SimulateRequest) */ {
 public:
  inline SimulateRequest() : SimulateRequest(nullptr) {}
  ~SimulateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SimulateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SimulateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SimulateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SimulateRequest(const SimulateRequest& from) : SimulateRequest(nullptr, from) {}
  inline SimulateRequest(SimulateRequest&& from) noexcept
      : SimulateRequest(nullptr, std::move(from)) {}
  inline SimulateRequest& operator=(const SimulateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SimulateRequest& operator=(SimulateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SimulateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SimulateRequest* internal_default_instance() {
    return reinterpret_cast<const SimulateRequest*>(
        &_SimulateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SimulateRequest& a, SimulateRequest& b) { a.Swap(&b); }
  inline void Swap(SimulateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SimulateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SimulateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SimulateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SimulateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SimulateRequest& from) { SimulateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SimulateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.SimulateRequest"; }

 protected:
  explicit SimulateRequest(::google::protobuf::Arena* arena);
  SimulateRequest(::google::protobuf::Arena* arena, const SimulateRequest& from);
  SimulateRequest(::google::protobuf::Arena* arena, SimulateRequest&& from) noexcept
      : SimulateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxBytesFieldNumber = 2,
    kTxFieldNumber = 1,
  };
  // bytes tx_bytes = 2 [json_name = "txBytes", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];
  void clear_tx_bytes() ;
  const std::string& tx_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tx_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_tx_bytes();
  PROTOBUF_NODISCARD std::string* release_tx_bytes();
  void set_allocated_tx_bytes(std::string* value);

  private:
  const std::string& _internal_tx_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tx_bytes(
      const std::string& value);
  std::string* _internal_mutable_tx_bytes();

  public:
  // .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx", deprecated = true];
  [[deprecated]]  bool has_tx() const;
  [[deprecated]]  void clear_tx() ;
  [[deprecated]] const ::cosmos::tx::v1beta1::Tx& tx() const;
  [[deprecated]] PROTOBUF_NODISCARD ::cosmos::tx::v1beta1::Tx* release_tx();
  [[deprecated]] ::cosmos::tx::v1beta1::Tx* mutable_tx();
  [[deprecated]] void set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  [[deprecated]] void unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  [[deprecated]] ::cosmos::tx::v1beta1::Tx* unsafe_arena_release_tx();

  private:
  const ::cosmos::tx::v1beta1::Tx& _internal_tx() const;
  ::cosmos::tx::v1beta1::Tx* _internal_mutable_tx();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.SimulateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SimulateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr tx_bytes_;
    ::cosmos::tx::v1beta1::Tx* tx_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class GetTxsEventResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.GetTxsEventResponse) */ {
 public:
  inline GetTxsEventResponse() : GetTxsEventResponse(nullptr) {}
  ~GetTxsEventResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTxsEventResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTxsEventResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTxsEventResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTxsEventResponse(const GetTxsEventResponse& from) : GetTxsEventResponse(nullptr, from) {}
  inline GetTxsEventResponse(GetTxsEventResponse&& from) noexcept
      : GetTxsEventResponse(nullptr, std::move(from)) {}
  inline GetTxsEventResponse& operator=(const GetTxsEventResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTxsEventResponse& operator=(GetTxsEventResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTxsEventResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTxsEventResponse* internal_default_instance() {
    return reinterpret_cast<const GetTxsEventResponse*>(
        &_GetTxsEventResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetTxsEventResponse& a, GetTxsEventResponse& b) { a.Swap(&b); }
  inline void Swap(GetTxsEventResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTxsEventResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTxsEventResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTxsEventResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTxsEventResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTxsEventResponse& from) { GetTxsEventResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTxsEventResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.GetTxsEventResponse"; }

 protected:
  explicit GetTxsEventResponse(::google::protobuf::Arena* arena);
  GetTxsEventResponse(::google::protobuf::Arena* arena, const GetTxsEventResponse& from);
  GetTxsEventResponse(::google::protobuf::Arena* arena, GetTxsEventResponse&& from) noexcept
      : GetTxsEventResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxsFieldNumber = 1,
    kTxResponsesFieldNumber = 2,
    kPaginationFieldNumber = 3,
    kTotalFieldNumber = 4,
  };
  // repeated .cosmos.tx.v1beta1.Tx txs = 1 [json_name = "txs"];
  int txs_size() const;
  private:
  int _internal_txs_size() const;

  public:
  void clear_txs() ;
  ::cosmos::tx::v1beta1::Tx* mutable_txs(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>* mutable_txs();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>& _internal_txs() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>* _internal_mutable_txs();
  public:
  const ::cosmos::tx::v1beta1::Tx& txs(int index) const;
  ::cosmos::tx::v1beta1::Tx* add_txs();
  const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>& txs() const;
  // repeated .cosmos.base.abci.v1beta1.TxResponse tx_responses = 2 [json_name = "txResponses"];
  int tx_responses_size() const;
  private:
  int _internal_tx_responses_size() const;

  public:
  void clear_tx_responses() ;
  ::cosmos::base::abci::v1beta1::TxResponse* mutable_tx_responses(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>* mutable_tx_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>& _internal_tx_responses() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>* _internal_mutable_tx_responses();
  public:
  const ::cosmos::base::abci::v1beta1::TxResponse& tx_responses(int index) const;
  ::cosmos::base::abci::v1beta1::TxResponse* add_tx_responses();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>& tx_responses() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination", deprecated = true];
  [[deprecated]]  bool has_pagination() const;
  [[deprecated]]  void clear_pagination() ;
  [[deprecated]] const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  [[deprecated]] PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  [[deprecated]] ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  [[deprecated]] void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  [[deprecated]] void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  [[deprecated]] ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // uint64 total = 4 [json_name = "total"];
  void clear_total() ;
  ::uint64_t total() const;
  void set_total(::uint64_t value);

  private:
  ::uint64_t _internal_total() const;
  void _internal_set_total(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.GetTxsEventResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTxsEventResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::tx::v1beta1::Tx > txs_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::abci::v1beta1::TxResponse > tx_responses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    ::uint64_t total_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class GetTxResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.GetTxResponse) */ {
 public:
  inline GetTxResponse() : GetTxResponse(nullptr) {}
  ~GetTxResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTxResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTxResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTxResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTxResponse(const GetTxResponse& from) : GetTxResponse(nullptr, from) {}
  inline GetTxResponse(GetTxResponse&& from) noexcept
      : GetTxResponse(nullptr, std::move(from)) {}
  inline GetTxResponse& operator=(const GetTxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTxResponse& operator=(GetTxResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTxResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTxResponse* internal_default_instance() {
    return reinterpret_cast<const GetTxResponse*>(
        &_GetTxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetTxResponse& a, GetTxResponse& b) { a.Swap(&b); }
  inline void Swap(GetTxResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTxResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTxResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTxResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTxResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTxResponse& from) { GetTxResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTxResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.GetTxResponse"; }

 protected:
  explicit GetTxResponse(::google::protobuf::Arena* arena);
  GetTxResponse(::google::protobuf::Arena* arena, const GetTxResponse& from);
  GetTxResponse(::google::protobuf::Arena* arena, GetTxResponse&& from) noexcept
      : GetTxResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxFieldNumber = 1,
    kTxResponseFieldNumber = 2,
  };
  // .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx"];
  bool has_tx() const;
  void clear_tx() ;
  const ::cosmos::tx::v1beta1::Tx& tx() const;
  PROTOBUF_NODISCARD ::cosmos::tx::v1beta1::Tx* release_tx();
  ::cosmos::tx::v1beta1::Tx* mutable_tx();
  void set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  void unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value);
  ::cosmos::tx::v1beta1::Tx* unsafe_arena_release_tx();

  private:
  const ::cosmos::tx::v1beta1::Tx& _internal_tx() const;
  ::cosmos::tx::v1beta1::Tx* _internal_mutable_tx();

  public:
  // .cosmos.base.abci.v1beta1.TxResponse tx_response = 2 [json_name = "txResponse"];
  bool has_tx_response() const;
  void clear_tx_response() ;
  const ::cosmos::base::abci::v1beta1::TxResponse& tx_response() const;
  PROTOBUF_NODISCARD ::cosmos::base::abci::v1beta1::TxResponse* release_tx_response();
  ::cosmos::base::abci::v1beta1::TxResponse* mutable_tx_response();
  void set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value);
  void unsafe_arena_set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value);
  ::cosmos::base::abci::v1beta1::TxResponse* unsafe_arena_release_tx_response();

  private:
  const ::cosmos::base::abci::v1beta1::TxResponse& _internal_tx_response() const;
  ::cosmos::base::abci::v1beta1::TxResponse* _internal_mutable_tx_response();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.GetTxResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTxResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::tx::v1beta1::Tx* tx_;
    ::cosmos::base::abci::v1beta1::TxResponse* tx_response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};
// -------------------------------------------------------------------

class GetBlockWithTxsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.tx.v1beta1.GetBlockWithTxsResponse) */ {
 public:
  inline GetBlockWithTxsResponse() : GetBlockWithTxsResponse(nullptr) {}
  ~GetBlockWithTxsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBlockWithTxsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBlockWithTxsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockWithTxsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockWithTxsResponse(const GetBlockWithTxsResponse& from) : GetBlockWithTxsResponse(nullptr, from) {}
  inline GetBlockWithTxsResponse(GetBlockWithTxsResponse&& from) noexcept
      : GetBlockWithTxsResponse(nullptr, std::move(from)) {}
  inline GetBlockWithTxsResponse& operator=(const GetBlockWithTxsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockWithTxsResponse& operator=(GetBlockWithTxsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockWithTxsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockWithTxsResponse* internal_default_instance() {
    return reinterpret_cast<const GetBlockWithTxsResponse*>(
        &_GetBlockWithTxsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GetBlockWithTxsResponse& a, GetBlockWithTxsResponse& b) { a.Swap(&b); }
  inline void Swap(GetBlockWithTxsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockWithTxsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockWithTxsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockWithTxsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockWithTxsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockWithTxsResponse& from) { GetBlockWithTxsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBlockWithTxsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.tx.v1beta1.GetBlockWithTxsResponse"; }

 protected:
  explicit GetBlockWithTxsResponse(::google::protobuf::Arena* arena);
  GetBlockWithTxsResponse(::google::protobuf::Arena* arena, const GetBlockWithTxsResponse& from);
  GetBlockWithTxsResponse(::google::protobuf::Arena* arena, GetBlockWithTxsResponse&& from) noexcept
      : GetBlockWithTxsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxsFieldNumber = 1,
    kBlockIdFieldNumber = 2,
    kBlockFieldNumber = 3,
    kPaginationFieldNumber = 4,
  };
  // repeated .cosmos.tx.v1beta1.Tx txs = 1 [json_name = "txs"];
  int txs_size() const;
  private:
  int _internal_txs_size() const;

  public:
  void clear_txs() ;
  ::cosmos::tx::v1beta1::Tx* mutable_txs(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>* mutable_txs();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>& _internal_txs() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>* _internal_mutable_txs();
  public:
  const ::cosmos::tx::v1beta1::Tx& txs(int index) const;
  ::cosmos::tx::v1beta1::Tx* add_txs();
  const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>& txs() const;
  // .tendermint.types.BlockID block_id = 2 [json_name = "blockId"];
  bool has_block_id() const;
  void clear_block_id() ;
  const ::tendermint::types::BlockID& block_id() const;
  PROTOBUF_NODISCARD ::tendermint::types::BlockID* release_block_id();
  ::tendermint::types::BlockID* mutable_block_id();
  void set_allocated_block_id(::tendermint::types::BlockID* value);
  void unsafe_arena_set_allocated_block_id(::tendermint::types::BlockID* value);
  ::tendermint::types::BlockID* unsafe_arena_release_block_id();

  private:
  const ::tendermint::types::BlockID& _internal_block_id() const;
  ::tendermint::types::BlockID* _internal_mutable_block_id();

  public:
  // .tendermint.types.Block block = 3 [json_name = "block"];
  bool has_block() const;
  void clear_block() ;
  const ::tendermint::types::Block& block() const;
  PROTOBUF_NODISCARD ::tendermint::types::Block* release_block();
  ::tendermint::types::Block* mutable_block();
  void set_allocated_block(::tendermint::types::Block* value);
  void unsafe_arena_set_allocated_block(::tendermint::types::Block* value);
  ::tendermint::types::Block* unsafe_arena_release_block();

  private:
  const ::tendermint::types::Block& _internal_block() const;
  ::tendermint::types::Block* _internal_mutable_block();

  public:
  // .cosmos.base.query.v1beta1.PageResponse pagination = 4 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.tx.v1beta1.GetBlockWithTxsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockWithTxsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::tx::v1beta1::Tx > txs_;
    ::tendermint::types::BlockID* block_id_;
    ::tendermint::types::Block* block_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ftx_2fv1beta1_2fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetTxsEventRequest

// repeated string events = 1 [json_name = "events", deprecated = true];
inline int GetTxsEventRequest::_internal_events_size() const {
  return _internal_events().size();
}
inline int GetTxsEventRequest::events_size() const {
  return _internal_events_size();
}
inline void GetTxsEventRequest::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
inline std::string* GetTxsEventRequest::add_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.tx.v1beta1.GetTxsEventRequest.events)
  return _s;
}
inline const std::string& GetTxsEventRequest::events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventRequest.events)
  return _internal_events().Get(index);
}
inline std::string* GetTxsEventRequest::mutable_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxsEventRequest.events)
  return _internal_mutable_events()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetTxsEventRequest::set_events(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_events()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxsEventRequest.events)
}
template <typename Arg_, typename... Args_>
inline void GetTxsEventRequest::add_events(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_events(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.tx.v1beta1.GetTxsEventRequest.events)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetTxsEventRequest::events() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.tx.v1beta1.GetTxsEventRequest.events)
  return _internal_events();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetTxsEventRequest::mutable_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.tx.v1beta1.GetTxsEventRequest.events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_events();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetTxsEventRequest::_internal_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetTxsEventRequest::_internal_mutable_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.events_;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination", deprecated = true];
inline bool GetTxsEventRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetTxsEventRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetTxsEventRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventRequest.pagination)
  return _internal_pagination();
}
inline void GetTxsEventRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetTxsEventRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetTxsEventRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetTxsEventRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetTxsEventRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetTxsEventRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetTxsEventRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxsEventRequest.pagination)
  return _msg;
}
inline void GetTxsEventRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetTxsEventRequest.pagination)
}

// .cosmos.tx.v1beta1.OrderBy order_by = 3 [json_name = "orderBy"];
inline void GetTxsEventRequest::clear_order_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_ = 0;
}
inline ::cosmos::tx::v1beta1::OrderBy GetTxsEventRequest::order_by() const {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventRequest.order_by)
  return _internal_order_by();
}
inline void GetTxsEventRequest::set_order_by(::cosmos::tx::v1beta1::OrderBy value) {
  _internal_set_order_by(value);
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxsEventRequest.order_by)
}
inline ::cosmos::tx::v1beta1::OrderBy GetTxsEventRequest::_internal_order_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::cosmos::tx::v1beta1::OrderBy>(_impl_.order_by_);
}
inline void GetTxsEventRequest::_internal_set_order_by(::cosmos::tx::v1beta1::OrderBy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_ = value;
}

// uint64 page = 4 [json_name = "page"];
inline void GetTxsEventRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = ::uint64_t{0u};
}
inline ::uint64_t GetTxsEventRequest::page() const {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventRequest.page)
  return _internal_page();
}
inline void GetTxsEventRequest::set_page(::uint64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxsEventRequest.page)
}
inline ::uint64_t GetTxsEventRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void GetTxsEventRequest::_internal_set_page(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// uint64 limit = 5 [json_name = "limit"];
inline void GetTxsEventRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::uint64_t{0u};
}
inline ::uint64_t GetTxsEventRequest::limit() const {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventRequest.limit)
  return _internal_limit();
}
inline void GetTxsEventRequest::set_limit(::uint64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxsEventRequest.limit)
}
inline ::uint64_t GetTxsEventRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetTxsEventRequest::_internal_set_limit(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// string query = 6 [json_name = "query", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
inline void GetTxsEventRequest::clear_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.ClearToEmpty();
}
inline const std::string& GetTxsEventRequest::query() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventRequest.query)
  return _internal_query();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTxsEventRequest::set_query(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxsEventRequest.query)
}
inline std::string* GetTxsEventRequest::mutable_query() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxsEventRequest.query)
  return _s;
}
inline const std::string& GetTxsEventRequest::_internal_query() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_.Get();
}
inline void GetTxsEventRequest::_internal_set_query(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.Set(value, GetArena());
}
inline std::string* GetTxsEventRequest::_internal_mutable_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.query_.Mutable( GetArena());
}
inline std::string* GetTxsEventRequest::release_query() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetTxsEventRequest.query)
  return _impl_.query_.Release();
}
inline void GetTxsEventRequest::set_allocated_query(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.query_.IsDefault()) {
    _impl_.query_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetTxsEventRequest.query)
}

// -------------------------------------------------------------------

// GetTxsEventResponse

// repeated .cosmos.tx.v1beta1.Tx txs = 1 [json_name = "txs"];
inline int GetTxsEventResponse::_internal_txs_size() const {
  return _internal_txs().size();
}
inline int GetTxsEventResponse::txs_size() const {
  return _internal_txs_size();
}
inline ::cosmos::tx::v1beta1::Tx* GetTxsEventResponse::mutable_txs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxsEventResponse.txs)
  return _internal_mutable_txs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>* GetTxsEventResponse::mutable_txs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.tx.v1beta1.GetTxsEventResponse.txs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_txs();
}
inline const ::cosmos::tx::v1beta1::Tx& GetTxsEventResponse::txs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventResponse.txs)
  return _internal_txs().Get(index);
}
inline ::cosmos::tx::v1beta1::Tx* GetTxsEventResponse::add_txs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::tx::v1beta1::Tx* _add = _internal_mutable_txs()->Add();
  // @@protoc_insertion_point(field_add:cosmos.tx.v1beta1.GetTxsEventResponse.txs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>& GetTxsEventResponse::txs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.tx.v1beta1.GetTxsEventResponse.txs)
  return _internal_txs();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>&
GetTxsEventResponse::_internal_txs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txs_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>*
GetTxsEventResponse::_internal_mutable_txs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.txs_;
}

// repeated .cosmos.base.abci.v1beta1.TxResponse tx_responses = 2 [json_name = "txResponses"];
inline int GetTxsEventResponse::_internal_tx_responses_size() const {
  return _internal_tx_responses().size();
}
inline int GetTxsEventResponse::tx_responses_size() const {
  return _internal_tx_responses_size();
}
inline ::cosmos::base::abci::v1beta1::TxResponse* GetTxsEventResponse::mutable_tx_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxsEventResponse.tx_responses)
  return _internal_mutable_tx_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>* GetTxsEventResponse::mutable_tx_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.tx.v1beta1.GetTxsEventResponse.tx_responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tx_responses();
}
inline const ::cosmos::base::abci::v1beta1::TxResponse& GetTxsEventResponse::tx_responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventResponse.tx_responses)
  return _internal_tx_responses().Get(index);
}
inline ::cosmos::base::abci::v1beta1::TxResponse* GetTxsEventResponse::add_tx_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::abci::v1beta1::TxResponse* _add = _internal_mutable_tx_responses()->Add();
  // @@protoc_insertion_point(field_add:cosmos.tx.v1beta1.GetTxsEventResponse.tx_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>& GetTxsEventResponse::tx_responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.tx.v1beta1.GetTxsEventResponse.tx_responses)
  return _internal_tx_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>&
GetTxsEventResponse::_internal_tx_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::abci::v1beta1::TxResponse>*
GetTxsEventResponse::_internal_mutable_tx_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tx_responses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination", deprecated = true];
inline bool GetTxsEventResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetTxsEventResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetTxsEventResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventResponse.pagination)
  return _internal_pagination();
}
inline void GetTxsEventResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetTxsEventResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetTxsEventResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetTxsEventResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetTxsEventResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetTxsEventResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetTxsEventResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxsEventResponse.pagination)
  return _msg;
}
inline void GetTxsEventResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetTxsEventResponse.pagination)
}

// uint64 total = 4 [json_name = "total"];
inline void GetTxsEventResponse::clear_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = ::uint64_t{0u};
}
inline ::uint64_t GetTxsEventResponse::total() const {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxsEventResponse.total)
  return _internal_total();
}
inline void GetTxsEventResponse::set_total(::uint64_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxsEventResponse.total)
}
inline ::uint64_t GetTxsEventResponse::_internal_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_;
}
inline void GetTxsEventResponse::_internal_set_total(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = value;
}

// -------------------------------------------------------------------

// BroadcastTxRequest

// bytes tx_bytes = 1 [json_name = "txBytes"];
inline void BroadcastTxRequest::clear_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.ClearToEmpty();
}
inline const std::string& BroadcastTxRequest::tx_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.BroadcastTxRequest.tx_bytes)
  return _internal_tx_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BroadcastTxRequest::set_tx_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.BroadcastTxRequest.tx_bytes)
}
inline std::string* BroadcastTxRequest::mutable_tx_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tx_bytes();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.BroadcastTxRequest.tx_bytes)
  return _s;
}
inline const std::string& BroadcastTxRequest::_internal_tx_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_bytes_.Get();
}
inline void BroadcastTxRequest::_internal_set_tx_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.Set(value, GetArena());
}
inline std::string* BroadcastTxRequest::_internal_mutable_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tx_bytes_.Mutable( GetArena());
}
inline std::string* BroadcastTxRequest::release_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.BroadcastTxRequest.tx_bytes)
  return _impl_.tx_bytes_.Release();
}
inline void BroadcastTxRequest::set_allocated_tx_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tx_bytes_.IsDefault()) {
    _impl_.tx_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.BroadcastTxRequest.tx_bytes)
}

// .cosmos.tx.v1beta1.BroadcastMode mode = 2 [json_name = "mode"];
inline void BroadcastTxRequest::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::cosmos::tx::v1beta1::BroadcastMode BroadcastTxRequest::mode() const {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.BroadcastTxRequest.mode)
  return _internal_mode();
}
inline void BroadcastTxRequest::set_mode(::cosmos::tx::v1beta1::BroadcastMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.BroadcastTxRequest.mode)
}
inline ::cosmos::tx::v1beta1::BroadcastMode BroadcastTxRequest::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::cosmos::tx::v1beta1::BroadcastMode>(_impl_.mode_);
}
inline void BroadcastTxRequest::_internal_set_mode(::cosmos::tx::v1beta1::BroadcastMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// BroadcastTxResponse

// .cosmos.base.abci.v1beta1.TxResponse tx_response = 1 [json_name = "txResponse"];
inline bool BroadcastTxResponse::has_tx_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_response_ != nullptr);
  return value;
}
inline const ::cosmos::base::abci::v1beta1::TxResponse& BroadcastTxResponse::_internal_tx_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::abci::v1beta1::TxResponse* p = _impl_.tx_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::abci::v1beta1::TxResponse&>(::cosmos::base::abci::v1beta1::_TxResponse_default_instance_);
}
inline const ::cosmos::base::abci::v1beta1::TxResponse& BroadcastTxResponse::tx_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.BroadcastTxResponse.tx_response)
  return _internal_tx_response();
}
inline void BroadcastTxResponse::unsafe_arena_set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_response_);
  }
  _impl_.tx_response_ = reinterpret_cast<::cosmos::base::abci::v1beta1::TxResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.BroadcastTxResponse.tx_response)
}
inline ::cosmos::base::abci::v1beta1::TxResponse* BroadcastTxResponse::release_tx_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::abci::v1beta1::TxResponse* released = _impl_.tx_response_;
  _impl_.tx_response_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::abci::v1beta1::TxResponse* BroadcastTxResponse::unsafe_arena_release_tx_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.BroadcastTxResponse.tx_response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::abci::v1beta1::TxResponse* temp = _impl_.tx_response_;
  _impl_.tx_response_ = nullptr;
  return temp;
}
inline ::cosmos::base::abci::v1beta1::TxResponse* BroadcastTxResponse::_internal_mutable_tx_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_response_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::abci::v1beta1::TxResponse>(GetArena());
    _impl_.tx_response_ = reinterpret_cast<::cosmos::base::abci::v1beta1::TxResponse*>(p);
  }
  return _impl_.tx_response_;
}
inline ::cosmos::base::abci::v1beta1::TxResponse* BroadcastTxResponse::mutable_tx_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::abci::v1beta1::TxResponse* _msg = _internal_mutable_tx_response();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.BroadcastTxResponse.tx_response)
  return _msg;
}
inline void BroadcastTxResponse::set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_response_ = reinterpret_cast<::cosmos::base::abci::v1beta1::TxResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.BroadcastTxResponse.tx_response)
}

// -------------------------------------------------------------------

// SimulateRequest

// .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx", deprecated = true];
inline bool SimulateRequest::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline const ::cosmos::tx::v1beta1::Tx& SimulateRequest::_internal_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::tx::v1beta1::Tx* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::tx::v1beta1::Tx&>(::cosmos::tx::v1beta1::_Tx_default_instance_);
}
inline const ::cosmos::tx::v1beta1::Tx& SimulateRequest::tx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.SimulateRequest.tx)
  return _internal_tx();
}
inline void SimulateRequest::unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.SimulateRequest.tx)
}
inline ::cosmos::tx::v1beta1::Tx* SimulateRequest::release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::tx::v1beta1::Tx* SimulateRequest::unsafe_arena_release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.SimulateRequest.tx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::cosmos::tx::v1beta1::Tx* SimulateRequest::_internal_mutable_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::tx::v1beta1::Tx>(GetArena());
    _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(p);
  }
  return _impl_.tx_;
}
inline ::cosmos::tx::v1beta1::Tx* SimulateRequest::mutable_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::tx::v1beta1::Tx* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.SimulateRequest.tx)
  return _msg;
}
inline void SimulateRequest::set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.SimulateRequest.tx)
}

// bytes tx_bytes = 2 [json_name = "txBytes", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];
inline void SimulateRequest::clear_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.ClearToEmpty();
}
inline const std::string& SimulateRequest::tx_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.SimulateRequest.tx_bytes)
  return _internal_tx_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SimulateRequest::set_tx_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.SimulateRequest.tx_bytes)
}
inline std::string* SimulateRequest::mutable_tx_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tx_bytes();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.SimulateRequest.tx_bytes)
  return _s;
}
inline const std::string& SimulateRequest::_internal_tx_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_bytes_.Get();
}
inline void SimulateRequest::_internal_set_tx_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.Set(value, GetArena());
}
inline std::string* SimulateRequest::_internal_mutable_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tx_bytes_.Mutable( GetArena());
}
inline std::string* SimulateRequest::release_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.SimulateRequest.tx_bytes)
  return _impl_.tx_bytes_.Release();
}
inline void SimulateRequest::set_allocated_tx_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tx_bytes_.IsDefault()) {
    _impl_.tx_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.SimulateRequest.tx_bytes)
}

// -------------------------------------------------------------------

// SimulateResponse

// .cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo"];
inline bool SimulateResponse::has_gas_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gas_info_ != nullptr);
  return value;
}
inline const ::cosmos::base::abci::v1beta1::GasInfo& SimulateResponse::_internal_gas_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::abci::v1beta1::GasInfo* p = _impl_.gas_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::abci::v1beta1::GasInfo&>(::cosmos::base::abci::v1beta1::_GasInfo_default_instance_);
}
inline const ::cosmos::base::abci::v1beta1::GasInfo& SimulateResponse::gas_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.SimulateResponse.gas_info)
  return _internal_gas_info();
}
inline void SimulateResponse::unsafe_arena_set_allocated_gas_info(::cosmos::base::abci::v1beta1::GasInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gas_info_);
  }
  _impl_.gas_info_ = reinterpret_cast<::cosmos::base::abci::v1beta1::GasInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.SimulateResponse.gas_info)
}
inline ::cosmos::base::abci::v1beta1::GasInfo* SimulateResponse::release_gas_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::abci::v1beta1::GasInfo* released = _impl_.gas_info_;
  _impl_.gas_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::abci::v1beta1::GasInfo* SimulateResponse::unsafe_arena_release_gas_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.SimulateResponse.gas_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::abci::v1beta1::GasInfo* temp = _impl_.gas_info_;
  _impl_.gas_info_ = nullptr;
  return temp;
}
inline ::cosmos::base::abci::v1beta1::GasInfo* SimulateResponse::_internal_mutable_gas_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gas_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::abci::v1beta1::GasInfo>(GetArena());
    _impl_.gas_info_ = reinterpret_cast<::cosmos::base::abci::v1beta1::GasInfo*>(p);
  }
  return _impl_.gas_info_;
}
inline ::cosmos::base::abci::v1beta1::GasInfo* SimulateResponse::mutable_gas_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::abci::v1beta1::GasInfo* _msg = _internal_mutable_gas_info();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.SimulateResponse.gas_info)
  return _msg;
}
inline void SimulateResponse::set_allocated_gas_info(::cosmos::base::abci::v1beta1::GasInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gas_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.gas_info_ = reinterpret_cast<::cosmos::base::abci::v1beta1::GasInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.SimulateResponse.gas_info)
}

// .cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];
inline bool SimulateResponse::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline const ::cosmos::base::abci::v1beta1::Result& SimulateResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::abci::v1beta1::Result* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::abci::v1beta1::Result&>(::cosmos::base::abci::v1beta1::_Result_default_instance_);
}
inline const ::cosmos::base::abci::v1beta1::Result& SimulateResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.SimulateResponse.result)
  return _internal_result();
}
inline void SimulateResponse::unsafe_arena_set_allocated_result(::cosmos::base::abci::v1beta1::Result* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::cosmos::base::abci::v1beta1::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.SimulateResponse.result)
}
inline ::cosmos::base::abci::v1beta1::Result* SimulateResponse::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::abci::v1beta1::Result* released = _impl_.result_;
  _impl_.result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::abci::v1beta1::Result* SimulateResponse::unsafe_arena_release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.SimulateResponse.result)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::abci::v1beta1::Result* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::cosmos::base::abci::v1beta1::Result* SimulateResponse::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::abci::v1beta1::Result>(GetArena());
    _impl_.result_ = reinterpret_cast<::cosmos::base::abci::v1beta1::Result*>(p);
  }
  return _impl_.result_;
}
inline ::cosmos::base::abci::v1beta1::Result* SimulateResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::base::abci::v1beta1::Result* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.SimulateResponse.result)
  return _msg;
}
inline void SimulateResponse::set_allocated_result(::cosmos::base::abci::v1beta1::Result* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.result_ = reinterpret_cast<::cosmos::base::abci::v1beta1::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.SimulateResponse.result)
}

// -------------------------------------------------------------------

// GetTxRequest

// string hash = 1 [json_name = "hash"];
inline void GetTxRequest::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& GetTxRequest::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxRequest.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTxRequest::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetTxRequest.hash)
}
inline std::string* GetTxRequest::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxRequest.hash)
  return _s;
}
inline const std::string& GetTxRequest::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void GetTxRequest::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* GetTxRequest::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* GetTxRequest::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetTxRequest.hash)
  return _impl_.hash_.Release();
}
inline void GetTxRequest::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hash_.IsDefault()) {
    _impl_.hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetTxRequest.hash)
}

// -------------------------------------------------------------------

// GetTxResponse

// .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx"];
inline bool GetTxResponse::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline const ::cosmos::tx::v1beta1::Tx& GetTxResponse::_internal_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::tx::v1beta1::Tx* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::tx::v1beta1::Tx&>(::cosmos::tx::v1beta1::_Tx_default_instance_);
}
inline const ::cosmos::tx::v1beta1::Tx& GetTxResponse::tx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxResponse.tx)
  return _internal_tx();
}
inline void GetTxResponse::unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetTxResponse.tx)
}
inline ::cosmos::tx::v1beta1::Tx* GetTxResponse::release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::tx::v1beta1::Tx* GetTxResponse::unsafe_arena_release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetTxResponse.tx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::cosmos::tx::v1beta1::Tx* GetTxResponse::_internal_mutable_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::tx::v1beta1::Tx>(GetArena());
    _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(p);
  }
  return _impl_.tx_;
}
inline ::cosmos::tx::v1beta1::Tx* GetTxResponse::mutable_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::tx::v1beta1::Tx* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxResponse.tx)
  return _msg;
}
inline void GetTxResponse::set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetTxResponse.tx)
}

// .cosmos.base.abci.v1beta1.TxResponse tx_response = 2 [json_name = "txResponse"];
inline bool GetTxResponse::has_tx_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_response_ != nullptr);
  return value;
}
inline const ::cosmos::base::abci::v1beta1::TxResponse& GetTxResponse::_internal_tx_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::abci::v1beta1::TxResponse* p = _impl_.tx_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::abci::v1beta1::TxResponse&>(::cosmos::base::abci::v1beta1::_TxResponse_default_instance_);
}
inline const ::cosmos::base::abci::v1beta1::TxResponse& GetTxResponse::tx_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetTxResponse.tx_response)
  return _internal_tx_response();
}
inline void GetTxResponse::unsafe_arena_set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_response_);
  }
  _impl_.tx_response_ = reinterpret_cast<::cosmos::base::abci::v1beta1::TxResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetTxResponse.tx_response)
}
inline ::cosmos::base::abci::v1beta1::TxResponse* GetTxResponse::release_tx_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::abci::v1beta1::TxResponse* released = _impl_.tx_response_;
  _impl_.tx_response_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::abci::v1beta1::TxResponse* GetTxResponse::unsafe_arena_release_tx_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetTxResponse.tx_response)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::abci::v1beta1::TxResponse* temp = _impl_.tx_response_;
  _impl_.tx_response_ = nullptr;
  return temp;
}
inline ::cosmos::base::abci::v1beta1::TxResponse* GetTxResponse::_internal_mutable_tx_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_response_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::abci::v1beta1::TxResponse>(GetArena());
    _impl_.tx_response_ = reinterpret_cast<::cosmos::base::abci::v1beta1::TxResponse*>(p);
  }
  return _impl_.tx_response_;
}
inline ::cosmos::base::abci::v1beta1::TxResponse* GetTxResponse::mutable_tx_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::base::abci::v1beta1::TxResponse* _msg = _internal_mutable_tx_response();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetTxResponse.tx_response)
  return _msg;
}
inline void GetTxResponse::set_allocated_tx_response(::cosmos::base::abci::v1beta1::TxResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.tx_response_ = reinterpret_cast<::cosmos::base::abci::v1beta1::TxResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetTxResponse.tx_response)
}

// -------------------------------------------------------------------

// GetBlockWithTxsRequest

// int64 height = 1 [json_name = "height"];
inline void GetBlockWithTxsRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t GetBlockWithTxsRequest::height() const {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetBlockWithTxsRequest.height)
  return _internal_height();
}
inline void GetBlockWithTxsRequest::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.GetBlockWithTxsRequest.height)
}
inline ::int64_t GetBlockWithTxsRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void GetBlockWithTxsRequest::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool GetBlockWithTxsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetBlockWithTxsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetBlockWithTxsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetBlockWithTxsRequest.pagination)
  return _internal_pagination();
}
inline void GetBlockWithTxsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetBlockWithTxsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetBlockWithTxsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetBlockWithTxsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetBlockWithTxsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetBlockWithTxsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetBlockWithTxsRequest.pagination)
  return _msg;
}
inline void GetBlockWithTxsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsRequest.pagination)
}

// -------------------------------------------------------------------

// GetBlockWithTxsResponse

// repeated .cosmos.tx.v1beta1.Tx txs = 1 [json_name = "txs"];
inline int GetBlockWithTxsResponse::_internal_txs_size() const {
  return _internal_txs().size();
}
inline int GetBlockWithTxsResponse::txs_size() const {
  return _internal_txs_size();
}
inline ::cosmos::tx::v1beta1::Tx* GetBlockWithTxsResponse::mutable_txs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetBlockWithTxsResponse.txs)
  return _internal_mutable_txs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>* GetBlockWithTxsResponse::mutable_txs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.tx.v1beta1.GetBlockWithTxsResponse.txs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_txs();
}
inline const ::cosmos::tx::v1beta1::Tx& GetBlockWithTxsResponse::txs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetBlockWithTxsResponse.txs)
  return _internal_txs().Get(index);
}
inline ::cosmos::tx::v1beta1::Tx* GetBlockWithTxsResponse::add_txs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::tx::v1beta1::Tx* _add = _internal_mutable_txs()->Add();
  // @@protoc_insertion_point(field_add:cosmos.tx.v1beta1.GetBlockWithTxsResponse.txs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>& GetBlockWithTxsResponse::txs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.tx.v1beta1.GetBlockWithTxsResponse.txs)
  return _internal_txs();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>&
GetBlockWithTxsResponse::_internal_txs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txs_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::tx::v1beta1::Tx>*
GetBlockWithTxsResponse::_internal_mutable_txs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.txs_;
}

// .tendermint.types.BlockID block_id = 2 [json_name = "blockId"];
inline bool GetBlockWithTxsResponse::has_block_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_id_ != nullptr);
  return value;
}
inline const ::tendermint::types::BlockID& GetBlockWithTxsResponse::_internal_block_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::BlockID* p = _impl_.block_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::BlockID&>(::tendermint::types::_BlockID_default_instance_);
}
inline const ::tendermint::types::BlockID& GetBlockWithTxsResponse::block_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block_id)
  return _internal_block_id();
}
inline void GetBlockWithTxsResponse::unsafe_arena_set_allocated_block_id(::tendermint::types::BlockID* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_id_);
  }
  _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block_id)
}
inline ::tendermint::types::BlockID* GetBlockWithTxsResponse::release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockID* released = _impl_.block_id_;
  _impl_.block_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::BlockID* GetBlockWithTxsResponse::unsafe_arena_release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockID* temp = _impl_.block_id_;
  _impl_.block_id_ = nullptr;
  return temp;
}
inline ::tendermint::types::BlockID* GetBlockWithTxsResponse::_internal_mutable_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::BlockID>(GetArena());
    _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(p);
  }
  return _impl_.block_id_;
}
inline ::tendermint::types::BlockID* GetBlockWithTxsResponse::mutable_block_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::types::BlockID* _msg = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block_id)
  return _msg;
}
inline void GetBlockWithTxsResponse::set_allocated_block_id(::tendermint::types::BlockID* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block_id)
}

// .tendermint.types.Block block = 3 [json_name = "block"];
inline bool GetBlockWithTxsResponse::has_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_ != nullptr);
  return value;
}
inline const ::tendermint::types::Block& GetBlockWithTxsResponse::_internal_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::Block* p = _impl_.block_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::Block&>(::tendermint::types::_Block_default_instance_);
}
inline const ::tendermint::types::Block& GetBlockWithTxsResponse::block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block)
  return _internal_block();
}
inline void GetBlockWithTxsResponse::unsafe_arena_set_allocated_block(::tendermint::types::Block* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }
  _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block)
}
inline ::tendermint::types::Block* GetBlockWithTxsResponse::release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::Block* released = _impl_.block_;
  _impl_.block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::Block* GetBlockWithTxsResponse::unsafe_arena_release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::Block* temp = _impl_.block_;
  _impl_.block_ = nullptr;
  return temp;
}
inline ::tendermint::types::Block* GetBlockWithTxsResponse::_internal_mutable_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::Block>(GetArena());
    _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(p);
  }
  return _impl_.block_;
}
inline ::tendermint::types::Block* GetBlockWithTxsResponse::mutable_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tendermint::types::Block* _msg = _internal_mutable_block();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block)
  return _msg;
}
inline void GetBlockWithTxsResponse::set_allocated_block(::tendermint::types::Block* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsResponse.block)
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 4 [json_name = "pagination"];
inline bool GetBlockWithTxsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetBlockWithTxsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetBlockWithTxsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.GetBlockWithTxsResponse.pagination)
  return _internal_pagination();
}
inline void GetBlockWithTxsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetBlockWithTxsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetBlockWithTxsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.GetBlockWithTxsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetBlockWithTxsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetBlockWithTxsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.GetBlockWithTxsResponse.pagination)
  return _msg;
}
inline void GetBlockWithTxsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.GetBlockWithTxsResponse.pagination)
}

// -------------------------------------------------------------------

// TxDecodeRequest

// bytes tx_bytes = 1 [json_name = "txBytes"];
inline void TxDecodeRequest::clear_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.ClearToEmpty();
}
inline const std::string& TxDecodeRequest::tx_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxDecodeRequest.tx_bytes)
  return _internal_tx_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxDecodeRequest::set_tx_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.TxDecodeRequest.tx_bytes)
}
inline std::string* TxDecodeRequest::mutable_tx_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tx_bytes();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxDecodeRequest.tx_bytes)
  return _s;
}
inline const std::string& TxDecodeRequest::_internal_tx_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_bytes_.Get();
}
inline void TxDecodeRequest::_internal_set_tx_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.Set(value, GetArena());
}
inline std::string* TxDecodeRequest::_internal_mutable_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tx_bytes_.Mutable( GetArena());
}
inline std::string* TxDecodeRequest::release_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxDecodeRequest.tx_bytes)
  return _impl_.tx_bytes_.Release();
}
inline void TxDecodeRequest::set_allocated_tx_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tx_bytes_.IsDefault()) {
    _impl_.tx_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxDecodeRequest.tx_bytes)
}

// -------------------------------------------------------------------

// TxDecodeResponse

// .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx"];
inline bool TxDecodeResponse::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline const ::cosmos::tx::v1beta1::Tx& TxDecodeResponse::_internal_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::tx::v1beta1::Tx* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::tx::v1beta1::Tx&>(::cosmos::tx::v1beta1::_Tx_default_instance_);
}
inline const ::cosmos::tx::v1beta1::Tx& TxDecodeResponse::tx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxDecodeResponse.tx)
  return _internal_tx();
}
inline void TxDecodeResponse::unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.TxDecodeResponse.tx)
}
inline ::cosmos::tx::v1beta1::Tx* TxDecodeResponse::release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::tx::v1beta1::Tx* TxDecodeResponse::unsafe_arena_release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxDecodeResponse.tx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::cosmos::tx::v1beta1::Tx* TxDecodeResponse::_internal_mutable_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::tx::v1beta1::Tx>(GetArena());
    _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(p);
  }
  return _impl_.tx_;
}
inline ::cosmos::tx::v1beta1::Tx* TxDecodeResponse::mutable_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::tx::v1beta1::Tx* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxDecodeResponse.tx)
  return _msg;
}
inline void TxDecodeResponse::set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxDecodeResponse.tx)
}

// -------------------------------------------------------------------

// TxEncodeRequest

// .cosmos.tx.v1beta1.Tx tx = 1 [json_name = "tx"];
inline bool TxEncodeRequest::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline const ::cosmos::tx::v1beta1::Tx& TxEncodeRequest::_internal_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::tx::v1beta1::Tx* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::tx::v1beta1::Tx&>(::cosmos::tx::v1beta1::_Tx_default_instance_);
}
inline const ::cosmos::tx::v1beta1::Tx& TxEncodeRequest::tx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxEncodeRequest.tx)
  return _internal_tx();
}
inline void TxEncodeRequest::unsafe_arena_set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.tx.v1beta1.TxEncodeRequest.tx)
}
inline ::cosmos::tx::v1beta1::Tx* TxEncodeRequest::release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::tx::v1beta1::Tx* TxEncodeRequest::unsafe_arena_release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxEncodeRequest.tx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::tx::v1beta1::Tx* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::cosmos::tx::v1beta1::Tx* TxEncodeRequest::_internal_mutable_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::tx::v1beta1::Tx>(GetArena());
    _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(p);
  }
  return _impl_.tx_;
}
inline ::cosmos::tx::v1beta1::Tx* TxEncodeRequest::mutable_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::tx::v1beta1::Tx* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxEncodeRequest.tx)
  return _msg;
}
inline void TxEncodeRequest::set_allocated_tx(::cosmos::tx::v1beta1::Tx* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_ = reinterpret_cast<::cosmos::tx::v1beta1::Tx*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxEncodeRequest.tx)
}

// -------------------------------------------------------------------

// TxEncodeResponse

// bytes tx_bytes = 1 [json_name = "txBytes"];
inline void TxEncodeResponse::clear_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.ClearToEmpty();
}
inline const std::string& TxEncodeResponse::tx_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxEncodeResponse.tx_bytes)
  return _internal_tx_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxEncodeResponse::set_tx_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.TxEncodeResponse.tx_bytes)
}
inline std::string* TxEncodeResponse::mutable_tx_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tx_bytes();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxEncodeResponse.tx_bytes)
  return _s;
}
inline const std::string& TxEncodeResponse::_internal_tx_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_bytes_.Get();
}
inline void TxEncodeResponse::_internal_set_tx_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.Set(value, GetArena());
}
inline std::string* TxEncodeResponse::_internal_mutable_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tx_bytes_.Mutable( GetArena());
}
inline std::string* TxEncodeResponse::release_tx_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxEncodeResponse.tx_bytes)
  return _impl_.tx_bytes_.Release();
}
inline void TxEncodeResponse::set_allocated_tx_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tx_bytes_.IsDefault()) {
    _impl_.tx_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxEncodeResponse.tx_bytes)
}

// -------------------------------------------------------------------

// TxEncodeAminoRequest

// string amino_json = 1 [json_name = "aminoJson"];
inline void TxEncodeAminoRequest::clear_amino_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.ClearToEmpty();
}
inline const std::string& TxEncodeAminoRequest::amino_json() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxEncodeAminoRequest.amino_json)
  return _internal_amino_json();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxEncodeAminoRequest::set_amino_json(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.TxEncodeAminoRequest.amino_json)
}
inline std::string* TxEncodeAminoRequest::mutable_amino_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_amino_json();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxEncodeAminoRequest.amino_json)
  return _s;
}
inline const std::string& TxEncodeAminoRequest::_internal_amino_json() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amino_json_.Get();
}
inline void TxEncodeAminoRequest::_internal_set_amino_json(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.Set(value, GetArena());
}
inline std::string* TxEncodeAminoRequest::_internal_mutable_amino_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.amino_json_.Mutable( GetArena());
}
inline std::string* TxEncodeAminoRequest::release_amino_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxEncodeAminoRequest.amino_json)
  return _impl_.amino_json_.Release();
}
inline void TxEncodeAminoRequest::set_allocated_amino_json(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.amino_json_.IsDefault()) {
    _impl_.amino_json_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxEncodeAminoRequest.amino_json)
}

// -------------------------------------------------------------------

// TxEncodeAminoResponse

// bytes amino_binary = 1 [json_name = "aminoBinary"];
inline void TxEncodeAminoResponse::clear_amino_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.ClearToEmpty();
}
inline const std::string& TxEncodeAminoResponse::amino_binary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxEncodeAminoResponse.amino_binary)
  return _internal_amino_binary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxEncodeAminoResponse::set_amino_binary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.TxEncodeAminoResponse.amino_binary)
}
inline std::string* TxEncodeAminoResponse::mutable_amino_binary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_amino_binary();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxEncodeAminoResponse.amino_binary)
  return _s;
}
inline const std::string& TxEncodeAminoResponse::_internal_amino_binary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amino_binary_.Get();
}
inline void TxEncodeAminoResponse::_internal_set_amino_binary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.Set(value, GetArena());
}
inline std::string* TxEncodeAminoResponse::_internal_mutable_amino_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.amino_binary_.Mutable( GetArena());
}
inline std::string* TxEncodeAminoResponse::release_amino_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxEncodeAminoResponse.amino_binary)
  return _impl_.amino_binary_.Release();
}
inline void TxEncodeAminoResponse::set_allocated_amino_binary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.amino_binary_.IsDefault()) {
    _impl_.amino_binary_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxEncodeAminoResponse.amino_binary)
}

// -------------------------------------------------------------------

// TxDecodeAminoRequest

// bytes amino_binary = 1 [json_name = "aminoBinary"];
inline void TxDecodeAminoRequest::clear_amino_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.ClearToEmpty();
}
inline const std::string& TxDecodeAminoRequest::amino_binary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxDecodeAminoRequest.amino_binary)
  return _internal_amino_binary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxDecodeAminoRequest::set_amino_binary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.TxDecodeAminoRequest.amino_binary)
}
inline std::string* TxDecodeAminoRequest::mutable_amino_binary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_amino_binary();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxDecodeAminoRequest.amino_binary)
  return _s;
}
inline const std::string& TxDecodeAminoRequest::_internal_amino_binary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amino_binary_.Get();
}
inline void TxDecodeAminoRequest::_internal_set_amino_binary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.Set(value, GetArena());
}
inline std::string* TxDecodeAminoRequest::_internal_mutable_amino_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.amino_binary_.Mutable( GetArena());
}
inline std::string* TxDecodeAminoRequest::release_amino_binary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxDecodeAminoRequest.amino_binary)
  return _impl_.amino_binary_.Release();
}
inline void TxDecodeAminoRequest::set_allocated_amino_binary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_binary_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.amino_binary_.IsDefault()) {
    _impl_.amino_binary_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxDecodeAminoRequest.amino_binary)
}

// -------------------------------------------------------------------

// TxDecodeAminoResponse

// string amino_json = 1 [json_name = "aminoJson"];
inline void TxDecodeAminoResponse::clear_amino_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.ClearToEmpty();
}
inline const std::string& TxDecodeAminoResponse::amino_json() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.tx.v1beta1.TxDecodeAminoResponse.amino_json)
  return _internal_amino_json();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxDecodeAminoResponse::set_amino_json(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.tx.v1beta1.TxDecodeAminoResponse.amino_json)
}
inline std::string* TxDecodeAminoResponse::mutable_amino_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_amino_json();
  // @@protoc_insertion_point(field_mutable:cosmos.tx.v1beta1.TxDecodeAminoResponse.amino_json)
  return _s;
}
inline const std::string& TxDecodeAminoResponse::_internal_amino_json() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amino_json_.Get();
}
inline void TxDecodeAminoResponse::_internal_set_amino_json(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.Set(value, GetArena());
}
inline std::string* TxDecodeAminoResponse::_internal_mutable_amino_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.amino_json_.Mutable( GetArena());
}
inline std::string* TxDecodeAminoResponse::release_amino_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.tx.v1beta1.TxDecodeAminoResponse.amino_json)
  return _impl_.amino_json_.Release();
}
inline void TxDecodeAminoResponse::set_allocated_amino_json(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amino_json_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.amino_json_.IsDefault()) {
    _impl_.amino_json_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.tx.v1beta1.TxDecodeAminoResponse.amino_json)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tx
}  // namespace cosmos


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::cosmos::tx::v1beta1::OrderBy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::cosmos::tx::v1beta1::OrderBy>() {
  return ::cosmos::tx::v1beta1::OrderBy_descriptor();
}
template <>
struct is_proto_enum<::cosmos::tx::v1beta1::BroadcastMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::cosmos::tx::v1beta1::BroadcastMode>() {
  return ::cosmos::tx::v1beta1::BroadcastMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2ftx_2fv1beta1_2fservice_2eproto_2epb_2eh
