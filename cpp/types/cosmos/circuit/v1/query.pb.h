// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/circuit/v1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fcircuit_2fv1_2fquery_2eproto_2epb_2eh
#define cosmos_2fcircuit_2fv1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "cosmos/circuit/v1/types.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/query/v1/query.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fcircuit_2fv1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fcircuit_2fv1_2fquery_2eproto;
namespace cosmos {
namespace circuit {
namespace v1 {
class AccountResponse;
struct AccountResponseDefaultTypeInternal;
extern AccountResponseDefaultTypeInternal _AccountResponse_default_instance_;
class AccountsResponse;
struct AccountsResponseDefaultTypeInternal;
extern AccountsResponseDefaultTypeInternal _AccountsResponse_default_instance_;
class DisabledListResponse;
struct DisabledListResponseDefaultTypeInternal;
extern DisabledListResponseDefaultTypeInternal _DisabledListResponse_default_instance_;
class QueryAccountRequest;
struct QueryAccountRequestDefaultTypeInternal;
extern QueryAccountRequestDefaultTypeInternal _QueryAccountRequest_default_instance_;
class QueryAccountsRequest;
struct QueryAccountsRequestDefaultTypeInternal;
extern QueryAccountsRequestDefaultTypeInternal _QueryAccountsRequest_default_instance_;
class QueryDisabledListRequest;
struct QueryDisabledListRequestDefaultTypeInternal;
extern QueryDisabledListRequestDefaultTypeInternal _QueryDisabledListRequest_default_instance_;
}  // namespace v1
}  // namespace circuit
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace circuit {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryDisabledListRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.circuit.v1.QueryDisabledListRequest) */ {
 public:
  inline QueryDisabledListRequest() : QueryDisabledListRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDisabledListRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDisabledListRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDisabledListRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDisabledListRequest(const QueryDisabledListRequest& from) : QueryDisabledListRequest(nullptr, from) {}
  inline QueryDisabledListRequest(QueryDisabledListRequest&& from) noexcept
      : QueryDisabledListRequest(nullptr, std::move(from)) {}
  inline QueryDisabledListRequest& operator=(const QueryDisabledListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDisabledListRequest& operator=(QueryDisabledListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDisabledListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDisabledListRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDisabledListRequest*>(
        &_QueryDisabledListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryDisabledListRequest& a, QueryDisabledListRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDisabledListRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDisabledListRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDisabledListRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryDisabledListRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryDisabledListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryDisabledListRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.circuit.v1.QueryDisabledListRequest"; }

 protected:
  explicit QueryDisabledListRequest(::google::protobuf::Arena* arena);
  QueryDisabledListRequest(::google::protobuf::Arena* arena, const QueryDisabledListRequest& from);
  QueryDisabledListRequest(::google::protobuf::Arena* arena, QueryDisabledListRequest&& from) noexcept
      : QueryDisabledListRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.circuit.v1.QueryDisabledListRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDisabledListRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.circuit.v1.QueryAccountRequest) */ {
 public:
  inline QueryAccountRequest() : QueryAccountRequest(nullptr) {}
  ~QueryAccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountRequest(const QueryAccountRequest& from) : QueryAccountRequest(nullptr, from) {}
  inline QueryAccountRequest(QueryAccountRequest&& from) noexcept
      : QueryAccountRequest(nullptr, std::move(from)) {}
  inline QueryAccountRequest& operator=(const QueryAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountRequest& operator=(QueryAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAccountRequest*>(
        &_QueryAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryAccountRequest& a, QueryAccountRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAccountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountRequest& from) { QueryAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.circuit.v1.QueryAccountRequest"; }

 protected:
  explicit QueryAccountRequest(::google::protobuf::Arena* arena);
  QueryAccountRequest(::google::protobuf::Arena* arena, const QueryAccountRequest& from);
  QueryAccountRequest(::google::protobuf::Arena* arena, QueryAccountRequest&& from) noexcept
      : QueryAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1 [json_name = "address"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.circuit.v1.QueryAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class DisabledListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.circuit.v1.DisabledListResponse) */ {
 public:
  inline DisabledListResponse() : DisabledListResponse(nullptr) {}
  ~DisabledListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DisabledListResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DisabledListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisabledListResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisabledListResponse(const DisabledListResponse& from) : DisabledListResponse(nullptr, from) {}
  inline DisabledListResponse(DisabledListResponse&& from) noexcept
      : DisabledListResponse(nullptr, std::move(from)) {}
  inline DisabledListResponse& operator=(const DisabledListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisabledListResponse& operator=(DisabledListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisabledListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisabledListResponse* internal_default_instance() {
    return reinterpret_cast<const DisabledListResponse*>(
        &_DisabledListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(DisabledListResponse& a, DisabledListResponse& b) { a.Swap(&b); }
  inline void Swap(DisabledListResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisabledListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisabledListResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DisabledListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DisabledListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DisabledListResponse& from) { DisabledListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DisabledListResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.circuit.v1.DisabledListResponse"; }

 protected:
  explicit DisabledListResponse(::google::protobuf::Arena* arena);
  DisabledListResponse(::google::protobuf::Arena* arena, const DisabledListResponse& from);
  DisabledListResponse(::google::protobuf::Arena* arena, DisabledListResponse&& from) noexcept
      : DisabledListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDisabledListFieldNumber = 1,
  };
  // repeated string disabled_list = 1 [json_name = "disabledList"];
  int disabled_list_size() const;
  private:
  int _internal_disabled_list_size() const;

  public:
  void clear_disabled_list() ;
  const std::string& disabled_list(int index) const;
  std::string* mutable_disabled_list(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_disabled_list(int index, Arg_&& value, Args_... args);
  std::string* add_disabled_list();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_disabled_list(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& disabled_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_disabled_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_disabled_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_disabled_list();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.circuit.v1.DisabledListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisabledListResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> disabled_list_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.circuit.v1.QueryAccountsRequest) */ {
 public:
  inline QueryAccountsRequest() : QueryAccountsRequest(nullptr) {}
  ~QueryAccountsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountsRequest(const QueryAccountsRequest& from) : QueryAccountsRequest(nullptr, from) {}
  inline QueryAccountsRequest(QueryAccountsRequest&& from) noexcept
      : QueryAccountsRequest(nullptr, std::move(from)) {}
  inline QueryAccountsRequest& operator=(const QueryAccountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountsRequest& operator=(QueryAccountsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAccountsRequest*>(
        &_QueryAccountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryAccountsRequest& a, QueryAccountsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAccountsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountsRequest& from) { QueryAccountsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.circuit.v1.QueryAccountsRequest"; }

 protected:
  explicit QueryAccountsRequest(::google::protobuf::Arena* arena);
  QueryAccountsRequest(::google::protobuf::Arena* arena, const QueryAccountsRequest& from);
  QueryAccountsRequest(::google::protobuf::Arena* arena, QueryAccountsRequest&& from) noexcept
      : QueryAccountsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.circuit.v1.QueryAccountsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.circuit.v1.AccountResponse) */ {
 public:
  inline AccountResponse() : AccountResponse(nullptr) {}
  ~AccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountResponse(const AccountResponse& from) : AccountResponse(nullptr, from) {}
  inline AccountResponse(AccountResponse&& from) noexcept
      : AccountResponse(nullptr, std::move(from)) {}
  inline AccountResponse& operator=(const AccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountResponse& operator=(AccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountResponse* internal_default_instance() {
    return reinterpret_cast<const AccountResponse*>(
        &_AccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AccountResponse& a, AccountResponse& b) { a.Swap(&b); }
  inline void Swap(AccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountResponse& from) { AccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.circuit.v1.AccountResponse"; }

 protected:
  explicit AccountResponse(::google::protobuf::Arena* arena);
  AccountResponse(::google::protobuf::Arena* arena, const AccountResponse& from);
  AccountResponse(::google::protobuf::Arena* arena, AccountResponse&& from) noexcept
      : AccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermissionFieldNumber = 1,
  };
  // .cosmos.circuit.v1.Permissions permission = 1 [json_name = "permission"];
  bool has_permission() const;
  void clear_permission() ;
  const ::cosmos::circuit::v1::Permissions& permission() const;
  PROTOBUF_NODISCARD ::cosmos::circuit::v1::Permissions* release_permission();
  ::cosmos::circuit::v1::Permissions* mutable_permission();
  void set_allocated_permission(::cosmos::circuit::v1::Permissions* value);
  void unsafe_arena_set_allocated_permission(::cosmos::circuit::v1::Permissions* value);
  ::cosmos::circuit::v1::Permissions* unsafe_arena_release_permission();

  private:
  const ::cosmos::circuit::v1::Permissions& _internal_permission() const;
  ::cosmos::circuit::v1::Permissions* _internal_mutable_permission();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.circuit.v1.AccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AccountResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::circuit::v1::Permissions* permission_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AccountsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.circuit.v1.AccountsResponse) */ {
 public:
  inline AccountsResponse() : AccountsResponse(nullptr) {}
  ~AccountsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AccountsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AccountsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountsResponse(const AccountsResponse& from) : AccountsResponse(nullptr, from) {}
  inline AccountsResponse(AccountsResponse&& from) noexcept
      : AccountsResponse(nullptr, std::move(from)) {}
  inline AccountsResponse& operator=(const AccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountsResponse& operator=(AccountsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountsResponse* internal_default_instance() {
    return reinterpret_cast<const AccountsResponse*>(
        &_AccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AccountsResponse& a, AccountsResponse& b) { a.Swap(&b); }
  inline void Swap(AccountsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AccountsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountsResponse& from) { AccountsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AccountsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.circuit.v1.AccountsResponse"; }

 protected:
  explicit AccountsResponse(::google::protobuf::Arena* arena);
  AccountsResponse(::google::protobuf::Arena* arena, const AccountsResponse& from);
  AccountsResponse(::google::protobuf::Arena* arena, AccountsResponse&& from) noexcept
      : AccountsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.circuit.v1.GenesisAccountPermissions accounts = 1 [json_name = "accounts"];
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  ::cosmos::circuit::v1::GenesisAccountPermissions* mutable_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>* _internal_mutable_accounts();
  public:
  const ::cosmos::circuit::v1::GenesisAccountPermissions& accounts(int index) const;
  ::cosmos::circuit::v1::GenesisAccountPermissions* add_accounts();
  const ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>& accounts() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.circuit.v1.AccountsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AccountsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::circuit::v1::GenesisAccountPermissions > accounts_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fcircuit_2fv1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryAccountRequest

// string address = 1 [json_name = "address"];
inline void QueryAccountRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryAccountRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.circuit.v1.QueryAccountRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAccountRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.circuit.v1.QueryAccountRequest.address)
}
inline std::string* QueryAccountRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.circuit.v1.QueryAccountRequest.address)
  return _s;
}
inline const std::string& QueryAccountRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryAccountRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryAccountRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryAccountRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.circuit.v1.QueryAccountRequest.address)
  return _impl_.address_.Release();
}
inline void QueryAccountRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.circuit.v1.QueryAccountRequest.address)
}

// -------------------------------------------------------------------

// AccountResponse

// .cosmos.circuit.v1.Permissions permission = 1 [json_name = "permission"];
inline bool AccountResponse::has_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.permission_ != nullptr);
  return value;
}
inline const ::cosmos::circuit::v1::Permissions& AccountResponse::_internal_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::circuit::v1::Permissions* p = _impl_.permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::circuit::v1::Permissions&>(::cosmos::circuit::v1::_Permissions_default_instance_);
}
inline const ::cosmos::circuit::v1::Permissions& AccountResponse::permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.circuit.v1.AccountResponse.permission)
  return _internal_permission();
}
inline void AccountResponse::unsafe_arena_set_allocated_permission(::cosmos::circuit::v1::Permissions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.permission_);
  }
  _impl_.permission_ = reinterpret_cast<::cosmos::circuit::v1::Permissions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.circuit.v1.AccountResponse.permission)
}
inline ::cosmos::circuit::v1::Permissions* AccountResponse::release_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::circuit::v1::Permissions* released = _impl_.permission_;
  _impl_.permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::circuit::v1::Permissions* AccountResponse::unsafe_arena_release_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.circuit.v1.AccountResponse.permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::circuit::v1::Permissions* temp = _impl_.permission_;
  _impl_.permission_ = nullptr;
  return temp;
}
inline ::cosmos::circuit::v1::Permissions* AccountResponse::_internal_mutable_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::circuit::v1::Permissions>(GetArena());
    _impl_.permission_ = reinterpret_cast<::cosmos::circuit::v1::Permissions*>(p);
  }
  return _impl_.permission_;
}
inline ::cosmos::circuit::v1::Permissions* AccountResponse::mutable_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::circuit::v1::Permissions* _msg = _internal_mutable_permission();
  // @@protoc_insertion_point(field_mutable:cosmos.circuit.v1.AccountResponse.permission)
  return _msg;
}
inline void AccountResponse::set_allocated_permission(::cosmos::circuit::v1::Permissions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.permission_ = reinterpret_cast<::cosmos::circuit::v1::Permissions*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.circuit.v1.AccountResponse.permission)
}

// -------------------------------------------------------------------

// QueryAccountsRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
inline bool QueryAccountsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAccountsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAccountsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.circuit.v1.QueryAccountsRequest.pagination)
  return _internal_pagination();
}
inline void QueryAccountsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.circuit.v1.QueryAccountsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.circuit.v1.QueryAccountsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.circuit.v1.QueryAccountsRequest.pagination)
  return _msg;
}
inline void QueryAccountsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.circuit.v1.QueryAccountsRequest.pagination)
}

// -------------------------------------------------------------------

// AccountsResponse

// repeated .cosmos.circuit.v1.GenesisAccountPermissions accounts = 1 [json_name = "accounts"];
inline int AccountsResponse::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int AccountsResponse::accounts_size() const {
  return _internal_accounts_size();
}
inline ::cosmos::circuit::v1::GenesisAccountPermissions* AccountsResponse::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.circuit.v1.AccountsResponse.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>* AccountsResponse::mutable_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.circuit.v1.AccountsResponse.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::cosmos::circuit::v1::GenesisAccountPermissions& AccountsResponse::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.circuit.v1.AccountsResponse.accounts)
  return _internal_accounts().Get(index);
}
inline ::cosmos::circuit::v1::GenesisAccountPermissions* AccountsResponse::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::circuit::v1::GenesisAccountPermissions* _add = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add:cosmos.circuit.v1.AccountsResponse.accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>& AccountsResponse::accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.circuit.v1.AccountsResponse.accounts)
  return _internal_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>&
AccountsResponse::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::circuit::v1::GenesisAccountPermissions>*
AccountsResponse::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool AccountsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& AccountsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& AccountsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.circuit.v1.AccountsResponse.pagination)
  return _internal_pagination();
}
inline void AccountsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.circuit.v1.AccountsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* AccountsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* AccountsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.circuit.v1.AccountsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* AccountsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* AccountsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.circuit.v1.AccountsResponse.pagination)
  return _msg;
}
inline void AccountsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.circuit.v1.AccountsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDisabledListRequest

// -------------------------------------------------------------------

// DisabledListResponse

// repeated string disabled_list = 1 [json_name = "disabledList"];
inline int DisabledListResponse::_internal_disabled_list_size() const {
  return _internal_disabled_list().size();
}
inline int DisabledListResponse::disabled_list_size() const {
  return _internal_disabled_list_size();
}
inline void DisabledListResponse::clear_disabled_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_list_.Clear();
}
inline std::string* DisabledListResponse::add_disabled_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_disabled_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.circuit.v1.DisabledListResponse.disabled_list)
  return _s;
}
inline const std::string& DisabledListResponse::disabled_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.circuit.v1.DisabledListResponse.disabled_list)
  return _internal_disabled_list().Get(index);
}
inline std::string* DisabledListResponse::mutable_disabled_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.circuit.v1.DisabledListResponse.disabled_list)
  return _internal_mutable_disabled_list()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DisabledListResponse::set_disabled_list(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_disabled_list()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.circuit.v1.DisabledListResponse.disabled_list)
}
template <typename Arg_, typename... Args_>
inline void DisabledListResponse::add_disabled_list(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_disabled_list(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.circuit.v1.DisabledListResponse.disabled_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DisabledListResponse::disabled_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.circuit.v1.DisabledListResponse.disabled_list)
  return _internal_disabled_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DisabledListResponse::mutable_disabled_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.circuit.v1.DisabledListResponse.disabled_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_disabled_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DisabledListResponse::_internal_disabled_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disabled_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DisabledListResponse::_internal_mutable_disabled_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.disabled_list_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace circuit
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fcircuit_2fv1_2fquery_2eproto_2epb_2eh
