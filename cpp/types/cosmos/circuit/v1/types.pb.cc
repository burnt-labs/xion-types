// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/circuit/v1/types.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/circuit/v1/types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace circuit {
namespace v1 {

inline constexpr Permissions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : limit_type_urls_{},
        level_{static_cast< ::cosmos::circuit::v1::Permissions_Level >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Permissions::Permissions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PermissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionsDefaultTypeInternal() {}
  union {
    Permissions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionsDefaultTypeInternal _Permissions_default_instance_;

inline constexpr GenesisAccountPermissions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        permissions_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisAccountPermissions::GenesisAccountPermissions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisAccountPermissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisAccountPermissionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisAccountPermissionsDefaultTypeInternal() {}
  union {
    GenesisAccountPermissions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisAccountPermissionsDefaultTypeInternal _GenesisAccountPermissions_default_instance_;

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_permissions_{},
        disabled_type_urls_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1
}  // namespace circuit
}  // namespace cosmos
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_2fcircuit_2fv1_2ftypes_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fcircuit_2fv1_2ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fcircuit_2fv1_2ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::Permissions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::Permissions, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::Permissions, _impl_.limit_type_urls_),
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisAccountPermissions, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisAccountPermissions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisAccountPermissions, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisAccountPermissions, _impl_.permissions_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisState, _impl_.account_permissions_),
        PROTOBUF_FIELD_OFFSET(::cosmos::circuit::v1::GenesisState, _impl_.disabled_type_urls_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::circuit::v1::Permissions)},
        {10, 20, -1, sizeof(::cosmos::circuit::v1::GenesisAccountPermissions)},
        {22, -1, -1, sizeof(::cosmos::circuit::v1::GenesisState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::circuit::v1::_Permissions_default_instance_._instance,
    &::cosmos::circuit::v1::_GenesisAccountPermissions_default_instance_._instance,
    &::cosmos::circuit::v1::_GenesisState_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fcircuit_2fv1_2ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035cosmos/circuit/v1/types.proto\022\021cosmos."
    "circuit.v1\"\326\001\n\013Permissions\022:\n\005level\030\001 \001("
    "\0162$.cosmos.circuit.v1.Permissions.LevelR"
    "\005level\022&\n\017limit_type_urls\030\002 \003(\tR\rlimitTy"
    "peUrls\"c\n\005Level\022\032\n\026LEVEL_NONE_UNSPECIFIE"
    "D\020\000\022\023\n\017LEVEL_SOME_MSGS\020\001\022\022\n\016LEVEL_ALL_MS"
    "GS\020\002\022\025\n\021LEVEL_SUPER_ADMIN\020\003\"w\n\031GenesisAc"
    "countPermissions\022\030\n\007address\030\001 \001(\tR\007addre"
    "ss\022@\n\013permissions\030\002 \001(\0132\036.cosmos.circuit"
    ".v1.PermissionsR\013permissions\"\233\001\n\014Genesis"
    "State\022]\n\023account_permissions\030\001 \003(\0132,.cos"
    "mos.circuit.v1.GenesisAccountPermissions"
    "R\022accountPermissions\022,\n\022disabled_type_ur"
    "ls\030\002 \003(\tR\020disabledTypeUrlsB\036Z\034cosmossdk."
    "io/x/circuit/typesb\006proto3"
};
static ::absl::once_flag descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto = {
    false,
    false,
    586,
    descriptor_table_protodef_cosmos_2fcircuit_2fv1_2ftypes_2eproto,
    "cosmos/circuit/v1/types.proto",
    &descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fcircuit_2fv1_2ftypes_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fcircuit_2fv1_2ftypes_2eproto,
    file_level_service_descriptors_cosmos_2fcircuit_2fv1_2ftypes_2eproto,
};
namespace cosmos {
namespace circuit {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Permissions_Level_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_cosmos_2fcircuit_2fv1_2ftypes_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Permissions_Level_internal_data_[] = {
    262144u, 0u, };
bool Permissions_Level_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Permissions_Level Permissions::LEVEL_NONE_UNSPECIFIED;
constexpr Permissions_Level Permissions::LEVEL_SOME_MSGS;
constexpr Permissions_Level Permissions::LEVEL_ALL_MSGS;
constexpr Permissions_Level Permissions::LEVEL_SUPER_ADMIN;
constexpr Permissions_Level Permissions::Level_MIN;
constexpr Permissions_Level Permissions::Level_MAX;
constexpr int Permissions::Level_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Permissions::_Internal {
 public:
};

Permissions::Permissions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.circuit.v1.Permissions)
}
inline PROTOBUF_NDEBUG_INLINE Permissions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::circuit::v1::Permissions& from_msg)
      : limit_type_urls_{visibility, arena, from.limit_type_urls_},
        _cached_size_{0} {}

Permissions::Permissions(
    ::google::protobuf::Arena* arena,
    const Permissions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Permissions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.level_ = from._impl_.level_;

  // @@protoc_insertion_point(copy_constructor:cosmos.circuit.v1.Permissions)
}
inline PROTOBUF_NDEBUG_INLINE Permissions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : limit_type_urls_{visibility, arena},
        _cached_size_{0} {}

inline void Permissions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.level_ = {};
}
Permissions::~Permissions() {
  // @@protoc_insertion_point(destructor:cosmos.circuit.v1.Permissions)
  SharedDtor(*this);
}
inline void Permissions::SharedDtor(MessageLite& self) {
  Permissions& this_ = static_cast<Permissions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Permissions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Permissions(arena);
}
constexpr auto Permissions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Permissions, _impl_.limit_type_urls_) +
          decltype(Permissions::_impl_.limit_type_urls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Permissions), alignof(Permissions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Permissions::PlacementNew_,
                                 sizeof(Permissions),
                                 alignof(Permissions));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Permissions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Permissions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Permissions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Permissions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Permissions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Permissions>(), &Permissions::ByteSizeLong,
            &Permissions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Permissions, _impl_._cached_size_),
        false,
    },
    &Permissions::kDescriptorMethods,
    &descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Permissions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> Permissions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::circuit::v1::Permissions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string limit_type_urls = 2 [json_name = "limitTypeUrls"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.limit_type_urls_)}},
    // .cosmos.circuit.v1.Permissions.Level level = 1 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Permissions, _impl_.level_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Permissions, _impl_.level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.circuit.v1.Permissions.Level level = 1 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated string limit_type_urls = 2 [json_name = "limitTypeUrls"];
    {PROTOBUF_FIELD_OFFSET(Permissions, _impl_.limit_type_urls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\0\17\0\0\0\0\0"
    "cosmos.circuit.v1.Permissions"
    "limit_type_urls"
  }},
};

PROTOBUF_NOINLINE void Permissions::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.circuit.v1.Permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.limit_type_urls_.Clear();
  _impl_.level_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Permissions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Permissions& this_ = static_cast<const Permissions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Permissions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Permissions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.circuit.v1.Permissions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .cosmos.circuit.v1.Permissions.Level level = 1 [json_name = "level"];
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_level(), target);
          }

          // repeated string limit_type_urls = 2 [json_name = "limitTypeUrls"];
          for (int i = 0, n = this_._internal_limit_type_urls_size(); i < n; ++i) {
            const auto& s = this_._internal_limit_type_urls().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.circuit.v1.Permissions.limit_type_urls");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.circuit.v1.Permissions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Permissions::ByteSizeLong(const MessageLite& base) {
          const Permissions& this_ = static_cast<const Permissions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Permissions::ByteSizeLong() const {
          const Permissions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.circuit.v1.Permissions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string limit_type_urls = 2 [json_name = "limitTypeUrls"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_limit_type_urls().size());
              for (int i = 0, n = this_._internal_limit_type_urls().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_limit_type_urls().Get(i));
              }
            }
          }
           {
            // .cosmos.circuit.v1.Permissions.Level level = 1 [json_name = "level"];
            if (this_._internal_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Permissions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Permissions*>(&to_msg);
  auto& from = static_cast<const Permissions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.circuit.v1.Permissions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_limit_type_urls()->MergeFrom(from._internal_limit_type_urls());
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Permissions::CopyFrom(const Permissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.circuit.v1.Permissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Permissions::InternalSwap(Permissions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.limit_type_urls_.InternalSwap(&other->_impl_.limit_type_urls_);
  swap(_impl_.level_, other->_impl_.level_);
}

::google::protobuf::Metadata Permissions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenesisAccountPermissions::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisAccountPermissions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_._has_bits_);
};

GenesisAccountPermissions::GenesisAccountPermissions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.circuit.v1.GenesisAccountPermissions)
}
inline PROTOBUF_NDEBUG_INLINE GenesisAccountPermissions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::circuit::v1::GenesisAccountPermissions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_) {}

GenesisAccountPermissions::GenesisAccountPermissions(
    ::google::protobuf::Arena* arena,
    const GenesisAccountPermissions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisAccountPermissions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.permissions_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::circuit::v1::Permissions>(
                              arena, *from._impl_.permissions_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.circuit.v1.GenesisAccountPermissions)
}
inline PROTOBUF_NDEBUG_INLINE GenesisAccountPermissions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena) {}

inline void GenesisAccountPermissions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.permissions_ = {};
}
GenesisAccountPermissions::~GenesisAccountPermissions() {
  // @@protoc_insertion_point(destructor:cosmos.circuit.v1.GenesisAccountPermissions)
  SharedDtor(*this);
}
inline void GenesisAccountPermissions::SharedDtor(MessageLite& self) {
  GenesisAccountPermissions& this_ = static_cast<GenesisAccountPermissions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  delete this_._impl_.permissions_;
  this_._impl_.~Impl_();
}

inline void* GenesisAccountPermissions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisAccountPermissions(arena);
}
constexpr auto GenesisAccountPermissions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenesisAccountPermissions),
                                            alignof(GenesisAccountPermissions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisAccountPermissions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisAccountPermissions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisAccountPermissions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisAccountPermissions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisAccountPermissions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisAccountPermissions>(), &GenesisAccountPermissions::ByteSizeLong,
            &GenesisAccountPermissions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_._cached_size_),
        false,
    },
    &GenesisAccountPermissions::kDescriptorMethods,
    &descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisAccountPermissions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 59, 2> GenesisAccountPermissions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::circuit::v1::GenesisAccountPermissions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_.permissions_)}},
    // string address = 1 [json_name = "address"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address"];
    {PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];
    {PROTOBUF_FIELD_OFFSET(GenesisAccountPermissions, _impl_.permissions_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::circuit::v1::Permissions>()},
  }}, {{
    "\53\7\0\0\0\0\0\0"
    "cosmos.circuit.v1.GenesisAccountPermissions"
    "address"
  }},
};

PROTOBUF_NOINLINE void GenesisAccountPermissions::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.circuit.v1.GenesisAccountPermissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.permissions_ != nullptr);
    _impl_.permissions_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisAccountPermissions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisAccountPermissions& this_ = static_cast<const GenesisAccountPermissions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisAccountPermissions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisAccountPermissions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.circuit.v1.GenesisAccountPermissions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.circuit.v1.GenesisAccountPermissions.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.permissions_, this_._impl_.permissions_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.circuit.v1.GenesisAccountPermissions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisAccountPermissions::ByteSizeLong(const MessageLite& base) {
          const GenesisAccountPermissions& this_ = static_cast<const GenesisAccountPermissions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisAccountPermissions::ByteSizeLong() const {
          const GenesisAccountPermissions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.circuit.v1.GenesisAccountPermissions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.permissions_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisAccountPermissions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisAccountPermissions*>(&to_msg);
  auto& from = static_cast<const GenesisAccountPermissions&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.circuit.v1.GenesisAccountPermissions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.permissions_ != nullptr);
    if (_this->_impl_.permissions_ == nullptr) {
      _this->_impl_.permissions_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::circuit::v1::Permissions>(arena, *from._impl_.permissions_);
    } else {
      _this->_impl_.permissions_->MergeFrom(*from._impl_.permissions_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisAccountPermissions::CopyFrom(const GenesisAccountPermissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.circuit.v1.GenesisAccountPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisAccountPermissions::InternalSwap(GenesisAccountPermissions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  swap(_impl_.permissions_, other->_impl_.permissions_);
}

::google::protobuf::Metadata GenesisAccountPermissions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenesisState::_Internal {
 public:
};

GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.circuit.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::circuit::v1::GenesisState& from_msg)
      : account_permissions_{visibility, arena, from.account_permissions_},
        disabled_type_urls_{visibility, arena, from.disabled_type_urls_},
        _cached_size_{0} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.circuit.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_permissions_{visibility, arena},
        disabled_type_urls_{visibility, arena},
        _cached_size_{0} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmos.circuit.v1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.account_permissions_) +
          decltype(GenesisState::_impl_.account_permissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.disabled_type_urls_) +
          decltype(GenesisState::_impl_.disabled_type_urls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> GenesisState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::circuit::v1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string disabled_type_urls = 2 [json_name = "disabledTypeUrls"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.disabled_type_urls_)}},
    // repeated .cosmos.circuit.v1.GenesisAccountPermissions account_permissions = 1 [json_name = "accountPermissions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.account_permissions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.circuit.v1.GenesisAccountPermissions account_permissions = 1 [json_name = "accountPermissions"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.account_permissions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string disabled_type_urls = 2 [json_name = "disabledTypeUrls"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.disabled_type_urls_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::circuit::v1::GenesisAccountPermissions>()},
  }}, {{
    "\36\0\22\0\0\0\0\0"
    "cosmos.circuit.v1.GenesisState"
    "disabled_type_urls"
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.circuit.v1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_permissions_.Clear();
  _impl_.disabled_type_urls_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.circuit.v1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.circuit.v1.GenesisAccountPermissions account_permissions = 1 [json_name = "accountPermissions"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_account_permissions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_account_permissions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string disabled_type_urls = 2 [json_name = "disabledTypeUrls"];
          for (int i = 0, n = this_._internal_disabled_type_urls_size(); i < n; ++i) {
            const auto& s = this_._internal_disabled_type_urls().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.circuit.v1.GenesisState.disabled_type_urls");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.circuit.v1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.circuit.v1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.circuit.v1.GenesisAccountPermissions account_permissions = 1 [json_name = "accountPermissions"];
            {
              total_size += 1UL * this_._internal_account_permissions_size();
              for (const auto& msg : this_._internal_account_permissions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string disabled_type_urls = 2 [json_name = "disabledTypeUrls"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_disabled_type_urls().size());
              for (int i = 0, n = this_._internal_disabled_type_urls().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_disabled_type_urls().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.circuit.v1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account_permissions()->MergeFrom(
      from._internal_account_permissions());
  _this->_internal_mutable_disabled_type_urls()->MergeFrom(from._internal_disabled_type_urls());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.circuit.v1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.account_permissions_.InternalSwap(&other->_impl_.account_permissions_);
  _impl_.disabled_type_urls_.InternalSwap(&other->_impl_.disabled_type_urls_);
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace circuit
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fcircuit_2fv1_2ftypes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
