// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/evidence/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/evidence/v1beta1/tx.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace evidence {
namespace v1beta1 {

inline constexpr MsgSubmitEvidenceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MsgSubmitEvidenceResponse::MsgSubmitEvidenceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MsgSubmitEvidenceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitEvidenceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitEvidenceResponseDefaultTypeInternal() {}
  union {
    MsgSubmitEvidenceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitEvidenceResponseDefaultTypeInternal _MsgSubmitEvidenceResponse_default_instance_;

inline constexpr MsgSubmitEvidence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        submitter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        evidence_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MsgSubmitEvidence::MsgSubmitEvidence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MsgSubmitEvidenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgSubmitEvidenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgSubmitEvidenceDefaultTypeInternal() {}
  union {
    MsgSubmitEvidence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgSubmitEvidenceDefaultTypeInternal _MsgSubmitEvidence_default_instance_;
}  // namespace v1beta1
}  // namespace evidence
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fevidence_2fv1beta1_2ftx_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fevidence_2fv1beta1_2ftx_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fevidence_2fv1beta1_2ftx_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::evidence::v1beta1::MsgSubmitEvidence, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::evidence::v1beta1::MsgSubmitEvidence, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::evidence::v1beta1::MsgSubmitEvidence, _impl_.submitter_),
        PROTOBUF_FIELD_OFFSET(::cosmos::evidence::v1beta1::MsgSubmitEvidence, _impl_.evidence_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::evidence::v1beta1::MsgSubmitEvidenceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::evidence::v1beta1::MsgSubmitEvidenceResponse, _impl_.hash_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cosmos::evidence::v1beta1::MsgSubmitEvidence)},
        {12, -1, -1, sizeof(::cosmos::evidence::v1beta1::MsgSubmitEvidenceResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::evidence::v1beta1::_MsgSubmitEvidence_default_instance_._instance,
    &::cosmos::evidence::v1beta1::_MsgSubmitEvidenceResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fevidence_2fv1beta1_2ftx_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n cosmos/evidence/v1beta1/tx.proto\022\027cosm"
    "os.evidence.v1beta1\032\024gogoproto/gogo.prot"
    "o\032\031google/protobuf/any.proto\032\031cosmos_pro"
    "to/cosmos.proto\032\027cosmos/msg/v1/msg.proto"
    "\032\021amino/amino.proto\"\334\001\n\021MsgSubmitEvidenc"
    "e\0226\n\tsubmitter\030\001 \001(\tB\030\322\264-\024cosmos.Address"
    "StringR\tsubmitter\022V\n\010evidence\030\002 \001(\0132\024.go"
    "ogle.protobuf.AnyB$\312\264- cosmos.evidence.v"
    "1beta1.EvidenceR\010evidence:7\210\240\037\000\350\240\037\000\202\347\260*\t"
    "submitter\212\347\260*\034cosmos-sdk/MsgSubmitEviden"
    "ce\"/\n\031MsgSubmitEvidenceResponse\022\022\n\004hash\030"
    "\004 \001(\014R\004hash2~\n\003Msg\022p\n\016SubmitEvidence\022*.c"
    "osmos.evidence.v1beta1.MsgSubmitEvidence"
    "\0322.cosmos.evidence.v1beta1.MsgSubmitEvid"
    "enceResponse\032\005\200\347\260*\001B#Z\035cosmossdk.io/x/ev"
    "idence/types\250\342\036\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto_deps[5] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fmsg_2fv1_2fmsg_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto = {
    false,
    false,
    624,
    descriptor_table_protodef_cosmos_2fevidence_2fv1beta1_2ftx_2eproto,
    "cosmos/evidence/v1beta1/tx.proto",
    &descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto_once,
    descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto_deps,
    5,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fevidence_2fv1beta1_2ftx_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fevidence_2fv1beta1_2ftx_2eproto,
    file_level_service_descriptors_cosmos_2fevidence_2fv1beta1_2ftx_2eproto,
};
namespace cosmos {
namespace evidence {
namespace v1beta1 {
// ===================================================================

class MsgSubmitEvidence::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MsgSubmitEvidence>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_._has_bits_);
};

void MsgSubmitEvidence::clear_evidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evidence_ != nullptr) _impl_.evidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
MsgSubmitEvidence::MsgSubmitEvidence(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.evidence.v1beta1.MsgSubmitEvidence)
}
inline PROTOBUF_NDEBUG_INLINE MsgSubmitEvidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::evidence::v1beta1::MsgSubmitEvidence& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        submitter_(arena, from.submitter_) {}

MsgSubmitEvidence::MsgSubmitEvidence(
    ::google::protobuf::Arena* arena,
    const MsgSubmitEvidence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MsgSubmitEvidence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.evidence_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.evidence_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.evidence.v1beta1.MsgSubmitEvidence)
}
inline PROTOBUF_NDEBUG_INLINE MsgSubmitEvidence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        submitter_(arena) {}

inline void MsgSubmitEvidence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.evidence_ = {};
}
MsgSubmitEvidence::~MsgSubmitEvidence() {
  // @@protoc_insertion_point(destructor:cosmos.evidence.v1beta1.MsgSubmitEvidence)
  SharedDtor(*this);
}
inline void MsgSubmitEvidence::SharedDtor(MessageLite& self) {
  MsgSubmitEvidence& this_ = static_cast<MsgSubmitEvidence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.submitter_.Destroy();
  delete this_._impl_.evidence_;
  this_._impl_.~Impl_();
}

inline void* MsgSubmitEvidence::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MsgSubmitEvidence(arena);
}
constexpr auto MsgSubmitEvidence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MsgSubmitEvidence),
                                            alignof(MsgSubmitEvidence));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MsgSubmitEvidence::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MsgSubmitEvidence_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MsgSubmitEvidence::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MsgSubmitEvidence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MsgSubmitEvidence::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MsgSubmitEvidence>(), &MsgSubmitEvidence::ByteSizeLong,
            &MsgSubmitEvidence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_._cached_size_),
        false,
    },
    &MsgSubmitEvidence::kDescriptorMethods,
    &descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MsgSubmitEvidence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 59, 2> MsgSubmitEvidence::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::evidence::v1beta1::MsgSubmitEvidence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any evidence = 2 [json_name = "evidence", (.cosmos_proto.accepts_interface) = "cosmos.evidence.v1beta1.Evidence"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_.evidence_)}},
    // string submitter = 1 [json_name = "submitter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_.submitter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string submitter = 1 [json_name = "submitter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_.submitter_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any evidence = 2 [json_name = "evidence", (.cosmos_proto.accepts_interface) = "cosmos.evidence.v1beta1.Evidence"];
    {PROTOBUF_FIELD_OFFSET(MsgSubmitEvidence, _impl_.evidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\51\11\0\0\0\0\0\0"
    "cosmos.evidence.v1beta1.MsgSubmitEvidence"
    "submitter"
  }},
};

PROTOBUF_NOINLINE void MsgSubmitEvidence::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.evidence.v1beta1.MsgSubmitEvidence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.submitter_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.evidence_ != nullptr);
    _impl_.evidence_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MsgSubmitEvidence::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MsgSubmitEvidence& this_ = static_cast<const MsgSubmitEvidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MsgSubmitEvidence::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MsgSubmitEvidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.evidence.v1beta1.MsgSubmitEvidence)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string submitter = 1 [json_name = "submitter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_submitter().empty()) {
            const std::string& _s = this_._internal_submitter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.evidence.v1beta1.MsgSubmitEvidence.submitter");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any evidence = 2 [json_name = "evidence", (.cosmos_proto.accepts_interface) = "cosmos.evidence.v1beta1.Evidence"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.evidence_, this_._impl_.evidence_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.evidence.v1beta1.MsgSubmitEvidence)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MsgSubmitEvidence::ByteSizeLong(const MessageLite& base) {
          const MsgSubmitEvidence& this_ = static_cast<const MsgSubmitEvidence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MsgSubmitEvidence::ByteSizeLong() const {
          const MsgSubmitEvidence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.evidence.v1beta1.MsgSubmitEvidence)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string submitter = 1 [json_name = "submitter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_submitter().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_submitter());
            }
          }
           {
            // .google.protobuf.Any evidence = 2 [json_name = "evidence", (.cosmos_proto.accepts_interface) = "cosmos.evidence.v1beta1.Evidence"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.evidence_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MsgSubmitEvidence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MsgSubmitEvidence*>(&to_msg);
  auto& from = static_cast<const MsgSubmitEvidence&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.evidence.v1beta1.MsgSubmitEvidence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_submitter().empty()) {
    _this->_internal_set_submitter(from._internal_submitter());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.evidence_ != nullptr);
    if (_this->_impl_.evidence_ == nullptr) {
      _this->_impl_.evidence_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.evidence_);
    } else {
      _this->_impl_.evidence_->MergeFrom(*from._impl_.evidence_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitEvidence::CopyFrom(const MsgSubmitEvidence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.evidence.v1beta1.MsgSubmitEvidence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MsgSubmitEvidence::InternalSwap(MsgSubmitEvidence* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.submitter_, &other->_impl_.submitter_, arena);
  swap(_impl_.evidence_, other->_impl_.evidence_);
}

::google::protobuf::Metadata MsgSubmitEvidence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MsgSubmitEvidenceResponse::_Internal {
 public:
};

MsgSubmitEvidenceResponse::MsgSubmitEvidenceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
}
inline PROTOBUF_NDEBUG_INLINE MsgSubmitEvidenceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::evidence::v1beta1::MsgSubmitEvidenceResponse& from_msg)
      : hash_(arena, from.hash_),
        _cached_size_{0} {}

MsgSubmitEvidenceResponse::MsgSubmitEvidenceResponse(
    ::google::protobuf::Arena* arena,
    const MsgSubmitEvidenceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MsgSubmitEvidenceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
}
inline PROTOBUF_NDEBUG_INLINE MsgSubmitEvidenceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hash_(arena),
        _cached_size_{0} {}

inline void MsgSubmitEvidenceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MsgSubmitEvidenceResponse::~MsgSubmitEvidenceResponse() {
  // @@protoc_insertion_point(destructor:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
  SharedDtor(*this);
}
inline void MsgSubmitEvidenceResponse::SharedDtor(MessageLite& self) {
  MsgSubmitEvidenceResponse& this_ = static_cast<MsgSubmitEvidenceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MsgSubmitEvidenceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MsgSubmitEvidenceResponse(arena);
}
constexpr auto MsgSubmitEvidenceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MsgSubmitEvidenceResponse),
                                            alignof(MsgSubmitEvidenceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MsgSubmitEvidenceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MsgSubmitEvidenceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MsgSubmitEvidenceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MsgSubmitEvidenceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MsgSubmitEvidenceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MsgSubmitEvidenceResponse>(), &MsgSubmitEvidenceResponse::ByteSizeLong,
            &MsgSubmitEvidenceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MsgSubmitEvidenceResponse, _impl_._cached_size_),
        false,
    },
    &MsgSubmitEvidenceResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MsgSubmitEvidenceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MsgSubmitEvidenceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967287,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::evidence::v1beta1::MsgSubmitEvidenceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes hash = 4 [json_name = "hash"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MsgSubmitEvidenceResponse, _impl_.hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes hash = 4 [json_name = "hash"];
    {PROTOBUF_FIELD_OFFSET(MsgSubmitEvidenceResponse, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MsgSubmitEvidenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MsgSubmitEvidenceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MsgSubmitEvidenceResponse& this_ = static_cast<const MsgSubmitEvidenceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MsgSubmitEvidenceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MsgSubmitEvidenceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes hash = 4 [json_name = "hash"];
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MsgSubmitEvidenceResponse::ByteSizeLong(const MessageLite& base) {
          const MsgSubmitEvidenceResponse& this_ = static_cast<const MsgSubmitEvidenceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MsgSubmitEvidenceResponse::ByteSizeLong() const {
          const MsgSubmitEvidenceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes hash = 4 [json_name = "hash"];
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MsgSubmitEvidenceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MsgSubmitEvidenceResponse*>(&to_msg);
  auto& from = static_cast<const MsgSubmitEvidenceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSubmitEvidenceResponse::CopyFrom(const MsgSubmitEvidenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MsgSubmitEvidenceResponse::InternalSwap(MsgSubmitEvidenceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
}

::google::protobuf::Metadata MsgSubmitEvidenceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace evidence
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fevidence_2fv1beta1_2ftx_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
