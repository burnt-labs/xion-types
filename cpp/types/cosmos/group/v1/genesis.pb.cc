// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/group/v1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/group/v1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace group {
namespace v1 {

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : groups_{},
        group_members_{},
        group_policies_{},
        proposals_{},
        votes_{},
        group_seq_{::uint64_t{0u}},
        group_policy_seq_{::uint64_t{0u}},
        proposal_seq_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1
}  // namespace group
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgroup_2fv1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.group_seq_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.groups_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.group_members_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.group_policy_seq_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.group_policies_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.proposal_seq_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.proposals_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GenesisState, _impl_.votes_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::group::v1::GenesisState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::group::v1::_GenesisState_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgroup_2fv1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035cosmos/group/v1/genesis.proto\022\017cosmos."
    "group.v1\032\033cosmos/group/v1/types.proto\"\236\003"
    "\n\014GenesisState\022\033\n\tgroup_seq\030\001 \001(\004R\010group"
    "Seq\0222\n\006groups\030\002 \003(\0132\032.cosmos.group.v1.Gr"
    "oupInfoR\006groups\022A\n\rgroup_members\030\003 \003(\0132\034"
    ".cosmos.group.v1.GroupMemberR\014groupMembe"
    "rs\022(\n\020group_policy_seq\030\004 \001(\004R\016groupPolic"
    "ySeq\022G\n\016group_policies\030\005 \003(\0132 .cosmos.gr"
    "oup.v1.GroupPolicyInfoR\rgroupPolicies\022!\n"
    "\014proposal_seq\030\006 \001(\004R\013proposalSeq\0227\n\tprop"
    "osals\030\007 \003(\0132\031.cosmos.group.v1.ProposalR\t"
    "proposals\022+\n\005votes\030\010 \003(\0132\025.cosmos.group."
    "v1.VoteR\005votesB&Z$github.com/cosmos/cosm"
    "os-sdk/x/groupb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto_deps[1] =
    {
        &::descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto = {
    false,
    false,
    542,
    descriptor_table_protodef_cosmos_2fgroup_2fv1_2fgenesis_2eproto,
    "cosmos/group/v1/genesis.proto",
    &descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto_once,
    descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgroup_2fv1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2fgenesis_2eproto,
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2fgenesis_2eproto,
};
namespace cosmos {
namespace group {
namespace v1 {
// ===================================================================

class GenesisState::_Internal {
 public:
};

void GenesisState::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
void GenesisState::clear_group_members() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_members_.Clear();
}
void GenesisState::clear_group_policies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_policies_.Clear();
}
void GenesisState::clear_proposals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposals_.Clear();
}
void GenesisState::clear_votes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votes_.Clear();
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::GenesisState& from_msg)
      : groups_{visibility, arena, from.groups_},
        group_members_{visibility, arena, from.group_members_},
        group_policies_{visibility, arena, from.group_policies_},
        proposals_{visibility, arena, from.proposals_},
        votes_{visibility, arena, from.votes_},
        _cached_size_{0} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, group_seq_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, group_seq_),
           offsetof(Impl_, proposal_seq_) -
               offsetof(Impl_, group_seq_) +
               sizeof(Impl_::proposal_seq_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : groups_{visibility, arena},
        group_members_{visibility, arena},
        group_policies_{visibility, arena},
        proposals_{visibility, arena},
        votes_{visibility, arena},
        _cached_size_{0} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, group_seq_),
           0,
           offsetof(Impl_, proposal_seq_) -
               offsetof(Impl_, group_seq_) +
               sizeof(Impl_::proposal_seq_));
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.groups_) +
          decltype(GenesisState::_impl_.groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_members_) +
          decltype(GenesisState::_impl_.group_members_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_policies_) +
          decltype(GenesisState::_impl_.group_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposals_) +
          decltype(GenesisState::_impl_.proposals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.votes_) +
          decltype(GenesisState::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 5, 0, 2> GenesisState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.group.v1.Vote votes = 8 [json_name = "votes"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 4, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.votes_)}},
    // uint64 group_seq = 1 [json_name = "groupSeq"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GenesisState, _impl_.group_seq_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_seq_)}},
    // repeated .cosmos.group.v1.GroupInfo groups = 2 [json_name = "groups"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.groups_)}},
    // repeated .cosmos.group.v1.GroupMember group_members = 3 [json_name = "groupMembers"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_members_)}},
    // uint64 group_policy_seq = 4 [json_name = "groupPolicySeq"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GenesisState, _impl_.group_policy_seq_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_policy_seq_)}},
    // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 5 [json_name = "groupPolicies"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_policies_)}},
    // uint64 proposal_seq = 6 [json_name = "proposalSeq"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GenesisState, _impl_.proposal_seq_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposal_seq_)}},
    // repeated .cosmos.group.v1.Proposal proposals = 7 [json_name = "proposals"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 3, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposals_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_seq = 1 [json_name = "groupSeq"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .cosmos.group.v1.GroupInfo groups = 2 [json_name = "groups"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.groups_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.group.v1.GroupMember group_members = 3 [json_name = "groupMembers"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_members_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 group_policy_seq = 4 [json_name = "groupPolicySeq"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_policy_seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 5 [json_name = "groupPolicies"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_policies_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 proposal_seq = 6 [json_name = "proposalSeq"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposal_seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .cosmos.group.v1.Proposal proposals = 7 [json_name = "proposals"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposals_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.group.v1.Vote votes = 8 [json_name = "votes"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.votes_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupMember>()},
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupPolicyInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Proposal>()},
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Vote>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  _impl_.group_members_.Clear();
  _impl_.group_policies_.Clear();
  _impl_.proposals_.Clear();
  _impl_.votes_.Clear();
  ::memset(&_impl_.group_seq_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.proposal_seq_) -
      reinterpret_cast<char*>(&_impl_.group_seq_)) + sizeof(_impl_.proposal_seq_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_seq = 1 [json_name = "groupSeq"];
          if (this_._internal_group_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_seq(), target);
          }

          // repeated .cosmos.group.v1.GroupInfo groups = 2 [json_name = "groups"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.group.v1.GroupMember group_members = 3 [json_name = "groupMembers"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_group_members_size());
               i < n; i++) {
            const auto& repfield = this_._internal_group_members().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 group_policy_seq = 4 [json_name = "groupPolicySeq"];
          if (this_._internal_group_policy_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_group_policy_seq(), target);
          }

          // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 5 [json_name = "groupPolicies"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_group_policies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_group_policies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 proposal_seq = 6 [json_name = "proposalSeq"];
          if (this_._internal_proposal_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_proposal_seq(), target);
          }

          // repeated .cosmos.group.v1.Proposal proposals = 7 [json_name = "proposals"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_proposals_size());
               i < n; i++) {
            const auto& repfield = this_._internal_proposals().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.group.v1.Vote votes = 8 [json_name = "votes"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupInfo groups = 2 [json_name = "groups"];
            {
              total_size += 1UL * this_._internal_groups_size();
              for (const auto& msg : this_._internal_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.group.v1.GroupMember group_members = 3 [json_name = "groupMembers"];
            {
              total_size += 1UL * this_._internal_group_members_size();
              for (const auto& msg : this_._internal_group_members()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 5 [json_name = "groupPolicies"];
            {
              total_size += 1UL * this_._internal_group_policies_size();
              for (const auto& msg : this_._internal_group_policies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.group.v1.Proposal proposals = 7 [json_name = "proposals"];
            {
              total_size += 1UL * this_._internal_proposals_size();
              for (const auto& msg : this_._internal_proposals()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.group.v1.Vote votes = 8 [json_name = "votes"];
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 group_seq = 1 [json_name = "groupSeq"];
            if (this_._internal_group_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_seq());
            }
            // uint64 group_policy_seq = 4 [json_name = "groupPolicySeq"];
            if (this_._internal_group_policy_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_policy_seq());
            }
            // uint64 proposal_seq = 6 [json_name = "proposalSeq"];
            if (this_._internal_proposal_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_seq());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  _this->_internal_mutable_group_members()->MergeFrom(
      from._internal_group_members());
  _this->_internal_mutable_group_policies()->MergeFrom(
      from._internal_group_policies());
  _this->_internal_mutable_proposals()->MergeFrom(
      from._internal_proposals());
  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  if (from._internal_group_seq() != 0) {
    _this->_impl_.group_seq_ = from._impl_.group_seq_;
  }
  if (from._internal_group_policy_seq() != 0) {
    _this->_impl_.group_policy_seq_ = from._impl_.group_policy_seq_;
  }
  if (from._internal_proposal_seq() != 0) {
    _this->_impl_.proposal_seq_ = from._impl_.proposal_seq_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  _impl_.group_members_.InternalSwap(&other->_impl_.group_members_);
  _impl_.group_policies_.InternalSwap(&other->_impl_.group_policies_);
  _impl_.proposals_.InternalSwap(&other->_impl_.proposals_);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposal_seq_)
      + sizeof(GenesisState::_impl_.proposal_seq_)
      - PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.group_seq_)>(
          reinterpret_cast<char*>(&_impl_.group_seq_),
          reinterpret_cast<char*>(&other->_impl_.group_seq_));
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace group
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
