// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/group/v1/genesis.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fgroup_2fv1_2fgenesis_2eproto_2epb_2eh
#define cosmos_2fgroup_2fv1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/group/v1/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fgroup_2fv1_2fgenesis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fgroup_2fv1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fgroup_2fv1_2fgenesis_2eproto;
namespace cosmos {
namespace group {
namespace v1 {
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1
}  // namespace group
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace group {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GenesisState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.group.v1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenesisState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenesisState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenesisState(const GenesisState& from) : GenesisState(nullptr, from) {}
  inline GenesisState(GenesisState&& from) noexcept
      : GenesisState(nullptr, std::move(from)) {}
  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
        &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GenesisState& a, GenesisState& b) { a.Swap(&b); }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenesisState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenesisState& from) { GenesisState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenesisState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.group.v1.GenesisState"; }

 protected:
  explicit GenesisState(::google::protobuf::Arena* arena);
  GenesisState(::google::protobuf::Arena* arena, const GenesisState& from);
  GenesisState(::google::protobuf::Arena* arena, GenesisState&& from) noexcept
      : GenesisState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupsFieldNumber = 2,
    kGroupMembersFieldNumber = 3,
    kGroupPoliciesFieldNumber = 5,
    kProposalsFieldNumber = 7,
    kVotesFieldNumber = 8,
    kGroupSeqFieldNumber = 1,
    kGroupPolicySeqFieldNumber = 4,
    kProposalSeqFieldNumber = 6,
  };
  // repeated .cosmos.group.v1.GroupInfo groups = 2 [json_name = "groups"];
  int groups_size() const;
  private:
  int _internal_groups_size() const;

  public:
  void clear_groups() ;
  ::cosmos::group::v1::GroupInfo* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>* mutable_groups();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>& _internal_groups() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>* _internal_mutable_groups();
  public:
  const ::cosmos::group::v1::GroupInfo& groups(int index) const;
  ::cosmos::group::v1::GroupInfo* add_groups();
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>& groups() const;
  // repeated .cosmos.group.v1.GroupMember group_members = 3 [json_name = "groupMembers"];
  int group_members_size() const;
  private:
  int _internal_group_members_size() const;

  public:
  void clear_group_members() ;
  ::cosmos::group::v1::GroupMember* mutable_group_members(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>* mutable_group_members();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>& _internal_group_members() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>* _internal_mutable_group_members();
  public:
  const ::cosmos::group::v1::GroupMember& group_members(int index) const;
  ::cosmos::group::v1::GroupMember* add_group_members();
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>& group_members() const;
  // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 5 [json_name = "groupPolicies"];
  int group_policies_size() const;
  private:
  int _internal_group_policies_size() const;

  public:
  void clear_group_policies() ;
  ::cosmos::group::v1::GroupPolicyInfo* mutable_group_policies(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>* mutable_group_policies();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>& _internal_group_policies() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>* _internal_mutable_group_policies();
  public:
  const ::cosmos::group::v1::GroupPolicyInfo& group_policies(int index) const;
  ::cosmos::group::v1::GroupPolicyInfo* add_group_policies();
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>& group_policies() const;
  // repeated .cosmos.group.v1.Proposal proposals = 7 [json_name = "proposals"];
  int proposals_size() const;
  private:
  int _internal_proposals_size() const;

  public:
  void clear_proposals() ;
  ::cosmos::group::v1::Proposal* mutable_proposals(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>* mutable_proposals();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>& _internal_proposals() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>* _internal_mutable_proposals();
  public:
  const ::cosmos::group::v1::Proposal& proposals(int index) const;
  ::cosmos::group::v1::Proposal* add_proposals();
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>& proposals() const;
  // repeated .cosmos.group.v1.Vote votes = 8 [json_name = "votes"];
  int votes_size() const;
  private:
  int _internal_votes_size() const;

  public:
  void clear_votes() ;
  ::cosmos::group::v1::Vote* mutable_votes(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>* mutable_votes();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>& _internal_votes() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>* _internal_mutable_votes();
  public:
  const ::cosmos::group::v1::Vote& votes(int index) const;
  ::cosmos::group::v1::Vote* add_votes();
  const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>& votes() const;
  // uint64 group_seq = 1 [json_name = "groupSeq"];
  void clear_group_seq() ;
  ::uint64_t group_seq() const;
  void set_group_seq(::uint64_t value);

  private:
  ::uint64_t _internal_group_seq() const;
  void _internal_set_group_seq(::uint64_t value);

  public:
  // uint64 group_policy_seq = 4 [json_name = "groupPolicySeq"];
  void clear_group_policy_seq() ;
  ::uint64_t group_policy_seq() const;
  void set_group_policy_seq(::uint64_t value);

  private:
  ::uint64_t _internal_group_policy_seq() const;
  void _internal_set_group_policy_seq(::uint64_t value);

  public:
  // uint64 proposal_seq = 6 [json_name = "proposalSeq"];
  void clear_proposal_seq() ;
  ::uint64_t proposal_seq() const;
  void set_proposal_seq(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_seq() const;
  void _internal_set_proposal_seq(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.group.v1.GenesisState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 5,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenesisState& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::group::v1::GroupInfo > groups_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::group::v1::GroupMember > group_members_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::group::v1::GroupPolicyInfo > group_policies_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::group::v1::Proposal > proposals_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::group::v1::Vote > votes_;
    ::uint64_t group_seq_;
    ::uint64_t group_policy_seq_;
    ::uint64_t proposal_seq_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgroup_2fv1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenesisState

// uint64 group_seq = 1 [json_name = "groupSeq"];
inline void GenesisState::clear_group_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_seq_ = ::uint64_t{0u};
}
inline ::uint64_t GenesisState::group_seq() const {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.group_seq)
  return _internal_group_seq();
}
inline void GenesisState::set_group_seq(::uint64_t value) {
  _internal_set_group_seq(value);
  // @@protoc_insertion_point(field_set:cosmos.group.v1.GenesisState.group_seq)
}
inline ::uint64_t GenesisState::_internal_group_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_seq_;
}
inline void GenesisState::_internal_set_group_seq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_seq_ = value;
}

// repeated .cosmos.group.v1.GroupInfo groups = 2 [json_name = "groups"];
inline int GenesisState::_internal_groups_size() const {
  return _internal_groups().size();
}
inline int GenesisState::groups_size() const {
  return _internal_groups_size();
}
inline ::cosmos::group::v1::GroupInfo* GenesisState::mutable_groups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.group.v1.GenesisState.groups)
  return _internal_mutable_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>* GenesisState::mutable_groups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.group.v1.GenesisState.groups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_groups();
}
inline const ::cosmos::group::v1::GroupInfo& GenesisState::groups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.groups)
  return _internal_groups().Get(index);
}
inline ::cosmos::group::v1::GroupInfo* GenesisState::add_groups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::group::v1::GroupInfo* _add = _internal_mutable_groups()->Add();
  // @@protoc_insertion_point(field_add:cosmos.group.v1.GenesisState.groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>& GenesisState::groups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.group.v1.GenesisState.groups)
  return _internal_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>&
GenesisState::_internal_groups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groups_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupInfo>*
GenesisState::_internal_mutable_groups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.groups_;
}

// repeated .cosmos.group.v1.GroupMember group_members = 3 [json_name = "groupMembers"];
inline int GenesisState::_internal_group_members_size() const {
  return _internal_group_members().size();
}
inline int GenesisState::group_members_size() const {
  return _internal_group_members_size();
}
inline ::cosmos::group::v1::GroupMember* GenesisState::mutable_group_members(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.group.v1.GenesisState.group_members)
  return _internal_mutable_group_members()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>* GenesisState::mutable_group_members()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.group.v1.GenesisState.group_members)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_group_members();
}
inline const ::cosmos::group::v1::GroupMember& GenesisState::group_members(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.group_members)
  return _internal_group_members().Get(index);
}
inline ::cosmos::group::v1::GroupMember* GenesisState::add_group_members() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::group::v1::GroupMember* _add = _internal_mutable_group_members()->Add();
  // @@protoc_insertion_point(field_add:cosmos.group.v1.GenesisState.group_members)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>& GenesisState::group_members() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.group.v1.GenesisState.group_members)
  return _internal_group_members();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>&
GenesisState::_internal_group_members() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_members_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupMember>*
GenesisState::_internal_mutable_group_members() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.group_members_;
}

// uint64 group_policy_seq = 4 [json_name = "groupPolicySeq"];
inline void GenesisState::clear_group_policy_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_policy_seq_ = ::uint64_t{0u};
}
inline ::uint64_t GenesisState::group_policy_seq() const {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.group_policy_seq)
  return _internal_group_policy_seq();
}
inline void GenesisState::set_group_policy_seq(::uint64_t value) {
  _internal_set_group_policy_seq(value);
  // @@protoc_insertion_point(field_set:cosmos.group.v1.GenesisState.group_policy_seq)
}
inline ::uint64_t GenesisState::_internal_group_policy_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_policy_seq_;
}
inline void GenesisState::_internal_set_group_policy_seq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_policy_seq_ = value;
}

// repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 5 [json_name = "groupPolicies"];
inline int GenesisState::_internal_group_policies_size() const {
  return _internal_group_policies().size();
}
inline int GenesisState::group_policies_size() const {
  return _internal_group_policies_size();
}
inline ::cosmos::group::v1::GroupPolicyInfo* GenesisState::mutable_group_policies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.group.v1.GenesisState.group_policies)
  return _internal_mutable_group_policies()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>* GenesisState::mutable_group_policies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.group.v1.GenesisState.group_policies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_group_policies();
}
inline const ::cosmos::group::v1::GroupPolicyInfo& GenesisState::group_policies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.group_policies)
  return _internal_group_policies().Get(index);
}
inline ::cosmos::group::v1::GroupPolicyInfo* GenesisState::add_group_policies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::group::v1::GroupPolicyInfo* _add = _internal_mutable_group_policies()->Add();
  // @@protoc_insertion_point(field_add:cosmos.group.v1.GenesisState.group_policies)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>& GenesisState::group_policies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.group.v1.GenesisState.group_policies)
  return _internal_group_policies();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>&
GenesisState::_internal_group_policies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_policies_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::GroupPolicyInfo>*
GenesisState::_internal_mutable_group_policies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.group_policies_;
}

// uint64 proposal_seq = 6 [json_name = "proposalSeq"];
inline void GenesisState::clear_proposal_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_seq_ = ::uint64_t{0u};
}
inline ::uint64_t GenesisState::proposal_seq() const {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.proposal_seq)
  return _internal_proposal_seq();
}
inline void GenesisState::set_proposal_seq(::uint64_t value) {
  _internal_set_proposal_seq(value);
  // @@protoc_insertion_point(field_set:cosmos.group.v1.GenesisState.proposal_seq)
}
inline ::uint64_t GenesisState::_internal_proposal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_seq_;
}
inline void GenesisState::_internal_set_proposal_seq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_seq_ = value;
}

// repeated .cosmos.group.v1.Proposal proposals = 7 [json_name = "proposals"];
inline int GenesisState::_internal_proposals_size() const {
  return _internal_proposals().size();
}
inline int GenesisState::proposals_size() const {
  return _internal_proposals_size();
}
inline ::cosmos::group::v1::Proposal* GenesisState::mutable_proposals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.group.v1.GenesisState.proposals)
  return _internal_mutable_proposals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>* GenesisState::mutable_proposals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.group.v1.GenesisState.proposals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_proposals();
}
inline const ::cosmos::group::v1::Proposal& GenesisState::proposals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.proposals)
  return _internal_proposals().Get(index);
}
inline ::cosmos::group::v1::Proposal* GenesisState::add_proposals() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::group::v1::Proposal* _add = _internal_mutable_proposals()->Add();
  // @@protoc_insertion_point(field_add:cosmos.group.v1.GenesisState.proposals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>& GenesisState::proposals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.group.v1.GenesisState.proposals)
  return _internal_proposals();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>&
GenesisState::_internal_proposals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposals_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Proposal>*
GenesisState::_internal_mutable_proposals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.proposals_;
}

// repeated .cosmos.group.v1.Vote votes = 8 [json_name = "votes"];
inline int GenesisState::_internal_votes_size() const {
  return _internal_votes().size();
}
inline int GenesisState::votes_size() const {
  return _internal_votes_size();
}
inline ::cosmos::group::v1::Vote* GenesisState::mutable_votes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.group.v1.GenesisState.votes)
  return _internal_mutable_votes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>* GenesisState::mutable_votes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.group.v1.GenesisState.votes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_votes();
}
inline const ::cosmos::group::v1::Vote& GenesisState::votes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.group.v1.GenesisState.votes)
  return _internal_votes().Get(index);
}
inline ::cosmos::group::v1::Vote* GenesisState::add_votes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::group::v1::Vote* _add = _internal_mutable_votes()->Add();
  // @@protoc_insertion_point(field_add:cosmos.group.v1.GenesisState.votes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>& GenesisState::votes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.group.v1.GenesisState.votes)
  return _internal_votes();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>&
GenesisState::_internal_votes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.votes_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::group::v1::Vote>*
GenesisState::_internal_mutable_votes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.votes_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace group
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fgroup_2fv1_2fgenesis_2eproto_2epb_2eh
