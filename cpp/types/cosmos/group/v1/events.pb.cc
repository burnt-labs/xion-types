// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/group/v1/events.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/group/v1/events.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace group {
namespace v1 {

inline constexpr EventWithdrawProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventWithdrawProposal::EventWithdrawProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventWithdrawProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventWithdrawProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventWithdrawProposalDefaultTypeInternal() {}
  union {
    EventWithdrawProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventWithdrawProposalDefaultTypeInternal _EventWithdrawProposal_default_instance_;

inline constexpr EventVote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventVote::EventVote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventVoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventVoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventVoteDefaultTypeInternal() {}
  union {
    EventVote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventVoteDefaultTypeInternal _EventVote_default_instance_;

inline constexpr EventUpdateGroupPolicy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventUpdateGroupPolicy::EventUpdateGroupPolicy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventUpdateGroupPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventUpdateGroupPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventUpdateGroupPolicyDefaultTypeInternal() {}
  union {
    EventUpdateGroupPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventUpdateGroupPolicyDefaultTypeInternal _EventUpdateGroupPolicy_default_instance_;

inline constexpr EventUpdateGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : group_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventUpdateGroup::EventUpdateGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventUpdateGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventUpdateGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventUpdateGroupDefaultTypeInternal() {}
  union {
    EventUpdateGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventUpdateGroupDefaultTypeInternal _EventUpdateGroup_default_instance_;

inline constexpr EventTallyError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventTallyError::EventTallyError(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventTallyErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventTallyErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventTallyErrorDefaultTypeInternal() {}
  union {
    EventTallyError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventTallyErrorDefaultTypeInternal _EventTallyError_default_instance_;

inline constexpr EventSubmitProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventSubmitProposal::EventSubmitProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventSubmitProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventSubmitProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventSubmitProposalDefaultTypeInternal() {}
  union {
    EventSubmitProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventSubmitProposalDefaultTypeInternal _EventSubmitProposal_default_instance_;

inline constexpr EventLeaveGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        group_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventLeaveGroup::EventLeaveGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventLeaveGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventLeaveGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventLeaveGroupDefaultTypeInternal() {}
  union {
    EventLeaveGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventLeaveGroupDefaultTypeInternal _EventLeaveGroup_default_instance_;

inline constexpr EventExec::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : logs_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        result_{static_cast< ::cosmos::group::v1::ProposalExecutorResult >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventExec::EventExec(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventExecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventExecDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventExecDefaultTypeInternal() {}
  union {
    EventExec _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventExecDefaultTypeInternal _EventExec_default_instance_;

inline constexpr EventCreateGroupPolicy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventCreateGroupPolicy::EventCreateGroupPolicy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventCreateGroupPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventCreateGroupPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventCreateGroupPolicyDefaultTypeInternal() {}
  union {
    EventCreateGroupPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventCreateGroupPolicyDefaultTypeInternal _EventCreateGroupPolicy_default_instance_;

inline constexpr EventCreateGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : group_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventCreateGroup::EventCreateGroup(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventCreateGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventCreateGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventCreateGroupDefaultTypeInternal() {}
  union {
    EventCreateGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventCreateGroupDefaultTypeInternal _EventCreateGroup_default_instance_;

inline constexpr EventProposalPruned::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tally_result_{nullptr},
        proposal_id_{::uint64_t{0u}},
        status_{static_cast< ::cosmos::group::v1::ProposalStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EventProposalPruned::EventProposalPruned(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventProposalPrunedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventProposalPrunedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventProposalPrunedDefaultTypeInternal() {}
  union {
    EventProposalPruned _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventProposalPrunedDefaultTypeInternal _EventProposalPruned_default_instance_;
}  // namespace v1
}  // namespace group
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2fevents_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2fevents_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgroup_2fv1_2fevents_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventCreateGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventCreateGroup, _impl_.group_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventUpdateGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventUpdateGroup, _impl_.group_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventCreateGroupPolicy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventCreateGroupPolicy, _impl_.address_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventUpdateGroupPolicy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventUpdateGroupPolicy, _impl_.address_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventSubmitProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventSubmitProposal, _impl_.proposal_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventWithdrawProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventWithdrawProposal, _impl_.proposal_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventVote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventVote, _impl_.proposal_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventExec, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventExec, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventExec, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventExec, _impl_.logs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventLeaveGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventLeaveGroup, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventLeaveGroup, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventProposalPruned, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventProposalPruned, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventProposalPruned, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventProposalPruned, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventProposalPruned, _impl_.tally_result_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventTallyError, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventTallyError, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::EventTallyError, _impl_.error_message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::group::v1::EventCreateGroup)},
        {9, -1, -1, sizeof(::cosmos::group::v1::EventUpdateGroup)},
        {18, -1, -1, sizeof(::cosmos::group::v1::EventCreateGroupPolicy)},
        {27, -1, -1, sizeof(::cosmos::group::v1::EventUpdateGroupPolicy)},
        {36, -1, -1, sizeof(::cosmos::group::v1::EventSubmitProposal)},
        {45, -1, -1, sizeof(::cosmos::group::v1::EventWithdrawProposal)},
        {54, -1, -1, sizeof(::cosmos::group::v1::EventVote)},
        {63, -1, -1, sizeof(::cosmos::group::v1::EventExec)},
        {74, -1, -1, sizeof(::cosmos::group::v1::EventLeaveGroup)},
        {84, 95, -1, sizeof(::cosmos::group::v1::EventProposalPruned)},
        {98, -1, -1, sizeof(::cosmos::group::v1::EventTallyError)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::group::v1::_EventCreateGroup_default_instance_._instance,
    &::cosmos::group::v1::_EventUpdateGroup_default_instance_._instance,
    &::cosmos::group::v1::_EventCreateGroupPolicy_default_instance_._instance,
    &::cosmos::group::v1::_EventUpdateGroupPolicy_default_instance_._instance,
    &::cosmos::group::v1::_EventSubmitProposal_default_instance_._instance,
    &::cosmos::group::v1::_EventWithdrawProposal_default_instance_._instance,
    &::cosmos::group::v1::_EventVote_default_instance_._instance,
    &::cosmos::group::v1::_EventExec_default_instance_._instance,
    &::cosmos::group::v1::_EventLeaveGroup_default_instance_._instance,
    &::cosmos::group::v1::_EventProposalPruned_default_instance_._instance,
    &::cosmos::group::v1::_EventTallyError_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgroup_2fv1_2fevents_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034cosmos/group/v1/events.proto\022\017cosmos.g"
    "roup.v1\032\031cosmos_proto/cosmos.proto\032\033cosm"
    "os/group/v1/types.proto\"-\n\020EventCreateGr"
    "oup\022\031\n\010group_id\030\001 \001(\004R\007groupId\"-\n\020EventU"
    "pdateGroup\022\031\n\010group_id\030\001 \001(\004R\007groupId\"L\n"
    "\026EventCreateGroupPolicy\0222\n\007address\030\001 \001(\t"
    "B\030\322\264-\024cosmos.AddressStringR\007address\"L\n\026E"
    "ventUpdateGroupPolicy\0222\n\007address\030\001 \001(\tB\030"
    "\322\264-\024cosmos.AddressStringR\007address\"6\n\023Eve"
    "ntSubmitProposal\022\037\n\013proposal_id\030\001 \001(\004R\np"
    "roposalId\"8\n\025EventWithdrawProposal\022\037\n\013pr"
    "oposal_id\030\001 \001(\004R\nproposalId\",\n\tEventVote"
    "\022\037\n\013proposal_id\030\001 \001(\004R\nproposalId\"\201\001\n\tEv"
    "entExec\022\037\n\013proposal_id\030\001 \001(\004R\nproposalId"
    "\022\?\n\006result\030\002 \001(\0162\'.cosmos.group.v1.Propo"
    "salExecutorResultR\006result\022\022\n\004logs\030\003 \001(\tR"
    "\004logs\"`\n\017EventLeaveGroup\022\031\n\010group_id\030\001 \001"
    "(\004R\007groupId\0222\n\007address\030\002 \001(\tB\030\322\264-\024cosmos"
    ".AddressStringR\007address\"\260\001\n\023EventProposa"
    "lPruned\022\037\n\013proposal_id\030\001 \001(\004R\nproposalId"
    "\0227\n\006status\030\002 \001(\0162\037.cosmos.group.v1.Propo"
    "salStatusR\006status\022\?\n\014tally_result\030\003 \001(\0132"
    "\034.cosmos.group.v1.TallyResultR\013tallyResu"
    "lt\"W\n\017EventTallyError\022\037\n\013proposal_id\030\001 \001"
    "(\004R\nproposalId\022#\n\rerror_message\030\002 \001(\tR\014e"
    "rrorMessageB&Z$github.com/cosmos/cosmos-"
    "sdk/x/groupb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto_deps[2] =
    {
        &::descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto = {
    false,
    false,
    1059,
    descriptor_table_protodef_cosmos_2fgroup_2fv1_2fevents_2eproto,
    "cosmos/group/v1/events.proto",
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto_once,
    descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto_deps,
    2,
    11,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgroup_2fv1_2fevents_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2fevents_2eproto,
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2fevents_2eproto,
};
namespace cosmos {
namespace group {
namespace v1 {
// ===================================================================

class EventCreateGroup::_Internal {
 public:
};

EventCreateGroup::EventCreateGroup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventCreateGroup)
}
EventCreateGroup::EventCreateGroup(
    ::google::protobuf::Arena* arena, const EventCreateGroup& from)
    : EventCreateGroup(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventCreateGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventCreateGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_id_ = {};
}
EventCreateGroup::~EventCreateGroup() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventCreateGroup)
  SharedDtor(*this);
}
inline void EventCreateGroup::SharedDtor(MessageLite& self) {
  EventCreateGroup& this_ = static_cast<EventCreateGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventCreateGroup::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventCreateGroup(arena);
}
constexpr auto EventCreateGroup::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventCreateGroup),
                                            alignof(EventCreateGroup));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventCreateGroup::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventCreateGroup_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventCreateGroup::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventCreateGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventCreateGroup::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventCreateGroup>(), &EventCreateGroup::ByteSizeLong,
            &EventCreateGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventCreateGroup, _impl_._cached_size_),
        false,
    },
    &EventCreateGroup::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventCreateGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EventCreateGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventCreateGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventCreateGroup, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventCreateGroup, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(EventCreateGroup, _impl_.group_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventCreateGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventCreateGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventCreateGroup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventCreateGroup& this_ = static_cast<const EventCreateGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventCreateGroup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventCreateGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventCreateGroup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventCreateGroup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventCreateGroup::ByteSizeLong(const MessageLite& base) {
          const EventCreateGroup& this_ = static_cast<const EventCreateGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventCreateGroup::ByteSizeLong() const {
          const EventCreateGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventCreateGroup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventCreateGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventCreateGroup*>(&to_msg);
  auto& from = static_cast<const EventCreateGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventCreateGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventCreateGroup::CopyFrom(const EventCreateGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventCreateGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventCreateGroup::InternalSwap(EventCreateGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.group_id_, other->_impl_.group_id_);
}

::google::protobuf::Metadata EventCreateGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventUpdateGroup::_Internal {
 public:
};

EventUpdateGroup::EventUpdateGroup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventUpdateGroup)
}
EventUpdateGroup::EventUpdateGroup(
    ::google::protobuf::Arena* arena, const EventUpdateGroup& from)
    : EventUpdateGroup(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventUpdateGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventUpdateGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_id_ = {};
}
EventUpdateGroup::~EventUpdateGroup() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventUpdateGroup)
  SharedDtor(*this);
}
inline void EventUpdateGroup::SharedDtor(MessageLite& self) {
  EventUpdateGroup& this_ = static_cast<EventUpdateGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventUpdateGroup::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventUpdateGroup(arena);
}
constexpr auto EventUpdateGroup::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventUpdateGroup),
                                            alignof(EventUpdateGroup));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventUpdateGroup::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventUpdateGroup_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventUpdateGroup::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventUpdateGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventUpdateGroup::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventUpdateGroup>(), &EventUpdateGroup::ByteSizeLong,
            &EventUpdateGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventUpdateGroup, _impl_._cached_size_),
        false,
    },
    &EventUpdateGroup::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventUpdateGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EventUpdateGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventUpdateGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventUpdateGroup, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventUpdateGroup, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(EventUpdateGroup, _impl_.group_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventUpdateGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventUpdateGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventUpdateGroup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventUpdateGroup& this_ = static_cast<const EventUpdateGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventUpdateGroup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventUpdateGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventUpdateGroup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventUpdateGroup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventUpdateGroup::ByteSizeLong(const MessageLite& base) {
          const EventUpdateGroup& this_ = static_cast<const EventUpdateGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventUpdateGroup::ByteSizeLong() const {
          const EventUpdateGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventUpdateGroup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventUpdateGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventUpdateGroup*>(&to_msg);
  auto& from = static_cast<const EventUpdateGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventUpdateGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventUpdateGroup::CopyFrom(const EventUpdateGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventUpdateGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventUpdateGroup::InternalSwap(EventUpdateGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.group_id_, other->_impl_.group_id_);
}

::google::protobuf::Metadata EventUpdateGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventCreateGroupPolicy::_Internal {
 public:
};

EventCreateGroupPolicy::EventCreateGroupPolicy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventCreateGroupPolicy)
}
inline PROTOBUF_NDEBUG_INLINE EventCreateGroupPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::EventCreateGroupPolicy& from_msg)
      : address_(arena, from.address_),
        _cached_size_{0} {}

EventCreateGroupPolicy::EventCreateGroupPolicy(
    ::google::protobuf::Arena* arena,
    const EventCreateGroupPolicy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventCreateGroupPolicy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.EventCreateGroupPolicy)
}
inline PROTOBUF_NDEBUG_INLINE EventCreateGroupPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        _cached_size_{0} {}

inline void EventCreateGroupPolicy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventCreateGroupPolicy::~EventCreateGroupPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventCreateGroupPolicy)
  SharedDtor(*this);
}
inline void EventCreateGroupPolicy::SharedDtor(MessageLite& self) {
  EventCreateGroupPolicy& this_ = static_cast<EventCreateGroupPolicy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventCreateGroupPolicy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventCreateGroupPolicy(arena);
}
constexpr auto EventCreateGroupPolicy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventCreateGroupPolicy),
                                            alignof(EventCreateGroupPolicy));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventCreateGroupPolicy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventCreateGroupPolicy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventCreateGroupPolicy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventCreateGroupPolicy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventCreateGroupPolicy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventCreateGroupPolicy>(), &EventCreateGroupPolicy::ByteSizeLong,
            &EventCreateGroupPolicy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventCreateGroupPolicy, _impl_._cached_size_),
        false,
    },
    &EventCreateGroupPolicy::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventCreateGroupPolicy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> EventCreateGroupPolicy::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventCreateGroupPolicy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventCreateGroupPolicy, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(EventCreateGroupPolicy, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\7\0\0\0\0\0\0"
    "cosmos.group.v1.EventCreateGroupPolicy"
    "address"
  }},
};

PROTOBUF_NOINLINE void EventCreateGroupPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventCreateGroupPolicy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventCreateGroupPolicy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventCreateGroupPolicy& this_ = static_cast<const EventCreateGroupPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventCreateGroupPolicy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventCreateGroupPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventCreateGroupPolicy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.EventCreateGroupPolicy.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventCreateGroupPolicy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventCreateGroupPolicy::ByteSizeLong(const MessageLite& base) {
          const EventCreateGroupPolicy& this_ = static_cast<const EventCreateGroupPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventCreateGroupPolicy::ByteSizeLong() const {
          const EventCreateGroupPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventCreateGroupPolicy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventCreateGroupPolicy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventCreateGroupPolicy*>(&to_msg);
  auto& from = static_cast<const EventCreateGroupPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventCreateGroupPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventCreateGroupPolicy::CopyFrom(const EventCreateGroupPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventCreateGroupPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventCreateGroupPolicy::InternalSwap(EventCreateGroupPolicy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
}

::google::protobuf::Metadata EventCreateGroupPolicy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventUpdateGroupPolicy::_Internal {
 public:
};

EventUpdateGroupPolicy::EventUpdateGroupPolicy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventUpdateGroupPolicy)
}
inline PROTOBUF_NDEBUG_INLINE EventUpdateGroupPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::EventUpdateGroupPolicy& from_msg)
      : address_(arena, from.address_),
        _cached_size_{0} {}

EventUpdateGroupPolicy::EventUpdateGroupPolicy(
    ::google::protobuf::Arena* arena,
    const EventUpdateGroupPolicy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventUpdateGroupPolicy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.EventUpdateGroupPolicy)
}
inline PROTOBUF_NDEBUG_INLINE EventUpdateGroupPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        _cached_size_{0} {}

inline void EventUpdateGroupPolicy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventUpdateGroupPolicy::~EventUpdateGroupPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventUpdateGroupPolicy)
  SharedDtor(*this);
}
inline void EventUpdateGroupPolicy::SharedDtor(MessageLite& self) {
  EventUpdateGroupPolicy& this_ = static_cast<EventUpdateGroupPolicy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventUpdateGroupPolicy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventUpdateGroupPolicy(arena);
}
constexpr auto EventUpdateGroupPolicy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventUpdateGroupPolicy),
                                            alignof(EventUpdateGroupPolicy));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventUpdateGroupPolicy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventUpdateGroupPolicy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventUpdateGroupPolicy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventUpdateGroupPolicy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventUpdateGroupPolicy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventUpdateGroupPolicy>(), &EventUpdateGroupPolicy::ByteSizeLong,
            &EventUpdateGroupPolicy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventUpdateGroupPolicy, _impl_._cached_size_),
        false,
    },
    &EventUpdateGroupPolicy::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventUpdateGroupPolicy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> EventUpdateGroupPolicy::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventUpdateGroupPolicy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventUpdateGroupPolicy, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(EventUpdateGroupPolicy, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\7\0\0\0\0\0\0"
    "cosmos.group.v1.EventUpdateGroupPolicy"
    "address"
  }},
};

PROTOBUF_NOINLINE void EventUpdateGroupPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventUpdateGroupPolicy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventUpdateGroupPolicy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventUpdateGroupPolicy& this_ = static_cast<const EventUpdateGroupPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventUpdateGroupPolicy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventUpdateGroupPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventUpdateGroupPolicy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.EventUpdateGroupPolicy.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventUpdateGroupPolicy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventUpdateGroupPolicy::ByteSizeLong(const MessageLite& base) {
          const EventUpdateGroupPolicy& this_ = static_cast<const EventUpdateGroupPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventUpdateGroupPolicy::ByteSizeLong() const {
          const EventUpdateGroupPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventUpdateGroupPolicy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventUpdateGroupPolicy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventUpdateGroupPolicy*>(&to_msg);
  auto& from = static_cast<const EventUpdateGroupPolicy&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventUpdateGroupPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventUpdateGroupPolicy::CopyFrom(const EventUpdateGroupPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventUpdateGroupPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventUpdateGroupPolicy::InternalSwap(EventUpdateGroupPolicy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
}

::google::protobuf::Metadata EventUpdateGroupPolicy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventSubmitProposal::_Internal {
 public:
};

EventSubmitProposal::EventSubmitProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventSubmitProposal)
}
EventSubmitProposal::EventSubmitProposal(
    ::google::protobuf::Arena* arena, const EventSubmitProposal& from)
    : EventSubmitProposal(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventSubmitProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventSubmitProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
EventSubmitProposal::~EventSubmitProposal() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventSubmitProposal)
  SharedDtor(*this);
}
inline void EventSubmitProposal::SharedDtor(MessageLite& self) {
  EventSubmitProposal& this_ = static_cast<EventSubmitProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventSubmitProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventSubmitProposal(arena);
}
constexpr auto EventSubmitProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventSubmitProposal),
                                            alignof(EventSubmitProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventSubmitProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventSubmitProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventSubmitProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventSubmitProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventSubmitProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventSubmitProposal>(), &EventSubmitProposal::ByteSizeLong,
            &EventSubmitProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventSubmitProposal, _impl_._cached_size_),
        false,
    },
    &EventSubmitProposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventSubmitProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EventSubmitProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventSubmitProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventSubmitProposal, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventSubmitProposal, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(EventSubmitProposal, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventSubmitProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventSubmitProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventSubmitProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventSubmitProposal& this_ = static_cast<const EventSubmitProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventSubmitProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventSubmitProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventSubmitProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventSubmitProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventSubmitProposal::ByteSizeLong(const MessageLite& base) {
          const EventSubmitProposal& this_ = static_cast<const EventSubmitProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventSubmitProposal::ByteSizeLong() const {
          const EventSubmitProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventSubmitProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventSubmitProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventSubmitProposal*>(&to_msg);
  auto& from = static_cast<const EventSubmitProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventSubmitProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventSubmitProposal::CopyFrom(const EventSubmitProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventSubmitProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventSubmitProposal::InternalSwap(EventSubmitProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata EventSubmitProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventWithdrawProposal::_Internal {
 public:
};

EventWithdrawProposal::EventWithdrawProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventWithdrawProposal)
}
EventWithdrawProposal::EventWithdrawProposal(
    ::google::protobuf::Arena* arena, const EventWithdrawProposal& from)
    : EventWithdrawProposal(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventWithdrawProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventWithdrawProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
EventWithdrawProposal::~EventWithdrawProposal() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventWithdrawProposal)
  SharedDtor(*this);
}
inline void EventWithdrawProposal::SharedDtor(MessageLite& self) {
  EventWithdrawProposal& this_ = static_cast<EventWithdrawProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventWithdrawProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventWithdrawProposal(arena);
}
constexpr auto EventWithdrawProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventWithdrawProposal),
                                            alignof(EventWithdrawProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventWithdrawProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventWithdrawProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventWithdrawProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventWithdrawProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventWithdrawProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventWithdrawProposal>(), &EventWithdrawProposal::ByteSizeLong,
            &EventWithdrawProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventWithdrawProposal, _impl_._cached_size_),
        false,
    },
    &EventWithdrawProposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventWithdrawProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EventWithdrawProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventWithdrawProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventWithdrawProposal, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventWithdrawProposal, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(EventWithdrawProposal, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventWithdrawProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventWithdrawProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventWithdrawProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventWithdrawProposal& this_ = static_cast<const EventWithdrawProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventWithdrawProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventWithdrawProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventWithdrawProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventWithdrawProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventWithdrawProposal::ByteSizeLong(const MessageLite& base) {
          const EventWithdrawProposal& this_ = static_cast<const EventWithdrawProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventWithdrawProposal::ByteSizeLong() const {
          const EventWithdrawProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventWithdrawProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventWithdrawProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventWithdrawProposal*>(&to_msg);
  auto& from = static_cast<const EventWithdrawProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventWithdrawProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventWithdrawProposal::CopyFrom(const EventWithdrawProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventWithdrawProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventWithdrawProposal::InternalSwap(EventWithdrawProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata EventWithdrawProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventVote::_Internal {
 public:
};

EventVote::EventVote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventVote)
}
EventVote::EventVote(
    ::google::protobuf::Arena* arena, const EventVote& from)
    : EventVote(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventVote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventVote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
EventVote::~EventVote() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventVote)
  SharedDtor(*this);
}
inline void EventVote::SharedDtor(MessageLite& self) {
  EventVote& this_ = static_cast<EventVote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventVote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventVote(arena);
}
constexpr auto EventVote::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventVote),
                                            alignof(EventVote));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventVote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventVote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventVote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventVote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventVote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventVote>(), &EventVote::ByteSizeLong,
            &EventVote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventVote, _impl_._cached_size_),
        false,
    },
    &EventVote::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventVote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EventVote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventVote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventVote, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventVote, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(EventVote, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventVote::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventVote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventVote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventVote& this_ = static_cast<const EventVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventVote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventVote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventVote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventVote::ByteSizeLong(const MessageLite& base) {
          const EventVote& this_ = static_cast<const EventVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventVote::ByteSizeLong() const {
          const EventVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventVote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventVote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventVote*>(&to_msg);
  auto& from = static_cast<const EventVote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventVote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventVote::CopyFrom(const EventVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventVote::InternalSwap(EventVote* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata EventVote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventExec::_Internal {
 public:
};

EventExec::EventExec(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventExec)
}
inline PROTOBUF_NDEBUG_INLINE EventExec::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::EventExec& from_msg)
      : logs_(arena, from.logs_),
        _cached_size_{0} {}

EventExec::EventExec(
    ::google::protobuf::Arena* arena,
    const EventExec& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventExec* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, proposal_id_),
           offsetof(Impl_, result_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::result_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.EventExec)
}
inline PROTOBUF_NDEBUG_INLINE EventExec::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : logs_(arena),
        _cached_size_{0} {}

inline void EventExec::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           0,
           offsetof(Impl_, result_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::result_));
}
EventExec::~EventExec() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventExec)
  SharedDtor(*this);
}
inline void EventExec::SharedDtor(MessageLite& self) {
  EventExec& this_ = static_cast<EventExec&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.logs_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventExec::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventExec(arena);
}
constexpr auto EventExec::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventExec),
                                            alignof(EventExec));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventExec::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventExec_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventExec::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventExec>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventExec::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventExec>(), &EventExec::ByteSizeLong,
            &EventExec::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventExec, _impl_._cached_size_),
        false,
    },
    &EventExec::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventExec::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 38, 2> EventExec::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventExec>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventExec, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventExec, _impl_.proposal_id_)}},
    // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventExec, _impl_.result_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventExec, _impl_.result_)}},
    // string logs = 3 [json_name = "logs"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventExec, _impl_.logs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(EventExec, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(EventExec, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string logs = 3 [json_name = "logs"];
    {PROTOBUF_FIELD_OFFSET(EventExec, _impl_.logs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\0\4\0\0\0\0"
    "cosmos.group.v1.EventExec"
    "logs"
  }},
};

PROTOBUF_NOINLINE void EventExec::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventExec)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.ClearToEmpty();
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.result_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.result_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventExec::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventExec& this_ = static_cast<const EventExec&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventExec::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventExec& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventExec)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_result(), target);
          }

          // string logs = 3 [json_name = "logs"];
          if (!this_._internal_logs().empty()) {
            const std::string& _s = this_._internal_logs();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.EventExec.logs");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventExec)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventExec::ByteSizeLong(const MessageLite& base) {
          const EventExec& this_ = static_cast<const EventExec&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventExec::ByteSizeLong() const {
          const EventExec& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventExec)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string logs = 3 [json_name = "logs"];
            if (!this_._internal_logs().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_logs());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
            // .cosmos.group.v1.ProposalExecutorResult result = 2 [json_name = "result"];
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventExec::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventExec*>(&to_msg);
  auto& from = static_cast<const EventExec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventExec)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_logs().empty()) {
    _this->_internal_set_logs(from._internal_logs());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventExec::CopyFrom(const EventExec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventExec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventExec::InternalSwap(EventExec* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logs_, &other->_impl_.logs_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventExec, _impl_.result_)
      + sizeof(EventExec::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(EventExec, _impl_.proposal_id_)>(
          reinterpret_cast<char*>(&_impl_.proposal_id_),
          reinterpret_cast<char*>(&other->_impl_.proposal_id_));
}

::google::protobuf::Metadata EventExec::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventLeaveGroup::_Internal {
 public:
};

EventLeaveGroup::EventLeaveGroup(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventLeaveGroup)
}
inline PROTOBUF_NDEBUG_INLINE EventLeaveGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::EventLeaveGroup& from_msg)
      : address_(arena, from.address_),
        _cached_size_{0} {}

EventLeaveGroup::EventLeaveGroup(
    ::google::protobuf::Arena* arena,
    const EventLeaveGroup& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventLeaveGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.group_id_ = from._impl_.group_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.EventLeaveGroup)
}
inline PROTOBUF_NDEBUG_INLINE EventLeaveGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        _cached_size_{0} {}

inline void EventLeaveGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_id_ = {};
}
EventLeaveGroup::~EventLeaveGroup() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventLeaveGroup)
  SharedDtor(*this);
}
inline void EventLeaveGroup::SharedDtor(MessageLite& self) {
  EventLeaveGroup& this_ = static_cast<EventLeaveGroup&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventLeaveGroup::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventLeaveGroup(arena);
}
constexpr auto EventLeaveGroup::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventLeaveGroup),
                                            alignof(EventLeaveGroup));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventLeaveGroup::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventLeaveGroup_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventLeaveGroup::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventLeaveGroup>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventLeaveGroup::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventLeaveGroup>(), &EventLeaveGroup::ByteSizeLong,
            &EventLeaveGroup::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventLeaveGroup, _impl_._cached_size_),
        false,
    },
    &EventLeaveGroup::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventLeaveGroup::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> EventLeaveGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventLeaveGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventLeaveGroup, _impl_.address_)}},
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventLeaveGroup, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventLeaveGroup, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(EventLeaveGroup, _impl_.group_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(EventLeaveGroup, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\7\0\0\0\0\0"
    "cosmos.group.v1.EventLeaveGroup"
    "address"
  }},
};

PROTOBUF_NOINLINE void EventLeaveGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventLeaveGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventLeaveGroup::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventLeaveGroup& this_ = static_cast<const EventLeaveGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventLeaveGroup::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventLeaveGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventLeaveGroup)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.EventLeaveGroup.address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventLeaveGroup)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventLeaveGroup::ByteSizeLong(const MessageLite& base) {
          const EventLeaveGroup& this_ = static_cast<const EventLeaveGroup&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventLeaveGroup::ByteSizeLong() const {
          const EventLeaveGroup& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventLeaveGroup)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventLeaveGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventLeaveGroup*>(&to_msg);
  auto& from = static_cast<const EventLeaveGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventLeaveGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventLeaveGroup::CopyFrom(const EventLeaveGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventLeaveGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventLeaveGroup::InternalSwap(EventLeaveGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
        swap(_impl_.group_id_, other->_impl_.group_id_);
}

::google::protobuf::Metadata EventLeaveGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventProposalPruned::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EventProposalPruned>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_._has_bits_);
};

void EventProposalPruned::clear_tally_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tally_result_ != nullptr) _impl_.tally_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EventProposalPruned::EventProposalPruned(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventProposalPruned)
}
inline PROTOBUF_NDEBUG_INLINE EventProposalPruned::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::EventProposalPruned& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EventProposalPruned::EventProposalPruned(
    ::google::protobuf::Arena* arena,
    const EventProposalPruned& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventProposalPruned* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tally_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::TallyResult>(
                              arena, *from._impl_.tally_result_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, proposal_id_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.EventProposalPruned)
}
inline PROTOBUF_NDEBUG_INLINE EventProposalPruned::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventProposalPruned::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tally_result_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, tally_result_) +
               sizeof(Impl_::status_));
}
EventProposalPruned::~EventProposalPruned() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventProposalPruned)
  SharedDtor(*this);
}
inline void EventProposalPruned::SharedDtor(MessageLite& self) {
  EventProposalPruned& this_ = static_cast<EventProposalPruned&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tally_result_;
  this_._impl_.~Impl_();
}

inline void* EventProposalPruned::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventProposalPruned(arena);
}
constexpr auto EventProposalPruned::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventProposalPruned),
                                            alignof(EventProposalPruned));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventProposalPruned::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventProposalPruned_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventProposalPruned::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventProposalPruned>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventProposalPruned::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventProposalPruned>(), &EventProposalPruned::ByteSizeLong,
            &EventProposalPruned::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_._cached_size_),
        false,
    },
    &EventProposalPruned::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventProposalPruned::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> EventProposalPruned::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventProposalPruned>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventProposalPruned, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.proposal_id_)}},
    // .cosmos.group.v1.ProposalStatus status = 2 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventProposalPruned, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.status_)}},
    // .cosmos.group.v1.TallyResult tally_result = 3 [json_name = "tallyResult"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.tally_result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.proposal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.group.v1.ProposalStatus status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .cosmos.group.v1.TallyResult tally_result = 3 [json_name = "tallyResult"];
    {PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.tally_result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::TallyResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void EventProposalPruned::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventProposalPruned)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tally_result_ != nullptr);
    _impl_.tally_result_->Clear();
  }
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventProposalPruned::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventProposalPruned& this_ = static_cast<const EventProposalPruned&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventProposalPruned::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventProposalPruned& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventProposalPruned)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // .cosmos.group.v1.ProposalStatus status = 2 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_status(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.TallyResult tally_result = 3 [json_name = "tallyResult"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.tally_result_, this_._impl_.tally_result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventProposalPruned)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventProposalPruned::ByteSizeLong(const MessageLite& base) {
          const EventProposalPruned& this_ = static_cast<const EventProposalPruned&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventProposalPruned::ByteSizeLong() const {
          const EventProposalPruned& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventProposalPruned)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cosmos.group.v1.TallyResult tally_result = 3 [json_name = "tallyResult"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tally_result_);
            }
          }
           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
            // .cosmos.group.v1.ProposalStatus status = 2 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventProposalPruned::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventProposalPruned*>(&to_msg);
  auto& from = static_cast<const EventProposalPruned&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventProposalPruned)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tally_result_ != nullptr);
    if (_this->_impl_.tally_result_ == nullptr) {
      _this->_impl_.tally_result_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::TallyResult>(arena, *from._impl_.tally_result_);
    } else {
      _this->_impl_.tally_result_->MergeFrom(*from._impl_.tally_result_);
    }
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventProposalPruned::CopyFrom(const EventProposalPruned& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventProposalPruned)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventProposalPruned::InternalSwap(EventProposalPruned* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.status_)
      + sizeof(EventProposalPruned::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(EventProposalPruned, _impl_.tally_result_)>(
          reinterpret_cast<char*>(&_impl_.tally_result_),
          reinterpret_cast<char*>(&other->_impl_.tally_result_));
}

::google::protobuf::Metadata EventProposalPruned::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventTallyError::_Internal {
 public:
};

EventTallyError::EventTallyError(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.EventTallyError)
}
inline PROTOBUF_NDEBUG_INLINE EventTallyError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::EventTallyError& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

EventTallyError::EventTallyError(
    ::google::protobuf::Arena* arena,
    const EventTallyError& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventTallyError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.proposal_id_ = from._impl_.proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.EventTallyError)
}
inline PROTOBUF_NDEBUG_INLINE EventTallyError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void EventTallyError::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
EventTallyError::~EventTallyError() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.EventTallyError)
  SharedDtor(*this);
}
inline void EventTallyError::SharedDtor(MessageLite& self) {
  EventTallyError& this_ = static_cast<EventTallyError&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventTallyError::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventTallyError(arena);
}
constexpr auto EventTallyError::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventTallyError),
                                            alignof(EventTallyError));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventTallyError::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventTallyError_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventTallyError::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventTallyError>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventTallyError::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventTallyError>(), &EventTallyError::ByteSizeLong,
            &EventTallyError::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventTallyError, _impl_._cached_size_),
        false,
    },
    &EventTallyError::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventTallyError::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> EventTallyError::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::EventTallyError>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2 [json_name = "errorMessage"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventTallyError, _impl_.error_message_)}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventTallyError, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventTallyError, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(EventTallyError, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string error_message = 2 [json_name = "errorMessage"];
    {PROTOBUF_FIELD_OFFSET(EventTallyError, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\15\0\0\0\0\0"
    "cosmos.group.v1.EventTallyError"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void EventTallyError::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.EventTallyError)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventTallyError::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventTallyError& this_ = static_cast<const EventTallyError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventTallyError::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventTallyError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.EventTallyError)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string error_message = 2 [json_name = "errorMessage"];
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.EventTallyError.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.EventTallyError)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventTallyError::ByteSizeLong(const MessageLite& base) {
          const EventTallyError& this_ = static_cast<const EventTallyError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventTallyError::ByteSizeLong() const {
          const EventTallyError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.EventTallyError)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2 [json_name = "errorMessage"];
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventTallyError::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventTallyError*>(&to_msg);
  auto& from = static_cast<const EventTallyError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.EventTallyError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventTallyError::CopyFrom(const EventTallyError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.EventTallyError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventTallyError::InternalSwap(EventTallyError* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata EventTallyError::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace group
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2fevents_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
