// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/group/v1/query.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/group/v1/query.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace group {
namespace v1 {

inline constexpr QueryVoteByProposalVoterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : voter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryVoteByProposalVoterRequest::QueryVoteByProposalVoterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryVoteByProposalVoterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryVoteByProposalVoterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryVoteByProposalVoterRequestDefaultTypeInternal() {}
  union {
    QueryVoteByProposalVoterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryVoteByProposalVoterRequestDefaultTypeInternal _QueryVoteByProposalVoterRequest_default_instance_;

inline constexpr QueryTallyResultRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryTallyResultRequest::QueryTallyResultRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryTallyResultRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTallyResultRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTallyResultRequestDefaultTypeInternal() {}
  union {
    QueryTallyResultRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTallyResultRequestDefaultTypeInternal _QueryTallyResultRequest_default_instance_;

inline constexpr QueryProposalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryProposalRequest::QueryProposalRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryProposalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryProposalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryProposalRequestDefaultTypeInternal() {}
  union {
    QueryProposalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryProposalRequestDefaultTypeInternal _QueryProposalRequest_default_instance_;

inline constexpr QueryGroupPolicyInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupPolicyInfoRequest::QueryGroupPolicyInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupPolicyInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupPolicyInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupPolicyInfoRequestDefaultTypeInternal() {}
  union {
    QueryGroupPolicyInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupPolicyInfoRequestDefaultTypeInternal _QueryGroupPolicyInfoRequest_default_instance_;

inline constexpr QueryGroupInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : group_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupInfoRequest::QueryGroupInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupInfoRequestDefaultTypeInternal() {}
  union {
    QueryGroupInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupInfoRequestDefaultTypeInternal _QueryGroupInfoRequest_default_instance_;

inline constexpr QueryVotesByVoterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryVotesByVoterRequest::QueryVotesByVoterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryVotesByVoterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryVotesByVoterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryVotesByVoterRequestDefaultTypeInternal() {}
  union {
    QueryVotesByVoterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryVotesByVoterRequestDefaultTypeInternal _QueryVotesByVoterRequest_default_instance_;

inline constexpr QueryVotesByProposalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pagination_{nullptr},
        proposal_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR QueryVotesByProposalRequest::QueryVotesByProposalRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryVotesByProposalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryVotesByProposalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryVotesByProposalRequestDefaultTypeInternal() {}
  union {
    QueryVotesByProposalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryVotesByProposalRequestDefaultTypeInternal _QueryVotesByProposalRequest_default_instance_;

inline constexpr QueryTallyResultResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tally_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryTallyResultResponse::QueryTallyResultResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryTallyResultResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryTallyResultResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryTallyResultResponseDefaultTypeInternal() {}
  union {
    QueryTallyResultResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryTallyResultResponseDefaultTypeInternal _QueryTallyResultResponse_default_instance_;

inline constexpr QueryProposalsByGroupPolicyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryProposalsByGroupPolicyRequest::QueryProposalsByGroupPolicyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryProposalsByGroupPolicyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryProposalsByGroupPolicyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryProposalsByGroupPolicyRequestDefaultTypeInternal() {}
  union {
    QueryProposalsByGroupPolicyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryProposalsByGroupPolicyRequestDefaultTypeInternal _QueryProposalsByGroupPolicyRequest_default_instance_;

inline constexpr QueryGroupsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupsRequest::QueryGroupsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupsRequestDefaultTypeInternal() {}
  union {
    QueryGroupsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupsRequestDefaultTypeInternal _QueryGroupsRequest_default_instance_;

inline constexpr QueryGroupsByMemberRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupsByMemberRequest::QueryGroupsByMemberRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupsByMemberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupsByMemberRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupsByMemberRequestDefaultTypeInternal() {}
  union {
    QueryGroupsByMemberRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupsByMemberRequestDefaultTypeInternal _QueryGroupsByMemberRequest_default_instance_;

inline constexpr QueryGroupsByAdminRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupsByAdminRequest::QueryGroupsByAdminRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupsByAdminRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupsByAdminRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupsByAdminRequestDefaultTypeInternal() {}
  union {
    QueryGroupsByAdminRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupsByAdminRequestDefaultTypeInternal _QueryGroupsByAdminRequest_default_instance_;

inline constexpr QueryGroupPoliciesByGroupRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pagination_{nullptr},
        group_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupPoliciesByGroupRequest::QueryGroupPoliciesByGroupRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupPoliciesByGroupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupPoliciesByGroupRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupPoliciesByGroupRequestDefaultTypeInternal() {}
  union {
    QueryGroupPoliciesByGroupRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupPoliciesByGroupRequestDefaultTypeInternal _QueryGroupPoliciesByGroupRequest_default_instance_;

inline constexpr QueryGroupPoliciesByAdminRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupPoliciesByAdminRequest::QueryGroupPoliciesByAdminRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupPoliciesByAdminRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupPoliciesByAdminRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupPoliciesByAdminRequestDefaultTypeInternal() {}
  union {
    QueryGroupPoliciesByAdminRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupPoliciesByAdminRequestDefaultTypeInternal _QueryGroupPoliciesByAdminRequest_default_instance_;

inline constexpr QueryGroupMembersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pagination_{nullptr},
        group_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupMembersRequest::QueryGroupMembersRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupMembersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupMembersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupMembersRequestDefaultTypeInternal() {}
  union {
    QueryGroupMembersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupMembersRequestDefaultTypeInternal _QueryGroupMembersRequest_default_instance_;

inline constexpr QueryVotesByVoterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        votes_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryVotesByVoterResponse::QueryVotesByVoterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryVotesByVoterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryVotesByVoterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryVotesByVoterResponseDefaultTypeInternal() {}
  union {
    QueryVotesByVoterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryVotesByVoterResponseDefaultTypeInternal _QueryVotesByVoterResponse_default_instance_;

inline constexpr QueryVotesByProposalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        votes_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryVotesByProposalResponse::QueryVotesByProposalResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryVotesByProposalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryVotesByProposalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryVotesByProposalResponseDefaultTypeInternal() {}
  union {
    QueryVotesByProposalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryVotesByProposalResponseDefaultTypeInternal _QueryVotesByProposalResponse_default_instance_;

inline constexpr QueryVoteByProposalVoterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vote_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryVoteByProposalVoterResponse::QueryVoteByProposalVoterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryVoteByProposalVoterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryVoteByProposalVoterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryVoteByProposalVoterResponseDefaultTypeInternal() {}
  union {
    QueryVoteByProposalVoterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryVoteByProposalVoterResponseDefaultTypeInternal _QueryVoteByProposalVoterResponse_default_instance_;

inline constexpr QueryProposalsByGroupPolicyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proposals_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryProposalsByGroupPolicyResponse::QueryProposalsByGroupPolicyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryProposalsByGroupPolicyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryProposalsByGroupPolicyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryProposalsByGroupPolicyResponseDefaultTypeInternal() {}
  union {
    QueryProposalsByGroupPolicyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryProposalsByGroupPolicyResponseDefaultTypeInternal _QueryProposalsByGroupPolicyResponse_default_instance_;

inline constexpr QueryProposalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proposal_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryProposalResponse::QueryProposalResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryProposalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryProposalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryProposalResponseDefaultTypeInternal() {}
  union {
    QueryProposalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryProposalResponseDefaultTypeInternal _QueryProposalResponse_default_instance_;

inline constexpr QueryGroupsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        groups_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupsResponse::QueryGroupsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupsResponseDefaultTypeInternal() {}
  union {
    QueryGroupsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupsResponseDefaultTypeInternal _QueryGroupsResponse_default_instance_;

inline constexpr QueryGroupsByMemberResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        groups_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupsByMemberResponse::QueryGroupsByMemberResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupsByMemberResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupsByMemberResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupsByMemberResponseDefaultTypeInternal() {}
  union {
    QueryGroupsByMemberResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupsByMemberResponseDefaultTypeInternal _QueryGroupsByMemberResponse_default_instance_;

inline constexpr QueryGroupsByAdminResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        groups_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupsByAdminResponse::QueryGroupsByAdminResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupsByAdminResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupsByAdminResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupsByAdminResponseDefaultTypeInternal() {}
  union {
    QueryGroupsByAdminResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupsByAdminResponseDefaultTypeInternal _QueryGroupsByAdminResponse_default_instance_;

inline constexpr QueryGroupPolicyInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupPolicyInfoResponse::QueryGroupPolicyInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupPolicyInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupPolicyInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupPolicyInfoResponseDefaultTypeInternal() {}
  union {
    QueryGroupPolicyInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupPolicyInfoResponseDefaultTypeInternal _QueryGroupPolicyInfoResponse_default_instance_;

inline constexpr QueryGroupPoliciesByGroupResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_policies_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupPoliciesByGroupResponse::QueryGroupPoliciesByGroupResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupPoliciesByGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupPoliciesByGroupResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupPoliciesByGroupResponseDefaultTypeInternal() {}
  union {
    QueryGroupPoliciesByGroupResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupPoliciesByGroupResponseDefaultTypeInternal _QueryGroupPoliciesByGroupResponse_default_instance_;

inline constexpr QueryGroupPoliciesByAdminResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        group_policies_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupPoliciesByAdminResponse::QueryGroupPoliciesByAdminResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupPoliciesByAdminResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupPoliciesByAdminResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupPoliciesByAdminResponseDefaultTypeInternal() {}
  union {
    QueryGroupPoliciesByAdminResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupPoliciesByAdminResponseDefaultTypeInternal _QueryGroupPoliciesByAdminResponse_default_instance_;

inline constexpr QueryGroupInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupInfoResponse::QueryGroupInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupInfoResponseDefaultTypeInternal() {}
  union {
    QueryGroupInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupInfoResponseDefaultTypeInternal _QueryGroupInfoResponse_default_instance_;

inline constexpr QueryGroupMembersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        members_{},
        pagination_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryGroupMembersResponse::QueryGroupMembersResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryGroupMembersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGroupMembersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGroupMembersResponseDefaultTypeInternal() {}
  union {
    QueryGroupMembersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGroupMembersResponseDefaultTypeInternal _QueryGroupMembersResponse_default_instance_;
}  // namespace v1
}  // namespace group
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2fquery_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgroup_2fv1_2fquery_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupInfoRequest, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupInfoResponse, _impl_.info_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPolicyInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPolicyInfoRequest, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPolicyInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPolicyInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPolicyInfoResponse, _impl_.info_),
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersRequest, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersResponse, _impl_.members_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupMembersResponse, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminRequest, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminResponse, _impl_.groups_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByAdminResponse, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupRequest, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupResponse, _impl_.group_policies_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByGroupResponse, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminRequest, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminResponse, _impl_.group_policies_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupPoliciesByAdminResponse, _impl_.pagination_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalResponse, _impl_.proposal_),
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyRequest, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyResponse, _impl_.proposals_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryProposalsByGroupPolicyResponse, _impl_.pagination_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVoteByProposalVoterRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVoteByProposalVoterRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVoteByProposalVoterRequest, _impl_.voter_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVoteByProposalVoterResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVoteByProposalVoterResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVoteByProposalVoterResponse, _impl_.vote_),
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalResponse, _impl_.votes_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByProposalResponse, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterRequest, _impl_.voter_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterResponse, _impl_.votes_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryVotesByVoterResponse, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberRequest, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberRequest, _impl_.pagination_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberResponse, _impl_.groups_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsByMemberResponse, _impl_.pagination_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryTallyResultRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryTallyResultRequest, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryTallyResultResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryTallyResultResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryTallyResultResponse, _impl_.tally_),
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsRequest, _impl_.pagination_),
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsResponse, _impl_.groups_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::QueryGroupsResponse, _impl_.pagination_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::group::v1::QueryGroupInfoRequest)},
        {9, 18, -1, sizeof(::cosmos::group::v1::QueryGroupInfoResponse)},
        {19, -1, -1, sizeof(::cosmos::group::v1::QueryGroupPolicyInfoRequest)},
        {28, 37, -1, sizeof(::cosmos::group::v1::QueryGroupPolicyInfoResponse)},
        {38, 48, -1, sizeof(::cosmos::group::v1::QueryGroupMembersRequest)},
        {50, 60, -1, sizeof(::cosmos::group::v1::QueryGroupMembersResponse)},
        {62, 72, -1, sizeof(::cosmos::group::v1::QueryGroupsByAdminRequest)},
        {74, 84, -1, sizeof(::cosmos::group::v1::QueryGroupsByAdminResponse)},
        {86, 96, -1, sizeof(::cosmos::group::v1::QueryGroupPoliciesByGroupRequest)},
        {98, 108, -1, sizeof(::cosmos::group::v1::QueryGroupPoliciesByGroupResponse)},
        {110, 120, -1, sizeof(::cosmos::group::v1::QueryGroupPoliciesByAdminRequest)},
        {122, 132, -1, sizeof(::cosmos::group::v1::QueryGroupPoliciesByAdminResponse)},
        {134, -1, -1, sizeof(::cosmos::group::v1::QueryProposalRequest)},
        {143, 152, -1, sizeof(::cosmos::group::v1::QueryProposalResponse)},
        {153, 163, -1, sizeof(::cosmos::group::v1::QueryProposalsByGroupPolicyRequest)},
        {165, 175, -1, sizeof(::cosmos::group::v1::QueryProposalsByGroupPolicyResponse)},
        {177, -1, -1, sizeof(::cosmos::group::v1::QueryVoteByProposalVoterRequest)},
        {187, 196, -1, sizeof(::cosmos::group::v1::QueryVoteByProposalVoterResponse)},
        {197, 207, -1, sizeof(::cosmos::group::v1::QueryVotesByProposalRequest)},
        {209, 219, -1, sizeof(::cosmos::group::v1::QueryVotesByProposalResponse)},
        {221, 231, -1, sizeof(::cosmos::group::v1::QueryVotesByVoterRequest)},
        {233, 243, -1, sizeof(::cosmos::group::v1::QueryVotesByVoterResponse)},
        {245, 255, -1, sizeof(::cosmos::group::v1::QueryGroupsByMemberRequest)},
        {257, 267, -1, sizeof(::cosmos::group::v1::QueryGroupsByMemberResponse)},
        {269, -1, -1, sizeof(::cosmos::group::v1::QueryTallyResultRequest)},
        {278, 287, -1, sizeof(::cosmos::group::v1::QueryTallyResultResponse)},
        {288, 297, -1, sizeof(::cosmos::group::v1::QueryGroupsRequest)},
        {298, 308, -1, sizeof(::cosmos::group::v1::QueryGroupsResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::group::v1::_QueryGroupInfoRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupInfoResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupPolicyInfoRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupPolicyInfoResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupMembersRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupMembersResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupsByAdminRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupsByAdminResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupPoliciesByGroupRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupPoliciesByGroupResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupPoliciesByAdminRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupPoliciesByAdminResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryProposalRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryProposalResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryProposalsByGroupPolicyRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryProposalsByGroupPolicyResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryVoteByProposalVoterRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryVoteByProposalVoterResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryVotesByProposalRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryVotesByProposalResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryVotesByVoterRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryVotesByVoterResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupsByMemberRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupsByMemberResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryTallyResultRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryTallyResultResponse_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupsRequest_default_instance_._instance,
    &::cosmos::group::v1::_QueryGroupsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgroup_2fv1_2fquery_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033cosmos/group/v1/query.proto\022\017cosmos.gr"
    "oup.v1\032\024gogoproto/gogo.proto\032\034google/api"
    "/annotations.proto\032\033cosmos/group/v1/type"
    "s.proto\032*cosmos/base/query/v1beta1/pagin"
    "ation.proto\032\031cosmos_proto/cosmos.proto\032\021"
    "amino/amino.proto\"2\n\025QueryGroupInfoReque"
    "st\022\031\n\010group_id\030\001 \001(\004R\007groupId\"H\n\026QueryGr"
    "oupInfoResponse\022.\n\004info\030\001 \001(\0132\032.cosmos.g"
    "roup.v1.GroupInfoR\004info\"Q\n\033QueryGroupPol"
    "icyInfoRequest\0222\n\007address\030\001 \001(\tB\030\322\264-\024cos"
    "mos.AddressStringR\007address\"T\n\034QueryGroup"
    "PolicyInfoResponse\0224\n\004info\030\001 \001(\0132 .cosmo"
    "s.group.v1.GroupPolicyInfoR\004info\"}\n\030Quer"
    "yGroupMembersRequest\022\031\n\010group_id\030\001 \001(\004R\007"
    "groupId\022F\n\npagination\030\002 \001(\0132&.cosmos.bas"
    "e.query.v1beta1.PageRequestR\npagination\""
    "\234\001\n\031QueryGroupMembersResponse\0226\n\007members"
    "\030\001 \003(\0132\034.cosmos.group.v1.GroupMemberR\007me"
    "mbers\022G\n\npagination\030\002 \001(\0132\'.cosmos.base."
    "query.v1beta1.PageResponseR\npagination\"\223"
    "\001\n\031QueryGroupsByAdminRequest\022.\n\005admin\030\001 "
    "\001(\tB\030\322\264-\024cosmos.AddressStringR\005admin\022F\n\n"
    "pagination\030\002 \001(\0132&.cosmos.base.query.v1b"
    "eta1.PageRequestR\npagination\"\231\001\n\032QueryGr"
    "oupsByAdminResponse\0222\n\006groups\030\001 \003(\0132\032.co"
    "smos.group.v1.GroupInfoR\006groups\022G\n\npagin"
    "ation\030\002 \001(\0132\'.cosmos.base.query.v1beta1."
    "PageResponseR\npagination\"\205\001\n QueryGroupP"
    "oliciesByGroupRequest\022\031\n\010group_id\030\001 \001(\004R"
    "\007groupId\022F\n\npagination\030\002 \001(\0132&.cosmos.ba"
    "se.query.v1beta1.PageRequestR\npagination"
    "\"\265\001\n!QueryGroupPoliciesByGroupResponse\022G"
    "\n\016group_policies\030\001 \003(\0132 .cosmos.group.v1"
    ".GroupPolicyInfoR\rgroupPolicies\022G\n\npagin"
    "ation\030\002 \001(\0132\'.cosmos.base.query.v1beta1."
    "PageResponseR\npagination\"\232\001\n QueryGroupP"
    "oliciesByAdminRequest\022.\n\005admin\030\001 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\005admin\022F\n\npaginat"
    "ion\030\002 \001(\0132&.cosmos.base.query.v1beta1.Pa"
    "geRequestR\npagination\"\265\001\n!QueryGroupPoli"
    "ciesByAdminResponse\022G\n\016group_policies\030\001 "
    "\003(\0132 .cosmos.group.v1.GroupPolicyInfoR\rg"
    "roupPolicies\022G\n\npagination\030\002 \001(\0132\'.cosmo"
    "s.base.query.v1beta1.PageResponseR\npagin"
    "ation\"7\n\024QueryProposalRequest\022\037\n\013proposa"
    "l_id\030\001 \001(\004R\nproposalId\"N\n\025QueryProposalR"
    "esponse\0225\n\010proposal\030\001 \001(\0132\031.cosmos.group"
    ".v1.ProposalR\010proposal\"\240\001\n\"QueryProposal"
    "sByGroupPolicyRequest\0222\n\007address\030\001 \001(\tB\030"
    "\322\264-\024cosmos.AddressStringR\007address\022F\n\npag"
    "ination\030\002 \001(\0132&.cosmos.base.query.v1beta"
    "1.PageRequestR\npagination\"\247\001\n#QueryPropo"
    "salsByGroupPolicyResponse\0227\n\tproposals\030\001"
    " \003(\0132\031.cosmos.group.v1.ProposalR\tproposa"
    "ls\022G\n\npagination\030\002 \001(\0132\'.cosmos.base.que"
    "ry.v1beta1.PageResponseR\npagination\"r\n\037Q"
    "ueryVoteByProposalVoterRequest\022\037\n\013propos"
    "al_id\030\001 \001(\004R\nproposalId\022.\n\005voter\030\002 \001(\tB\030"
    "\322\264-\024cosmos.AddressStringR\005voter\"M\n Query"
    "VoteByProposalVoterResponse\022)\n\004vote\030\001 \001("
    "\0132\025.cosmos.group.v1.VoteR\004vote\"\206\001\n\033Query"
    "VotesByProposalRequest\022\037\n\013proposal_id\030\001 "
    "\001(\004R\nproposalId\022F\n\npagination\030\002 \001(\0132&.co"
    "smos.base.query.v1beta1.PageRequestR\npag"
    "ination\"\224\001\n\034QueryVotesByProposalResponse"
    "\022+\n\005votes\030\001 \003(\0132\025.cosmos.group.v1.VoteR\005"
    "votes\022G\n\npagination\030\002 \001(\0132\'.cosmos.base."
    "query.v1beta1.PageResponseR\npagination\"\222"
    "\001\n\030QueryVotesByVoterRequest\022.\n\005voter\030\001 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\005voter\022F\n\np"
    "agination\030\002 \001(\0132&.cosmos.base.query.v1be"
    "ta1.PageRequestR\npagination\"\221\001\n\031QueryVot"
    "esByVoterResponse\022+\n\005votes\030\001 \003(\0132\025.cosmo"
    "s.group.v1.VoteR\005votes\022G\n\npagination\030\002 \001"
    "(\0132\'.cosmos.base.query.v1beta1.PageRespo"
    "nseR\npagination\"\230\001\n\032QueryGroupsByMemberR"
    "equest\0222\n\007address\030\001 \001(\tB\030\322\264-\024cosmos.Addr"
    "essStringR\007address\022F\n\npagination\030\002 \001(\0132&"
    ".cosmos.base.query.v1beta1.PageRequestR\n"
    "pagination\"\232\001\n\033QueryGroupsByMemberRespon"
    "se\0222\n\006groups\030\001 \003(\0132\032.cosmos.group.v1.Gro"
    "upInfoR\006groups\022G\n\npagination\030\002 \001(\0132\'.cos"
    "mos.base.query.v1beta1.PageResponseR\npag"
    "ination\":\n\027QueryTallyResultRequest\022\037\n\013pr"
    "oposal_id\030\001 \001(\004R\nproposalId\"Y\n\030QueryTall"
    "yResultResponse\022=\n\005tally\030\001 \001(\0132\034.cosmos."
    "group.v1.TallyResultB\t\310\336\037\000\250\347\260*\001R\005tally\"s"
    "\n\022QueryGroupsRequest\022F\n\npagination\030\002 \001(\013"
    "2&.cosmos.base.query.v1beta1.PageRequest"
    "R\npagination:\025\322\264-\021cosmos-sdk 0.47.1\"\251\001\n\023"
    "QueryGroupsResponse\0222\n\006groups\030\001 \003(\0132\032.co"
    "smos.group.v1.GroupInfoR\006groups\022G\n\npagin"
    "ation\030\002 \001(\0132\'.cosmos.base.query.v1beta1."
    "PageResponseR\npagination:\025\322\264-\021cosmos-sdk"
    " 0.47.12\221\022\n\005Query\022\214\001\n\tGroupInfo\022&.cosmos"
    ".group.v1.QueryGroupInfoRequest\032\'.cosmos"
    ".group.v1.QueryGroupInfoResponse\".\202\323\344\223\002("
    "\022&/cosmos/group/v1/group_info/{group_id}"
    "\022\244\001\n\017GroupPolicyInfo\022,.cosmos.group.v1.Q"
    "ueryGroupPolicyInfoRequest\032-.cosmos.grou"
    "p.v1.QueryGroupPolicyInfoResponse\"4\202\323\344\223\002"
    ".\022,/cosmos/group/v1/group_policy_info/{a"
    "ddress}\022\230\001\n\014GroupMembers\022).cosmos.group."
    "v1.QueryGroupMembersRequest\032*.cosmos.gro"
    "up.v1.QueryGroupMembersResponse\"1\202\323\344\223\002+\022"
    ")/cosmos/group/v1/group_members/{group_i"
    "d}\022\232\001\n\rGroupsByAdmin\022*.cosmos.group.v1.Q"
    "ueryGroupsByAdminRequest\032+.cosmos.group."
    "v1.QueryGroupsByAdminResponse\"0\202\323\344\223\002*\022(/"
    "cosmos/group/v1/groups_by_admin/{admin}\022"
    "\272\001\n\024GroupPoliciesByGroup\0221.cosmos.group."
    "v1.QueryGroupPoliciesByGroupRequest\0322.co"
    "smos.group.v1.QueryGroupPoliciesByGroupR"
    "esponse\";\202\323\344\223\0025\0223/cosmos/group/v1/group_"
    "policies_by_group/{group_id}\022\267\001\n\024GroupPo"
    "liciesByAdmin\0221.cosmos.group.v1.QueryGro"
    "upPoliciesByAdminRequest\0322.cosmos.group."
    "v1.QueryGroupPoliciesByAdminResponse\"8\202\323"
    "\344\223\0022\0220/cosmos/group/v1/group_policies_by"
    "_admin/{admin}\022\212\001\n\010Proposal\022%.cosmos.gro"
    "up.v1.QueryProposalRequest\032&.cosmos.grou"
    "p.v1.QueryProposalResponse\"/\202\323\344\223\002)\022\'/cos"
    "mos/group/v1/proposal/{proposal_id}\022\301\001\n\026"
    "ProposalsByGroupPolicy\0223.cosmos.group.v1"
    ".QueryProposalsByGroupPolicyRequest\0324.co"
    "smos.group.v1.QueryProposalsByGroupPolic"
    "yResponse\"<\202\323\344\223\0026\0224/cosmos/group/v1/prop"
    "osals_by_group_policy/{address}\022\301\001\n\023Vote"
    "ByProposalVoter\0220.cosmos.group.v1.QueryV"
    "oteByProposalVoterRequest\0321.cosmos.group"
    ".v1.QueryVoteByProposalVoterResponse\"E\202\323"
    "\344\223\002\?\022=/cosmos/group/v1/vote_by_proposal_"
    "voter/{proposal_id}/{voter}\022\250\001\n\017VotesByP"
    "roposal\022,.cosmos.group.v1.QueryVotesByPr"
    "oposalRequest\032-.cosmos.group.v1.QueryVot"
    "esByProposalResponse\"8\202\323\344\223\0022\0220/cosmos/gr"
    "oup/v1/votes_by_proposal/{proposal_id}\022\226"
    "\001\n\014VotesByVoter\022).cosmos.group.v1.QueryV"
    "otesByVoterRequest\032*.cosmos.group.v1.Que"
    "ryVotesByVoterResponse\"/\202\323\344\223\002)\022\'/cosmos/"
    "group/v1/votes_by_voter/{voter}\022\240\001\n\016Grou"
    "psByMember\022+.cosmos.group.v1.QueryGroups"
    "ByMemberRequest\032,.cosmos.group.v1.QueryG"
    "roupsByMemberResponse\"3\202\323\344\223\002-\022+/cosmos/g"
    "roup/v1/groups_by_member/{address}\022\232\001\n\013T"
    "allyResult\022(.cosmos.group.v1.QueryTallyR"
    "esultRequest\032).cosmos.group.v1.QueryTall"
    "yResultResponse\"6\202\323\344\223\0020\022./cosmos/group/v"
    "1/proposals/{proposal_id}/tally\022\211\001\n\006Grou"
    "ps\022#.cosmos.group.v1.QueryGroupsRequest\032"
    "$.cosmos.group.v1.QueryGroupsResponse\"4\312"
    "\264-\021cosmos-sdk 0.47.1\202\323\344\223\002\031\022\027/cosmos/grou"
    "p/v1/groupsB&Z$github.com/cosmos/cosmos-"
    "sdk/x/groupb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto_deps[6] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto = {
    false,
    false,
    6139,
    descriptor_table_protodef_cosmos_2fgroup_2fv1_2fquery_2eproto,
    "cosmos/group/v1/query.proto",
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto_once,
    descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto_deps,
    6,
    28,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgroup_2fv1_2fquery_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2fquery_2eproto,
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2fquery_2eproto,
};
namespace cosmos {
namespace group {
namespace v1 {
// ===================================================================

class QueryGroupInfoRequest::_Internal {
 public:
};

QueryGroupInfoRequest::QueryGroupInfoRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupInfoRequest)
}
QueryGroupInfoRequest::QueryGroupInfoRequest(
    ::google::protobuf::Arena* arena, const QueryGroupInfoRequest& from)
    : QueryGroupInfoRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryGroupInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.group_id_ = {};
}
QueryGroupInfoRequest::~QueryGroupInfoRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupInfoRequest)
  SharedDtor(*this);
}
inline void QueryGroupInfoRequest::SharedDtor(MessageLite& self) {
  QueryGroupInfoRequest& this_ = static_cast<QueryGroupInfoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* QueryGroupInfoRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupInfoRequest(arena);
}
constexpr auto QueryGroupInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryGroupInfoRequest),
                                            alignof(QueryGroupInfoRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupInfoRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupInfoRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupInfoRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupInfoRequest>(), &QueryGroupInfoRequest::ByteSizeLong,
            &QueryGroupInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupInfoRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupInfoRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> QueryGroupInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryGroupInfoRequest, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupInfoRequest, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupInfoRequest, _impl_.group_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupInfoRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupInfoRequest& this_ = static_cast<const QueryGroupInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupInfoRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupInfoRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupInfoRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupInfoRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupInfoRequest& this_ = static_cast<const QueryGroupInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupInfoRequest::ByteSizeLong() const {
          const QueryGroupInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupInfoRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupInfoRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupInfoRequest::CopyFrom(const QueryGroupInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupInfoRequest::InternalSwap(QueryGroupInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.group_id_, other->_impl_.group_id_);
}

::google::protobuf::Metadata QueryGroupInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupInfoResponse, _impl_._has_bits_);
};

void QueryGroupInfoResponse::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupInfoResponse::QueryGroupInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryGroupInfoResponse::QueryGroupInfoResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::GroupInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryGroupInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
QueryGroupInfoResponse::~QueryGroupInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupInfoResponse)
  SharedDtor(*this);
}
inline void QueryGroupInfoResponse::SharedDtor(MessageLite& self) {
  QueryGroupInfoResponse& this_ = static_cast<QueryGroupInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupInfoResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupInfoResponse(arena);
}
constexpr auto QueryGroupInfoResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryGroupInfoResponse),
                                            alignof(QueryGroupInfoResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupInfoResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupInfoResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupInfoResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupInfoResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupInfoResponse>(), &QueryGroupInfoResponse::ByteSizeLong,
            &QueryGroupInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupInfoResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupInfoResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryGroupInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.GroupInfo info = 1 [json_name = "info"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupInfoResponse, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.group.v1.GroupInfo info = 1 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupInfoResponse, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupInfoResponse& this_ = static_cast<const QueryGroupInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.GroupInfo info = 1 [json_name = "info"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupInfoResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupInfoResponse& this_ = static_cast<const QueryGroupInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupInfoResponse::ByteSizeLong() const {
          const QueryGroupInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.group.v1.GroupInfo info = 1 [json_name = "info"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::GroupInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupInfoResponse::CopyFrom(const QueryGroupInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupInfoResponse::InternalSwap(QueryGroupInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata QueryGroupInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupPolicyInfoRequest::_Internal {
 public:
};

QueryGroupPolicyInfoRequest::QueryGroupPolicyInfoRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupPolicyInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPolicyInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupPolicyInfoRequest& from_msg)
      : address_(arena, from.address_),
        _cached_size_{0} {}

QueryGroupPolicyInfoRequest::QueryGroupPolicyInfoRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupPolicyInfoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupPolicyInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupPolicyInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPolicyInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        _cached_size_{0} {}

inline void QueryGroupPolicyInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryGroupPolicyInfoRequest::~QueryGroupPolicyInfoRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupPolicyInfoRequest)
  SharedDtor(*this);
}
inline void QueryGroupPolicyInfoRequest::SharedDtor(MessageLite& self) {
  QueryGroupPolicyInfoRequest& this_ = static_cast<QueryGroupPolicyInfoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryGroupPolicyInfoRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupPolicyInfoRequest(arena);
}
constexpr auto QueryGroupPolicyInfoRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryGroupPolicyInfoRequest),
                                            alignof(QueryGroupPolicyInfoRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupPolicyInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupPolicyInfoRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupPolicyInfoRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupPolicyInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupPolicyInfoRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupPolicyInfoRequest>(), &QueryGroupPolicyInfoRequest::ByteSizeLong,
            &QueryGroupPolicyInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupPolicyInfoRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupPolicyInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> QueryGroupPolicyInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupPolicyInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoRequest, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoRequest, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\7\0\0\0\0\0\0"
    "cosmos.group.v1.QueryGroupPolicyInfoRequest"
    "address"
  }},
};

PROTOBUF_NOINLINE void QueryGroupPolicyInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupPolicyInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupPolicyInfoRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupPolicyInfoRequest& this_ = static_cast<const QueryGroupPolicyInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupPolicyInfoRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupPolicyInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupPolicyInfoRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryGroupPolicyInfoRequest.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupPolicyInfoRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupPolicyInfoRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupPolicyInfoRequest& this_ = static_cast<const QueryGroupPolicyInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupPolicyInfoRequest::ByteSizeLong() const {
          const QueryGroupPolicyInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupPolicyInfoRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupPolicyInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupPolicyInfoRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupPolicyInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupPolicyInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupPolicyInfoRequest::CopyFrom(const QueryGroupPolicyInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupPolicyInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupPolicyInfoRequest::InternalSwap(QueryGroupPolicyInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
}

::google::protobuf::Metadata QueryGroupPolicyInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupPolicyInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupPolicyInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoResponse, _impl_._has_bits_);
};

void QueryGroupPolicyInfoResponse::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupPolicyInfoResponse::QueryGroupPolicyInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupPolicyInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPolicyInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupPolicyInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryGroupPolicyInfoResponse::QueryGroupPolicyInfoResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupPolicyInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupPolicyInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::GroupPolicyInfo>(
                              arena, *from._impl_.info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupPolicyInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPolicyInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryGroupPolicyInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
QueryGroupPolicyInfoResponse::~QueryGroupPolicyInfoResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupPolicyInfoResponse)
  SharedDtor(*this);
}
inline void QueryGroupPolicyInfoResponse::SharedDtor(MessageLite& self) {
  QueryGroupPolicyInfoResponse& this_ = static_cast<QueryGroupPolicyInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupPolicyInfoResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupPolicyInfoResponse(arena);
}
constexpr auto QueryGroupPolicyInfoResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryGroupPolicyInfoResponse),
                                            alignof(QueryGroupPolicyInfoResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupPolicyInfoResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupPolicyInfoResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupPolicyInfoResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupPolicyInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupPolicyInfoResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupPolicyInfoResponse>(), &QueryGroupPolicyInfoResponse::ByteSizeLong,
            &QueryGroupPolicyInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupPolicyInfoResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupPolicyInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryGroupPolicyInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupPolicyInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.GroupPolicyInfo info = 1 [json_name = "info"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoResponse, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.group.v1.GroupPolicyInfo info = 1 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPolicyInfoResponse, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupPolicyInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupPolicyInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupPolicyInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupPolicyInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupPolicyInfoResponse& this_ = static_cast<const QueryGroupPolicyInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupPolicyInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupPolicyInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupPolicyInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.GroupPolicyInfo info = 1 [json_name = "info"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupPolicyInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupPolicyInfoResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupPolicyInfoResponse& this_ = static_cast<const QueryGroupPolicyInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupPolicyInfoResponse::ByteSizeLong() const {
          const QueryGroupPolicyInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupPolicyInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.group.v1.GroupPolicyInfo info = 1 [json_name = "info"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupPolicyInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupPolicyInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupPolicyInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupPolicyInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::GroupPolicyInfo>(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupPolicyInfoResponse::CopyFrom(const QueryGroupPolicyInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupPolicyInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupPolicyInfoResponse::InternalSwap(QueryGroupPolicyInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata QueryGroupPolicyInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupMembersRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupMembersRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_._has_bits_);
};

void QueryGroupMembersRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupMembersRequest::QueryGroupMembersRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupMembersRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupMembersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupMembersRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryGroupMembersRequest::QueryGroupMembersRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupMembersRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupMembersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;
  _impl_.group_id_ = from._impl_.group_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupMembersRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupMembersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryGroupMembersRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pagination_),
           0,
           offsetof(Impl_, group_id_) -
               offsetof(Impl_, pagination_) +
               sizeof(Impl_::group_id_));
}
QueryGroupMembersRequest::~QueryGroupMembersRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupMembersRequest)
  SharedDtor(*this);
}
inline void QueryGroupMembersRequest::SharedDtor(MessageLite& self) {
  QueryGroupMembersRequest& this_ = static_cast<QueryGroupMembersRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupMembersRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupMembersRequest(arena);
}
constexpr auto QueryGroupMembersRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryGroupMembersRequest),
                                            alignof(QueryGroupMembersRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupMembersRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupMembersRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupMembersRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupMembersRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupMembersRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupMembersRequest>(), &QueryGroupMembersRequest::ByteSizeLong,
            &QueryGroupMembersRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupMembersRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupMembersRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> QueryGroupMembersRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupMembersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_.pagination_)}},
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryGroupMembersRequest, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_.group_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupMembersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_.group_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupMembersRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupMembersRequest& this_ = static_cast<const QueryGroupMembersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupMembersRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupMembersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupMembersRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupMembersRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupMembersRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupMembersRequest& this_ = static_cast<const QueryGroupMembersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupMembersRequest::ByteSizeLong() const {
          const QueryGroupMembersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupMembersRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
           {
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupMembersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupMembersRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupMembersRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupMembersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupMembersRequest::CopyFrom(const QueryGroupMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupMembersRequest::InternalSwap(QueryGroupMembersRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_.group_id_)
      + sizeof(QueryGroupMembersRequest::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(QueryGroupMembersRequest, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::google::protobuf::Metadata QueryGroupMembersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupMembersResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupMembersResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_._has_bits_);
};

void QueryGroupMembersResponse::clear_members() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.members_.Clear();
}
void QueryGroupMembersResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupMembersResponse::QueryGroupMembersResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupMembersResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupMembersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupMembersResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        members_{visibility, arena, from.members_} {}

QueryGroupMembersResponse::QueryGroupMembersResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupMembersResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupMembersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupMembersResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupMembersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        members_{visibility, arena} {}

inline void QueryGroupMembersResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupMembersResponse::~QueryGroupMembersResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupMembersResponse)
  SharedDtor(*this);
}
inline void QueryGroupMembersResponse::SharedDtor(MessageLite& self) {
  QueryGroupMembersResponse& this_ = static_cast<QueryGroupMembersResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupMembersResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupMembersResponse(arena);
}
constexpr auto QueryGroupMembersResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_.members_) +
          decltype(QueryGroupMembersResponse::_impl_.members_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryGroupMembersResponse), alignof(QueryGroupMembersResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryGroupMembersResponse::PlacementNew_,
                                 sizeof(QueryGroupMembersResponse),
                                 alignof(QueryGroupMembersResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupMembersResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupMembersResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupMembersResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupMembersResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupMembersResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupMembersResponse>(), &QueryGroupMembersResponse::ByteSizeLong,
            &QueryGroupMembersResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupMembersResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupMembersResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryGroupMembersResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupMembersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.GroupMember members = 1 [json_name = "members"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_.members_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.GroupMember members = 1 [json_name = "members"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_.members_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupMembersResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupMember>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupMembersResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.members_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupMembersResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupMembersResponse& this_ = static_cast<const QueryGroupMembersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupMembersResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupMembersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupMembersResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.GroupMember members = 1 [json_name = "members"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_members_size());
               i < n; i++) {
            const auto& repfield = this_._internal_members().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupMembersResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupMembersResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupMembersResponse& this_ = static_cast<const QueryGroupMembersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupMembersResponse::ByteSizeLong() const {
          const QueryGroupMembersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupMembersResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupMember members = 1 [json_name = "members"];
            {
              total_size += 1UL * this_._internal_members_size();
              for (const auto& msg : this_._internal_members()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupMembersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupMembersResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupMembersResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupMembersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_members()->MergeFrom(
      from._internal_members());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupMembersResponse::CopyFrom(const QueryGroupMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupMembersResponse::InternalSwap(QueryGroupMembersResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.members_.InternalSwap(&other->_impl_.members_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupMembersResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupsByAdminRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupsByAdminRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_._has_bits_);
};

void QueryGroupsByAdminRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupsByAdminRequest::QueryGroupsByAdminRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupsByAdminRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByAdminRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupsByAdminRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_(arena, from.admin_) {}

QueryGroupsByAdminRequest::QueryGroupsByAdminRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupsByAdminRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupsByAdminRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupsByAdminRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByAdminRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_(arena) {}

inline void QueryGroupsByAdminRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupsByAdminRequest::~QueryGroupsByAdminRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupsByAdminRequest)
  SharedDtor(*this);
}
inline void QueryGroupsByAdminRequest::SharedDtor(MessageLite& self) {
  QueryGroupsByAdminRequest& this_ = static_cast<QueryGroupsByAdminRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.admin_.Destroy();
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupsByAdminRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupsByAdminRequest(arena);
}
constexpr auto QueryGroupsByAdminRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryGroupsByAdminRequest),
                                            alignof(QueryGroupsByAdminRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupsByAdminRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupsByAdminRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupsByAdminRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupsByAdminRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupsByAdminRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupsByAdminRequest>(), &QueryGroupsByAdminRequest::ByteSizeLong,
            &QueryGroupsByAdminRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupsByAdminRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupsByAdminRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 55, 2> QueryGroupsByAdminRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupsByAdminRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_.pagination_)}},
    // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_.admin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
    "\51\5\0\0\0\0\0\0"
    "cosmos.group.v1.QueryGroupsByAdminRequest"
    "admin"
  }},
};

PROTOBUF_NOINLINE void QueryGroupsByAdminRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupsByAdminRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupsByAdminRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupsByAdminRequest& this_ = static_cast<const QueryGroupsByAdminRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupsByAdminRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupsByAdminRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupsByAdminRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryGroupsByAdminRequest.admin");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupsByAdminRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupsByAdminRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupsByAdminRequest& this_ = static_cast<const QueryGroupsByAdminRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupsByAdminRequest::ByteSizeLong() const {
          const QueryGroupsByAdminRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupsByAdminRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupsByAdminRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupsByAdminRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupsByAdminRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupsByAdminRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupsByAdminRequest::CopyFrom(const QueryGroupsByAdminRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupsByAdminRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupsByAdminRequest::InternalSwap(QueryGroupsByAdminRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupsByAdminRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupsByAdminResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupsByAdminResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_._has_bits_);
};

void QueryGroupsByAdminResponse::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
void QueryGroupsByAdminResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupsByAdminResponse::QueryGroupsByAdminResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupsByAdminResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByAdminResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupsByAdminResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        groups_{visibility, arena, from.groups_} {}

QueryGroupsByAdminResponse::QueryGroupsByAdminResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupsByAdminResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupsByAdminResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupsByAdminResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByAdminResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        groups_{visibility, arena} {}

inline void QueryGroupsByAdminResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupsByAdminResponse::~QueryGroupsByAdminResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupsByAdminResponse)
  SharedDtor(*this);
}
inline void QueryGroupsByAdminResponse::SharedDtor(MessageLite& self) {
  QueryGroupsByAdminResponse& this_ = static_cast<QueryGroupsByAdminResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupsByAdminResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupsByAdminResponse(arena);
}
constexpr auto QueryGroupsByAdminResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_.groups_) +
          decltype(QueryGroupsByAdminResponse::_impl_.groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryGroupsByAdminResponse), alignof(QueryGroupsByAdminResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryGroupsByAdminResponse::PlacementNew_,
                                 sizeof(QueryGroupsByAdminResponse),
                                 alignof(QueryGroupsByAdminResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupsByAdminResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupsByAdminResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupsByAdminResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupsByAdminResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupsByAdminResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupsByAdminResponse>(), &QueryGroupsByAdminResponse::ByteSizeLong,
            &QueryGroupsByAdminResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupsByAdminResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupsByAdminResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryGroupsByAdminResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupsByAdminResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_.groups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_.groups_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByAdminResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupsByAdminResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupsByAdminResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupsByAdminResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupsByAdminResponse& this_ = static_cast<const QueryGroupsByAdminResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupsByAdminResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupsByAdminResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupsByAdminResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupsByAdminResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupsByAdminResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupsByAdminResponse& this_ = static_cast<const QueryGroupsByAdminResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupsByAdminResponse::ByteSizeLong() const {
          const QueryGroupsByAdminResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupsByAdminResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
            {
              total_size += 1UL * this_._internal_groups_size();
              for (const auto& msg : this_._internal_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupsByAdminResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupsByAdminResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupsByAdminResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupsByAdminResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupsByAdminResponse::CopyFrom(const QueryGroupsByAdminResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupsByAdminResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupsByAdminResponse::InternalSwap(QueryGroupsByAdminResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupsByAdminResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupPoliciesByGroupRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupPoliciesByGroupRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_._has_bits_);
};

void QueryGroupPoliciesByGroupRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupPoliciesByGroupRequest::QueryGroupPoliciesByGroupRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByGroupRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupPoliciesByGroupRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryGroupPoliciesByGroupRequest::QueryGroupPoliciesByGroupRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupPoliciesByGroupRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupPoliciesByGroupRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;
  _impl_.group_id_ = from._impl_.group_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByGroupRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryGroupPoliciesByGroupRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pagination_),
           0,
           offsetof(Impl_, group_id_) -
               offsetof(Impl_, pagination_) +
               sizeof(Impl_::group_id_));
}
QueryGroupPoliciesByGroupRequest::~QueryGroupPoliciesByGroupRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
  SharedDtor(*this);
}
inline void QueryGroupPoliciesByGroupRequest::SharedDtor(MessageLite& self) {
  QueryGroupPoliciesByGroupRequest& this_ = static_cast<QueryGroupPoliciesByGroupRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupPoliciesByGroupRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupPoliciesByGroupRequest(arena);
}
constexpr auto QueryGroupPoliciesByGroupRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryGroupPoliciesByGroupRequest),
                                            alignof(QueryGroupPoliciesByGroupRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupPoliciesByGroupRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupPoliciesByGroupRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupPoliciesByGroupRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupPoliciesByGroupRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupPoliciesByGroupRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupPoliciesByGroupRequest>(), &QueryGroupPoliciesByGroupRequest::ByteSizeLong,
            &QueryGroupPoliciesByGroupRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupPoliciesByGroupRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupPoliciesByGroupRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> QueryGroupPoliciesByGroupRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupPoliciesByGroupRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_.pagination_)}},
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryGroupPoliciesByGroupRequest, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_.group_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupPoliciesByGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_.group_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupPoliciesByGroupRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupPoliciesByGroupRequest& this_ = static_cast<const QueryGroupPoliciesByGroupRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupPoliciesByGroupRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupPoliciesByGroupRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupPoliciesByGroupRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupPoliciesByGroupRequest& this_ = static_cast<const QueryGroupPoliciesByGroupRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupPoliciesByGroupRequest::ByteSizeLong() const {
          const QueryGroupPoliciesByGroupRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
           {
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupPoliciesByGroupRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupPoliciesByGroupRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupPoliciesByGroupRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupPoliciesByGroupRequest::CopyFrom(const QueryGroupPoliciesByGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupPoliciesByGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupPoliciesByGroupRequest::InternalSwap(QueryGroupPoliciesByGroupRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_.group_id_)
      + sizeof(QueryGroupPoliciesByGroupRequest::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupRequest, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::google::protobuf::Metadata QueryGroupPoliciesByGroupRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupPoliciesByGroupResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupPoliciesByGroupResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_._has_bits_);
};

void QueryGroupPoliciesByGroupResponse::clear_group_policies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_policies_.Clear();
}
void QueryGroupPoliciesByGroupResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupPoliciesByGroupResponse::QueryGroupPoliciesByGroupResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByGroupResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupPoliciesByGroupResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        group_policies_{visibility, arena, from.group_policies_} {}

QueryGroupPoliciesByGroupResponse::QueryGroupPoliciesByGroupResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupPoliciesByGroupResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupPoliciesByGroupResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByGroupResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        group_policies_{visibility, arena} {}

inline void QueryGroupPoliciesByGroupResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupPoliciesByGroupResponse::~QueryGroupPoliciesByGroupResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
  SharedDtor(*this);
}
inline void QueryGroupPoliciesByGroupResponse::SharedDtor(MessageLite& self) {
  QueryGroupPoliciesByGroupResponse& this_ = static_cast<QueryGroupPoliciesByGroupResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupPoliciesByGroupResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupPoliciesByGroupResponse(arena);
}
constexpr auto QueryGroupPoliciesByGroupResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_.group_policies_) +
          decltype(QueryGroupPoliciesByGroupResponse::_impl_.group_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryGroupPoliciesByGroupResponse), alignof(QueryGroupPoliciesByGroupResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryGroupPoliciesByGroupResponse::PlacementNew_,
                                 sizeof(QueryGroupPoliciesByGroupResponse),
                                 alignof(QueryGroupPoliciesByGroupResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupPoliciesByGroupResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupPoliciesByGroupResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupPoliciesByGroupResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupPoliciesByGroupResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupPoliciesByGroupResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupPoliciesByGroupResponse>(), &QueryGroupPoliciesByGroupResponse::ByteSizeLong,
            &QueryGroupPoliciesByGroupResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupPoliciesByGroupResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupPoliciesByGroupResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryGroupPoliciesByGroupResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupPoliciesByGroupResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_.group_policies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_.group_policies_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByGroupResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupPolicyInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupPoliciesByGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_policies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupPoliciesByGroupResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupPoliciesByGroupResponse& this_ = static_cast<const QueryGroupPoliciesByGroupResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupPoliciesByGroupResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupPoliciesByGroupResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_group_policies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_group_policies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupPoliciesByGroupResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupPoliciesByGroupResponse& this_ = static_cast<const QueryGroupPoliciesByGroupResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupPoliciesByGroupResponse::ByteSizeLong() const {
          const QueryGroupPoliciesByGroupResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
            {
              total_size += 1UL * this_._internal_group_policies_size();
              for (const auto& msg : this_._internal_group_policies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupPoliciesByGroupResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupPoliciesByGroupResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupPoliciesByGroupResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_group_policies()->MergeFrom(
      from._internal_group_policies());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupPoliciesByGroupResponse::CopyFrom(const QueryGroupPoliciesByGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupPoliciesByGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupPoliciesByGroupResponse::InternalSwap(QueryGroupPoliciesByGroupResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.group_policies_.InternalSwap(&other->_impl_.group_policies_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupPoliciesByGroupResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupPoliciesByAdminRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupPoliciesByAdminRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_._has_bits_);
};

void QueryGroupPoliciesByAdminRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupPoliciesByAdminRequest::QueryGroupPoliciesByAdminRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByAdminRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupPoliciesByAdminRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_(arena, from.admin_) {}

QueryGroupPoliciesByAdminRequest::QueryGroupPoliciesByAdminRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupPoliciesByAdminRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupPoliciesByAdminRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByAdminRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_(arena) {}

inline void QueryGroupPoliciesByAdminRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupPoliciesByAdminRequest::~QueryGroupPoliciesByAdminRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
  SharedDtor(*this);
}
inline void QueryGroupPoliciesByAdminRequest::SharedDtor(MessageLite& self) {
  QueryGroupPoliciesByAdminRequest& this_ = static_cast<QueryGroupPoliciesByAdminRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.admin_.Destroy();
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupPoliciesByAdminRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupPoliciesByAdminRequest(arena);
}
constexpr auto QueryGroupPoliciesByAdminRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryGroupPoliciesByAdminRequest),
                                            alignof(QueryGroupPoliciesByAdminRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupPoliciesByAdminRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupPoliciesByAdminRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupPoliciesByAdminRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupPoliciesByAdminRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupPoliciesByAdminRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupPoliciesByAdminRequest>(), &QueryGroupPoliciesByAdminRequest::ByteSizeLong,
            &QueryGroupPoliciesByAdminRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupPoliciesByAdminRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupPoliciesByAdminRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 62, 2> QueryGroupPoliciesByAdminRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupPoliciesByAdminRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_.pagination_)}},
    // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_.admin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
    "\60\5\0\0\0\0\0\0"
    "cosmos.group.v1.QueryGroupPoliciesByAdminRequest"
    "admin"
  }},
};

PROTOBUF_NOINLINE void QueryGroupPoliciesByAdminRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupPoliciesByAdminRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupPoliciesByAdminRequest& this_ = static_cast<const QueryGroupPoliciesByAdminRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupPoliciesByAdminRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupPoliciesByAdminRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryGroupPoliciesByAdminRequest.admin");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupPoliciesByAdminRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupPoliciesByAdminRequest& this_ = static_cast<const QueryGroupPoliciesByAdminRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupPoliciesByAdminRequest::ByteSizeLong() const {
          const QueryGroupPoliciesByAdminRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupPoliciesByAdminRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupPoliciesByAdminRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupPoliciesByAdminRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupPoliciesByAdminRequest::CopyFrom(const QueryGroupPoliciesByAdminRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupPoliciesByAdminRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupPoliciesByAdminRequest::InternalSwap(QueryGroupPoliciesByAdminRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupPoliciesByAdminRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupPoliciesByAdminResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupPoliciesByAdminResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_._has_bits_);
};

void QueryGroupPoliciesByAdminResponse::clear_group_policies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_policies_.Clear();
}
void QueryGroupPoliciesByAdminResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupPoliciesByAdminResponse::QueryGroupPoliciesByAdminResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByAdminResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupPoliciesByAdminResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        group_policies_{visibility, arena, from.group_policies_} {}

QueryGroupPoliciesByAdminResponse::QueryGroupPoliciesByAdminResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupPoliciesByAdminResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupPoliciesByAdminResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupPoliciesByAdminResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        group_policies_{visibility, arena} {}

inline void QueryGroupPoliciesByAdminResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupPoliciesByAdminResponse::~QueryGroupPoliciesByAdminResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
  SharedDtor(*this);
}
inline void QueryGroupPoliciesByAdminResponse::SharedDtor(MessageLite& self) {
  QueryGroupPoliciesByAdminResponse& this_ = static_cast<QueryGroupPoliciesByAdminResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupPoliciesByAdminResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupPoliciesByAdminResponse(arena);
}
constexpr auto QueryGroupPoliciesByAdminResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_.group_policies_) +
          decltype(QueryGroupPoliciesByAdminResponse::_impl_.group_policies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryGroupPoliciesByAdminResponse), alignof(QueryGroupPoliciesByAdminResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryGroupPoliciesByAdminResponse::PlacementNew_,
                                 sizeof(QueryGroupPoliciesByAdminResponse),
                                 alignof(QueryGroupPoliciesByAdminResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupPoliciesByAdminResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupPoliciesByAdminResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupPoliciesByAdminResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupPoliciesByAdminResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupPoliciesByAdminResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupPoliciesByAdminResponse>(), &QueryGroupPoliciesByAdminResponse::ByteSizeLong,
            &QueryGroupPoliciesByAdminResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupPoliciesByAdminResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupPoliciesByAdminResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryGroupPoliciesByAdminResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupPoliciesByAdminResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_.group_policies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_.group_policies_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupPoliciesByAdminResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupPolicyInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupPoliciesByAdminResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.group_policies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupPoliciesByAdminResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupPoliciesByAdminResponse& this_ = static_cast<const QueryGroupPoliciesByAdminResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupPoliciesByAdminResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupPoliciesByAdminResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_group_policies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_group_policies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupPoliciesByAdminResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupPoliciesByAdminResponse& this_ = static_cast<const QueryGroupPoliciesByAdminResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupPoliciesByAdminResponse::ByteSizeLong() const {
          const QueryGroupPoliciesByAdminResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupPolicyInfo group_policies = 1 [json_name = "groupPolicies"];
            {
              total_size += 1UL * this_._internal_group_policies_size();
              for (const auto& msg : this_._internal_group_policies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupPoliciesByAdminResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupPoliciesByAdminResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupPoliciesByAdminResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_group_policies()->MergeFrom(
      from._internal_group_policies());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupPoliciesByAdminResponse::CopyFrom(const QueryGroupPoliciesByAdminResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupPoliciesByAdminResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupPoliciesByAdminResponse::InternalSwap(QueryGroupPoliciesByAdminResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.group_policies_.InternalSwap(&other->_impl_.group_policies_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupPoliciesByAdminResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryProposalRequest::_Internal {
 public:
};

QueryProposalRequest::QueryProposalRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryProposalRequest)
}
QueryProposalRequest::QueryProposalRequest(
    ::google::protobuf::Arena* arena, const QueryProposalRequest& from)
    : QueryProposalRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryProposalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
QueryProposalRequest::~QueryProposalRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryProposalRequest)
  SharedDtor(*this);
}
inline void QueryProposalRequest::SharedDtor(MessageLite& self) {
  QueryProposalRequest& this_ = static_cast<QueryProposalRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* QueryProposalRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryProposalRequest(arena);
}
constexpr auto QueryProposalRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryProposalRequest),
                                            alignof(QueryProposalRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryProposalRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryProposalRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryProposalRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryProposalRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryProposalRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryProposalRequest>(), &QueryProposalRequest::ByteSizeLong,
            &QueryProposalRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryProposalRequest, _impl_._cached_size_),
        false,
    },
    &QueryProposalRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryProposalRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> QueryProposalRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryProposalRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryProposalRequest, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryProposalRequest, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(QueryProposalRequest, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void QueryProposalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryProposalRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryProposalRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryProposalRequest& this_ = static_cast<const QueryProposalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryProposalRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryProposalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryProposalRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryProposalRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryProposalRequest::ByteSizeLong(const MessageLite& base) {
          const QueryProposalRequest& this_ = static_cast<const QueryProposalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryProposalRequest::ByteSizeLong() const {
          const QueryProposalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryProposalRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryProposalRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryProposalRequest*>(&to_msg);
  auto& from = static_cast<const QueryProposalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryProposalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryProposalRequest::CopyFrom(const QueryProposalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryProposalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryProposalRequest::InternalSwap(QueryProposalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata QueryProposalRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryProposalResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryProposalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryProposalResponse, _impl_._has_bits_);
};

void QueryProposalResponse::clear_proposal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proposal_ != nullptr) _impl_.proposal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryProposalResponse::QueryProposalResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryProposalResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryProposalResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryProposalResponse::QueryProposalResponse(
    ::google::protobuf::Arena* arena,
    const QueryProposalResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryProposalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proposal_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::Proposal>(
                              arena, *from._impl_.proposal_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryProposalResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryProposalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_ = {};
}
QueryProposalResponse::~QueryProposalResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryProposalResponse)
  SharedDtor(*this);
}
inline void QueryProposalResponse::SharedDtor(MessageLite& self) {
  QueryProposalResponse& this_ = static_cast<QueryProposalResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.proposal_;
  this_._impl_.~Impl_();
}

inline void* QueryProposalResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryProposalResponse(arena);
}
constexpr auto QueryProposalResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryProposalResponse),
                                            alignof(QueryProposalResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryProposalResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryProposalResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryProposalResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryProposalResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryProposalResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryProposalResponse>(), &QueryProposalResponse::ByteSizeLong,
            &QueryProposalResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryProposalResponse, _impl_._cached_size_),
        false,
    },
    &QueryProposalResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryProposalResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryProposalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryProposalResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryProposalResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.Proposal proposal = 1 [json_name = "proposal"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryProposalResponse, _impl_.proposal_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.group.v1.Proposal proposal = 1 [json_name = "proposal"];
    {PROTOBUF_FIELD_OFFSET(QueryProposalResponse, _impl_.proposal_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Proposal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryProposalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryProposalResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proposal_ != nullptr);
    _impl_.proposal_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryProposalResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryProposalResponse& this_ = static_cast<const QueryProposalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryProposalResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryProposalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryProposalResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.Proposal proposal = 1 [json_name = "proposal"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.proposal_, this_._impl_.proposal_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryProposalResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryProposalResponse::ByteSizeLong(const MessageLite& base) {
          const QueryProposalResponse& this_ = static_cast<const QueryProposalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryProposalResponse::ByteSizeLong() const {
          const QueryProposalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryProposalResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.group.v1.Proposal proposal = 1 [json_name = "proposal"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proposal_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryProposalResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryProposalResponse*>(&to_msg);
  auto& from = static_cast<const QueryProposalResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryProposalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.proposal_ != nullptr);
    if (_this->_impl_.proposal_ == nullptr) {
      _this->_impl_.proposal_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::Proposal>(arena, *from._impl_.proposal_);
    } else {
      _this->_impl_.proposal_->MergeFrom(*from._impl_.proposal_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryProposalResponse::CopyFrom(const QueryProposalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryProposalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryProposalResponse::InternalSwap(QueryProposalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.proposal_, other->_impl_.proposal_);
}

::google::protobuf::Metadata QueryProposalResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryProposalsByGroupPolicyRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryProposalsByGroupPolicyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_._has_bits_);
};

void QueryProposalsByGroupPolicyRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryProposalsByGroupPolicyRequest::QueryProposalsByGroupPolicyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalsByGroupPolicyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryProposalsByGroupPolicyRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_) {}

QueryProposalsByGroupPolicyRequest::QueryProposalsByGroupPolicyRequest(
    ::google::protobuf::Arena* arena,
    const QueryProposalsByGroupPolicyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryProposalsByGroupPolicyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalsByGroupPolicyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena) {}

inline void QueryProposalsByGroupPolicyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryProposalsByGroupPolicyRequest::~QueryProposalsByGroupPolicyRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
  SharedDtor(*this);
}
inline void QueryProposalsByGroupPolicyRequest::SharedDtor(MessageLite& self) {
  QueryProposalsByGroupPolicyRequest& this_ = static_cast<QueryProposalsByGroupPolicyRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryProposalsByGroupPolicyRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryProposalsByGroupPolicyRequest(arena);
}
constexpr auto QueryProposalsByGroupPolicyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryProposalsByGroupPolicyRequest),
                                            alignof(QueryProposalsByGroupPolicyRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryProposalsByGroupPolicyRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryProposalsByGroupPolicyRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryProposalsByGroupPolicyRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryProposalsByGroupPolicyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryProposalsByGroupPolicyRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryProposalsByGroupPolicyRequest>(), &QueryProposalsByGroupPolicyRequest::ByteSizeLong,
            &QueryProposalsByGroupPolicyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_._cached_size_),
        false,
    },
    &QueryProposalsByGroupPolicyRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryProposalsByGroupPolicyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2> QueryProposalsByGroupPolicyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryProposalsByGroupPolicyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_.pagination_)}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
    "\62\7\0\0\0\0\0\0"
    "cosmos.group.v1.QueryProposalsByGroupPolicyRequest"
    "address"
  }},
};

PROTOBUF_NOINLINE void QueryProposalsByGroupPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryProposalsByGroupPolicyRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryProposalsByGroupPolicyRequest& this_ = static_cast<const QueryProposalsByGroupPolicyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryProposalsByGroupPolicyRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryProposalsByGroupPolicyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryProposalsByGroupPolicyRequest.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryProposalsByGroupPolicyRequest::ByteSizeLong(const MessageLite& base) {
          const QueryProposalsByGroupPolicyRequest& this_ = static_cast<const QueryProposalsByGroupPolicyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryProposalsByGroupPolicyRequest::ByteSizeLong() const {
          const QueryProposalsByGroupPolicyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryProposalsByGroupPolicyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryProposalsByGroupPolicyRequest*>(&to_msg);
  auto& from = static_cast<const QueryProposalsByGroupPolicyRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryProposalsByGroupPolicyRequest::CopyFrom(const QueryProposalsByGroupPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryProposalsByGroupPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryProposalsByGroupPolicyRequest::InternalSwap(QueryProposalsByGroupPolicyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryProposalsByGroupPolicyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryProposalsByGroupPolicyResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryProposalsByGroupPolicyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_._has_bits_);
};

void QueryProposalsByGroupPolicyResponse::clear_proposals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposals_.Clear();
}
void QueryProposalsByGroupPolicyResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryProposalsByGroupPolicyResponse::QueryProposalsByGroupPolicyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalsByGroupPolicyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryProposalsByGroupPolicyResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        proposals_{visibility, arena, from.proposals_} {}

QueryProposalsByGroupPolicyResponse::QueryProposalsByGroupPolicyResponse(
    ::google::protobuf::Arena* arena,
    const QueryProposalsByGroupPolicyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryProposalsByGroupPolicyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryProposalsByGroupPolicyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        proposals_{visibility, arena} {}

inline void QueryProposalsByGroupPolicyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryProposalsByGroupPolicyResponse::~QueryProposalsByGroupPolicyResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
  SharedDtor(*this);
}
inline void QueryProposalsByGroupPolicyResponse::SharedDtor(MessageLite& self) {
  QueryProposalsByGroupPolicyResponse& this_ = static_cast<QueryProposalsByGroupPolicyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryProposalsByGroupPolicyResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryProposalsByGroupPolicyResponse(arena);
}
constexpr auto QueryProposalsByGroupPolicyResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_.proposals_) +
          decltype(QueryProposalsByGroupPolicyResponse::_impl_.proposals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryProposalsByGroupPolicyResponse), alignof(QueryProposalsByGroupPolicyResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryProposalsByGroupPolicyResponse::PlacementNew_,
                                 sizeof(QueryProposalsByGroupPolicyResponse),
                                 alignof(QueryProposalsByGroupPolicyResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryProposalsByGroupPolicyResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryProposalsByGroupPolicyResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryProposalsByGroupPolicyResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryProposalsByGroupPolicyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryProposalsByGroupPolicyResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryProposalsByGroupPolicyResponse>(), &QueryProposalsByGroupPolicyResponse::ByteSizeLong,
            &QueryProposalsByGroupPolicyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_._cached_size_),
        false,
    },
    &QueryProposalsByGroupPolicyResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryProposalsByGroupPolicyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryProposalsByGroupPolicyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryProposalsByGroupPolicyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.Proposal proposals = 1 [json_name = "proposals"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_.proposals_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.Proposal proposals = 1 [json_name = "proposals"];
    {PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_.proposals_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryProposalsByGroupPolicyResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Proposal>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryProposalsByGroupPolicyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposals_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryProposalsByGroupPolicyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryProposalsByGroupPolicyResponse& this_ = static_cast<const QueryProposalsByGroupPolicyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryProposalsByGroupPolicyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryProposalsByGroupPolicyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.Proposal proposals = 1 [json_name = "proposals"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_proposals_size());
               i < n; i++) {
            const auto& repfield = this_._internal_proposals().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryProposalsByGroupPolicyResponse::ByteSizeLong(const MessageLite& base) {
          const QueryProposalsByGroupPolicyResponse& this_ = static_cast<const QueryProposalsByGroupPolicyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryProposalsByGroupPolicyResponse::ByteSizeLong() const {
          const QueryProposalsByGroupPolicyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.Proposal proposals = 1 [json_name = "proposals"];
            {
              total_size += 1UL * this_._internal_proposals_size();
              for (const auto& msg : this_._internal_proposals()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryProposalsByGroupPolicyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryProposalsByGroupPolicyResponse*>(&to_msg);
  auto& from = static_cast<const QueryProposalsByGroupPolicyResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_proposals()->MergeFrom(
      from._internal_proposals());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryProposalsByGroupPolicyResponse::CopyFrom(const QueryProposalsByGroupPolicyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryProposalsByGroupPolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryProposalsByGroupPolicyResponse::InternalSwap(QueryProposalsByGroupPolicyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.proposals_.InternalSwap(&other->_impl_.proposals_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryProposalsByGroupPolicyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryVoteByProposalVoterRequest::_Internal {
 public:
};

QueryVoteByProposalVoterRequest::QueryVoteByProposalVoterRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryVoteByProposalVoterRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryVoteByProposalVoterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryVoteByProposalVoterRequest& from_msg)
      : voter_(arena, from.voter_),
        _cached_size_{0} {}

QueryVoteByProposalVoterRequest::QueryVoteByProposalVoterRequest(
    ::google::protobuf::Arena* arena,
    const QueryVoteByProposalVoterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryVoteByProposalVoterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.proposal_id_ = from._impl_.proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryVoteByProposalVoterRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryVoteByProposalVoterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : voter_(arena),
        _cached_size_{0} {}

inline void QueryVoteByProposalVoterRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
QueryVoteByProposalVoterRequest::~QueryVoteByProposalVoterRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryVoteByProposalVoterRequest)
  SharedDtor(*this);
}
inline void QueryVoteByProposalVoterRequest::SharedDtor(MessageLite& self) {
  QueryVoteByProposalVoterRequest& this_ = static_cast<QueryVoteByProposalVoterRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voter_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryVoteByProposalVoterRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryVoteByProposalVoterRequest(arena);
}
constexpr auto QueryVoteByProposalVoterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryVoteByProposalVoterRequest),
                                            alignof(QueryVoteByProposalVoterRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryVoteByProposalVoterRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryVoteByProposalVoterRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryVoteByProposalVoterRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryVoteByProposalVoterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryVoteByProposalVoterRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryVoteByProposalVoterRequest>(), &QueryVoteByProposalVoterRequest::ByteSizeLong,
            &QueryVoteByProposalVoterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterRequest, _impl_._cached_size_),
        false,
    },
    &QueryVoteByProposalVoterRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryVoteByProposalVoterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> QueryVoteByProposalVoterRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryVoteByProposalVoterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterRequest, _impl_.voter_)}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryVoteByProposalVoterRequest, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterRequest, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterRequest, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterRequest, _impl_.voter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\0\5\0\0\0\0\0"
    "cosmos.group.v1.QueryVoteByProposalVoterRequest"
    "voter"
  }},
};

PROTOBUF_NOINLINE void QueryVoteByProposalVoterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryVoteByProposalVoterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.voter_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryVoteByProposalVoterRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryVoteByProposalVoterRequest& this_ = static_cast<const QueryVoteByProposalVoterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryVoteByProposalVoterRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryVoteByProposalVoterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryVoteByProposalVoterRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_voter().empty()) {
            const std::string& _s = this_._internal_voter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryVoteByProposalVoterRequest.voter");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryVoteByProposalVoterRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryVoteByProposalVoterRequest::ByteSizeLong(const MessageLite& base) {
          const QueryVoteByProposalVoterRequest& this_ = static_cast<const QueryVoteByProposalVoterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryVoteByProposalVoterRequest::ByteSizeLong() const {
          const QueryVoteByProposalVoterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryVoteByProposalVoterRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_voter().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryVoteByProposalVoterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryVoteByProposalVoterRequest*>(&to_msg);
  auto& from = static_cast<const QueryVoteByProposalVoterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryVoteByProposalVoterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryVoteByProposalVoterRequest::CopyFrom(const QueryVoteByProposalVoterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryVoteByProposalVoterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryVoteByProposalVoterRequest::InternalSwap(QueryVoteByProposalVoterRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, &other->_impl_.voter_, arena);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata QueryVoteByProposalVoterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryVoteByProposalVoterResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryVoteByProposalVoterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterResponse, _impl_._has_bits_);
};

void QueryVoteByProposalVoterResponse::clear_vote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vote_ != nullptr) _impl_.vote_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryVoteByProposalVoterResponse::QueryVoteByProposalVoterResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryVoteByProposalVoterResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryVoteByProposalVoterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryVoteByProposalVoterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryVoteByProposalVoterResponse::QueryVoteByProposalVoterResponse(
    ::google::protobuf::Arena* arena,
    const QueryVoteByProposalVoterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryVoteByProposalVoterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.vote_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::Vote>(
                              arena, *from._impl_.vote_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryVoteByProposalVoterResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryVoteByProposalVoterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryVoteByProposalVoterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.vote_ = {};
}
QueryVoteByProposalVoterResponse::~QueryVoteByProposalVoterResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryVoteByProposalVoterResponse)
  SharedDtor(*this);
}
inline void QueryVoteByProposalVoterResponse::SharedDtor(MessageLite& self) {
  QueryVoteByProposalVoterResponse& this_ = static_cast<QueryVoteByProposalVoterResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.vote_;
  this_._impl_.~Impl_();
}

inline void* QueryVoteByProposalVoterResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryVoteByProposalVoterResponse(arena);
}
constexpr auto QueryVoteByProposalVoterResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryVoteByProposalVoterResponse),
                                            alignof(QueryVoteByProposalVoterResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryVoteByProposalVoterResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryVoteByProposalVoterResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryVoteByProposalVoterResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryVoteByProposalVoterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryVoteByProposalVoterResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryVoteByProposalVoterResponse>(), &QueryVoteByProposalVoterResponse::ByteSizeLong,
            &QueryVoteByProposalVoterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterResponse, _impl_._cached_size_),
        false,
    },
    &QueryVoteByProposalVoterResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryVoteByProposalVoterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryVoteByProposalVoterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryVoteByProposalVoterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.Vote vote = 1 [json_name = "vote"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterResponse, _impl_.vote_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.group.v1.Vote vote = 1 [json_name = "vote"];
    {PROTOBUF_FIELD_OFFSET(QueryVoteByProposalVoterResponse, _impl_.vote_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Vote>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryVoteByProposalVoterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryVoteByProposalVoterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.vote_ != nullptr);
    _impl_.vote_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryVoteByProposalVoterResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryVoteByProposalVoterResponse& this_ = static_cast<const QueryVoteByProposalVoterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryVoteByProposalVoterResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryVoteByProposalVoterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryVoteByProposalVoterResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.Vote vote = 1 [json_name = "vote"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.vote_, this_._impl_.vote_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryVoteByProposalVoterResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryVoteByProposalVoterResponse::ByteSizeLong(const MessageLite& base) {
          const QueryVoteByProposalVoterResponse& this_ = static_cast<const QueryVoteByProposalVoterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryVoteByProposalVoterResponse::ByteSizeLong() const {
          const QueryVoteByProposalVoterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryVoteByProposalVoterResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.group.v1.Vote vote = 1 [json_name = "vote"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.vote_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryVoteByProposalVoterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryVoteByProposalVoterResponse*>(&to_msg);
  auto& from = static_cast<const QueryVoteByProposalVoterResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryVoteByProposalVoterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.vote_ != nullptr);
    if (_this->_impl_.vote_ == nullptr) {
      _this->_impl_.vote_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::Vote>(arena, *from._impl_.vote_);
    } else {
      _this->_impl_.vote_->MergeFrom(*from._impl_.vote_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryVoteByProposalVoterResponse::CopyFrom(const QueryVoteByProposalVoterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryVoteByProposalVoterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryVoteByProposalVoterResponse::InternalSwap(QueryVoteByProposalVoterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.vote_, other->_impl_.vote_);
}

::google::protobuf::Metadata QueryVoteByProposalVoterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryVotesByProposalRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryVotesByProposalRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_._has_bits_);
};

void QueryVotesByProposalRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryVotesByProposalRequest::QueryVotesByProposalRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryVotesByProposalRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByProposalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryVotesByProposalRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryVotesByProposalRequest::QueryVotesByProposalRequest(
    ::google::protobuf::Arena* arena,
    const QueryVotesByProposalRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryVotesByProposalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;
  _impl_.proposal_id_ = from._impl_.proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryVotesByProposalRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByProposalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryVotesByProposalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pagination_),
           0,
           offsetof(Impl_, proposal_id_) -
               offsetof(Impl_, pagination_) +
               sizeof(Impl_::proposal_id_));
}
QueryVotesByProposalRequest::~QueryVotesByProposalRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryVotesByProposalRequest)
  SharedDtor(*this);
}
inline void QueryVotesByProposalRequest::SharedDtor(MessageLite& self) {
  QueryVotesByProposalRequest& this_ = static_cast<QueryVotesByProposalRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryVotesByProposalRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryVotesByProposalRequest(arena);
}
constexpr auto QueryVotesByProposalRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryVotesByProposalRequest),
                                            alignof(QueryVotesByProposalRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryVotesByProposalRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryVotesByProposalRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryVotesByProposalRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryVotesByProposalRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryVotesByProposalRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryVotesByProposalRequest>(), &QueryVotesByProposalRequest::ByteSizeLong,
            &QueryVotesByProposalRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_._cached_size_),
        false,
    },
    &QueryVotesByProposalRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryVotesByProposalRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> QueryVotesByProposalRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryVotesByProposalRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_.pagination_)}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryVotesByProposalRequest, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_.proposal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryVotesByProposalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryVotesByProposalRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_.proposal_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryVotesByProposalRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryVotesByProposalRequest& this_ = static_cast<const QueryVotesByProposalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryVotesByProposalRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryVotesByProposalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryVotesByProposalRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryVotesByProposalRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryVotesByProposalRequest::ByteSizeLong(const MessageLite& base) {
          const QueryVotesByProposalRequest& this_ = static_cast<const QueryVotesByProposalRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryVotesByProposalRequest::ByteSizeLong() const {
          const QueryVotesByProposalRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryVotesByProposalRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryVotesByProposalRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryVotesByProposalRequest*>(&to_msg);
  auto& from = static_cast<const QueryVotesByProposalRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryVotesByProposalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryVotesByProposalRequest::CopyFrom(const QueryVotesByProposalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryVotesByProposalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryVotesByProposalRequest::InternalSwap(QueryVotesByProposalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_.proposal_id_)
      + sizeof(QueryVotesByProposalRequest::_impl_.proposal_id_)
      - PROTOBUF_FIELD_OFFSET(QueryVotesByProposalRequest, _impl_.pagination_)>(
          reinterpret_cast<char*>(&_impl_.pagination_),
          reinterpret_cast<char*>(&other->_impl_.pagination_));
}

::google::protobuf::Metadata QueryVotesByProposalRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryVotesByProposalResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryVotesByProposalResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_._has_bits_);
};

void QueryVotesByProposalResponse::clear_votes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votes_.Clear();
}
void QueryVotesByProposalResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryVotesByProposalResponse::QueryVotesByProposalResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryVotesByProposalResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByProposalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryVotesByProposalResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        votes_{visibility, arena, from.votes_} {}

QueryVotesByProposalResponse::QueryVotesByProposalResponse(
    ::google::protobuf::Arena* arena,
    const QueryVotesByProposalResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryVotesByProposalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryVotesByProposalResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByProposalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        votes_{visibility, arena} {}

inline void QueryVotesByProposalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryVotesByProposalResponse::~QueryVotesByProposalResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryVotesByProposalResponse)
  SharedDtor(*this);
}
inline void QueryVotesByProposalResponse::SharedDtor(MessageLite& self) {
  QueryVotesByProposalResponse& this_ = static_cast<QueryVotesByProposalResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryVotesByProposalResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryVotesByProposalResponse(arena);
}
constexpr auto QueryVotesByProposalResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_.votes_) +
          decltype(QueryVotesByProposalResponse::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryVotesByProposalResponse), alignof(QueryVotesByProposalResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryVotesByProposalResponse::PlacementNew_,
                                 sizeof(QueryVotesByProposalResponse),
                                 alignof(QueryVotesByProposalResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryVotesByProposalResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryVotesByProposalResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryVotesByProposalResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryVotesByProposalResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryVotesByProposalResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryVotesByProposalResponse>(), &QueryVotesByProposalResponse::ByteSizeLong,
            &QueryVotesByProposalResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_._cached_size_),
        false,
    },
    &QueryVotesByProposalResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryVotesByProposalResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryVotesByProposalResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryVotesByProposalResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_.votes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_.votes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByProposalResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Vote>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryVotesByProposalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryVotesByProposalResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.votes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryVotesByProposalResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryVotesByProposalResponse& this_ = static_cast<const QueryVotesByProposalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryVotesByProposalResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryVotesByProposalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryVotesByProposalResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryVotesByProposalResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryVotesByProposalResponse::ByteSizeLong(const MessageLite& base) {
          const QueryVotesByProposalResponse& this_ = static_cast<const QueryVotesByProposalResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryVotesByProposalResponse::ByteSizeLong() const {
          const QueryVotesByProposalResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryVotesByProposalResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryVotesByProposalResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryVotesByProposalResponse*>(&to_msg);
  auto& from = static_cast<const QueryVotesByProposalResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryVotesByProposalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryVotesByProposalResponse::CopyFrom(const QueryVotesByProposalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryVotesByProposalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryVotesByProposalResponse::InternalSwap(QueryVotesByProposalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryVotesByProposalResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryVotesByVoterRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryVotesByVoterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_._has_bits_);
};

void QueryVotesByVoterRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryVotesByVoterRequest::QueryVotesByVoterRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryVotesByVoterRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByVoterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryVotesByVoterRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        voter_(arena, from.voter_) {}

QueryVotesByVoterRequest::QueryVotesByVoterRequest(
    ::google::protobuf::Arena* arena,
    const QueryVotesByVoterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryVotesByVoterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryVotesByVoterRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByVoterRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        voter_(arena) {}

inline void QueryVotesByVoterRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryVotesByVoterRequest::~QueryVotesByVoterRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryVotesByVoterRequest)
  SharedDtor(*this);
}
inline void QueryVotesByVoterRequest::SharedDtor(MessageLite& self) {
  QueryVotesByVoterRequest& this_ = static_cast<QueryVotesByVoterRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voter_.Destroy();
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryVotesByVoterRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryVotesByVoterRequest(arena);
}
constexpr auto QueryVotesByVoterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryVotesByVoterRequest),
                                            alignof(QueryVotesByVoterRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryVotesByVoterRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryVotesByVoterRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryVotesByVoterRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryVotesByVoterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryVotesByVoterRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryVotesByVoterRequest>(), &QueryVotesByVoterRequest::ByteSizeLong,
            &QueryVotesByVoterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_._cached_size_),
        false,
    },
    &QueryVotesByVoterRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryVotesByVoterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 54, 2> QueryVotesByVoterRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryVotesByVoterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_.pagination_)}},
    // string voter = 1 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_.voter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string voter = 1 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_.voter_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByVoterRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
    "\50\5\0\0\0\0\0\0"
    "cosmos.group.v1.QueryVotesByVoterRequest"
    "voter"
  }},
};

PROTOBUF_NOINLINE void QueryVotesByVoterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryVotesByVoterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.voter_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryVotesByVoterRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryVotesByVoterRequest& this_ = static_cast<const QueryVotesByVoterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryVotesByVoterRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryVotesByVoterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryVotesByVoterRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string voter = 1 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_voter().empty()) {
            const std::string& _s = this_._internal_voter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryVotesByVoterRequest.voter");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryVotesByVoterRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryVotesByVoterRequest::ByteSizeLong(const MessageLite& base) {
          const QueryVotesByVoterRequest& this_ = static_cast<const QueryVotesByVoterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryVotesByVoterRequest::ByteSizeLong() const {
          const QueryVotesByVoterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryVotesByVoterRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string voter = 1 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_voter().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter());
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryVotesByVoterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryVotesByVoterRequest*>(&to_msg);
  auto& from = static_cast<const QueryVotesByVoterRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryVotesByVoterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryVotesByVoterRequest::CopyFrom(const QueryVotesByVoterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryVotesByVoterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryVotesByVoterRequest::InternalSwap(QueryVotesByVoterRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, &other->_impl_.voter_, arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryVotesByVoterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryVotesByVoterResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryVotesByVoterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_._has_bits_);
};

void QueryVotesByVoterResponse::clear_votes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votes_.Clear();
}
void QueryVotesByVoterResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryVotesByVoterResponse::QueryVotesByVoterResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryVotesByVoterResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByVoterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryVotesByVoterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        votes_{visibility, arena, from.votes_} {}

QueryVotesByVoterResponse::QueryVotesByVoterResponse(
    ::google::protobuf::Arena* arena,
    const QueryVotesByVoterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryVotesByVoterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryVotesByVoterResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryVotesByVoterResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        votes_{visibility, arena} {}

inline void QueryVotesByVoterResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryVotesByVoterResponse::~QueryVotesByVoterResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryVotesByVoterResponse)
  SharedDtor(*this);
}
inline void QueryVotesByVoterResponse::SharedDtor(MessageLite& self) {
  QueryVotesByVoterResponse& this_ = static_cast<QueryVotesByVoterResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryVotesByVoterResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryVotesByVoterResponse(arena);
}
constexpr auto QueryVotesByVoterResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_.votes_) +
          decltype(QueryVotesByVoterResponse::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryVotesByVoterResponse), alignof(QueryVotesByVoterResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryVotesByVoterResponse::PlacementNew_,
                                 sizeof(QueryVotesByVoterResponse),
                                 alignof(QueryVotesByVoterResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryVotesByVoterResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryVotesByVoterResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryVotesByVoterResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryVotesByVoterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryVotesByVoterResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryVotesByVoterResponse>(), &QueryVotesByVoterResponse::ByteSizeLong,
            &QueryVotesByVoterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_._cached_size_),
        false,
    },
    &QueryVotesByVoterResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryVotesByVoterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryVotesByVoterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryVotesByVoterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_.votes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_.votes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryVotesByVoterResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Vote>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryVotesByVoterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryVotesByVoterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.votes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryVotesByVoterResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryVotesByVoterResponse& this_ = static_cast<const QueryVotesByVoterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryVotesByVoterResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryVotesByVoterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryVotesByVoterResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryVotesByVoterResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryVotesByVoterResponse::ByteSizeLong(const MessageLite& base) {
          const QueryVotesByVoterResponse& this_ = static_cast<const QueryVotesByVoterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryVotesByVoterResponse::ByteSizeLong() const {
          const QueryVotesByVoterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryVotesByVoterResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.Vote votes = 1 [json_name = "votes"];
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryVotesByVoterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryVotesByVoterResponse*>(&to_msg);
  auto& from = static_cast<const QueryVotesByVoterResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryVotesByVoterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryVotesByVoterResponse::CopyFrom(const QueryVotesByVoterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryVotesByVoterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryVotesByVoterResponse::InternalSwap(QueryVotesByVoterResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryVotesByVoterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupsByMemberRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupsByMemberRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_._has_bits_);
};

void QueryGroupsByMemberRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupsByMemberRequest::QueryGroupsByMemberRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupsByMemberRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByMemberRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupsByMemberRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_) {}

QueryGroupsByMemberRequest::QueryGroupsByMemberRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupsByMemberRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupsByMemberRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupsByMemberRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByMemberRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena) {}

inline void QueryGroupsByMemberRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupsByMemberRequest::~QueryGroupsByMemberRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupsByMemberRequest)
  SharedDtor(*this);
}
inline void QueryGroupsByMemberRequest::SharedDtor(MessageLite& self) {
  QueryGroupsByMemberRequest& this_ = static_cast<QueryGroupsByMemberRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupsByMemberRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupsByMemberRequest(arena);
}
constexpr auto QueryGroupsByMemberRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryGroupsByMemberRequest),
                                            alignof(QueryGroupsByMemberRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupsByMemberRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupsByMemberRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupsByMemberRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupsByMemberRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupsByMemberRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupsByMemberRequest>(), &QueryGroupsByMemberRequest::ByteSizeLong,
            &QueryGroupsByMemberRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupsByMemberRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupsByMemberRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 58, 2> QueryGroupsByMemberRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupsByMemberRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_.pagination_)}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
    "\52\7\0\0\0\0\0\0"
    "cosmos.group.v1.QueryGroupsByMemberRequest"
    "address"
  }},
};

PROTOBUF_NOINLINE void QueryGroupsByMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupsByMemberRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupsByMemberRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupsByMemberRequest& this_ = static_cast<const QueryGroupsByMemberRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupsByMemberRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupsByMemberRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupsByMemberRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.QueryGroupsByMemberRequest.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupsByMemberRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupsByMemberRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupsByMemberRequest& this_ = static_cast<const QueryGroupsByMemberRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupsByMemberRequest::ByteSizeLong() const {
          const QueryGroupsByMemberRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupsByMemberRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupsByMemberRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupsByMemberRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupsByMemberRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupsByMemberRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupsByMemberRequest::CopyFrom(const QueryGroupsByMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupsByMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupsByMemberRequest::InternalSwap(QueryGroupsByMemberRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupsByMemberRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupsByMemberResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupsByMemberResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_._has_bits_);
};

void QueryGroupsByMemberResponse::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
void QueryGroupsByMemberResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupsByMemberResponse::QueryGroupsByMemberResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupsByMemberResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByMemberResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupsByMemberResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        groups_{visibility, arena, from.groups_} {}

QueryGroupsByMemberResponse::QueryGroupsByMemberResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupsByMemberResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupsByMemberResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupsByMemberResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsByMemberResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        groups_{visibility, arena} {}

inline void QueryGroupsByMemberResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupsByMemberResponse::~QueryGroupsByMemberResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupsByMemberResponse)
  SharedDtor(*this);
}
inline void QueryGroupsByMemberResponse::SharedDtor(MessageLite& self) {
  QueryGroupsByMemberResponse& this_ = static_cast<QueryGroupsByMemberResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupsByMemberResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupsByMemberResponse(arena);
}
constexpr auto QueryGroupsByMemberResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_.groups_) +
          decltype(QueryGroupsByMemberResponse::_impl_.groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryGroupsByMemberResponse), alignof(QueryGroupsByMemberResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryGroupsByMemberResponse::PlacementNew_,
                                 sizeof(QueryGroupsByMemberResponse),
                                 alignof(QueryGroupsByMemberResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupsByMemberResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupsByMemberResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupsByMemberResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupsByMemberResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupsByMemberResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupsByMemberResponse>(), &QueryGroupsByMemberResponse::ByteSizeLong,
            &QueryGroupsByMemberResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupsByMemberResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupsByMemberResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryGroupsByMemberResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupsByMemberResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_.groups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_.groups_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsByMemberResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupsByMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupsByMemberResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupsByMemberResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupsByMemberResponse& this_ = static_cast<const QueryGroupsByMemberResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupsByMemberResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupsByMemberResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupsByMemberResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupsByMemberResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupsByMemberResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupsByMemberResponse& this_ = static_cast<const QueryGroupsByMemberResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupsByMemberResponse::ByteSizeLong() const {
          const QueryGroupsByMemberResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupsByMemberResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
            {
              total_size += 1UL * this_._internal_groups_size();
              for (const auto& msg : this_._internal_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupsByMemberResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupsByMemberResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupsByMemberResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupsByMemberResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupsByMemberResponse::CopyFrom(const QueryGroupsByMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupsByMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupsByMemberResponse::InternalSwap(QueryGroupsByMemberResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupsByMemberResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryTallyResultRequest::_Internal {
 public:
};

QueryTallyResultRequest::QueryTallyResultRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryTallyResultRequest)
}
QueryTallyResultRequest::QueryTallyResultRequest(
    ::google::protobuf::Arena* arena, const QueryTallyResultRequest& from)
    : QueryTallyResultRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryTallyResultRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryTallyResultRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
QueryTallyResultRequest::~QueryTallyResultRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryTallyResultRequest)
  SharedDtor(*this);
}
inline void QueryTallyResultRequest::SharedDtor(MessageLite& self) {
  QueryTallyResultRequest& this_ = static_cast<QueryTallyResultRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* QueryTallyResultRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryTallyResultRequest(arena);
}
constexpr auto QueryTallyResultRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryTallyResultRequest),
                                            alignof(QueryTallyResultRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryTallyResultRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryTallyResultRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryTallyResultRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryTallyResultRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryTallyResultRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryTallyResultRequest>(), &QueryTallyResultRequest::ByteSizeLong,
            &QueryTallyResultRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryTallyResultRequest, _impl_._cached_size_),
        false,
    },
    &QueryTallyResultRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryTallyResultRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> QueryTallyResultRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryTallyResultRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryTallyResultRequest, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryTallyResultRequest, _impl_.proposal_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(QueryTallyResultRequest, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void QueryTallyResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryTallyResultRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryTallyResultRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryTallyResultRequest& this_ = static_cast<const QueryTallyResultRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryTallyResultRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryTallyResultRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryTallyResultRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryTallyResultRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryTallyResultRequest::ByteSizeLong(const MessageLite& base) {
          const QueryTallyResultRequest& this_ = static_cast<const QueryTallyResultRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryTallyResultRequest::ByteSizeLong() const {
          const QueryTallyResultRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryTallyResultRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryTallyResultRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryTallyResultRequest*>(&to_msg);
  auto& from = static_cast<const QueryTallyResultRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryTallyResultRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTallyResultRequest::CopyFrom(const QueryTallyResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryTallyResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryTallyResultRequest::InternalSwap(QueryTallyResultRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata QueryTallyResultRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryTallyResultResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryTallyResultResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryTallyResultResponse, _impl_._has_bits_);
};

void QueryTallyResultResponse::clear_tally() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tally_ != nullptr) _impl_.tally_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryTallyResultResponse::QueryTallyResultResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryTallyResultResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryTallyResultResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryTallyResultResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryTallyResultResponse::QueryTallyResultResponse(
    ::google::protobuf::Arena* arena,
    const QueryTallyResultResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryTallyResultResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tally_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::TallyResult>(
                              arena, *from._impl_.tally_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryTallyResultResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryTallyResultResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryTallyResultResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tally_ = {};
}
QueryTallyResultResponse::~QueryTallyResultResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryTallyResultResponse)
  SharedDtor(*this);
}
inline void QueryTallyResultResponse::SharedDtor(MessageLite& self) {
  QueryTallyResultResponse& this_ = static_cast<QueryTallyResultResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tally_;
  this_._impl_.~Impl_();
}

inline void* QueryTallyResultResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryTallyResultResponse(arena);
}
constexpr auto QueryTallyResultResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryTallyResultResponse),
                                            alignof(QueryTallyResultResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryTallyResultResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryTallyResultResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryTallyResultResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryTallyResultResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryTallyResultResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryTallyResultResponse>(), &QueryTallyResultResponse::ByteSizeLong,
            &QueryTallyResultResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryTallyResultResponse, _impl_._cached_size_),
        false,
    },
    &QueryTallyResultResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryTallyResultResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryTallyResultResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryTallyResultResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryTallyResultResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.TallyResult tally = 1 [json_name = "tally", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryTallyResultResponse, _impl_.tally_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.group.v1.TallyResult tally = 1 [json_name = "tally", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(QueryTallyResultResponse, _impl_.tally_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::TallyResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryTallyResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryTallyResultResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tally_ != nullptr);
    _impl_.tally_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryTallyResultResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryTallyResultResponse& this_ = static_cast<const QueryTallyResultResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryTallyResultResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryTallyResultResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryTallyResultResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.TallyResult tally = 1 [json_name = "tally", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tally_, this_._impl_.tally_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryTallyResultResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryTallyResultResponse::ByteSizeLong(const MessageLite& base) {
          const QueryTallyResultResponse& this_ = static_cast<const QueryTallyResultResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryTallyResultResponse::ByteSizeLong() const {
          const QueryTallyResultResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryTallyResultResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.group.v1.TallyResult tally = 1 [json_name = "tally", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tally_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryTallyResultResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryTallyResultResponse*>(&to_msg);
  auto& from = static_cast<const QueryTallyResultResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryTallyResultResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tally_ != nullptr);
    if (_this->_impl_.tally_ == nullptr) {
      _this->_impl_.tally_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::TallyResult>(arena, *from._impl_.tally_);
    } else {
      _this->_impl_.tally_->MergeFrom(*from._impl_.tally_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryTallyResultResponse::CopyFrom(const QueryTallyResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryTallyResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryTallyResultResponse::InternalSwap(QueryTallyResultResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tally_, other->_impl_.tally_);
}

::google::protobuf::Metadata QueryTallyResultResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupsRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupsRequest, _impl_._has_bits_);
};

void QueryGroupsRequest::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupsRequest::QueryGroupsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupsRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryGroupsRequest::QueryGroupsRequest(
    ::google::protobuf::Arena* arena,
    const QueryGroupsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupsRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryGroupsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupsRequest::~QueryGroupsRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupsRequest)
  SharedDtor(*this);
}
inline void QueryGroupsRequest::SharedDtor(MessageLite& self) {
  QueryGroupsRequest& this_ = static_cast<QueryGroupsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupsRequest(arena);
}
constexpr auto QueryGroupsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryGroupsRequest),
                                            alignof(QueryGroupsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupsRequest>(), &QueryGroupsRequest::ByteSizeLong,
            &QueryGroupsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupsRequest, _impl_._cached_size_),
        false,
    },
    &QueryGroupsRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryGroupsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsRequest, _impl_.pagination_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsRequest, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupsRequest& this_ = static_cast<const QueryGroupsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupsRequest::ByteSizeLong(const MessageLite& base) {
          const QueryGroupsRequest& this_ = static_cast<const QueryGroupsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupsRequest::ByteSizeLong() const {
          const QueryGroupsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupsRequest*>(&to_msg);
  auto& from = static_cast<const QueryGroupsRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageRequest>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupsRequest::CopyFrom(const QueryGroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupsRequest::InternalSwap(QueryGroupsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryGroupsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryGroupsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_._has_bits_);
};

void QueryGroupsResponse::clear_groups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_.Clear();
}
void QueryGroupsResponse::clear_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryGroupsResponse::QueryGroupsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.QueryGroupsResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::QueryGroupsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        groups_{visibility, arena, from.groups_} {}

QueryGroupsResponse::QueryGroupsResponse(
    ::google::protobuf::Arena* arena,
    const QueryGroupsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryGroupsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pagination_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(
                              arena, *from._impl_.pagination_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.QueryGroupsResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryGroupsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        groups_{visibility, arena} {}

inline void QueryGroupsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pagination_ = {};
}
QueryGroupsResponse::~QueryGroupsResponse() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.QueryGroupsResponse)
  SharedDtor(*this);
}
inline void QueryGroupsResponse::SharedDtor(MessageLite& self) {
  QueryGroupsResponse& this_ = static_cast<QueryGroupsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pagination_;
  this_._impl_.~Impl_();
}

inline void* QueryGroupsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryGroupsResponse(arena);
}
constexpr auto QueryGroupsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_.groups_) +
          decltype(QueryGroupsResponse::_impl_.groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryGroupsResponse), alignof(QueryGroupsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryGroupsResponse::PlacementNew_,
                                 sizeof(QueryGroupsResponse),
                                 alignof(QueryGroupsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryGroupsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryGroupsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryGroupsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryGroupsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryGroupsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryGroupsResponse>(), &QueryGroupsResponse::ByteSizeLong,
            &QueryGroupsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_._cached_size_),
        false,
    },
    &QueryGroupsResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryGroupsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryGroupsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::QueryGroupsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_.pagination_)}},
    // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_.groups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_.groups_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
    {PROTOBUF_FIELD_OFFSET(QueryGroupsResponse, _impl_.pagination_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::query::v1beta1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.QueryGroupsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.groups_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryGroupsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryGroupsResponse& this_ = static_cast<const QueryGroupsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryGroupsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryGroupsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.QueryGroupsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pagination_, this_._impl_.pagination_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.QueryGroupsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryGroupsResponse::ByteSizeLong(const MessageLite& base) {
          const QueryGroupsResponse& this_ = static_cast<const QueryGroupsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryGroupsResponse::ByteSizeLong() const {
          const QueryGroupsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.QueryGroupsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.group.v1.GroupInfo groups = 1 [json_name = "groups"];
            {
              total_size += 1UL * this_._internal_groups_size();
              for (const auto& msg : this_._internal_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pagination_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryGroupsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryGroupsResponse*>(&to_msg);
  auto& from = static_cast<const QueryGroupsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.QueryGroupsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_groups()->MergeFrom(
      from._internal_groups());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pagination_ != nullptr);
    if (_this->_impl_.pagination_ == nullptr) {
      _this->_impl_.pagination_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::query::v1beta1::PageResponse>(arena, *from._impl_.pagination_);
    } else {
      _this->_impl_.pagination_->MergeFrom(*from._impl_.pagination_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGroupsResponse::CopyFrom(const QueryGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.QueryGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryGroupsResponse::InternalSwap(QueryGroupsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.groups_.InternalSwap(&other->_impl_.groups_);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::google::protobuf::Metadata QueryGroupsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace group
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2fquery_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
