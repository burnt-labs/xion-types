// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/group/v1/types.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/group/v1/types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace group {
namespace v1 {

inline constexpr TallyResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : yes_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        abstain_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        no_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        no_with_veto_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TallyResult::TallyResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TallyResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TallyResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TallyResultDefaultTypeInternal() {}
  union {
    TallyResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TallyResultDefaultTypeInternal _TallyResult_default_instance_;

inline constexpr MemberRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weight_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MemberRequest::MemberRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MemberRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MemberRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MemberRequestDefaultTypeInternal() {}
  union {
    MemberRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MemberRequestDefaultTypeInternal _MemberRequest_default_instance_;

inline constexpr Vote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        submit_time_{nullptr},
        proposal_id_{::uint64_t{0u}},
        option_{static_cast< ::cosmos::group::v1::VoteOption >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Vote::Vote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteDefaultTypeInternal() {}
  union {
    Vote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteDefaultTypeInternal _Vote_default_instance_;

inline constexpr Proposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        proposers_{},
        messages_{},
        group_policy_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        summary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        submit_time_{nullptr},
        final_tally_result_{nullptr},
        voting_period_end_{nullptr},
        id_{::uint64_t{0u}},
        group_version_{::uint64_t{0u}},
        group_policy_version_{::uint64_t{0u}},
        status_{static_cast< ::cosmos::group::v1::ProposalStatus >(0)},
        executor_result_{static_cast< ::cosmos::group::v1::ProposalExecutorResult >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Proposal::Proposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProposalDefaultTypeInternal() {}
  union {
    Proposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProposalDefaultTypeInternal _Proposal_default_instance_;

inline constexpr Member::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weight_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        added_at_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Member::Member(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MemberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MemberDefaultTypeInternal() {}
  union {
    Member _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MemberDefaultTypeInternal _Member_default_instance_;

inline constexpr GroupPolicyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decision_policy_{nullptr},
        created_at_{nullptr},
        group_id_{::uint64_t{0u}},
        version_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GroupPolicyInfo::GroupPolicyInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GroupPolicyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupPolicyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupPolicyInfoDefaultTypeInternal() {}
  union {
    GroupPolicyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupPolicyInfoDefaultTypeInternal _GroupPolicyInfo_default_instance_;

inline constexpr GroupInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_weight_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{nullptr},
        id_{::uint64_t{0u}},
        version_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GroupInfo::GroupInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GroupInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupInfoDefaultTypeInternal() {}
  union {
    GroupInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;

inline constexpr DecisionPolicyWindows::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voting_period_{nullptr},
        min_execution_period_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DecisionPolicyWindows::DecisionPolicyWindows(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DecisionPolicyWindowsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecisionPolicyWindowsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecisionPolicyWindowsDefaultTypeInternal() {}
  union {
    DecisionPolicyWindows _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecisionPolicyWindowsDefaultTypeInternal _DecisionPolicyWindows_default_instance_;

inline constexpr ThresholdDecisionPolicy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        windows_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ThresholdDecisionPolicy::ThresholdDecisionPolicy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ThresholdDecisionPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThresholdDecisionPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThresholdDecisionPolicyDefaultTypeInternal() {}
  union {
    ThresholdDecisionPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThresholdDecisionPolicyDefaultTypeInternal _ThresholdDecisionPolicy_default_instance_;

inline constexpr PercentageDecisionPolicy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        percentage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        windows_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PercentageDecisionPolicy::PercentageDecisionPolicy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PercentageDecisionPolicyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PercentageDecisionPolicyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PercentageDecisionPolicyDefaultTypeInternal() {}
  union {
    PercentageDecisionPolicy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PercentageDecisionPolicyDefaultTypeInternal _PercentageDecisionPolicy_default_instance_;

inline constexpr GroupMember::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        member_{nullptr},
        group_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GroupMember::GroupMember(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GroupMemberDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupMemberDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupMemberDefaultTypeInternal() {}
  union {
    GroupMember _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupMemberDefaultTypeInternal _GroupMember_default_instance_;
}  // namespace v1
}  // namespace group
}  // namespace cosmos
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgroup_2fv1_2ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Member, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Member, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Member, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Member, _impl_.weight_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Member, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Member, _impl_.added_at_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MemberRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MemberRequest, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MemberRequest, _impl_.weight_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::MemberRequest, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::ThresholdDecisionPolicy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::ThresholdDecisionPolicy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::ThresholdDecisionPolicy, _impl_.threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::ThresholdDecisionPolicy, _impl_.windows_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::PercentageDecisionPolicy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::PercentageDecisionPolicy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::PercentageDecisionPolicy, _impl_.percentage_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::PercentageDecisionPolicy, _impl_.windows_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::DecisionPolicyWindows, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::DecisionPolicyWindows, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::DecisionPolicyWindows, _impl_.voting_period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::DecisionPolicyWindows, _impl_.min_execution_period_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_.total_weight_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupInfo, _impl_.created_at_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupMember, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupMember, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupMember, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupMember, _impl_.member_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.group_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.decision_policy_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::GroupPolicyInfo, _impl_.created_at_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.group_policy_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.proposers_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.submit_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.group_version_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.group_policy_version_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.final_tally_result_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.voting_period_end_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.executor_result_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.messages_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Proposal, _impl_.summary_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::TallyResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::TallyResult, _impl_.yes_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::TallyResult, _impl_.abstain_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::TallyResult, _impl_.no_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::TallyResult, _impl_.no_with_veto_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _impl_.voter_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::group::v1::Vote, _impl_.submit_time_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::cosmos::group::v1::Member)},
        {16, -1, -1, sizeof(::cosmos::group::v1::MemberRequest)},
        {27, 37, -1, sizeof(::cosmos::group::v1::ThresholdDecisionPolicy)},
        {39, 49, -1, sizeof(::cosmos::group::v1::PercentageDecisionPolicy)},
        {51, 61, -1, sizeof(::cosmos::group::v1::DecisionPolicyWindows)},
        {63, 77, -1, sizeof(::cosmos::group::v1::GroupInfo)},
        {83, 93, -1, sizeof(::cosmos::group::v1::GroupMember)},
        {95, 110, -1, sizeof(::cosmos::group::v1::GroupPolicyInfo)},
        {117, 139, -1, sizeof(::cosmos::group::v1::Proposal)},
        {153, -1, -1, sizeof(::cosmos::group::v1::TallyResult)},
        {165, 178, -1, sizeof(::cosmos::group::v1::Vote)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::group::v1::_Member_default_instance_._instance,
    &::cosmos::group::v1::_MemberRequest_default_instance_._instance,
    &::cosmos::group::v1::_ThresholdDecisionPolicy_default_instance_._instance,
    &::cosmos::group::v1::_PercentageDecisionPolicy_default_instance_._instance,
    &::cosmos::group::v1::_DecisionPolicyWindows_default_instance_._instance,
    &::cosmos::group::v1::_GroupInfo_default_instance_._instance,
    &::cosmos::group::v1::_GroupMember_default_instance_._instance,
    &::cosmos::group::v1::_GroupPolicyInfo_default_instance_._instance,
    &::cosmos::group::v1::_Proposal_default_instance_._instance,
    &::cosmos::group::v1::_TallyResult_default_instance_._instance,
    &::cosmos::group::v1::_Vote_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgroup_2fv1_2ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033cosmos/group/v1/types.proto\022\017cosmos.gr"
    "oup.v1\032\024gogoproto/gogo.proto\032\036google/pro"
    "tobuf/duration.proto\032\037google/protobuf/ti"
    "mestamp.proto\032\031cosmos_proto/cosmos.proto"
    "\032\031google/protobuf/any.proto\032\021amino/amino"
    ".proto\"\266\001\n\006Member\0222\n\007address\030\001 \001(\tB\030\322\264-\024"
    "cosmos.AddressStringR\007address\022\026\n\006weight\030"
    "\002 \001(\tR\006weight\022\032\n\010metadata\030\003 \001(\tR\010metadat"
    "a\022D\n\010added_at\030\004 \001(\0132\032.google.protobuf.Ti"
    "mestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\007addedAt\"w\n\rMembe"
    "rRequest\0222\n\007address\030\001 \001(\tB\030\322\264-\024cosmos.Ad"
    "dressStringR\007address\022\026\n\006weight\030\002 \001(\tR\006we"
    "ight\022\032\n\010metadata\030\003 \001(\tR\010metadata\"\304\001\n\027Thr"
    "esholdDecisionPolicy\022\034\n\tthreshold\030\001 \001(\tR"
    "\tthreshold\022@\n\007windows\030\002 \001(\0132&.cosmos.gro"
    "up.v1.DecisionPolicyWindowsR\007windows:I\312\264"
    "-\036cosmos.group.v1.DecisionPolicy\212\347\260*\"cos"
    "mos-sdk/ThresholdDecisionPolicy\"\310\001\n\030Perc"
    "entageDecisionPolicy\022\036\n\npercentage\030\001 \001(\t"
    "R\npercentage\022@\n\007windows\030\002 \001(\0132&.cosmos.g"
    "roup.v1.DecisionPolicyWindowsR\007windows:J"
    "\312\264-\036cosmos.group.v1.DecisionPolicy\212\347\260*#c"
    "osmos-sdk/PercentageDecisionPolicy\"\302\001\n\025D"
    "ecisionPolicyWindows\022M\n\rvoting_period\030\001 "
    "\001(\0132\031.google.protobuf.DurationB\r\310\336\037\000\230\337\037\001"
    "\250\347\260*\001R\014votingPeriod\022Z\n\024min_execution_per"
    "iod\030\002 \001(\0132\031.google.protobuf.DurationB\r\310\336"
    "\037\000\230\337\037\001\250\347\260*\001R\022minExecutionPeriod\"\356\001\n\tGrou"
    "pInfo\022\016\n\002id\030\001 \001(\004R\002id\022.\n\005admin\030\002 \001(\tB\030\322\264"
    "-\024cosmos.AddressStringR\005admin\022\032\n\010metadat"
    "a\030\003 \001(\tR\010metadata\022\030\n\007version\030\004 \001(\004R\007vers"
    "ion\022!\n\014total_weight\030\005 \001(\tR\013totalWeight\022H"
    "\n\ncreated_at\030\006 \001(\0132\032.google.protobuf.Tim"
    "estampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\tcreatedAt\"Y\n\013Grou"
    "pMember\022\031\n\010group_id\030\001 \001(\004R\007groupId\022/\n\006me"
    "mber\030\002 \001(\0132\027.cosmos.group.v1.MemberR\006mem"
    "ber\"\375\002\n\017GroupPolicyInfo\0222\n\007address\030\001 \001(\t"
    "B\030\322\264-\024cosmos.AddressStringR\007address\022\031\n\010g"
    "roup_id\030\002 \001(\004R\007groupId\022.\n\005admin\030\003 \001(\tB\030\322"
    "\264-\024cosmos.AddressStringR\005admin\022\032\n\010metada"
    "ta\030\004 \001(\tR\010metadata\022\030\n\007version\030\005 \001(\004R\007ver"
    "sion\022a\n\017decision_policy\030\006 \001(\0132\024.google.p"
    "rotobuf.AnyB\"\312\264-\036cosmos.group.v1.Decisio"
    "nPolicyR\016decisionPolicy\022H\n\ncreated_at\030\007 "
    "\001(\0132\032.google.protobuf.TimestampB\r\310\336\037\000\220\337\037"
    "\001\250\347\260*\001R\tcreatedAt:\010\210\240\037\000\350\240\037\001\"\250\006\n\010Proposal"
    "\022\016\n\002id\030\001 \001(\004R\002id\022J\n\024group_policy_address"
    "\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\022groupP"
    "olicyAddress\022\032\n\010metadata\030\003 \001(\tR\010metadata"
    "\0226\n\tproposers\030\004 \003(\tB\030\322\264-\024cosmos.AddressS"
    "tringR\tproposers\022J\n\013submit_time\030\005 \001(\0132\032."
    "google.protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001"
    "R\nsubmitTime\022#\n\rgroup_version\030\006 \001(\004R\014gro"
    "upVersion\0220\n\024group_policy_version\030\007 \001(\004R"
    "\022groupPolicyVersion\0227\n\006status\030\010 \001(\0162\037.co"
    "smos.group.v1.ProposalStatusR\006status\022U\n\022"
    "final_tally_result\030\t \001(\0132\034.cosmos.group."
    "v1.TallyResultB\t\310\336\037\000\250\347\260*\001R\020finalTallyRes"
    "ult\022U\n\021voting_period_end\030\n \001(\0132\032.google."
    "protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\017votin"
    "gPeriodEnd\022P\n\017executor_result\030\013 \001(\0162\'.co"
    "smos.group.v1.ProposalExecutorResultR\016ex"
    "ecutorResult\0220\n\010messages\030\014 \003(\0132\024.google."
    "protobuf.AnyR\010messages\022)\n\005title\030\r \001(\tB\023\332"
    "\264-\017cosmos-sdk 0.47R\005title\022-\n\007summary\030\016 \001"
    "(\tB\023\332\264-\017cosmos-sdk 0.47R\007summary:\004\210\240\037\000\"\235"
    "\001\n\013TallyResult\022\033\n\tyes_count\030\001 \001(\tR\010yesCo"
    "unt\022#\n\rabstain_count\030\002 \001(\tR\014abstainCount"
    "\022\031\n\010no_count\030\003 \001(\tR\007noCount\022+\n\022no_with_v"
    "eto_count\030\004 \001(\tR\017noWithVetoCount:\004\210\240\037\000\"\364"
    "\001\n\004Vote\022\037\n\013proposal_id\030\001 \001(\004R\nproposalId"
    "\022.\n\005voter\030\002 \001(\tB\030\322\264-\024cosmos.AddressStrin"
    "gR\005voter\0223\n\006option\030\003 \001(\0162\033.cosmos.group."
    "v1.VoteOptionR\006option\022\032\n\010metadata\030\004 \001(\tR"
    "\010metadata\022J\n\013submit_time\030\005 \001(\0132\032.google."
    "protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\nsubmi"
    "tTime*\217\001\n\nVoteOption\022\033\n\027VOTE_OPTION_UNSP"
    "ECIFIED\020\000\022\023\n\017VOTE_OPTION_YES\020\001\022\027\n\023VOTE_O"
    "PTION_ABSTAIN\020\002\022\022\n\016VOTE_OPTION_NO\020\003\022\034\n\030V"
    "OTE_OPTION_NO_WITH_VETO\020\004\032\004\210\243\036\000*\316\001\n\016Prop"
    "osalStatus\022\037\n\033PROPOSAL_STATUS_UNSPECIFIE"
    "D\020\000\022\035\n\031PROPOSAL_STATUS_SUBMITTED\020\001\022\034\n\030PR"
    "OPOSAL_STATUS_ACCEPTED\020\002\022\034\n\030PROPOSAL_STA"
    "TUS_REJECTED\020\003\022\033\n\027PROPOSAL_STATUS_ABORTE"
    "D\020\004\022\035\n\031PROPOSAL_STATUS_WITHDRAWN\020\005\032\004\210\243\036\000"
    "*\272\001\n\026ProposalExecutorResult\022(\n$PROPOSAL_"
    "EXECUTOR_RESULT_UNSPECIFIED\020\000\022$\n PROPOSA"
    "L_EXECUTOR_RESULT_NOT_RUN\020\001\022$\n PROPOSAL_"
    "EXECUTOR_RESULT_SUCCESS\020\002\022$\n PROPOSAL_EX"
    "ECUTOR_RESULT_FAILURE\020\003\032\004\210\243\036\000B&Z$github."
    "com/cosmos/cosmos-sdk/x/groupb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto_deps[6] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto = {
    false,
    false,
    3637,
    descriptor_table_protodef_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    "cosmos/group/v1/types.proto",
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto_once,
    descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto_deps,
    6,
    11,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgroup_2fv1_2ftypes_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    file_level_service_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto,
};
namespace cosmos {
namespace group {
namespace v1 {
const ::google::protobuf::EnumDescriptor* VoteOption_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t VoteOption_internal_data_[] = {
    327680u, 0u, };
bool VoteOption_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ProposalStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ProposalStatus_internal_data_[] = {
    393216u, 0u, };
bool ProposalStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* ProposalExecutorResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto);
  return file_level_enum_descriptors_cosmos_2fgroup_2fv1_2ftypes_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ProposalExecutorResult_internal_data_[] = {
    262144u, 0u, };
bool ProposalExecutorResult_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class Member::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Member>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Member, _impl_._has_bits_);
};

void Member::clear_added_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.added_at_ != nullptr) _impl_.added_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Member::Member(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.Member)
}
inline PROTOBUF_NDEBUG_INLINE Member::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::Member& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        weight_(arena, from.weight_),
        metadata_(arena, from.metadata_) {}

Member::Member(
    ::google::protobuf::Arena* arena,
    const Member& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Member* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.added_at_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.added_at_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.Member)
}
inline PROTOBUF_NDEBUG_INLINE Member::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena),
        weight_(arena),
        metadata_(arena) {}

inline void Member::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.added_at_ = {};
}
Member::~Member() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.Member)
  SharedDtor(*this);
}
inline void Member::SharedDtor(MessageLite& self) {
  Member& this_ = static_cast<Member&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.weight_.Destroy();
  this_._impl_.metadata_.Destroy();
  delete this_._impl_.added_at_;
  this_._impl_.~Impl_();
}

inline void* Member::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Member(arena);
}
constexpr auto Member::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Member),
                                            alignof(Member));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Member::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Member_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Member::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Member>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Member::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Member>(), &Member::ByteSizeLong,
            &Member::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Member, _impl_._cached_size_),
        false,
    },
    &Member::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Member::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 52, 2> Member::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Member, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::Member>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp added_at = 4 [json_name = "addedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Member, _impl_.added_at_)}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Member, _impl_.address_)}},
    // string weight = 2 [json_name = "weight"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Member, _impl_.weight_)}},
    // string metadata = 3 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Member, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Member, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string weight = 2 [json_name = "weight"];
    {PROTOBUF_FIELD_OFFSET(Member, _impl_.weight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metadata = 3 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Member, _impl_.metadata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp added_at = 4 [json_name = "addedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Member, _impl_.added_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\26\7\6\10\0\0\0\0"
    "cosmos.group.v1.Member"
    "address"
    "weight"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void Member::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.Member)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.weight_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.added_at_ != nullptr);
    _impl_.added_at_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Member::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Member& this_ = static_cast<const Member&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Member::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Member& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.Member)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Member.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string weight = 2 [json_name = "weight"];
          if (!this_._internal_weight().empty()) {
            const std::string& _s = this_._internal_weight();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Member.weight");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string metadata = 3 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Member.metadata");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp added_at = 4 [json_name = "addedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.added_at_, this_._impl_.added_at_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.Member)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Member::ByteSizeLong(const MessageLite& base) {
          const Member& this_ = static_cast<const Member&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Member::ByteSizeLong() const {
          const Member& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.Member)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // string weight = 2 [json_name = "weight"];
            if (!this_._internal_weight().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weight());
            }
            // string metadata = 3 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
          }
           {
            // .google.protobuf.Timestamp added_at = 4 [json_name = "addedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.added_at_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Member::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Member*>(&to_msg);
  auto& from = static_cast<const Member&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.Member)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_weight().empty()) {
    _this->_internal_set_weight(from._internal_weight());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.added_at_ != nullptr);
    if (_this->_impl_.added_at_ == nullptr) {
      _this->_impl_.added_at_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.added_at_);
    } else {
      _this->_impl_.added_at_->MergeFrom(*from._impl_.added_at_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Member::CopyFrom(const Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Member::InternalSwap(Member* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weight_, &other->_impl_.weight_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  swap(_impl_.added_at_, other->_impl_.added_at_);
}

::google::protobuf::Metadata Member::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MemberRequest::_Internal {
 public:
};

MemberRequest::MemberRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.MemberRequest)
}
inline PROTOBUF_NDEBUG_INLINE MemberRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::MemberRequest& from_msg)
      : address_(arena, from.address_),
        weight_(arena, from.weight_),
        metadata_(arena, from.metadata_),
        _cached_size_{0} {}

MemberRequest::MemberRequest(
    ::google::protobuf::Arena* arena,
    const MemberRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MemberRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.MemberRequest)
}
inline PROTOBUF_NDEBUG_INLINE MemberRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        weight_(arena),
        metadata_(arena),
        _cached_size_{0} {}

inline void MemberRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MemberRequest::~MemberRequest() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.MemberRequest)
  SharedDtor(*this);
}
inline void MemberRequest::SharedDtor(MessageLite& self) {
  MemberRequest& this_ = static_cast<MemberRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.weight_.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MemberRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MemberRequest(arena);
}
constexpr auto MemberRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MemberRequest),
                                            alignof(MemberRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MemberRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MemberRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MemberRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MemberRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MemberRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MemberRequest>(), &MemberRequest::ByteSizeLong,
            &MemberRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_._cached_size_),
        false,
    },
    &MemberRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MemberRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2> MemberRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::MemberRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_.address_)}},
    // string weight = 2 [json_name = "weight"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_.weight_)}},
    // string metadata = 3 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string weight = 2 [json_name = "weight"];
    {PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_.weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metadata = 3 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(MemberRequest, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\7\6\10\0\0\0\0"
    "cosmos.group.v1.MemberRequest"
    "address"
    "weight"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void MemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.MemberRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.weight_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MemberRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MemberRequest& this_ = static_cast<const MemberRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MemberRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MemberRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.MemberRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MemberRequest.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string weight = 2 [json_name = "weight"];
          if (!this_._internal_weight().empty()) {
            const std::string& _s = this_._internal_weight();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MemberRequest.weight");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string metadata = 3 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.MemberRequest.metadata");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.MemberRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MemberRequest::ByteSizeLong(const MessageLite& base) {
          const MemberRequest& this_ = static_cast<const MemberRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MemberRequest::ByteSizeLong() const {
          const MemberRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.MemberRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // string weight = 2 [json_name = "weight"];
            if (!this_._internal_weight().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weight());
            }
            // string metadata = 3 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MemberRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MemberRequest*>(&to_msg);
  auto& from = static_cast<const MemberRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.MemberRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_weight().empty()) {
    _this->_internal_set_weight(from._internal_weight());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MemberRequest::CopyFrom(const MemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.MemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MemberRequest::InternalSwap(MemberRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weight_, &other->_impl_.weight_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
}

::google::protobuf::Metadata MemberRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ThresholdDecisionPolicy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ThresholdDecisionPolicy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_._has_bits_);
};

ThresholdDecisionPolicy::ThresholdDecisionPolicy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.ThresholdDecisionPolicy)
}
inline PROTOBUF_NDEBUG_INLINE ThresholdDecisionPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::ThresholdDecisionPolicy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        threshold_(arena, from.threshold_) {}

ThresholdDecisionPolicy::ThresholdDecisionPolicy(
    ::google::protobuf::Arena* arena,
    const ThresholdDecisionPolicy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ThresholdDecisionPolicy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.windows_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::DecisionPolicyWindows>(
                              arena, *from._impl_.windows_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.ThresholdDecisionPolicy)
}
inline PROTOBUF_NDEBUG_INLINE ThresholdDecisionPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        threshold_(arena) {}

inline void ThresholdDecisionPolicy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.windows_ = {};
}
ThresholdDecisionPolicy::~ThresholdDecisionPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.ThresholdDecisionPolicy)
  SharedDtor(*this);
}
inline void ThresholdDecisionPolicy::SharedDtor(MessageLite& self) {
  ThresholdDecisionPolicy& this_ = static_cast<ThresholdDecisionPolicy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.threshold_.Destroy();
  delete this_._impl_.windows_;
  this_._impl_.~Impl_();
}

inline void* ThresholdDecisionPolicy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ThresholdDecisionPolicy(arena);
}
constexpr auto ThresholdDecisionPolicy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ThresholdDecisionPolicy),
                                            alignof(ThresholdDecisionPolicy));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ThresholdDecisionPolicy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ThresholdDecisionPolicy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ThresholdDecisionPolicy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ThresholdDecisionPolicy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ThresholdDecisionPolicy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ThresholdDecisionPolicy>(), &ThresholdDecisionPolicy::ByteSizeLong,
            &ThresholdDecisionPolicy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_._cached_size_),
        false,
    },
    &ThresholdDecisionPolicy::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ThresholdDecisionPolicy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> ThresholdDecisionPolicy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::ThresholdDecisionPolicy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_.windows_)}},
    // string threshold = 1 [json_name = "threshold"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_.threshold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string threshold = 1 [json_name = "threshold"];
    {PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_.threshold_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
    {PROTOBUF_FIELD_OFFSET(ThresholdDecisionPolicy, _impl_.windows_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::DecisionPolicyWindows>()},
  }}, {{
    "\47\11\0\0\0\0\0\0"
    "cosmos.group.v1.ThresholdDecisionPolicy"
    "threshold"
  }},
};

PROTOBUF_NOINLINE void ThresholdDecisionPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.ThresholdDecisionPolicy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.threshold_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.windows_ != nullptr);
    _impl_.windows_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ThresholdDecisionPolicy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ThresholdDecisionPolicy& this_ = static_cast<const ThresholdDecisionPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ThresholdDecisionPolicy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ThresholdDecisionPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.ThresholdDecisionPolicy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string threshold = 1 [json_name = "threshold"];
          if (!this_._internal_threshold().empty()) {
            const std::string& _s = this_._internal_threshold();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.ThresholdDecisionPolicy.threshold");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.windows_, this_._impl_.windows_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.ThresholdDecisionPolicy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ThresholdDecisionPolicy::ByteSizeLong(const MessageLite& base) {
          const ThresholdDecisionPolicy& this_ = static_cast<const ThresholdDecisionPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ThresholdDecisionPolicy::ByteSizeLong() const {
          const ThresholdDecisionPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.ThresholdDecisionPolicy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string threshold = 1 [json_name = "threshold"];
            if (!this_._internal_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_threshold());
            }
          }
           {
            // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.windows_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ThresholdDecisionPolicy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ThresholdDecisionPolicy*>(&to_msg);
  auto& from = static_cast<const ThresholdDecisionPolicy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.ThresholdDecisionPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_threshold().empty()) {
    _this->_internal_set_threshold(from._internal_threshold());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.windows_ != nullptr);
    if (_this->_impl_.windows_ == nullptr) {
      _this->_impl_.windows_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::DecisionPolicyWindows>(arena, *from._impl_.windows_);
    } else {
      _this->_impl_.windows_->MergeFrom(*from._impl_.windows_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ThresholdDecisionPolicy::CopyFrom(const ThresholdDecisionPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.ThresholdDecisionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ThresholdDecisionPolicy::InternalSwap(ThresholdDecisionPolicy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threshold_, &other->_impl_.threshold_, arena);
  swap(_impl_.windows_, other->_impl_.windows_);
}

::google::protobuf::Metadata ThresholdDecisionPolicy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PercentageDecisionPolicy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PercentageDecisionPolicy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_._has_bits_);
};

PercentageDecisionPolicy::PercentageDecisionPolicy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.PercentageDecisionPolicy)
}
inline PROTOBUF_NDEBUG_INLINE PercentageDecisionPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::PercentageDecisionPolicy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        percentage_(arena, from.percentage_) {}

PercentageDecisionPolicy::PercentageDecisionPolicy(
    ::google::protobuf::Arena* arena,
    const PercentageDecisionPolicy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PercentageDecisionPolicy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.windows_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::DecisionPolicyWindows>(
                              arena, *from._impl_.windows_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.PercentageDecisionPolicy)
}
inline PROTOBUF_NDEBUG_INLINE PercentageDecisionPolicy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        percentage_(arena) {}

inline void PercentageDecisionPolicy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.windows_ = {};
}
PercentageDecisionPolicy::~PercentageDecisionPolicy() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.PercentageDecisionPolicy)
  SharedDtor(*this);
}
inline void PercentageDecisionPolicy::SharedDtor(MessageLite& self) {
  PercentageDecisionPolicy& this_ = static_cast<PercentageDecisionPolicy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.percentage_.Destroy();
  delete this_._impl_.windows_;
  this_._impl_.~Impl_();
}

inline void* PercentageDecisionPolicy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PercentageDecisionPolicy(arena);
}
constexpr auto PercentageDecisionPolicy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PercentageDecisionPolicy),
                                            alignof(PercentageDecisionPolicy));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PercentageDecisionPolicy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PercentageDecisionPolicy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PercentageDecisionPolicy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PercentageDecisionPolicy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PercentageDecisionPolicy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PercentageDecisionPolicy>(), &PercentageDecisionPolicy::ByteSizeLong,
            &PercentageDecisionPolicy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_._cached_size_),
        false,
    },
    &PercentageDecisionPolicy::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PercentageDecisionPolicy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 59, 2> PercentageDecisionPolicy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::PercentageDecisionPolicy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_.windows_)}},
    // string percentage = 1 [json_name = "percentage"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_.percentage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string percentage = 1 [json_name = "percentage"];
    {PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_.percentage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
    {PROTOBUF_FIELD_OFFSET(PercentageDecisionPolicy, _impl_.windows_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::DecisionPolicyWindows>()},
  }}, {{
    "\50\12\0\0\0\0\0\0"
    "cosmos.group.v1.PercentageDecisionPolicy"
    "percentage"
  }},
};

PROTOBUF_NOINLINE void PercentageDecisionPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.PercentageDecisionPolicy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.percentage_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.windows_ != nullptr);
    _impl_.windows_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PercentageDecisionPolicy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PercentageDecisionPolicy& this_ = static_cast<const PercentageDecisionPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PercentageDecisionPolicy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PercentageDecisionPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.PercentageDecisionPolicy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string percentage = 1 [json_name = "percentage"];
          if (!this_._internal_percentage().empty()) {
            const std::string& _s = this_._internal_percentage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.PercentageDecisionPolicy.percentage");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.windows_, this_._impl_.windows_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.PercentageDecisionPolicy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PercentageDecisionPolicy::ByteSizeLong(const MessageLite& base) {
          const PercentageDecisionPolicy& this_ = static_cast<const PercentageDecisionPolicy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PercentageDecisionPolicy::ByteSizeLong() const {
          const PercentageDecisionPolicy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.PercentageDecisionPolicy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string percentage = 1 [json_name = "percentage"];
            if (!this_._internal_percentage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_percentage());
            }
          }
           {
            // .cosmos.group.v1.DecisionPolicyWindows windows = 2 [json_name = "windows"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.windows_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PercentageDecisionPolicy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PercentageDecisionPolicy*>(&to_msg);
  auto& from = static_cast<const PercentageDecisionPolicy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.PercentageDecisionPolicy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_percentage().empty()) {
    _this->_internal_set_percentage(from._internal_percentage());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.windows_ != nullptr);
    if (_this->_impl_.windows_ == nullptr) {
      _this->_impl_.windows_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::DecisionPolicyWindows>(arena, *from._impl_.windows_);
    } else {
      _this->_impl_.windows_->MergeFrom(*from._impl_.windows_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PercentageDecisionPolicy::CopyFrom(const PercentageDecisionPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.PercentageDecisionPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PercentageDecisionPolicy::InternalSwap(PercentageDecisionPolicy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.percentage_, &other->_impl_.percentage_, arena);
  swap(_impl_.windows_, other->_impl_.windows_);
}

::google::protobuf::Metadata PercentageDecisionPolicy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DecisionPolicyWindows::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DecisionPolicyWindows>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_._has_bits_);
};

void DecisionPolicyWindows::clear_voting_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_period_ != nullptr) _impl_.voting_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DecisionPolicyWindows::clear_min_execution_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_execution_period_ != nullptr) _impl_.min_execution_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DecisionPolicyWindows::DecisionPolicyWindows(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.DecisionPolicyWindows)
}
inline PROTOBUF_NDEBUG_INLINE DecisionPolicyWindows::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::DecisionPolicyWindows& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DecisionPolicyWindows::DecisionPolicyWindows(
    ::google::protobuf::Arena* arena,
    const DecisionPolicyWindows& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DecisionPolicyWindows* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.voting_period_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.voting_period_)
                        : nullptr;
  _impl_.min_execution_period_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.min_execution_period_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.DecisionPolicyWindows)
}
inline PROTOBUF_NDEBUG_INLINE DecisionPolicyWindows::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DecisionPolicyWindows::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, voting_period_),
           0,
           offsetof(Impl_, min_execution_period_) -
               offsetof(Impl_, voting_period_) +
               sizeof(Impl_::min_execution_period_));
}
DecisionPolicyWindows::~DecisionPolicyWindows() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.DecisionPolicyWindows)
  SharedDtor(*this);
}
inline void DecisionPolicyWindows::SharedDtor(MessageLite& self) {
  DecisionPolicyWindows& this_ = static_cast<DecisionPolicyWindows&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.voting_period_;
  delete this_._impl_.min_execution_period_;
  this_._impl_.~Impl_();
}

inline void* DecisionPolicyWindows::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DecisionPolicyWindows(arena);
}
constexpr auto DecisionPolicyWindows::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DecisionPolicyWindows),
                                            alignof(DecisionPolicyWindows));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DecisionPolicyWindows::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DecisionPolicyWindows_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DecisionPolicyWindows::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DecisionPolicyWindows>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DecisionPolicyWindows::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DecisionPolicyWindows>(), &DecisionPolicyWindows::ByteSizeLong,
            &DecisionPolicyWindows::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_._cached_size_),
        false,
    },
    &DecisionPolicyWindows::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DecisionPolicyWindows::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DecisionPolicyWindows::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::DecisionPolicyWindows>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_.min_execution_period_)}},
    // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_.voting_period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_.voting_period_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_.min_execution_period_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DecisionPolicyWindows::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.DecisionPolicyWindows)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.voting_period_ != nullptr);
      _impl_.voting_period_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.min_execution_period_ != nullptr);
      _impl_.min_execution_period_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DecisionPolicyWindows::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DecisionPolicyWindows& this_ = static_cast<const DecisionPolicyWindows&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DecisionPolicyWindows::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DecisionPolicyWindows& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.DecisionPolicyWindows)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.voting_period_, this_._impl_.voting_period_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.min_execution_period_, this_._impl_.min_execution_period_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.DecisionPolicyWindows)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DecisionPolicyWindows::ByteSizeLong(const MessageLite& base) {
          const DecisionPolicyWindows& this_ = static_cast<const DecisionPolicyWindows&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DecisionPolicyWindows::ByteSizeLong() const {
          const DecisionPolicyWindows& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.DecisionPolicyWindows)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_period_);
            }
            // .google.protobuf.Duration min_execution_period = 2 [json_name = "minExecutionPeriod", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.min_execution_period_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DecisionPolicyWindows::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DecisionPolicyWindows*>(&to_msg);
  auto& from = static_cast<const DecisionPolicyWindows&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.DecisionPolicyWindows)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.voting_period_ != nullptr);
      if (_this->_impl_.voting_period_ == nullptr) {
        _this->_impl_.voting_period_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.voting_period_);
      } else {
        _this->_impl_.voting_period_->MergeFrom(*from._impl_.voting_period_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.min_execution_period_ != nullptr);
      if (_this->_impl_.min_execution_period_ == nullptr) {
        _this->_impl_.min_execution_period_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.min_execution_period_);
      } else {
        _this->_impl_.min_execution_period_->MergeFrom(*from._impl_.min_execution_period_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DecisionPolicyWindows::CopyFrom(const DecisionPolicyWindows& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.DecisionPolicyWindows)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DecisionPolicyWindows::InternalSwap(DecisionPolicyWindows* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_.min_execution_period_)
      + sizeof(DecisionPolicyWindows::_impl_.min_execution_period_)
      - PROTOBUF_FIELD_OFFSET(DecisionPolicyWindows, _impl_.voting_period_)>(
          reinterpret_cast<char*>(&_impl_.voting_period_),
          reinterpret_cast<char*>(&other->_impl_.voting_period_));
}

::google::protobuf::Metadata DecisionPolicyWindows::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GroupInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GroupInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_._has_bits_);
};

void GroupInfo::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GroupInfo::GroupInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.GroupInfo)
}
inline PROTOBUF_NDEBUG_INLINE GroupInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::GroupInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        admin_(arena, from.admin_),
        metadata_(arena, from.metadata_),
        total_weight_(arena, from.total_weight_) {}

GroupInfo::GroupInfo(
    ::google::protobuf::Arena* arena,
    const GroupInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GroupInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, version_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::version_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.GroupInfo)
}
inline PROTOBUF_NDEBUG_INLINE GroupInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        admin_(arena),
        metadata_(arena),
        total_weight_(arena) {}

inline void GroupInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::version_));
}
GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.GroupInfo)
  SharedDtor(*this);
}
inline void GroupInfo::SharedDtor(MessageLite& self) {
  GroupInfo& this_ = static_cast<GroupInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.admin_.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.total_weight_.Destroy();
  delete this_._impl_.created_at_;
  this_._impl_.~Impl_();
}

inline void* GroupInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GroupInfo(arena);
}
constexpr auto GroupInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GroupInfo),
                                            alignof(GroupInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GroupInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GroupInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GroupInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GroupInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GroupInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GroupInfo>(), &GroupInfo::ByteSizeLong,
            &GroupInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_._cached_size_),
        false,
    },
    &GroupInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GroupInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 59, 2> GroupInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GroupInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.id_)}},
    // string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.admin_)}},
    // string metadata = 3 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.metadata_)}},
    // uint64 version = 4 [json_name = "version"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GroupInfo, _impl_.version_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.version_)}},
    // string total_weight = 5 [json_name = "totalWeight"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.total_weight_)}},
    // .google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.created_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metadata = 3 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.metadata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 version = 4 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string total_weight = 5 [json_name = "totalWeight"];
    {PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.total_weight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\31\0\5\10\0\14\0\0"
    "cosmos.group.v1.GroupInfo"
    "admin"
    "metadata"
    "total_weight"
  }},
};

PROTOBUF_NOINLINE void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.GroupInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.total_weight_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.created_at_ != nullptr);
    _impl_.created_at_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.version_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GroupInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GroupInfo& this_ = static_cast<const GroupInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GroupInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GroupInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.GroupInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 id = 1 [json_name = "id"];
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.GroupInfo.admin");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string metadata = 3 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.GroupInfo.metadata");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 version = 4 [json_name = "version"];
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_version(), target);
          }

          // string total_weight = 5 [json_name = "totalWeight"];
          if (!this_._internal_total_weight().empty()) {
            const std::string& _s = this_._internal_total_weight();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.GroupInfo.total_weight");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.GroupInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GroupInfo::ByteSizeLong(const MessageLite& base) {
          const GroupInfo& this_ = static_cast<const GroupInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GroupInfo::ByteSizeLong() const {
          const GroupInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.GroupInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
            // string metadata = 3 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
            // string total_weight = 5 [json_name = "totalWeight"];
            if (!this_._internal_total_weight().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_total_weight());
            }
          }
           {
            // .google.protobuf.Timestamp created_at = 6 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
            }
          }
           {
            // uint64 id = 1 [json_name = "id"];
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // uint64 version = 4 [json_name = "version"];
            if (this_._internal_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GroupInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GroupInfo*>(&to_msg);
  auto& from = static_cast<const GroupInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.GroupInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (!from._internal_total_weight().empty()) {
    _this->_internal_set_total_weight(from._internal_total_weight());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.created_at_ != nullptr);
    if (_this->_impl_.created_at_ == nullptr) {
      _this->_impl_.created_at_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_);
    } else {
      _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GroupInfo::InternalSwap(GroupInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.total_weight_, &other->_impl_.total_weight_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.version_)
      + sizeof(GroupInfo::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(GroupInfo, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata GroupInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GroupMember::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GroupMember>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GroupMember, _impl_._has_bits_);
};

GroupMember::GroupMember(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.GroupMember)
}
inline PROTOBUF_NDEBUG_INLINE GroupMember::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::GroupMember& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GroupMember::GroupMember(
    ::google::protobuf::Arena* arena,
    const GroupMember& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GroupMember* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.member_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::Member>(
                              arena, *from._impl_.member_)
                        : nullptr;
  _impl_.group_id_ = from._impl_.group_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.GroupMember)
}
inline PROTOBUF_NDEBUG_INLINE GroupMember::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GroupMember::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, member_),
           0,
           offsetof(Impl_, group_id_) -
               offsetof(Impl_, member_) +
               sizeof(Impl_::group_id_));
}
GroupMember::~GroupMember() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.GroupMember)
  SharedDtor(*this);
}
inline void GroupMember::SharedDtor(MessageLite& self) {
  GroupMember& this_ = static_cast<GroupMember&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.member_;
  this_._impl_.~Impl_();
}

inline void* GroupMember::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GroupMember(arena);
}
constexpr auto GroupMember::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GroupMember),
                                            alignof(GroupMember));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GroupMember::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GroupMember_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GroupMember::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GroupMember>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GroupMember::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GroupMember>(), &GroupMember::ByteSizeLong,
            &GroupMember::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GroupMember, _impl_._cached_size_),
        false,
    },
    &GroupMember::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GroupMember::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> GroupMember::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupMember, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupMember>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.group.v1.Member member = 2 [json_name = "member"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.member_)}},
    // uint64 group_id = 1 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GroupMember, _impl_.group_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 group_id = 1 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.group_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.group.v1.Member member = 2 [json_name = "member"];
    {PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.member_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::Member>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GroupMember::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.GroupMember)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.member_ != nullptr);
    _impl_.member_->Clear();
  }
  _impl_.group_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GroupMember::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GroupMember& this_ = static_cast<const GroupMember&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GroupMember::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GroupMember& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.GroupMember)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 group_id = 1 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_group_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.group.v1.Member member = 2 [json_name = "member"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.member_, this_._impl_.member_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.GroupMember)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GroupMember::ByteSizeLong(const MessageLite& base) {
          const GroupMember& this_ = static_cast<const GroupMember&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GroupMember::ByteSizeLong() const {
          const GroupMember& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.GroupMember)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cosmos.group.v1.Member member = 2 [json_name = "member"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.member_);
            }
          }
           {
            // uint64 group_id = 1 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GroupMember::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GroupMember*>(&to_msg);
  auto& from = static_cast<const GroupMember&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.GroupMember)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.member_ != nullptr);
    if (_this->_impl_.member_ == nullptr) {
      _this->_impl_.member_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::Member>(arena, *from._impl_.member_);
    } else {
      _this->_impl_.member_->MergeFrom(*from._impl_.member_);
    }
  }
  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupMember::CopyFrom(const GroupMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.GroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GroupMember::InternalSwap(GroupMember* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.group_id_)
      + sizeof(GroupMember::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(GroupMember, _impl_.member_)>(
          reinterpret_cast<char*>(&_impl_.member_),
          reinterpret_cast<char*>(&other->_impl_.member_));
}

::google::protobuf::Metadata GroupMember::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GroupPolicyInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GroupPolicyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_._has_bits_);
};

void GroupPolicyInfo::clear_decision_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.decision_policy_ != nullptr) _impl_.decision_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GroupPolicyInfo::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GroupPolicyInfo::GroupPolicyInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.GroupPolicyInfo)
}
inline PROTOBUF_NDEBUG_INLINE GroupPolicyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::GroupPolicyInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        admin_(arena, from.admin_),
        metadata_(arena, from.metadata_) {}

GroupPolicyInfo::GroupPolicyInfo(
    ::google::protobuf::Arena* arena,
    const GroupPolicyInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GroupPolicyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.decision_policy_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.decision_policy_)
                        : nullptr;
  _impl_.created_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_at_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, group_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, group_id_),
           offsetof(Impl_, version_) -
               offsetof(Impl_, group_id_) +
               sizeof(Impl_::version_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.GroupPolicyInfo)
}
inline PROTOBUF_NDEBUG_INLINE GroupPolicyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena),
        admin_(arena),
        metadata_(arena) {}

inline void GroupPolicyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, decision_policy_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, decision_policy_) +
               sizeof(Impl_::version_));
}
GroupPolicyInfo::~GroupPolicyInfo() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.GroupPolicyInfo)
  SharedDtor(*this);
}
inline void GroupPolicyInfo::SharedDtor(MessageLite& self) {
  GroupPolicyInfo& this_ = static_cast<GroupPolicyInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.admin_.Destroy();
  this_._impl_.metadata_.Destroy();
  delete this_._impl_.decision_policy_;
  delete this_._impl_.created_at_;
  this_._impl_.~Impl_();
}

inline void* GroupPolicyInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GroupPolicyInfo(arena);
}
constexpr auto GroupPolicyInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GroupPolicyInfo),
                                            alignof(GroupPolicyInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GroupPolicyInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GroupPolicyInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GroupPolicyInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GroupPolicyInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GroupPolicyInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GroupPolicyInfo>(), &GroupPolicyInfo::ByteSizeLong,
            &GroupPolicyInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_._cached_size_),
        false,
    },
    &GroupPolicyInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GroupPolicyInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 60, 2> GroupPolicyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::GroupPolicyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.address_)}},
    // uint64 group_id = 2 [json_name = "groupId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GroupPolicyInfo, _impl_.group_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.group_id_)}},
    // string admin = 3 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.admin_)}},
    // string metadata = 4 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.metadata_)}},
    // uint64 version = 5 [json_name = "version"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GroupPolicyInfo, _impl_.version_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.version_)}},
    // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.decision_policy_)}},
    // .google.protobuf.Timestamp created_at = 7 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.created_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 group_id = 2 [json_name = "groupId"];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.group_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string admin = 3 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metadata = 4 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.metadata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 version = 5 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.decision_policy_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp created_at = 7 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.created_at_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\37\7\0\5\10\0\0\0"
    "cosmos.group.v1.GroupPolicyInfo"
    "address"
    "admin"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void GroupPolicyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.GroupPolicyInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.admin_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.decision_policy_ != nullptr);
      _impl_.decision_policy_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
  }
  ::memset(&_impl_.group_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.group_id_)) + sizeof(_impl_.version_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GroupPolicyInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GroupPolicyInfo& this_ = static_cast<const GroupPolicyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GroupPolicyInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GroupPolicyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.GroupPolicyInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.GroupPolicyInfo.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 group_id = 2 [json_name = "groupId"];
          if (this_._internal_group_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_group_id(), target);
          }

          // string admin = 3 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.GroupPolicyInfo.admin");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string metadata = 4 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.GroupPolicyInfo.metadata");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 version = 5 [json_name = "version"];
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_version(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.decision_policy_, this_._impl_.decision_policy_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp created_at = 7 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.GroupPolicyInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GroupPolicyInfo::ByteSizeLong(const MessageLite& base) {
          const GroupPolicyInfo& this_ = static_cast<const GroupPolicyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GroupPolicyInfo::ByteSizeLong() const {
          const GroupPolicyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.GroupPolicyInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // string admin = 3 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
            // string metadata = 4 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Any decision_policy = 6 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "cosmos.group.v1.DecisionPolicy"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.decision_policy_);
            }
            // .google.protobuf.Timestamp created_at = 7 [json_name = "createdAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
            }
          }
           {
            // uint64 group_id = 2 [json_name = "groupId"];
            if (this_._internal_group_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_id());
            }
            // uint64 version = 5 [json_name = "version"];
            if (this_._internal_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GroupPolicyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GroupPolicyInfo*>(&to_msg);
  auto& from = static_cast<const GroupPolicyInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.GroupPolicyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.decision_policy_ != nullptr);
      if (_this->_impl_.decision_policy_ == nullptr) {
        _this->_impl_.decision_policy_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.decision_policy_);
      } else {
        _this->_impl_.decision_policy_->MergeFrom(*from._impl_.decision_policy_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.created_at_ != nullptr);
      if (_this->_impl_.created_at_ == nullptr) {
        _this->_impl_.created_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_);
      } else {
        _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
      }
    }
  }
  if (from._internal_group_id() != 0) {
    _this->_impl_.group_id_ = from._impl_.group_id_;
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GroupPolicyInfo::CopyFrom(const GroupPolicyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.GroupPolicyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GroupPolicyInfo::InternalSwap(GroupPolicyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.version_)
      + sizeof(GroupPolicyInfo::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(GroupPolicyInfo, _impl_.decision_policy_)>(
          reinterpret_cast<char*>(&_impl_.decision_policy_),
          reinterpret_cast<char*>(&other->_impl_.decision_policy_));
}

::google::protobuf::Metadata GroupPolicyInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Proposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Proposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Proposal, _impl_._has_bits_);
};

void Proposal::clear_submit_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.submit_time_ != nullptr) _impl_.submit_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Proposal::clear_voting_period_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_period_end_ != nullptr) _impl_.voting_period_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Proposal::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
Proposal::Proposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.Proposal)
}
inline PROTOBUF_NDEBUG_INLINE Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::Proposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        proposers_{visibility, arena, from.proposers_},
        messages_{visibility, arena, from.messages_},
        group_policy_address_(arena, from.group_policy_address_),
        metadata_(arena, from.metadata_),
        title_(arena, from.title_),
        summary_(arena, from.summary_) {}

Proposal::Proposal(
    ::google::protobuf::Arena* arena,
    const Proposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Proposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.submit_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.submit_time_)
                        : nullptr;
  _impl_.final_tally_result_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::TallyResult>(
                              arena, *from._impl_.final_tally_result_)
                        : nullptr;
  _impl_.voting_period_end_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.voting_period_end_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, executor_result_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::executor_result_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.Proposal)
}
inline PROTOBUF_NDEBUG_INLINE Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        proposers_{visibility, arena},
        messages_{visibility, arena},
        group_policy_address_(arena),
        metadata_(arena),
        title_(arena),
        summary_(arena) {}

inline void Proposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, submit_time_),
           0,
           offsetof(Impl_, executor_result_) -
               offsetof(Impl_, submit_time_) +
               sizeof(Impl_::executor_result_));
}
Proposal::~Proposal() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.Proposal)
  SharedDtor(*this);
}
inline void Proposal::SharedDtor(MessageLite& self) {
  Proposal& this_ = static_cast<Proposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.group_policy_address_.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.title_.Destroy();
  this_._impl_.summary_.Destroy();
  delete this_._impl_.submit_time_;
  delete this_._impl_.final_tally_result_;
  delete this_._impl_.voting_period_end_;
  this_._impl_.~Impl_();
}

inline void* Proposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Proposal(arena);
}
constexpr auto Proposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposers_) +
          decltype(Proposal::_impl_.proposers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.messages_) +
          decltype(Proposal::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Proposal), alignof(Proposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Proposal::PlacementNew_,
                                 sizeof(Proposal),
                                 alignof(Proposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Proposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Proposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Proposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Proposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Proposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Proposal>(), &Proposal::ByteSizeLong,
            &Proposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Proposal, _impl_._cached_size_),
        false,
    },
    &Proposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Proposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 4, 90, 2> Proposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Proposal, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::Proposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Proposal, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.id_)}},
    // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.group_policy_address_)}},
    // string metadata = 3 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.metadata_)}},
    // repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposers_)}},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_)}},
    // uint64 group_version = 6 [json_name = "groupVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Proposal, _impl_.group_version_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.group_version_)}},
    // uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Proposal, _impl_.group_policy_version_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.group_policy_version_)}},
    // .cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Proposal, _impl_.status_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_)}},
    // .cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {74, 1, 1, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_)}},
    // .google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {82, 2, 2, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_period_end_)}},
    // .cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Proposal, _impl_.executor_result_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.executor_result_)}},
    // repeated .google.protobuf.Any messages = 12 [json_name = "messages"];
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.messages_)}},
    // string title = 13 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.title_)}},
    // string summary = 14 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.summary_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.group_policy_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metadata = 3 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.metadata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposers_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 group_version = 6 [json_name = "groupVersion"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.group_version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.group_policy_version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_period_end_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.executor_result_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .google.protobuf.Any messages = 12 [json_name = "messages"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.messages_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string title = 13 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string summary = 14 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.summary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::cosmos::group::v1::TallyResult>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\30\0\24\10\11\0\0\0\0\0\0\0\0\5\7\0"
    "cosmos.group.v1.Proposal"
    "group_policy_address"
    "metadata"
    "proposers"
    "title"
    "summary"
  }},
};

PROTOBUF_NOINLINE void Proposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.Proposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proposers_.Clear();
  _impl_.messages_.Clear();
  _impl_.group_policy_address_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.submit_time_ != nullptr);
      _impl_.submit_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.final_tally_result_ != nullptr);
      _impl_.final_tally_result_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.voting_period_end_ != nullptr);
      _impl_.voting_period_end_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.executor_result_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.executor_result_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Proposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Proposal& this_ = static_cast<const Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Proposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.Proposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 id = 1 [json_name = "id"];
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_group_policy_address().empty()) {
            const std::string& _s = this_._internal_group_policy_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Proposal.group_policy_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string metadata = 3 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Proposal.metadata");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          for (int i = 0, n = this_._internal_proposers_size(); i < n; ++i) {
            const auto& s = this_._internal_proposers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Proposal.proposers");
            target = stream->WriteString(4, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.submit_time_, this_._impl_.submit_time_->GetCachedSize(), target,
                stream);
          }

          // uint64 group_version = 6 [json_name = "groupVersion"];
          if (this_._internal_group_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_group_version(), target);
          }

          // uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];
          if (this_._internal_group_policy_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_group_policy_version(), target);
          }

          // .cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_status(), target);
          }

          // .cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.final_tally_result_, this_._impl_.final_tally_result_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.voting_period_end_, this_._impl_.voting_period_end_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];
          if (this_._internal_executor_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                11, this_._internal_executor_result(), target);
          }

          // repeated .google.protobuf.Any messages = 12 [json_name = "messages"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string title = 13 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Proposal.title");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // string summary = 14 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
          if (!this_._internal_summary().empty()) {
            const std::string& _s = this_._internal_summary();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Proposal.summary");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.Proposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Proposal::ByteSizeLong(const MessageLite& base) {
          const Proposal& this_ = static_cast<const Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Proposal::ByteSizeLong() const {
          const Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.Proposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_proposers().size());
              for (int i = 0, n = this_._internal_proposers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_proposers().Get(i));
              }
            }
            // repeated .google.protobuf.Any messages = 12 [json_name = "messages"];
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string group_policy_address = 2 [json_name = "groupPolicyAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_group_policy_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_group_policy_address());
            }
            // string metadata = 3 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
            // string title = 13 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string summary = 14 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
            if (!this_._internal_summary().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_summary());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.submit_time_);
            }
            // .cosmos.group.v1.TallyResult final_tally_result = 9 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.final_tally_result_);
            }
            // .google.protobuf.Timestamp voting_period_end = 10 [json_name = "votingPeriodEnd", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_period_end_);
            }
          }
           {
            // uint64 id = 1 [json_name = "id"];
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // uint64 group_version = 6 [json_name = "groupVersion"];
            if (this_._internal_group_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_version());
            }
            // uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];
            if (this_._internal_group_policy_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_group_policy_version());
            }
            // .cosmos.group.v1.ProposalStatus status = 8 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .cosmos.group.v1.ProposalExecutorResult executor_result = 11 [json_name = "executorResult"];
            if (this_._internal_executor_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_executor_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Proposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Proposal*>(&to_msg);
  auto& from = static_cast<const Proposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.Proposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_proposers()->MergeFrom(from._internal_proposers());
  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  if (!from._internal_group_policy_address().empty()) {
    _this->_internal_set_group_policy_address(from._internal_group_policy_address());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.submit_time_ != nullptr);
      if (_this->_impl_.submit_time_ == nullptr) {
        _this->_impl_.submit_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.submit_time_);
      } else {
        _this->_impl_.submit_time_->MergeFrom(*from._impl_.submit_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.final_tally_result_ != nullptr);
      if (_this->_impl_.final_tally_result_ == nullptr) {
        _this->_impl_.final_tally_result_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::group::v1::TallyResult>(arena, *from._impl_.final_tally_result_);
      } else {
        _this->_impl_.final_tally_result_->MergeFrom(*from._impl_.final_tally_result_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.voting_period_end_ != nullptr);
      if (_this->_impl_.voting_period_end_ == nullptr) {
        _this->_impl_.voting_period_end_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.voting_period_end_);
      } else {
        _this->_impl_.voting_period_end_->MergeFrom(*from._impl_.voting_period_end_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_group_version() != 0) {
    _this->_impl_.group_version_ = from._impl_.group_version_;
  }
  if (from._internal_group_policy_version() != 0) {
    _this->_impl_.group_policy_version_ = from._impl_.group_policy_version_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_executor_result() != 0) {
    _this->_impl_.executor_result_ = from._impl_.executor_result_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Proposal::CopyFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Proposal::InternalSwap(Proposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.proposers_.InternalSwap(&other->_impl_.proposers_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_policy_address_, &other->_impl_.group_policy_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, &other->_impl_.summary_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.executor_result_)
      + sizeof(Proposal::_impl_.executor_result_)
      - PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_)>(
          reinterpret_cast<char*>(&_impl_.submit_time_),
          reinterpret_cast<char*>(&other->_impl_.submit_time_));
}

::google::protobuf::Metadata Proposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TallyResult::_Internal {
 public:
};

TallyResult::TallyResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.TallyResult)
}
inline PROTOBUF_NDEBUG_INLINE TallyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::TallyResult& from_msg)
      : yes_count_(arena, from.yes_count_),
        abstain_count_(arena, from.abstain_count_),
        no_count_(arena, from.no_count_),
        no_with_veto_count_(arena, from.no_with_veto_count_),
        _cached_size_{0} {}

TallyResult::TallyResult(
    ::google::protobuf::Arena* arena,
    const TallyResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TallyResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.TallyResult)
}
inline PROTOBUF_NDEBUG_INLINE TallyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : yes_count_(arena),
        abstain_count_(arena),
        no_count_(arena),
        no_with_veto_count_(arena),
        _cached_size_{0} {}

inline void TallyResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TallyResult::~TallyResult() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.TallyResult)
  SharedDtor(*this);
}
inline void TallyResult::SharedDtor(MessageLite& self) {
  TallyResult& this_ = static_cast<TallyResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.yes_count_.Destroy();
  this_._impl_.abstain_count_.Destroy();
  this_._impl_.no_count_.Destroy();
  this_._impl_.no_with_veto_count_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TallyResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TallyResult(arena);
}
constexpr auto TallyResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TallyResult),
                                            alignof(TallyResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TallyResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TallyResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TallyResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TallyResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TallyResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TallyResult>(), &TallyResult::ByteSizeLong,
            &TallyResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TallyResult, _impl_._cached_size_),
        false,
    },
    &TallyResult::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TallyResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 84, 2> TallyResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::TallyResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string no_with_veto_count = 4 [json_name = "noWithVetoCount"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_with_veto_count_)}},
    // string yes_count = 1 [json_name = "yesCount"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.yes_count_)}},
    // string abstain_count = 2 [json_name = "abstainCount"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.abstain_count_)}},
    // string no_count = 3 [json_name = "noCount"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string yes_count = 1 [json_name = "yesCount"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.yes_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string abstain_count = 2 [json_name = "abstainCount"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.abstain_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string no_count = 3 [json_name = "noCount"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string no_with_veto_count = 4 [json_name = "noWithVetoCount"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_with_veto_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\11\15\10\22\0\0\0"
    "cosmos.group.v1.TallyResult"
    "yes_count"
    "abstain_count"
    "no_count"
    "no_with_veto_count"
  }},
};

PROTOBUF_NOINLINE void TallyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.TallyResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.yes_count_.ClearToEmpty();
  _impl_.abstain_count_.ClearToEmpty();
  _impl_.no_count_.ClearToEmpty();
  _impl_.no_with_veto_count_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TallyResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TallyResult& this_ = static_cast<const TallyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TallyResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TallyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.TallyResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string yes_count = 1 [json_name = "yesCount"];
          if (!this_._internal_yes_count().empty()) {
            const std::string& _s = this_._internal_yes_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.TallyResult.yes_count");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string abstain_count = 2 [json_name = "abstainCount"];
          if (!this_._internal_abstain_count().empty()) {
            const std::string& _s = this_._internal_abstain_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.TallyResult.abstain_count");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string no_count = 3 [json_name = "noCount"];
          if (!this_._internal_no_count().empty()) {
            const std::string& _s = this_._internal_no_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.TallyResult.no_count");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string no_with_veto_count = 4 [json_name = "noWithVetoCount"];
          if (!this_._internal_no_with_veto_count().empty()) {
            const std::string& _s = this_._internal_no_with_veto_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.TallyResult.no_with_veto_count");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.TallyResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TallyResult::ByteSizeLong(const MessageLite& base) {
          const TallyResult& this_ = static_cast<const TallyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TallyResult::ByteSizeLong() const {
          const TallyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.TallyResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string yes_count = 1 [json_name = "yesCount"];
            if (!this_._internal_yes_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_yes_count());
            }
            // string abstain_count = 2 [json_name = "abstainCount"];
            if (!this_._internal_abstain_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_abstain_count());
            }
            // string no_count = 3 [json_name = "noCount"];
            if (!this_._internal_no_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_no_count());
            }
            // string no_with_veto_count = 4 [json_name = "noWithVetoCount"];
            if (!this_._internal_no_with_veto_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_no_with_veto_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TallyResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TallyResult*>(&to_msg);
  auto& from = static_cast<const TallyResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.TallyResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_yes_count().empty()) {
    _this->_internal_set_yes_count(from._internal_yes_count());
  }
  if (!from._internal_abstain_count().empty()) {
    _this->_internal_set_abstain_count(from._internal_abstain_count());
  }
  if (!from._internal_no_count().empty()) {
    _this->_internal_set_no_count(from._internal_no_count());
  }
  if (!from._internal_no_with_veto_count().empty()) {
    _this->_internal_set_no_with_veto_count(from._internal_no_with_veto_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TallyResult::CopyFrom(const TallyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.TallyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TallyResult::InternalSwap(TallyResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.yes_count_, &other->_impl_.yes_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.abstain_count_, &other->_impl_.abstain_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.no_count_, &other->_impl_.no_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.no_with_veto_count_, &other->_impl_.no_with_veto_count_, arena);
}

::google::protobuf::Metadata TallyResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vote::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Vote>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Vote, _impl_._has_bits_);
};

void Vote::clear_submit_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.submit_time_ != nullptr) _impl_.submit_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Vote::Vote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.group.v1.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::group::v1::Vote& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        voter_(arena, from.voter_),
        metadata_(arena, from.metadata_) {}

Vote::Vote(
    ::google::protobuf::Arena* arena,
    const Vote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Vote* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.submit_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.submit_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, proposal_id_),
           offsetof(Impl_, option_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::option_));

  // @@protoc_insertion_point(copy_constructor:cosmos.group.v1.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        voter_(arena),
        metadata_(arena) {}

inline void Vote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, submit_time_),
           0,
           offsetof(Impl_, option_) -
               offsetof(Impl_, submit_time_) +
               sizeof(Impl_::option_));
}
Vote::~Vote() {
  // @@protoc_insertion_point(destructor:cosmos.group.v1.Vote)
  SharedDtor(*this);
}
inline void Vote::SharedDtor(MessageLite& self) {
  Vote& this_ = static_cast<Vote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voter_.Destroy();
  this_._impl_.metadata_.Destroy();
  delete this_._impl_.submit_time_;
  this_._impl_.~Impl_();
}

inline void* Vote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vote(arena);
}
constexpr auto Vote::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Vote),
                                            alignof(Vote));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vote>(), &Vote::ByteSizeLong,
            &Vote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vote, _impl_._cached_size_),
        false,
    },
    &Vote::kDescriptorMethods,
    &descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 42, 2> Vote::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vote, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::group::v1::Vote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Vote, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_)}},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_)}},
    // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Vote, _impl_.option_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.option_)}},
    // string metadata = 4 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_)}},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.submit_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.option_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string metadata = 4 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.submit_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\24\0\5\0\10\0\0\0"
    "cosmos.group.v1.Vote"
    "voter"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.group.v1.Vote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.voter_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.submit_time_ != nullptr);
    _impl_.submit_time_->Clear();
  }
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.option_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.option_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.group.v1.Vote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_voter().empty()) {
            const std::string& _s = this_._internal_voter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Vote.voter");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
          if (this_._internal_option() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_option(), target);
          }

          // string metadata = 4 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.group.v1.Vote.metadata");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.submit_time_, this_._impl_.submit_time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.group.v1.Vote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vote::ByteSizeLong(const MessageLite& base) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vote::ByteSizeLong() const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.group.v1.Vote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_voter().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter());
            }
            // string metadata = 4 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
          }
           {
            // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.submit_time_);
            }
          }
           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
            // .cosmos.group.v1.VoteOption option = 3 [json_name = "option"];
            if (this_._internal_option() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_option());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vote*>(&to_msg);
  auto& from = static_cast<const Vote&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.group.v1.Vote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.submit_time_ != nullptr);
    if (_this->_impl_.submit_time_ == nullptr) {
      _this->_impl_.submit_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.submit_time_);
    } else {
      _this->_impl_.submit_time_->MergeFrom(*from._impl_.submit_time_);
    }
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  if (from._internal_option() != 0) {
    _this->_impl_.option_ = from._impl_.option_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vote::CopyFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.group.v1.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vote::InternalSwap(Vote* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, &other->_impl_.voter_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.option_)
      + sizeof(Vote::_impl_.option_)
      - PROTOBUF_FIELD_OFFSET(Vote, _impl_.submit_time_)>(
          reinterpret_cast<char*>(&_impl_.submit_time_),
          reinterpret_cast<char*>(&other->_impl_.submit_time_));
}

::google::protobuf::Metadata Vote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace group
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgroup_2fv1_2ftypes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
