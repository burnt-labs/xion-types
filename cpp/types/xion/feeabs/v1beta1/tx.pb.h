// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/feeabs/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef xion_2ffeeabs_2fv1beta1_2ftx_2eproto_2epb_2eh
#define xion_2ffeeabs_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "amino/amino.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "xion/feeabs/v1beta1/params.pb.h"
#include "xion/feeabs/v1beta1/proposal.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xion_2ffeeabs_2fv1beta1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
namespace xion {
namespace feeabs {
namespace v1beta1 {
class MsgAddHostZone;
struct MsgAddHostZoneDefaultTypeInternal;
extern MsgAddHostZoneDefaultTypeInternal _MsgAddHostZone_default_instance_;
class MsgAddHostZoneResponse;
struct MsgAddHostZoneResponseDefaultTypeInternal;
extern MsgAddHostZoneResponseDefaultTypeInternal _MsgAddHostZoneResponse_default_instance_;
class MsgFundFeeAbsModuleAccount;
struct MsgFundFeeAbsModuleAccountDefaultTypeInternal;
extern MsgFundFeeAbsModuleAccountDefaultTypeInternal _MsgFundFeeAbsModuleAccount_default_instance_;
class MsgFundFeeAbsModuleAccountResponse;
struct MsgFundFeeAbsModuleAccountResponseDefaultTypeInternal;
extern MsgFundFeeAbsModuleAccountResponseDefaultTypeInternal _MsgFundFeeAbsModuleAccountResponse_default_instance_;
class MsgRemoveHostZone;
struct MsgRemoveHostZoneDefaultTypeInternal;
extern MsgRemoveHostZoneDefaultTypeInternal _MsgRemoveHostZone_default_instance_;
class MsgRemoveHostZoneResponse;
struct MsgRemoveHostZoneResponseDefaultTypeInternal;
extern MsgRemoveHostZoneResponseDefaultTypeInternal _MsgRemoveHostZoneResponse_default_instance_;
class MsgSendQueryIbcDenomTWAP;
struct MsgSendQueryIbcDenomTWAPDefaultTypeInternal;
extern MsgSendQueryIbcDenomTWAPDefaultTypeInternal _MsgSendQueryIbcDenomTWAP_default_instance_;
class MsgSendQueryIbcDenomTWAPResponse;
struct MsgSendQueryIbcDenomTWAPResponseDefaultTypeInternal;
extern MsgSendQueryIbcDenomTWAPResponseDefaultTypeInternal _MsgSendQueryIbcDenomTWAPResponse_default_instance_;
class MsgSwapCrossChain;
struct MsgSwapCrossChainDefaultTypeInternal;
extern MsgSwapCrossChainDefaultTypeInternal _MsgSwapCrossChain_default_instance_;
class MsgSwapCrossChainResponse;
struct MsgSwapCrossChainResponseDefaultTypeInternal;
extern MsgSwapCrossChainResponseDefaultTypeInternal _MsgSwapCrossChainResponse_default_instance_;
class MsgUpdateHostZone;
struct MsgUpdateHostZoneDefaultTypeInternal;
extern MsgUpdateHostZoneDefaultTypeInternal _MsgUpdateHostZone_default_instance_;
class MsgUpdateHostZoneResponse;
struct MsgUpdateHostZoneResponseDefaultTypeInternal;
extern MsgUpdateHostZoneResponseDefaultTypeInternal _MsgUpdateHostZoneResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xion {
namespace feeabs {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateHostZoneResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgUpdateHostZoneResponse) */ {
 public:
  inline MsgUpdateHostZoneResponse() : MsgUpdateHostZoneResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateHostZoneResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateHostZoneResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateHostZoneResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateHostZoneResponse(const MsgUpdateHostZoneResponse& from) : MsgUpdateHostZoneResponse(nullptr, from) {}
  inline MsgUpdateHostZoneResponse(MsgUpdateHostZoneResponse&& from) noexcept
      : MsgUpdateHostZoneResponse(nullptr, std::move(from)) {}
  inline MsgUpdateHostZoneResponse& operator=(const MsgUpdateHostZoneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateHostZoneResponse& operator=(MsgUpdateHostZoneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateHostZoneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateHostZoneResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateHostZoneResponse*>(
        &_MsgUpdateHostZoneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MsgUpdateHostZoneResponse& a, MsgUpdateHostZoneResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateHostZoneResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateHostZoneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateHostZoneResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateHostZoneResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateHostZoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateHostZoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgUpdateHostZoneResponse"; }

 protected:
  explicit MsgUpdateHostZoneResponse(::google::protobuf::Arena* arena);
  MsgUpdateHostZoneResponse(::google::protobuf::Arena* arena, const MsgUpdateHostZoneResponse& from);
  MsgUpdateHostZoneResponse(::google::protobuf::Arena* arena, MsgUpdateHostZoneResponse&& from) noexcept
      : MsgUpdateHostZoneResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgUpdateHostZoneResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateHostZoneResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSwapCrossChainResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgSwapCrossChainResponse) */ {
 public:
  inline MsgSwapCrossChainResponse() : MsgSwapCrossChainResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSwapCrossChainResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSwapCrossChainResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSwapCrossChainResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSwapCrossChainResponse(const MsgSwapCrossChainResponse& from) : MsgSwapCrossChainResponse(nullptr, from) {}
  inline MsgSwapCrossChainResponse(MsgSwapCrossChainResponse&& from) noexcept
      : MsgSwapCrossChainResponse(nullptr, std::move(from)) {}
  inline MsgSwapCrossChainResponse& operator=(const MsgSwapCrossChainResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSwapCrossChainResponse& operator=(MsgSwapCrossChainResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSwapCrossChainResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSwapCrossChainResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSwapCrossChainResponse*>(
        &_MsgSwapCrossChainResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgSwapCrossChainResponse& a, MsgSwapCrossChainResponse& b) { a.Swap(&b); }
  inline void Swap(MsgSwapCrossChainResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSwapCrossChainResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSwapCrossChainResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgSwapCrossChainResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSwapCrossChainResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSwapCrossChainResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgSwapCrossChainResponse"; }

 protected:
  explicit MsgSwapCrossChainResponse(::google::protobuf::Arena* arena);
  MsgSwapCrossChainResponse(::google::protobuf::Arena* arena, const MsgSwapCrossChainResponse& from);
  MsgSwapCrossChainResponse(::google::protobuf::Arena* arena, MsgSwapCrossChainResponse&& from) noexcept
      : MsgSwapCrossChainResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgSwapCrossChainResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSwapCrossChainResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSwapCrossChain final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgSwapCrossChain) */ {
 public:
  inline MsgSwapCrossChain() : MsgSwapCrossChain(nullptr) {}
  ~MsgSwapCrossChain() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSwapCrossChain* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSwapCrossChain));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSwapCrossChain(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSwapCrossChain(const MsgSwapCrossChain& from) : MsgSwapCrossChain(nullptr, from) {}
  inline MsgSwapCrossChain(MsgSwapCrossChain&& from) noexcept
      : MsgSwapCrossChain(nullptr, std::move(from)) {}
  inline MsgSwapCrossChain& operator=(const MsgSwapCrossChain& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSwapCrossChain& operator=(MsgSwapCrossChain&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSwapCrossChain& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSwapCrossChain* internal_default_instance() {
    return reinterpret_cast<const MsgSwapCrossChain*>(
        &_MsgSwapCrossChain_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgSwapCrossChain& a, MsgSwapCrossChain& b) { a.Swap(&b); }
  inline void Swap(MsgSwapCrossChain* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSwapCrossChain* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSwapCrossChain* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSwapCrossChain>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSwapCrossChain& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSwapCrossChain& from) { MsgSwapCrossChain::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSwapCrossChain* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgSwapCrossChain"; }

 protected:
  explicit MsgSwapCrossChain(::google::protobuf::Arena* arena);
  MsgSwapCrossChain(::google::protobuf::Arena* arena, const MsgSwapCrossChain& from);
  MsgSwapCrossChain(::google::protobuf::Arena* arena, MsgSwapCrossChain&& from) noexcept
      : MsgSwapCrossChain(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kIbcDenomFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string ibc_denom = 2 [json_name = "ibcDenom"];
  void clear_ibc_denom() ;
  const std::string& ibc_denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ibc_denom(Arg_&& arg, Args_... args);
  std::string* mutable_ibc_denom();
  PROTOBUF_NODISCARD std::string* release_ibc_denom();
  void set_allocated_ibc_denom(std::string* value);

  private:
  const std::string& _internal_ibc_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ibc_denom(
      const std::string& value);
  std::string* _internal_mutable_ibc_denom();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgSwapCrossChain)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSwapCrossChain& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr ibc_denom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSendQueryIbcDenomTWAPResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAPResponse) */ {
 public:
  inline MsgSendQueryIbcDenomTWAPResponse() : MsgSendQueryIbcDenomTWAPResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSendQueryIbcDenomTWAPResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSendQueryIbcDenomTWAPResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSendQueryIbcDenomTWAPResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSendQueryIbcDenomTWAPResponse(const MsgSendQueryIbcDenomTWAPResponse& from) : MsgSendQueryIbcDenomTWAPResponse(nullptr, from) {}
  inline MsgSendQueryIbcDenomTWAPResponse(MsgSendQueryIbcDenomTWAPResponse&& from) noexcept
      : MsgSendQueryIbcDenomTWAPResponse(nullptr, std::move(from)) {}
  inline MsgSendQueryIbcDenomTWAPResponse& operator=(const MsgSendQueryIbcDenomTWAPResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendQueryIbcDenomTWAPResponse& operator=(MsgSendQueryIbcDenomTWAPResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSendQueryIbcDenomTWAPResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSendQueryIbcDenomTWAPResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSendQueryIbcDenomTWAPResponse*>(
        &_MsgSendQueryIbcDenomTWAPResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgSendQueryIbcDenomTWAPResponse& a, MsgSendQueryIbcDenomTWAPResponse& b) { a.Swap(&b); }
  inline void Swap(MsgSendQueryIbcDenomTWAPResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendQueryIbcDenomTWAPResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSendQueryIbcDenomTWAPResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgSendQueryIbcDenomTWAPResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSendQueryIbcDenomTWAPResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSendQueryIbcDenomTWAPResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAPResponse"; }

 protected:
  explicit MsgSendQueryIbcDenomTWAPResponse(::google::protobuf::Arena* arena);
  MsgSendQueryIbcDenomTWAPResponse(::google::protobuf::Arena* arena, const MsgSendQueryIbcDenomTWAPResponse& from);
  MsgSendQueryIbcDenomTWAPResponse(::google::protobuf::Arena* arena, MsgSendQueryIbcDenomTWAPResponse&& from) noexcept
      : MsgSendQueryIbcDenomTWAPResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAPResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSendQueryIbcDenomTWAPResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSendQueryIbcDenomTWAP final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP) */ {
 public:
  inline MsgSendQueryIbcDenomTWAP() : MsgSendQueryIbcDenomTWAP(nullptr) {}
  ~MsgSendQueryIbcDenomTWAP() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSendQueryIbcDenomTWAP* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSendQueryIbcDenomTWAP));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSendQueryIbcDenomTWAP(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSendQueryIbcDenomTWAP(const MsgSendQueryIbcDenomTWAP& from) : MsgSendQueryIbcDenomTWAP(nullptr, from) {}
  inline MsgSendQueryIbcDenomTWAP(MsgSendQueryIbcDenomTWAP&& from) noexcept
      : MsgSendQueryIbcDenomTWAP(nullptr, std::move(from)) {}
  inline MsgSendQueryIbcDenomTWAP& operator=(const MsgSendQueryIbcDenomTWAP& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendQueryIbcDenomTWAP& operator=(MsgSendQueryIbcDenomTWAP&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSendQueryIbcDenomTWAP& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSendQueryIbcDenomTWAP* internal_default_instance() {
    return reinterpret_cast<const MsgSendQueryIbcDenomTWAP*>(
        &_MsgSendQueryIbcDenomTWAP_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgSendQueryIbcDenomTWAP& a, MsgSendQueryIbcDenomTWAP& b) { a.Swap(&b); }
  inline void Swap(MsgSendQueryIbcDenomTWAP* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendQueryIbcDenomTWAP* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSendQueryIbcDenomTWAP* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSendQueryIbcDenomTWAP>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSendQueryIbcDenomTWAP& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSendQueryIbcDenomTWAP& from) { MsgSendQueryIbcDenomTWAP::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSendQueryIbcDenomTWAP* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP"; }

 protected:
  explicit MsgSendQueryIbcDenomTWAP(::google::protobuf::Arena* arena);
  MsgSendQueryIbcDenomTWAP(::google::protobuf::Arena* arena, const MsgSendQueryIbcDenomTWAP& from);
  MsgSendQueryIbcDenomTWAP(::google::protobuf::Arena* arena, MsgSendQueryIbcDenomTWAP&& from) noexcept
      : MsgSendQueryIbcDenomTWAP(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSendQueryIbcDenomTWAP& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRemoveHostZoneResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgRemoveHostZoneResponse) */ {
 public:
  inline MsgRemoveHostZoneResponse() : MsgRemoveHostZoneResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRemoveHostZoneResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRemoveHostZoneResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRemoveHostZoneResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRemoveHostZoneResponse(const MsgRemoveHostZoneResponse& from) : MsgRemoveHostZoneResponse(nullptr, from) {}
  inline MsgRemoveHostZoneResponse(MsgRemoveHostZoneResponse&& from) noexcept
      : MsgRemoveHostZoneResponse(nullptr, std::move(from)) {}
  inline MsgRemoveHostZoneResponse& operator=(const MsgRemoveHostZoneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRemoveHostZoneResponse& operator=(MsgRemoveHostZoneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRemoveHostZoneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRemoveHostZoneResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveHostZoneResponse*>(
        &_MsgRemoveHostZoneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MsgRemoveHostZoneResponse& a, MsgRemoveHostZoneResponse& b) { a.Swap(&b); }
  inline void Swap(MsgRemoveHostZoneResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRemoveHostZoneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRemoveHostZoneResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgRemoveHostZoneResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRemoveHostZoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRemoveHostZoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgRemoveHostZoneResponse"; }

 protected:
  explicit MsgRemoveHostZoneResponse(::google::protobuf::Arena* arena);
  MsgRemoveHostZoneResponse(::google::protobuf::Arena* arena, const MsgRemoveHostZoneResponse& from);
  MsgRemoveHostZoneResponse(::google::protobuf::Arena* arena, MsgRemoveHostZoneResponse&& from) noexcept
      : MsgRemoveHostZoneResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgRemoveHostZoneResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRemoveHostZoneResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRemoveHostZone final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgRemoveHostZone) */ {
 public:
  inline MsgRemoveHostZone() : MsgRemoveHostZone(nullptr) {}
  ~MsgRemoveHostZone() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRemoveHostZone* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRemoveHostZone));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRemoveHostZone(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRemoveHostZone(const MsgRemoveHostZone& from) : MsgRemoveHostZone(nullptr, from) {}
  inline MsgRemoveHostZone(MsgRemoveHostZone&& from) noexcept
      : MsgRemoveHostZone(nullptr, std::move(from)) {}
  inline MsgRemoveHostZone& operator=(const MsgRemoveHostZone& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRemoveHostZone& operator=(MsgRemoveHostZone&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRemoveHostZone& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRemoveHostZone* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveHostZone*>(
        &_MsgRemoveHostZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MsgRemoveHostZone& a, MsgRemoveHostZone& b) { a.Swap(&b); }
  inline void Swap(MsgRemoveHostZone* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRemoveHostZone* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRemoveHostZone* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgRemoveHostZone>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgRemoveHostZone& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgRemoveHostZone& from) { MsgRemoveHostZone::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgRemoveHostZone* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgRemoveHostZone"; }

 protected:
  explicit MsgRemoveHostZone(::google::protobuf::Arena* arena);
  MsgRemoveHostZone(::google::protobuf::Arena* arena, const MsgRemoveHostZone& from);
  MsgRemoveHostZone(::google::protobuf::Arena* arena, MsgRemoveHostZone&& from) noexcept
      : MsgRemoveHostZone(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kIbcDenomFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // string ibc_denom = 2 [json_name = "ibcDenom"];
  void clear_ibc_denom() ;
  const std::string& ibc_denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ibc_denom(Arg_&& arg, Args_... args);
  std::string* mutable_ibc_denom();
  PROTOBUF_NODISCARD std::string* release_ibc_denom();
  void set_allocated_ibc_denom(std::string* value);

  private:
  const std::string& _internal_ibc_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ibc_denom(
      const std::string& value);
  std::string* _internal_mutable_ibc_denom();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgRemoveHostZone)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRemoveHostZone& from_msg);
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::ArenaStringPtr ibc_denom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgFundFeeAbsModuleAccountResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccountResponse) */ {
 public:
  inline MsgFundFeeAbsModuleAccountResponse() : MsgFundFeeAbsModuleAccountResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgFundFeeAbsModuleAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgFundFeeAbsModuleAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgFundFeeAbsModuleAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgFundFeeAbsModuleAccountResponse(const MsgFundFeeAbsModuleAccountResponse& from) : MsgFundFeeAbsModuleAccountResponse(nullptr, from) {}
  inline MsgFundFeeAbsModuleAccountResponse(MsgFundFeeAbsModuleAccountResponse&& from) noexcept
      : MsgFundFeeAbsModuleAccountResponse(nullptr, std::move(from)) {}
  inline MsgFundFeeAbsModuleAccountResponse& operator=(const MsgFundFeeAbsModuleAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgFundFeeAbsModuleAccountResponse& operator=(MsgFundFeeAbsModuleAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgFundFeeAbsModuleAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgFundFeeAbsModuleAccountResponse* internal_default_instance() {
    return reinterpret_cast<const MsgFundFeeAbsModuleAccountResponse*>(
        &_MsgFundFeeAbsModuleAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgFundFeeAbsModuleAccountResponse& a, MsgFundFeeAbsModuleAccountResponse& b) { a.Swap(&b); }
  inline void Swap(MsgFundFeeAbsModuleAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgFundFeeAbsModuleAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgFundFeeAbsModuleAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgFundFeeAbsModuleAccountResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgFundFeeAbsModuleAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgFundFeeAbsModuleAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccountResponse"; }

 protected:
  explicit MsgFundFeeAbsModuleAccountResponse(::google::protobuf::Arena* arena);
  MsgFundFeeAbsModuleAccountResponse(::google::protobuf::Arena* arena, const MsgFundFeeAbsModuleAccountResponse& from);
  MsgFundFeeAbsModuleAccountResponse(::google::protobuf::Arena* arena, MsgFundFeeAbsModuleAccountResponse&& from) noexcept
      : MsgFundFeeAbsModuleAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgFundFeeAbsModuleAccountResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgAddHostZoneResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgAddHostZoneResponse) */ {
 public:
  inline MsgAddHostZoneResponse() : MsgAddHostZoneResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgAddHostZoneResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgAddHostZoneResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddHostZoneResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgAddHostZoneResponse(const MsgAddHostZoneResponse& from) : MsgAddHostZoneResponse(nullptr, from) {}
  inline MsgAddHostZoneResponse(MsgAddHostZoneResponse&& from) noexcept
      : MsgAddHostZoneResponse(nullptr, std::move(from)) {}
  inline MsgAddHostZoneResponse& operator=(const MsgAddHostZoneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddHostZoneResponse& operator=(MsgAddHostZoneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddHostZoneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddHostZoneResponse* internal_default_instance() {
    return reinterpret_cast<const MsgAddHostZoneResponse*>(
        &_MsgAddHostZoneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgAddHostZoneResponse& a, MsgAddHostZoneResponse& b) { a.Swap(&b); }
  inline void Swap(MsgAddHostZoneResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddHostZoneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddHostZoneResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgAddHostZoneResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgAddHostZoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgAddHostZoneResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgAddHostZoneResponse"; }

 protected:
  explicit MsgAddHostZoneResponse(::google::protobuf::Arena* arena);
  MsgAddHostZoneResponse(::google::protobuf::Arena* arena, const MsgAddHostZoneResponse& from);
  MsgAddHostZoneResponse(::google::protobuf::Arena* arena, MsgAddHostZoneResponse&& from) noexcept
      : MsgAddHostZoneResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgAddHostZoneResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgAddHostZoneResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .xion.feeabs.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::xion::feeabs::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::xion::feeabs::v1beta1::Params* release_params();
  ::xion::feeabs::v1beta1::Params* mutable_params();
  void set_allocated_params(::xion::feeabs::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::xion::feeabs::v1beta1::Params* value);
  ::xion::feeabs::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::xion::feeabs::v1beta1::Params& _internal_params() const;
  ::xion::feeabs::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::xion::feeabs::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateHostZone final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgUpdateHostZone) */ {
 public:
  inline MsgUpdateHostZone() : MsgUpdateHostZone(nullptr) {}
  ~MsgUpdateHostZone() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateHostZone* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateHostZone));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateHostZone(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateHostZone(const MsgUpdateHostZone& from) : MsgUpdateHostZone(nullptr, from) {}
  inline MsgUpdateHostZone(MsgUpdateHostZone&& from) noexcept
      : MsgUpdateHostZone(nullptr, std::move(from)) {}
  inline MsgUpdateHostZone& operator=(const MsgUpdateHostZone& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateHostZone& operator=(MsgUpdateHostZone&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateHostZone& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateHostZone* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateHostZone*>(
        &_MsgUpdateHostZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MsgUpdateHostZone& a, MsgUpdateHostZone& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateHostZone* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateHostZone* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateHostZone* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateHostZone>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateHostZone& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateHostZone& from) { MsgUpdateHostZone::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateHostZone* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgUpdateHostZone"; }

 protected:
  explicit MsgUpdateHostZone(::google::protobuf::Arena* arena);
  MsgUpdateHostZone(::google::protobuf::Arena* arena, const MsgUpdateHostZone& from);
  MsgUpdateHostZone(::google::protobuf::Arena* arena, MsgUpdateHostZone&& from) noexcept
      : MsgUpdateHostZone(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kHostChainConfigFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .xion.feeabs.v1beta1.HostChainFeeAbsConfig host_chain_config = 2 [json_name = "hostChainConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_host_chain_config() const;
  void clear_host_chain_config() ;
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& host_chain_config() const;
  PROTOBUF_NODISCARD ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* release_host_chain_config();
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* mutable_host_chain_config();
  void set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value);
  void unsafe_arena_set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value);
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* unsafe_arena_release_host_chain_config();

  private:
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& _internal_host_chain_config() const;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _internal_mutable_host_chain_config();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgUpdateHostZone)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateHostZone& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* host_chain_config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgFundFeeAbsModuleAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount) */ {
 public:
  inline MsgFundFeeAbsModuleAccount() : MsgFundFeeAbsModuleAccount(nullptr) {}
  ~MsgFundFeeAbsModuleAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgFundFeeAbsModuleAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgFundFeeAbsModuleAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgFundFeeAbsModuleAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgFundFeeAbsModuleAccount(const MsgFundFeeAbsModuleAccount& from) : MsgFundFeeAbsModuleAccount(nullptr, from) {}
  inline MsgFundFeeAbsModuleAccount(MsgFundFeeAbsModuleAccount&& from) noexcept
      : MsgFundFeeAbsModuleAccount(nullptr, std::move(from)) {}
  inline MsgFundFeeAbsModuleAccount& operator=(const MsgFundFeeAbsModuleAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgFundFeeAbsModuleAccount& operator=(MsgFundFeeAbsModuleAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgFundFeeAbsModuleAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgFundFeeAbsModuleAccount* internal_default_instance() {
    return reinterpret_cast<const MsgFundFeeAbsModuleAccount*>(
        &_MsgFundFeeAbsModuleAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgFundFeeAbsModuleAccount& a, MsgFundFeeAbsModuleAccount& b) { a.Swap(&b); }
  inline void Swap(MsgFundFeeAbsModuleAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgFundFeeAbsModuleAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgFundFeeAbsModuleAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgFundFeeAbsModuleAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgFundFeeAbsModuleAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgFundFeeAbsModuleAccount& from) { MsgFundFeeAbsModuleAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgFundFeeAbsModuleAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount"; }

 protected:
  explicit MsgFundFeeAbsModuleAccount(::google::protobuf::Arena* arena);
  MsgFundFeeAbsModuleAccount(::google::protobuf::Arena* arena, const MsgFundFeeAbsModuleAccount& from);
  MsgFundFeeAbsModuleAccount(::google::protobuf::Arena* arena, MsgFundFeeAbsModuleAccount&& from) noexcept
      : MsgFundFeeAbsModuleAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAmountFieldNumber = 2,
    kSenderFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_amount();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& amount() const;
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgFundFeeAbsModuleAccount& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgAddHostZone final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.MsgAddHostZone) */ {
 public:
  inline MsgAddHostZone() : MsgAddHostZone(nullptr) {}
  ~MsgAddHostZone() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgAddHostZone* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgAddHostZone));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddHostZone(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgAddHostZone(const MsgAddHostZone& from) : MsgAddHostZone(nullptr, from) {}
  inline MsgAddHostZone(MsgAddHostZone&& from) noexcept
      : MsgAddHostZone(nullptr, std::move(from)) {}
  inline MsgAddHostZone& operator=(const MsgAddHostZone& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddHostZone& operator=(MsgAddHostZone&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddHostZone& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddHostZone* internal_default_instance() {
    return reinterpret_cast<const MsgAddHostZone*>(
        &_MsgAddHostZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgAddHostZone& a, MsgAddHostZone& b) { a.Swap(&b); }
  inline void Swap(MsgAddHostZone* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddHostZone* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddHostZone* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgAddHostZone>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgAddHostZone& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgAddHostZone& from) { MsgAddHostZone::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgAddHostZone* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.MsgAddHostZone"; }

 protected:
  explicit MsgAddHostZone(::google::protobuf::Arena* arena);
  MsgAddHostZone(::google::protobuf::Arena* arena, const MsgAddHostZone& from);
  MsgAddHostZone(::google::protobuf::Arena* arena, MsgAddHostZone&& from) noexcept
      : MsgAddHostZone(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kHostChainConfigFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .xion.feeabs.v1beta1.HostChainFeeAbsConfig host_chain_config = 2 [json_name = "hostChainConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_host_chain_config() const;
  void clear_host_chain_config() ;
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& host_chain_config() const;
  PROTOBUF_NODISCARD ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* release_host_chain_config();
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* mutable_host_chain_config();
  void set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value);
  void unsafe_arena_set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value);
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* unsafe_arena_release_host_chain_config();

  private:
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& _internal_host_chain_config() const;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _internal_mutable_host_chain_config();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.MsgAddHostZone)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgAddHostZone& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* host_chain_config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgFundFeeAbsModuleAccount

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgFundFeeAbsModuleAccount::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgFundFeeAbsModuleAccount::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgFundFeeAbsModuleAccount::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.sender)
}
inline std::string* MsgFundFeeAbsModuleAccount::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.sender)
  return _s;
}
inline const std::string& MsgFundFeeAbsModuleAccount::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgFundFeeAbsModuleAccount::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgFundFeeAbsModuleAccount::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgFundFeeAbsModuleAccount::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.sender)
  return _impl_.sender_.Release();
}
inline void MsgFundFeeAbsModuleAccount::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.sender)
}

// repeated .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
inline int MsgFundFeeAbsModuleAccount::_internal_amount_size() const {
  return _internal_amount().size();
}
inline int MsgFundFeeAbsModuleAccount::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgFundFeeAbsModuleAccount::mutable_amount(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgFundFeeAbsModuleAccount::mutable_amount()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.amount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgFundFeeAbsModuleAccount::amount(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.amount)
  return _internal_amount().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgFundFeeAbsModuleAccount::add_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_amount()->Add();
  // @@protoc_insertion_point(field_add:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.amount)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgFundFeeAbsModuleAccount::amount() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.feeabs.v1beta1.MsgFundFeeAbsModuleAccount.amount)
  return _internal_amount();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgFundFeeAbsModuleAccount::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgFundFeeAbsModuleAccount::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgFundFeeAbsModuleAccountResponse

// -------------------------------------------------------------------

// MsgSendQueryIbcDenomTWAP

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSendQueryIbcDenomTWAP::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgSendQueryIbcDenomTWAP::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSendQueryIbcDenomTWAP::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP.sender)
}
inline std::string* MsgSendQueryIbcDenomTWAP::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP.sender)
  return _s;
}
inline const std::string& MsgSendQueryIbcDenomTWAP::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgSendQueryIbcDenomTWAP::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgSendQueryIbcDenomTWAP::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgSendQueryIbcDenomTWAP::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP.sender)
  return _impl_.sender_.Release();
}
inline void MsgSendQueryIbcDenomTWAP::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgSendQueryIbcDenomTWAP.sender)
}

// -------------------------------------------------------------------

// MsgSendQueryIbcDenomTWAPResponse

// -------------------------------------------------------------------

// MsgSwapCrossChain

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSwapCrossChain::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgSwapCrossChain::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgSwapCrossChain.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSwapCrossChain::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgSwapCrossChain.sender)
}
inline std::string* MsgSwapCrossChain::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgSwapCrossChain.sender)
  return _s;
}
inline const std::string& MsgSwapCrossChain::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgSwapCrossChain::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgSwapCrossChain::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgSwapCrossChain::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgSwapCrossChain.sender)
  return _impl_.sender_.Release();
}
inline void MsgSwapCrossChain::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgSwapCrossChain.sender)
}

// string ibc_denom = 2 [json_name = "ibcDenom"];
inline void MsgSwapCrossChain::clear_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.ClearToEmpty();
}
inline const std::string& MsgSwapCrossChain::ibc_denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgSwapCrossChain.ibc_denom)
  return _internal_ibc_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSwapCrossChain::set_ibc_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgSwapCrossChain.ibc_denom)
}
inline std::string* MsgSwapCrossChain::mutable_ibc_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ibc_denom();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgSwapCrossChain.ibc_denom)
  return _s;
}
inline const std::string& MsgSwapCrossChain::_internal_ibc_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ibc_denom_.Get();
}
inline void MsgSwapCrossChain::_internal_set_ibc_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(value, GetArena());
}
inline std::string* MsgSwapCrossChain::_internal_mutable_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ibc_denom_.Mutable( GetArena());
}
inline std::string* MsgSwapCrossChain::release_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgSwapCrossChain.ibc_denom)
  return _impl_.ibc_denom_.Release();
}
inline void MsgSwapCrossChain::set_allocated_ibc_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ibc_denom_.IsDefault()) {
    _impl_.ibc_denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgSwapCrossChain.ibc_denom)
}

// -------------------------------------------------------------------

// MsgSwapCrossChainResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgUpdateParams.authority)
}

// .xion.feeabs.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::xion::feeabs::v1beta1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::feeabs::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::feeabs::v1beta1::Params&>(::xion::feeabs::v1beta1::_Params_default_instance_);
}
inline const ::xion::feeabs::v1beta1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::xion::feeabs::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::xion::feeabs::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.feeabs.v1beta1.MsgUpdateParams.params)
}
inline ::xion::feeabs::v1beta1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::feeabs::v1beta1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::xion::feeabs::v1beta1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::feeabs::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::xion::feeabs::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::xion::feeabs::v1beta1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::feeabs::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::xion::feeabs::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::xion::feeabs::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

// -------------------------------------------------------------------

// MsgAddHostZone

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgAddHostZone::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgAddHostZone::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgAddHostZone.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgAddHostZone::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgAddHostZone.authority)
}
inline std::string* MsgAddHostZone::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgAddHostZone.authority)
  return _s;
}
inline const std::string& MsgAddHostZone::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgAddHostZone::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgAddHostZone::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgAddHostZone::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgAddHostZone.authority)
  return _impl_.authority_.Release();
}
inline void MsgAddHostZone::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgAddHostZone.authority)
}

// .xion.feeabs.v1beta1.HostChainFeeAbsConfig host_chain_config = 2 [json_name = "hostChainConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgAddHostZone::has_host_chain_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.host_chain_config_ != nullptr);
  return value;
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& MsgAddHostZone::_internal_host_chain_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* p = _impl_.host_chain_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig&>(::xion::feeabs::v1beta1::_HostChainFeeAbsConfig_default_instance_);
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& MsgAddHostZone::host_chain_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgAddHostZone.host_chain_config)
  return _internal_host_chain_config();
}
inline void MsgAddHostZone::unsafe_arena_set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.host_chain_config_);
  }
  _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.feeabs.v1beta1.MsgAddHostZone.host_chain_config)
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgAddHostZone::release_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* released = _impl_.host_chain_config_;
  _impl_.host_chain_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgAddHostZone::unsafe_arena_release_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgAddHostZone.host_chain_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* temp = _impl_.host_chain_config_;
  _impl_.host_chain_config_ = nullptr;
  return temp;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgAddHostZone::_internal_mutable_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.host_chain_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>(GetArena());
    _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(p);
  }
  return _impl_.host_chain_config_;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgAddHostZone::mutable_host_chain_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _msg = _internal_mutable_host_chain_config();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgAddHostZone.host_chain_config)
  return _msg;
}
inline void MsgAddHostZone::set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.host_chain_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgAddHostZone.host_chain_config)
}

// -------------------------------------------------------------------

// MsgAddHostZoneResponse

// -------------------------------------------------------------------

// MsgUpdateHostZone

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateHostZone::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateHostZone::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgUpdateHostZone.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateHostZone::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgUpdateHostZone.authority)
}
inline std::string* MsgUpdateHostZone::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgUpdateHostZone.authority)
  return _s;
}
inline const std::string& MsgUpdateHostZone::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUpdateHostZone::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUpdateHostZone::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUpdateHostZone::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgUpdateHostZone.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateHostZone::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgUpdateHostZone.authority)
}

// .xion.feeabs.v1beta1.HostChainFeeAbsConfig host_chain_config = 2 [json_name = "hostChainConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateHostZone::has_host_chain_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.host_chain_config_ != nullptr);
  return value;
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& MsgUpdateHostZone::_internal_host_chain_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* p = _impl_.host_chain_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig&>(::xion::feeabs::v1beta1::_HostChainFeeAbsConfig_default_instance_);
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& MsgUpdateHostZone::host_chain_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgUpdateHostZone.host_chain_config)
  return _internal_host_chain_config();
}
inline void MsgUpdateHostZone::unsafe_arena_set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.host_chain_config_);
  }
  _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.feeabs.v1beta1.MsgUpdateHostZone.host_chain_config)
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgUpdateHostZone::release_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* released = _impl_.host_chain_config_;
  _impl_.host_chain_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgUpdateHostZone::unsafe_arena_release_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgUpdateHostZone.host_chain_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* temp = _impl_.host_chain_config_;
  _impl_.host_chain_config_ = nullptr;
  return temp;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgUpdateHostZone::_internal_mutable_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.host_chain_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>(GetArena());
    _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(p);
  }
  return _impl_.host_chain_config_;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* MsgUpdateHostZone::mutable_host_chain_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _msg = _internal_mutable_host_chain_config();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgUpdateHostZone.host_chain_config)
  return _msg;
}
inline void MsgUpdateHostZone::set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.host_chain_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgUpdateHostZone.host_chain_config)
}

// -------------------------------------------------------------------

// MsgUpdateHostZoneResponse

// -------------------------------------------------------------------

// MsgRemoveHostZone

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRemoveHostZone::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgRemoveHostZone::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgRemoveHostZone.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRemoveHostZone::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgRemoveHostZone.authority)
}
inline std::string* MsgRemoveHostZone::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgRemoveHostZone.authority)
  return _s;
}
inline const std::string& MsgRemoveHostZone::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgRemoveHostZone::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgRemoveHostZone::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgRemoveHostZone::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgRemoveHostZone.authority)
  return _impl_.authority_.Release();
}
inline void MsgRemoveHostZone::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgRemoveHostZone.authority)
}

// string ibc_denom = 2 [json_name = "ibcDenom"];
inline void MsgRemoveHostZone::clear_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.ClearToEmpty();
}
inline const std::string& MsgRemoveHostZone::ibc_denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.MsgRemoveHostZone.ibc_denom)
  return _internal_ibc_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRemoveHostZone::set_ibc_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.MsgRemoveHostZone.ibc_denom)
}
inline std::string* MsgRemoveHostZone::mutable_ibc_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ibc_denom();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.MsgRemoveHostZone.ibc_denom)
  return _s;
}
inline const std::string& MsgRemoveHostZone::_internal_ibc_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ibc_denom_.Get();
}
inline void MsgRemoveHostZone::_internal_set_ibc_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(value, GetArena());
}
inline std::string* MsgRemoveHostZone::_internal_mutable_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ibc_denom_.Mutable( GetArena());
}
inline std::string* MsgRemoveHostZone::release_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.MsgRemoveHostZone.ibc_denom)
  return _impl_.ibc_denom_.Release();
}
inline void MsgRemoveHostZone::set_allocated_ibc_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ibc_denom_.IsDefault()) {
    _impl_.ibc_denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.MsgRemoveHostZone.ibc_denom)
}

// -------------------------------------------------------------------

// MsgRemoveHostZoneResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xion_2ffeeabs_2fv1beta1_2ftx_2eproto_2epb_2eh
