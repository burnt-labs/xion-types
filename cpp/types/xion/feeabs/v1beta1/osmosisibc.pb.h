// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/feeabs/v1beta1/osmosisibc.proto
// Protobuf C++ Version: 5.29.4

#ifndef xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_2epb_2eh
#define xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "tendermint/abci/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
namespace xion {
namespace feeabs {
namespace v1beta1 {
class CosmosQuery;
struct CosmosQueryDefaultTypeInternal;
extern CosmosQueryDefaultTypeInternal _CosmosQuery_default_instance_;
class CosmosResponse;
struct CosmosResponseDefaultTypeInternal;
extern CosmosResponseDefaultTypeInternal _CosmosResponse_default_instance_;
class InterchainQueryPacketAck;
struct InterchainQueryPacketAckDefaultTypeInternal;
extern InterchainQueryPacketAckDefaultTypeInternal _InterchainQueryPacketAck_default_instance_;
class InterchainQueryPacketData;
struct InterchainQueryPacketDataDefaultTypeInternal;
extern InterchainQueryPacketDataDefaultTypeInternal _InterchainQueryPacketData_default_instance_;
class InterchainQueryRequest;
struct InterchainQueryRequestDefaultTypeInternal;
extern InterchainQueryRequestDefaultTypeInternal _InterchainQueryRequest_default_instance_;
class InterchainQueryRequestPacket;
struct InterchainQueryRequestPacketDefaultTypeInternal;
extern InterchainQueryRequestPacketDefaultTypeInternal _InterchainQueryRequestPacket_default_instance_;
class QueryArithmeticTwapToNowRequest;
struct QueryArithmeticTwapToNowRequestDefaultTypeInternal;
extern QueryArithmeticTwapToNowRequestDefaultTypeInternal _QueryArithmeticTwapToNowRequest_default_instance_;
class QueryArithmeticTwapToNowResponse;
struct QueryArithmeticTwapToNowResponseDefaultTypeInternal;
extern QueryArithmeticTwapToNowResponseDefaultTypeInternal _QueryArithmeticTwapToNowResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xion {
namespace feeabs {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryArithmeticTwapToNowResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse) */ {
 public:
  inline QueryArithmeticTwapToNowResponse() : QueryArithmeticTwapToNowResponse(nullptr) {}
  ~QueryArithmeticTwapToNowResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryArithmeticTwapToNowResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryArithmeticTwapToNowResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryArithmeticTwapToNowResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryArithmeticTwapToNowResponse(const QueryArithmeticTwapToNowResponse& from) : QueryArithmeticTwapToNowResponse(nullptr, from) {}
  inline QueryArithmeticTwapToNowResponse(QueryArithmeticTwapToNowResponse&& from) noexcept
      : QueryArithmeticTwapToNowResponse(nullptr, std::move(from)) {}
  inline QueryArithmeticTwapToNowResponse& operator=(const QueryArithmeticTwapToNowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryArithmeticTwapToNowResponse& operator=(QueryArithmeticTwapToNowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryArithmeticTwapToNowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryArithmeticTwapToNowResponse* internal_default_instance() {
    return reinterpret_cast<const QueryArithmeticTwapToNowResponse*>(
        &_QueryArithmeticTwapToNowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryArithmeticTwapToNowResponse& a, QueryArithmeticTwapToNowResponse& b) { a.Swap(&b); }
  inline void Swap(QueryArithmeticTwapToNowResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryArithmeticTwapToNowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryArithmeticTwapToNowResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryArithmeticTwapToNowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryArithmeticTwapToNowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryArithmeticTwapToNowResponse& from) { QueryArithmeticTwapToNowResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryArithmeticTwapToNowResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse"; }

 protected:
  explicit QueryArithmeticTwapToNowResponse(::google::protobuf::Arena* arena);
  QueryArithmeticTwapToNowResponse(::google::protobuf::Arena* arena, const QueryArithmeticTwapToNowResponse& from);
  QueryArithmeticTwapToNowResponse(::google::protobuf::Arena* arena, QueryArithmeticTwapToNowResponse&& from) noexcept
      : QueryArithmeticTwapToNowResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArithmeticTwapFieldNumber = 1,
  };
  // string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
  void clear_arithmetic_twap() ;
  const std::string& arithmetic_twap() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_arithmetic_twap(Arg_&& arg, Args_... args);
  std::string* mutable_arithmetic_twap();
  PROTOBUF_NODISCARD std::string* release_arithmetic_twap();
  void set_allocated_arithmetic_twap(std::string* value);

  private:
  const std::string& _internal_arithmetic_twap() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_arithmetic_twap(
      const std::string& value);
  std::string* _internal_mutable_arithmetic_twap();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      76, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryArithmeticTwapToNowResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr arithmetic_twap_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class InterchainQueryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.InterchainQueryRequest) */ {
 public:
  inline InterchainQueryRequest() : InterchainQueryRequest(nullptr) {}
  ~InterchainQueryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterchainQueryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterchainQueryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterchainQueryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterchainQueryRequest(const InterchainQueryRequest& from) : InterchainQueryRequest(nullptr, from) {}
  inline InterchainQueryRequest(InterchainQueryRequest&& from) noexcept
      : InterchainQueryRequest(nullptr, std::move(from)) {}
  inline InterchainQueryRequest& operator=(const InterchainQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterchainQueryRequest& operator=(InterchainQueryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterchainQueryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterchainQueryRequest* internal_default_instance() {
    return reinterpret_cast<const InterchainQueryRequest*>(
        &_InterchainQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(InterchainQueryRequest& a, InterchainQueryRequest& b) { a.Swap(&b); }
  inline void Swap(InterchainQueryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterchainQueryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterchainQueryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterchainQueryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterchainQueryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterchainQueryRequest& from) { InterchainQueryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterchainQueryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.InterchainQueryRequest"; }

 protected:
  explicit InterchainQueryRequest(::google::protobuf::Arena* arena);
  InterchainQueryRequest(::google::protobuf::Arena* arena, const InterchainQueryRequest& from);
  InterchainQueryRequest(::google::protobuf::Arena* arena, InterchainQueryRequest&& from) noexcept
      : InterchainQueryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kPathFieldNumber = 2,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string path = 2 [json_name = "path"];
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.InterchainQueryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterchainQueryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class InterchainQueryPacketData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.InterchainQueryPacketData) */ {
 public:
  inline InterchainQueryPacketData() : InterchainQueryPacketData(nullptr) {}
  ~InterchainQueryPacketData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterchainQueryPacketData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterchainQueryPacketData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterchainQueryPacketData(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterchainQueryPacketData(const InterchainQueryPacketData& from) : InterchainQueryPacketData(nullptr, from) {}
  inline InterchainQueryPacketData(InterchainQueryPacketData&& from) noexcept
      : InterchainQueryPacketData(nullptr, std::move(from)) {}
  inline InterchainQueryPacketData& operator=(const InterchainQueryPacketData& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterchainQueryPacketData& operator=(InterchainQueryPacketData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterchainQueryPacketData& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterchainQueryPacketData* internal_default_instance() {
    return reinterpret_cast<const InterchainQueryPacketData*>(
        &_InterchainQueryPacketData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(InterchainQueryPacketData& a, InterchainQueryPacketData& b) { a.Swap(&b); }
  inline void Swap(InterchainQueryPacketData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterchainQueryPacketData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterchainQueryPacketData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterchainQueryPacketData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterchainQueryPacketData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterchainQueryPacketData& from) { InterchainQueryPacketData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterchainQueryPacketData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.InterchainQueryPacketData"; }

 protected:
  explicit InterchainQueryPacketData(::google::protobuf::Arena* arena);
  InterchainQueryPacketData(::google::protobuf::Arena* arena, const InterchainQueryPacketData& from);
  InterchainQueryPacketData(::google::protobuf::Arena* arena, InterchainQueryPacketData&& from) noexcept
      : InterchainQueryPacketData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kMemoFieldNumber = 2,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string memo = 2 [json_name = "memo"];
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.InterchainQueryPacketData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterchainQueryPacketData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class InterchainQueryPacketAck final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.InterchainQueryPacketAck) */ {
 public:
  inline InterchainQueryPacketAck() : InterchainQueryPacketAck(nullptr) {}
  ~InterchainQueryPacketAck() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterchainQueryPacketAck* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterchainQueryPacketAck));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterchainQueryPacketAck(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterchainQueryPacketAck(const InterchainQueryPacketAck& from) : InterchainQueryPacketAck(nullptr, from) {}
  inline InterchainQueryPacketAck(InterchainQueryPacketAck&& from) noexcept
      : InterchainQueryPacketAck(nullptr, std::move(from)) {}
  inline InterchainQueryPacketAck& operator=(const InterchainQueryPacketAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterchainQueryPacketAck& operator=(InterchainQueryPacketAck&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterchainQueryPacketAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterchainQueryPacketAck* internal_default_instance() {
    return reinterpret_cast<const InterchainQueryPacketAck*>(
        &_InterchainQueryPacketAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(InterchainQueryPacketAck& a, InterchainQueryPacketAck& b) { a.Swap(&b); }
  inline void Swap(InterchainQueryPacketAck* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterchainQueryPacketAck* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterchainQueryPacketAck* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterchainQueryPacketAck>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterchainQueryPacketAck& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterchainQueryPacketAck& from) { InterchainQueryPacketAck::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterchainQueryPacketAck* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.InterchainQueryPacketAck"; }

 protected:
  explicit InterchainQueryPacketAck(::google::protobuf::Arena* arena);
  InterchainQueryPacketAck(::google::protobuf::Arena* arena, const InterchainQueryPacketAck& from);
  InterchainQueryPacketAck(::google::protobuf::Arena* arena, InterchainQueryPacketAck&& from) noexcept
      : InterchainQueryPacketAck(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.InterchainQueryPacketAck)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterchainQueryPacketAck& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class QueryArithmeticTwapToNowRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest) */ {
 public:
  inline QueryArithmeticTwapToNowRequest() : QueryArithmeticTwapToNowRequest(nullptr) {}
  ~QueryArithmeticTwapToNowRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryArithmeticTwapToNowRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryArithmeticTwapToNowRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryArithmeticTwapToNowRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryArithmeticTwapToNowRequest(const QueryArithmeticTwapToNowRequest& from) : QueryArithmeticTwapToNowRequest(nullptr, from) {}
  inline QueryArithmeticTwapToNowRequest(QueryArithmeticTwapToNowRequest&& from) noexcept
      : QueryArithmeticTwapToNowRequest(nullptr, std::move(from)) {}
  inline QueryArithmeticTwapToNowRequest& operator=(const QueryArithmeticTwapToNowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryArithmeticTwapToNowRequest& operator=(QueryArithmeticTwapToNowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryArithmeticTwapToNowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryArithmeticTwapToNowRequest* internal_default_instance() {
    return reinterpret_cast<const QueryArithmeticTwapToNowRequest*>(
        &_QueryArithmeticTwapToNowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryArithmeticTwapToNowRequest& a, QueryArithmeticTwapToNowRequest& b) { a.Swap(&b); }
  inline void Swap(QueryArithmeticTwapToNowRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryArithmeticTwapToNowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryArithmeticTwapToNowRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryArithmeticTwapToNowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryArithmeticTwapToNowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryArithmeticTwapToNowRequest& from) { QueryArithmeticTwapToNowRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryArithmeticTwapToNowRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest"; }

 protected:
  explicit QueryArithmeticTwapToNowRequest(::google::protobuf::Arena* arena);
  QueryArithmeticTwapToNowRequest(::google::protobuf::Arena* arena, const QueryArithmeticTwapToNowRequest& from);
  QueryArithmeticTwapToNowRequest(::google::protobuf::Arena* arena, QueryArithmeticTwapToNowRequest&& from) noexcept
      : QueryArithmeticTwapToNowRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseAssetFieldNumber = 2,
    kQuoteAssetFieldNumber = 3,
    kStartTimeFieldNumber = 4,
    kPoolIdFieldNumber = 1,
  };
  // string base_asset = 2 [json_name = "baseAsset"];
  void clear_base_asset() ;
  const std::string& base_asset() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_base_asset(Arg_&& arg, Args_... args);
  std::string* mutable_base_asset();
  PROTOBUF_NODISCARD std::string* release_base_asset();
  void set_allocated_base_asset(std::string* value);

  private:
  const std::string& _internal_base_asset() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_base_asset(
      const std::string& value);
  std::string* _internal_mutable_base_asset();

  public:
  // string quote_asset = 3 [json_name = "quoteAsset"];
  void clear_quote_asset() ;
  const std::string& quote_asset() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_quote_asset(Arg_&& arg, Args_... args);
  std::string* mutable_quote_asset();
  PROTOBUF_NODISCARD std::string* release_quote_asset();
  void set_allocated_quote_asset(std::string* value);

  private:
  const std::string& _internal_quote_asset() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_quote_asset(
      const std::string& value);
  std::string* _internal_mutable_quote_asset();

  public:
  // .google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"start_time\"", (.gogoproto.stdtime) = true];
  bool has_start_time() const;
  void clear_start_time() ;
  const ::google::protobuf::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_time();

  public:
  // uint64 pool_id = 1 [json_name = "poolId"];
  void clear_pool_id() ;
  ::uint64_t pool_id() const;
  void set_pool_id(::uint64_t value);

  private:
  ::uint64_t _internal_pool_id() const;
  void _internal_set_pool_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryArithmeticTwapToNowRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr base_asset_;
    ::google::protobuf::internal::ArenaStringPtr quote_asset_;
    ::google::protobuf::Timestamp* start_time_;
    ::uint64_t pool_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class InterchainQueryRequestPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.InterchainQueryRequestPacket) */ {
 public:
  inline InterchainQueryRequestPacket() : InterchainQueryRequestPacket(nullptr) {}
  ~InterchainQueryRequestPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterchainQueryRequestPacket* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterchainQueryRequestPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterchainQueryRequestPacket(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterchainQueryRequestPacket(const InterchainQueryRequestPacket& from) : InterchainQueryRequestPacket(nullptr, from) {}
  inline InterchainQueryRequestPacket(InterchainQueryRequestPacket&& from) noexcept
      : InterchainQueryRequestPacket(nullptr, std::move(from)) {}
  inline InterchainQueryRequestPacket& operator=(const InterchainQueryRequestPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterchainQueryRequestPacket& operator=(InterchainQueryRequestPacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterchainQueryRequestPacket& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterchainQueryRequestPacket* internal_default_instance() {
    return reinterpret_cast<const InterchainQueryRequestPacket*>(
        &_InterchainQueryRequestPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(InterchainQueryRequestPacket& a, InterchainQueryRequestPacket& b) { a.Swap(&b); }
  inline void Swap(InterchainQueryRequestPacket* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterchainQueryRequestPacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterchainQueryRequestPacket* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterchainQueryRequestPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterchainQueryRequestPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterchainQueryRequestPacket& from) { InterchainQueryRequestPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterchainQueryRequestPacket* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.InterchainQueryRequestPacket"; }

 protected:
  explicit InterchainQueryRequestPacket(::google::protobuf::Arena* arena);
  InterchainQueryRequestPacket(::google::protobuf::Arena* arena, const InterchainQueryRequestPacket& from);
  InterchainQueryRequestPacket(::google::protobuf::Arena* arena, InterchainQueryRequestPacket&& from) noexcept
      : InterchainQueryRequestPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestsFieldNumber = 1,
  };
  // repeated .xion.feeabs.v1beta1.InterchainQueryRequest requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
  int requests_size() const;
  private:
  int _internal_requests_size() const;

  public:
  void clear_requests() ;
  ::xion::feeabs::v1beta1::InterchainQueryRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>* mutable_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>& _internal_requests() const;
  ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>* _internal_mutable_requests();
  public:
  const ::xion::feeabs::v1beta1::InterchainQueryRequest& requests(int index) const;
  ::xion::feeabs::v1beta1::InterchainQueryRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>& requests() const;
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterchainQueryRequestPacket& from_msg);
    ::google::protobuf::RepeatedPtrField< ::xion::feeabs::v1beta1::InterchainQueryRequest > requests_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class CosmosQuery final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.CosmosQuery) */ {
 public:
  inline CosmosQuery() : CosmosQuery(nullptr) {}
  ~CosmosQuery() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CosmosQuery* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CosmosQuery));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CosmosQuery(
      ::google::protobuf::internal::ConstantInitialized);

  inline CosmosQuery(const CosmosQuery& from) : CosmosQuery(nullptr, from) {}
  inline CosmosQuery(CosmosQuery&& from) noexcept
      : CosmosQuery(nullptr, std::move(from)) {}
  inline CosmosQuery& operator=(const CosmosQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline CosmosQuery& operator=(CosmosQuery&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CosmosQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const CosmosQuery* internal_default_instance() {
    return reinterpret_cast<const CosmosQuery*>(
        &_CosmosQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CosmosQuery& a, CosmosQuery& b) { a.Swap(&b); }
  inline void Swap(CosmosQuery* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CosmosQuery* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CosmosQuery* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CosmosQuery>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CosmosQuery& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CosmosQuery& from) { CosmosQuery::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CosmosQuery* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.CosmosQuery"; }

 protected:
  explicit CosmosQuery(::google::protobuf::Arena* arena);
  CosmosQuery(::google::protobuf::Arena* arena, const CosmosQuery& from);
  CosmosQuery(::google::protobuf::Arena* arena, CosmosQuery&& from) noexcept
      : CosmosQuery(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestsFieldNumber = 1,
  };
  // repeated .tendermint.abci.RequestQuery requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
  int requests_size() const;
  private:
  int _internal_requests_size() const;

  public:
  void clear_requests() ;
  ::tendermint::abci::RequestQuery* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>* mutable_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>& _internal_requests() const;
  ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>* _internal_mutable_requests();
  public:
  const ::tendermint::abci::RequestQuery& requests(int index) const;
  ::tendermint::abci::RequestQuery* add_requests();
  const ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>& requests() const;
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.CosmosQuery)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CosmosQuery& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tendermint::abci::RequestQuery > requests_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};
// -------------------------------------------------------------------

class CosmosResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.CosmosResponse) */ {
 public:
  inline CosmosResponse() : CosmosResponse(nullptr) {}
  ~CosmosResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CosmosResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CosmosResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CosmosResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CosmosResponse(const CosmosResponse& from) : CosmosResponse(nullptr, from) {}
  inline CosmosResponse(CosmosResponse&& from) noexcept
      : CosmosResponse(nullptr, std::move(from)) {}
  inline CosmosResponse& operator=(const CosmosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CosmosResponse& operator=(CosmosResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CosmosResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CosmosResponse* internal_default_instance() {
    return reinterpret_cast<const CosmosResponse*>(
        &_CosmosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CosmosResponse& a, CosmosResponse& b) { a.Swap(&b); }
  inline void Swap(CosmosResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CosmosResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CosmosResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CosmosResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CosmosResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CosmosResponse& from) { CosmosResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CosmosResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.CosmosResponse"; }

 protected:
  explicit CosmosResponse(::google::protobuf::Arena* arena);
  CosmosResponse(::google::protobuf::Arena* arena, const CosmosResponse& from);
  CosmosResponse(::google::protobuf::Arena* arena, CosmosResponse&& from) noexcept
      : CosmosResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResponsesFieldNumber = 1,
  };
  // repeated .tendermint.abci.ResponseQuery responses = 1 [json_name = "responses", (.gogoproto.nullable) = false];
  int responses_size() const;
  private:
  int _internal_responses_size() const;

  public:
  void clear_responses() ;
  ::tendermint::abci::ResponseQuery* mutable_responses(int index);
  ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>* mutable_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>& _internal_responses() const;
  ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>* _internal_mutable_responses();
  public:
  const ::tendermint::abci::ResponseQuery& responses(int index) const;
  ::tendermint::abci::ResponseQuery* add_responses();
  const ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>& responses() const;
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.CosmosResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CosmosResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tendermint::abci::ResponseQuery > responses_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryArithmeticTwapToNowRequest

// uint64 pool_id = 1 [json_name = "poolId"];
inline void QueryArithmeticTwapToNowRequest::clear_pool_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryArithmeticTwapToNowRequest::pool_id() const {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.pool_id)
  return _internal_pool_id();
}
inline void QueryArithmeticTwapToNowRequest::set_pool_id(::uint64_t value) {
  _internal_set_pool_id(value);
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.pool_id)
}
inline ::uint64_t QueryArithmeticTwapToNowRequest::_internal_pool_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_id_;
}
inline void QueryArithmeticTwapToNowRequest::_internal_set_pool_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pool_id_ = value;
}

// string base_asset = 2 [json_name = "baseAsset"];
inline void QueryArithmeticTwapToNowRequest::clear_base_asset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_asset_.ClearToEmpty();
}
inline const std::string& QueryArithmeticTwapToNowRequest::base_asset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.base_asset)
  return _internal_base_asset();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryArithmeticTwapToNowRequest::set_base_asset(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_asset_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.base_asset)
}
inline std::string* QueryArithmeticTwapToNowRequest::mutable_base_asset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_base_asset();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.base_asset)
  return _s;
}
inline const std::string& QueryArithmeticTwapToNowRequest::_internal_base_asset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_asset_.Get();
}
inline void QueryArithmeticTwapToNowRequest::_internal_set_base_asset(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_asset_.Set(value, GetArena());
}
inline std::string* QueryArithmeticTwapToNowRequest::_internal_mutable_base_asset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.base_asset_.Mutable( GetArena());
}
inline std::string* QueryArithmeticTwapToNowRequest::release_base_asset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.base_asset)
  return _impl_.base_asset_.Release();
}
inline void QueryArithmeticTwapToNowRequest::set_allocated_base_asset(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_asset_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.base_asset_.IsDefault()) {
    _impl_.base_asset_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.base_asset)
}

// string quote_asset = 3 [json_name = "quoteAsset"];
inline void QueryArithmeticTwapToNowRequest::clear_quote_asset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quote_asset_.ClearToEmpty();
}
inline const std::string& QueryArithmeticTwapToNowRequest::quote_asset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.quote_asset)
  return _internal_quote_asset();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryArithmeticTwapToNowRequest::set_quote_asset(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quote_asset_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.quote_asset)
}
inline std::string* QueryArithmeticTwapToNowRequest::mutable_quote_asset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_quote_asset();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.quote_asset)
  return _s;
}
inline const std::string& QueryArithmeticTwapToNowRequest::_internal_quote_asset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quote_asset_.Get();
}
inline void QueryArithmeticTwapToNowRequest::_internal_set_quote_asset(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quote_asset_.Set(value, GetArena());
}
inline std::string* QueryArithmeticTwapToNowRequest::_internal_mutable_quote_asset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.quote_asset_.Mutable( GetArena());
}
inline std::string* QueryArithmeticTwapToNowRequest::release_quote_asset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.quote_asset)
  return _impl_.quote_asset_.Release();
}
inline void QueryArithmeticTwapToNowRequest::set_allocated_quote_asset(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quote_asset_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.quote_asset_.IsDefault()) {
    _impl_.quote_asset_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.quote_asset)
}

// .google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"start_time\"", (.gogoproto.stdtime) = true];
inline bool QueryArithmeticTwapToNowRequest::has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& QueryArithmeticTwapToNowRequest::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& QueryArithmeticTwapToNowRequest::start_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.start_time)
  return _internal_start_time();
}
inline void QueryArithmeticTwapToNowRequest::unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.start_time)
}
inline ::google::protobuf::Timestamp* QueryArithmeticTwapToNowRequest::release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* QueryArithmeticTwapToNowRequest::unsafe_arena_release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.start_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* QueryArithmeticTwapToNowRequest::_internal_mutable_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_time_;
}
inline ::google::protobuf::Timestamp* QueryArithmeticTwapToNowRequest::mutable_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.start_time)
  return _msg;
}
inline void QueryArithmeticTwapToNowRequest::set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.start_time)
}

// -------------------------------------------------------------------

// QueryArithmeticTwapToNowResponse

// string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
inline void QueryArithmeticTwapToNowResponse::clear_arithmetic_twap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.ClearToEmpty();
}
inline const std::string& QueryArithmeticTwapToNowResponse::arithmetic_twap() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse.arithmetic_twap)
  return _internal_arithmetic_twap();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryArithmeticTwapToNowResponse::set_arithmetic_twap(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse.arithmetic_twap)
}
inline std::string* QueryArithmeticTwapToNowResponse::mutable_arithmetic_twap() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_arithmetic_twap();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse.arithmetic_twap)
  return _s;
}
inline const std::string& QueryArithmeticTwapToNowResponse::_internal_arithmetic_twap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.arithmetic_twap_.Get();
}
inline void QueryArithmeticTwapToNowResponse::_internal_set_arithmetic_twap(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.Set(value, GetArena());
}
inline std::string* QueryArithmeticTwapToNowResponse::_internal_mutable_arithmetic_twap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.arithmetic_twap_.Mutable( GetArena());
}
inline std::string* QueryArithmeticTwapToNowResponse::release_arithmetic_twap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse.arithmetic_twap)
  return _impl_.arithmetic_twap_.Release();
}
inline void QueryArithmeticTwapToNowResponse::set_allocated_arithmetic_twap(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.arithmetic_twap_.IsDefault()) {
    _impl_.arithmetic_twap_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse.arithmetic_twap)
}

// -------------------------------------------------------------------

// InterchainQueryRequest

// bytes data = 1 [json_name = "data"];
inline void InterchainQueryRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InterchainQueryRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.InterchainQueryRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainQueryRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.InterchainQueryRequest.data)
}
inline std::string* InterchainQueryRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.InterchainQueryRequest.data)
  return _s;
}
inline const std::string& InterchainQueryRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void InterchainQueryRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InterchainQueryRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InterchainQueryRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.InterchainQueryRequest.data)
  return _impl_.data_.Release();
}
inline void InterchainQueryRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.InterchainQueryRequest.data)
}

// string path = 2 [json_name = "path"];
inline void InterchainQueryRequest::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& InterchainQueryRequest::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.InterchainQueryRequest.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainQueryRequest::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.InterchainQueryRequest.path)
}
inline std::string* InterchainQueryRequest::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.InterchainQueryRequest.path)
  return _s;
}
inline const std::string& InterchainQueryRequest::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void InterchainQueryRequest::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* InterchainQueryRequest::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* InterchainQueryRequest::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.InterchainQueryRequest.path)
  return _impl_.path_.Release();
}
inline void InterchainQueryRequest::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.InterchainQueryRequest.path)
}

// -------------------------------------------------------------------

// InterchainQueryPacketData

// bytes data = 1 [json_name = "data"];
inline void InterchainQueryPacketData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InterchainQueryPacketData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.InterchainQueryPacketData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainQueryPacketData::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.InterchainQueryPacketData.data)
}
inline std::string* InterchainQueryPacketData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.InterchainQueryPacketData.data)
  return _s;
}
inline const std::string& InterchainQueryPacketData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void InterchainQueryPacketData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InterchainQueryPacketData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InterchainQueryPacketData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.InterchainQueryPacketData.data)
  return _impl_.data_.Release();
}
inline void InterchainQueryPacketData::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.InterchainQueryPacketData.data)
}

// string memo = 2 [json_name = "memo"];
inline void InterchainQueryPacketData::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& InterchainQueryPacketData::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.InterchainQueryPacketData.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainQueryPacketData::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.InterchainQueryPacketData.memo)
}
inline std::string* InterchainQueryPacketData::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.InterchainQueryPacketData.memo)
  return _s;
}
inline const std::string& InterchainQueryPacketData::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void InterchainQueryPacketData::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* InterchainQueryPacketData::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* InterchainQueryPacketData::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.InterchainQueryPacketData.memo)
  return _impl_.memo_.Release();
}
inline void InterchainQueryPacketData::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.memo_.IsDefault()) {
    _impl_.memo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.InterchainQueryPacketData.memo)
}

// -------------------------------------------------------------------

// InterchainQueryPacketAck

// bytes data = 1 [json_name = "data"];
inline void InterchainQueryPacketAck::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InterchainQueryPacketAck::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.InterchainQueryPacketAck.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainQueryPacketAck::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.InterchainQueryPacketAck.data)
}
inline std::string* InterchainQueryPacketAck::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.InterchainQueryPacketAck.data)
  return _s;
}
inline const std::string& InterchainQueryPacketAck::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void InterchainQueryPacketAck::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InterchainQueryPacketAck::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InterchainQueryPacketAck::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.InterchainQueryPacketAck.data)
  return _impl_.data_.Release();
}
inline void InterchainQueryPacketAck::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.InterchainQueryPacketAck.data)
}

// -------------------------------------------------------------------

// InterchainQueryRequestPacket

// repeated .xion.feeabs.v1beta1.InterchainQueryRequest requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
inline int InterchainQueryRequestPacket::_internal_requests_size() const {
  return _internal_requests().size();
}
inline int InterchainQueryRequestPacket::requests_size() const {
  return _internal_requests_size();
}
inline void InterchainQueryRequestPacket::clear_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_.Clear();
}
inline ::xion::feeabs::v1beta1::InterchainQueryRequest* InterchainQueryRequestPacket::mutable_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.InterchainQueryRequestPacket.requests)
  return _internal_mutable_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>* InterchainQueryRequestPacket::mutable_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.feeabs.v1beta1.InterchainQueryRequestPacket.requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_requests();
}
inline const ::xion::feeabs::v1beta1::InterchainQueryRequest& InterchainQueryRequestPacket::requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.InterchainQueryRequestPacket.requests)
  return _internal_requests().Get(index);
}
inline ::xion::feeabs::v1beta1::InterchainQueryRequest* InterchainQueryRequestPacket::add_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xion::feeabs::v1beta1::InterchainQueryRequest* _add = _internal_mutable_requests()->Add();
  // @@protoc_insertion_point(field_add:xion.feeabs.v1beta1.InterchainQueryRequestPacket.requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>& InterchainQueryRequestPacket::requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.feeabs.v1beta1.InterchainQueryRequestPacket.requests)
  return _internal_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>&
InterchainQueryRequestPacket::_internal_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requests_;
}
inline ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::InterchainQueryRequest>*
InterchainQueryRequestPacket::_internal_mutable_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.requests_;
}

// -------------------------------------------------------------------

// CosmosQuery

// repeated .tendermint.abci.RequestQuery requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
inline int CosmosQuery::_internal_requests_size() const {
  return _internal_requests().size();
}
inline int CosmosQuery::requests_size() const {
  return _internal_requests_size();
}
inline ::tendermint::abci::RequestQuery* CosmosQuery::mutable_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.CosmosQuery.requests)
  return _internal_mutable_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>* CosmosQuery::mutable_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.feeabs.v1beta1.CosmosQuery.requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_requests();
}
inline const ::tendermint::abci::RequestQuery& CosmosQuery::requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.CosmosQuery.requests)
  return _internal_requests().Get(index);
}
inline ::tendermint::abci::RequestQuery* CosmosQuery::add_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tendermint::abci::RequestQuery* _add = _internal_mutable_requests()->Add();
  // @@protoc_insertion_point(field_add:xion.feeabs.v1beta1.CosmosQuery.requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>& CosmosQuery::requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.feeabs.v1beta1.CosmosQuery.requests)
  return _internal_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>&
CosmosQuery::_internal_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requests_;
}
inline ::google::protobuf::RepeatedPtrField<::tendermint::abci::RequestQuery>*
CosmosQuery::_internal_mutable_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.requests_;
}

// -------------------------------------------------------------------

// CosmosResponse

// repeated .tendermint.abci.ResponseQuery responses = 1 [json_name = "responses", (.gogoproto.nullable) = false];
inline int CosmosResponse::_internal_responses_size() const {
  return _internal_responses().size();
}
inline int CosmosResponse::responses_size() const {
  return _internal_responses_size();
}
inline ::tendermint::abci::ResponseQuery* CosmosResponse::mutable_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.CosmosResponse.responses)
  return _internal_mutable_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>* CosmosResponse::mutable_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.feeabs.v1beta1.CosmosResponse.responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_responses();
}
inline const ::tendermint::abci::ResponseQuery& CosmosResponse::responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.CosmosResponse.responses)
  return _internal_responses().Get(index);
}
inline ::tendermint::abci::ResponseQuery* CosmosResponse::add_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tendermint::abci::ResponseQuery* _add = _internal_mutable_responses()->Add();
  // @@protoc_insertion_point(field_add:xion.feeabs.v1beta1.CosmosResponse.responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>& CosmosResponse::responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.feeabs.v1beta1.CosmosResponse.responses)
  return _internal_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>&
CosmosResponse::_internal_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.responses_;
}
inline ::google::protobuf::RepeatedPtrField<::tendermint::abci::ResponseQuery>*
CosmosResponse::_internal_mutable_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.responses_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_2epb_2eh
