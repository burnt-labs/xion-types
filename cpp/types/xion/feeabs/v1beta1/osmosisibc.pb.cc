// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/feeabs/v1beta1/osmosisibc.proto
// Protobuf C++ Version: 5.29.4

#include "xion/feeabs/v1beta1/osmosisibc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xion {
namespace feeabs {
namespace v1beta1 {

inline constexpr QueryArithmeticTwapToNowResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : arithmetic_twap_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryArithmeticTwapToNowResponse::QueryArithmeticTwapToNowResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryArithmeticTwapToNowResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryArithmeticTwapToNowResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryArithmeticTwapToNowResponseDefaultTypeInternal() {}
  union {
    QueryArithmeticTwapToNowResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryArithmeticTwapToNowResponseDefaultTypeInternal _QueryArithmeticTwapToNowResponse_default_instance_;

inline constexpr InterchainQueryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterchainQueryRequest::InterchainQueryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterchainQueryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterchainQueryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterchainQueryRequestDefaultTypeInternal() {}
  union {
    InterchainQueryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterchainQueryRequestDefaultTypeInternal _InterchainQueryRequest_default_instance_;

inline constexpr InterchainQueryPacketData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterchainQueryPacketData::InterchainQueryPacketData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterchainQueryPacketDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterchainQueryPacketDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterchainQueryPacketDataDefaultTypeInternal() {}
  union {
    InterchainQueryPacketData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterchainQueryPacketDataDefaultTypeInternal _InterchainQueryPacketData_default_instance_;

inline constexpr InterchainQueryPacketAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterchainQueryPacketAck::InterchainQueryPacketAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterchainQueryPacketAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterchainQueryPacketAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterchainQueryPacketAckDefaultTypeInternal() {}
  union {
    InterchainQueryPacketAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterchainQueryPacketAckDefaultTypeInternal _InterchainQueryPacketAck_default_instance_;

inline constexpr QueryArithmeticTwapToNowRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_asset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quote_asset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_{nullptr},
        pool_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR QueryArithmeticTwapToNowRequest::QueryArithmeticTwapToNowRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryArithmeticTwapToNowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryArithmeticTwapToNowRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryArithmeticTwapToNowRequestDefaultTypeInternal() {}
  union {
    QueryArithmeticTwapToNowRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryArithmeticTwapToNowRequestDefaultTypeInternal _QueryArithmeticTwapToNowRequest_default_instance_;

inline constexpr InterchainQueryRequestPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requests_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterchainQueryRequestPacket::InterchainQueryRequestPacket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterchainQueryRequestPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterchainQueryRequestPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterchainQueryRequestPacketDefaultTypeInternal() {}
  union {
    InterchainQueryRequestPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterchainQueryRequestPacketDefaultTypeInternal _InterchainQueryRequestPacket_default_instance_;

inline constexpr CosmosQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requests_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CosmosQuery::CosmosQuery(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CosmosQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CosmosQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CosmosQueryDefaultTypeInternal() {}
  union {
    CosmosQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CosmosQueryDefaultTypeInternal _CosmosQuery_default_instance_;

inline constexpr CosmosResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : responses_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CosmosResponse::CosmosResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CosmosResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CosmosResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CosmosResponseDefaultTypeInternal() {}
  union {
    CosmosResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CosmosResponseDefaultTypeInternal _CosmosResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto = nullptr;
const ::uint32_t
    TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest, _impl_.pool_id_),
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest, _impl_.base_asset_),
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest, _impl_.quote_asset_),
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest, _impl_.start_time_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowResponse, _impl_.arithmetic_twap_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryRequest, _impl_.path_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryPacketData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryPacketData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryPacketData, _impl_.memo_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryPacketAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryPacketAck, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryRequestPacket, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::InterchainQueryRequestPacket, _impl_.requests_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::CosmosQuery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::CosmosQuery, _impl_.requests_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::CosmosResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::feeabs::v1beta1::CosmosResponse, _impl_.responses_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest)},
        {16, -1, -1, sizeof(::xion::feeabs::v1beta1::QueryArithmeticTwapToNowResponse)},
        {25, -1, -1, sizeof(::xion::feeabs::v1beta1::InterchainQueryRequest)},
        {35, -1, -1, sizeof(::xion::feeabs::v1beta1::InterchainQueryPacketData)},
        {45, -1, -1, sizeof(::xion::feeabs::v1beta1::InterchainQueryPacketAck)},
        {54, -1, -1, sizeof(::xion::feeabs::v1beta1::InterchainQueryRequestPacket)},
        {63, -1, -1, sizeof(::xion::feeabs::v1beta1::CosmosQuery)},
        {72, -1, -1, sizeof(::xion::feeabs::v1beta1::CosmosResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::xion::feeabs::v1beta1::_QueryArithmeticTwapToNowRequest_default_instance_._instance,
    &::xion::feeabs::v1beta1::_QueryArithmeticTwapToNowResponse_default_instance_._instance,
    &::xion::feeabs::v1beta1::_InterchainQueryRequest_default_instance_._instance,
    &::xion::feeabs::v1beta1::_InterchainQueryPacketData_default_instance_._instance,
    &::xion::feeabs::v1beta1::_InterchainQueryPacketAck_default_instance_._instance,
    &::xion::feeabs::v1beta1::_InterchainQueryRequestPacket_default_instance_._instance,
    &::xion::feeabs::v1beta1::_CosmosQuery_default_instance_._instance,
    &::xion::feeabs::v1beta1::_CosmosResponse_default_instance_._instance,
};
const char descriptor_table_protodef_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$xion/feeabs/v1beta1/osmosisibc.proto\022\023"
    "xion.feeabs.v1beta1\032\024gogoproto/gogo.prot"
    "o\032\037google/protobuf/timestamp.proto\032\033tend"
    "ermint/abci/types.proto\"\324\001\n\037QueryArithme"
    "ticTwapToNowRequest\022\027\n\007pool_id\030\001 \001(\004R\006po"
    "olId\022\035\n\nbase_asset\030\002 \001(\tR\tbaseAsset\022\037\n\013q"
    "uote_asset\030\003 \001(\tR\nquoteAsset\022X\n\nstart_ti"
    "me\030\004 \001(\0132\032.google.protobuf.TimestampB\035\310\336"
    "\037\000\362\336\037\021yaml:\"start_time\"\220\337\037\001R\tstartTime\"\212"
    "\001\n QueryArithmeticTwapToNowResponse\022f\n\017a"
    "rithmetic_twap\030\001 \001(\tB=\310\336\037\000\332\336\037\033cosmossdk."
    "io/math.LegacyDec\362\336\037\026yaml:\"arithmetic_tw"
    "ap\"R\016arithmeticTwap\"@\n\026InterchainQueryRe"
    "quest\022\022\n\004data\030\001 \001(\014R\004data\022\022\n\004path\030\002 \001(\tR"
    "\004path\"C\n\031InterchainQueryPacketData\022\022\n\004da"
    "ta\030\001 \001(\014R\004data\022\022\n\004memo\030\002 \001(\tR\004memo\".\n\030In"
    "terchainQueryPacketAck\022\022\n\004data\030\001 \001(\014R\004da"
    "ta\"m\n\034InterchainQueryRequestPacket\022M\n\010re"
    "quests\030\001 \003(\0132+.xion.feeabs.v1beta1.Inter"
    "chainQueryRequestB\004\310\336\037\000R\010requests\"N\n\013Cos"
    "mosQuery\022\?\n\010requests\030\001 \003(\0132\035.tendermint."
    "abci.RequestQueryB\004\310\336\037\000R\010requests\"T\n\016Cos"
    "mosResponse\022B\n\tresponses\030\001 \003(\0132\036.tenderm"
    "int.abci.ResponseQueryB\004\310\336\037\000R\tresponsesB"
    "+Z)github.com/burnt-labs/xion/x/feeabs/t"
    "ypesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_deps[3] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_tendermint_2fabci_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto = {
    false,
    false,
    1012,
    descriptor_table_protodef_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    "xion/feeabs/v1beta1/osmosisibc.proto",
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_once,
    descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto_deps,
    3,
    8,
    schemas,
    file_default_instances,
    TableStruct_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto::offsets,
    file_level_enum_descriptors_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    file_level_service_descriptors_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
};
namespace xion {
namespace feeabs {
namespace v1beta1 {
// ===================================================================

class QueryArithmeticTwapToNowRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryArithmeticTwapToNowRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_._has_bits_);
};

void QueryArithmeticTwapToNowRequest::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ != nullptr) _impl_.start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryArithmeticTwapToNowRequest::QueryArithmeticTwapToNowRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryArithmeticTwapToNowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        base_asset_(arena, from.base_asset_),
        quote_asset_(arena, from.quote_asset_) {}

QueryArithmeticTwapToNowRequest::QueryArithmeticTwapToNowRequest(
    ::google::protobuf::Arena* arena,
    const QueryArithmeticTwapToNowRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryArithmeticTwapToNowRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.start_time_)
                        : nullptr;
  _impl_.pool_id_ = from._impl_.pool_id_;

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryArithmeticTwapToNowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        base_asset_(arena),
        quote_asset_(arena) {}

inline void QueryArithmeticTwapToNowRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, pool_id_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::pool_id_));
}
QueryArithmeticTwapToNowRequest::~QueryArithmeticTwapToNowRequest() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
  SharedDtor(*this);
}
inline void QueryArithmeticTwapToNowRequest::SharedDtor(MessageLite& self) {
  QueryArithmeticTwapToNowRequest& this_ = static_cast<QueryArithmeticTwapToNowRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.base_asset_.Destroy();
  this_._impl_.quote_asset_.Destroy();
  delete this_._impl_.start_time_;
  this_._impl_.~Impl_();
}

inline void* QueryArithmeticTwapToNowRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryArithmeticTwapToNowRequest(arena);
}
constexpr auto QueryArithmeticTwapToNowRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryArithmeticTwapToNowRequest),
                                            alignof(QueryArithmeticTwapToNowRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryArithmeticTwapToNowRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryArithmeticTwapToNowRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryArithmeticTwapToNowRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryArithmeticTwapToNowRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryArithmeticTwapToNowRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryArithmeticTwapToNowRequest>(), &QueryArithmeticTwapToNowRequest::ByteSizeLong,
            &QueryArithmeticTwapToNowRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_._cached_size_),
        false,
    },
    &QueryArithmeticTwapToNowRequest::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryArithmeticTwapToNowRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 81, 2> QueryArithmeticTwapToNowRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::QueryArithmeticTwapToNowRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"start_time\"", (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.start_time_)}},
    // uint64 pool_id = 1 [json_name = "poolId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryArithmeticTwapToNowRequest, _impl_.pool_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.pool_id_)}},
    // string base_asset = 2 [json_name = "baseAsset"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.base_asset_)}},
    // string quote_asset = 3 [json_name = "quoteAsset"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.quote_asset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 pool_id = 1 [json_name = "poolId"];
    {PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.pool_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string base_asset = 2 [json_name = "baseAsset"];
    {PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.base_asset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string quote_asset = 3 [json_name = "quoteAsset"];
    {PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.quote_asset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"start_time\"", (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\63\0\12\13\0\0\0\0"
    "xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest"
    "base_asset"
    "quote_asset"
  }},
};

PROTOBUF_NOINLINE void QueryArithmeticTwapToNowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.base_asset_.ClearToEmpty();
  _impl_.quote_asset_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.start_time_ != nullptr);
    _impl_.start_time_->Clear();
  }
  _impl_.pool_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryArithmeticTwapToNowRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryArithmeticTwapToNowRequest& this_ = static_cast<const QueryArithmeticTwapToNowRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryArithmeticTwapToNowRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryArithmeticTwapToNowRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 pool_id = 1 [json_name = "poolId"];
          if (this_._internal_pool_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_pool_id(), target);
          }

          // string base_asset = 2 [json_name = "baseAsset"];
          if (!this_._internal_base_asset().empty()) {
            const std::string& _s = this_._internal_base_asset();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.base_asset");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string quote_asset = 3 [json_name = "quoteAsset"];
          if (!this_._internal_quote_asset().empty()) {
            const std::string& _s = this_._internal_quote_asset();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest.quote_asset");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"start_time\"", (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.start_time_, this_._impl_.start_time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryArithmeticTwapToNowRequest::ByteSizeLong(const MessageLite& base) {
          const QueryArithmeticTwapToNowRequest& this_ = static_cast<const QueryArithmeticTwapToNowRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryArithmeticTwapToNowRequest::ByteSizeLong() const {
          const QueryArithmeticTwapToNowRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string base_asset = 2 [json_name = "baseAsset"];
            if (!this_._internal_base_asset().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_base_asset());
            }
            // string quote_asset = 3 [json_name = "quoteAsset"];
            if (!this_._internal_quote_asset().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_quote_asset());
            }
          }
           {
            // .google.protobuf.Timestamp start_time = 4 [json_name = "startTime", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"start_time\"", (.gogoproto.stdtime) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_time_);
            }
          }
           {
            // uint64 pool_id = 1 [json_name = "poolId"];
            if (this_._internal_pool_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_pool_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryArithmeticTwapToNowRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryArithmeticTwapToNowRequest*>(&to_msg);
  auto& from = static_cast<const QueryArithmeticTwapToNowRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_base_asset().empty()) {
    _this->_internal_set_base_asset(from._internal_base_asset());
  }
  if (!from._internal_quote_asset().empty()) {
    _this->_internal_set_quote_asset(from._internal_quote_asset());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.start_time_ != nullptr);
    if (_this->_impl_.start_time_ == nullptr) {
      _this->_impl_.start_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.start_time_);
    } else {
      _this->_impl_.start_time_->MergeFrom(*from._impl_.start_time_);
    }
  }
  if (from._internal_pool_id() != 0) {
    _this->_impl_.pool_id_ = from._impl_.pool_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryArithmeticTwapToNowRequest::CopyFrom(const QueryArithmeticTwapToNowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryArithmeticTwapToNowRequest::InternalSwap(QueryArithmeticTwapToNowRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.base_asset_, &other->_impl_.base_asset_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.quote_asset_, &other->_impl_.quote_asset_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.pool_id_)
      + sizeof(QueryArithmeticTwapToNowRequest::_impl_.pool_id_)
      - PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowRequest, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata QueryArithmeticTwapToNowRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryArithmeticTwapToNowResponse::_Internal {
 public:
};

QueryArithmeticTwapToNowResponse::QueryArithmeticTwapToNowResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryArithmeticTwapToNowResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::QueryArithmeticTwapToNowResponse& from_msg)
      : arithmetic_twap_(arena, from.arithmetic_twap_),
        _cached_size_{0} {}

QueryArithmeticTwapToNowResponse::QueryArithmeticTwapToNowResponse(
    ::google::protobuf::Arena* arena,
    const QueryArithmeticTwapToNowResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryArithmeticTwapToNowResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryArithmeticTwapToNowResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : arithmetic_twap_(arena),
        _cached_size_{0} {}

inline void QueryArithmeticTwapToNowResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryArithmeticTwapToNowResponse::~QueryArithmeticTwapToNowResponse() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
  SharedDtor(*this);
}
inline void QueryArithmeticTwapToNowResponse::SharedDtor(MessageLite& self) {
  QueryArithmeticTwapToNowResponse& this_ = static_cast<QueryArithmeticTwapToNowResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.arithmetic_twap_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryArithmeticTwapToNowResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryArithmeticTwapToNowResponse(arena);
}
constexpr auto QueryArithmeticTwapToNowResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryArithmeticTwapToNowResponse),
                                            alignof(QueryArithmeticTwapToNowResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryArithmeticTwapToNowResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryArithmeticTwapToNowResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryArithmeticTwapToNowResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryArithmeticTwapToNowResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryArithmeticTwapToNowResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryArithmeticTwapToNowResponse>(), &QueryArithmeticTwapToNowResponse::ByteSizeLong,
            &QueryArithmeticTwapToNowResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowResponse, _impl_._cached_size_),
        false,
    },
    &QueryArithmeticTwapToNowResponse::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryArithmeticTwapToNowResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 76, 2> QueryArithmeticTwapToNowResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::QueryArithmeticTwapToNowResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowResponse, _impl_.arithmetic_twap_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
    {PROTOBUF_FIELD_OFFSET(QueryArithmeticTwapToNowResponse, _impl_.arithmetic_twap_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\17\0\0\0\0\0\0"
    "xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse"
    "arithmetic_twap"
  }},
};

PROTOBUF_NOINLINE void QueryArithmeticTwapToNowResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arithmetic_twap_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryArithmeticTwapToNowResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryArithmeticTwapToNowResponse& this_ = static_cast<const QueryArithmeticTwapToNowResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryArithmeticTwapToNowResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryArithmeticTwapToNowResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
          if (!this_._internal_arithmetic_twap().empty()) {
            const std::string& _s = this_._internal_arithmetic_twap();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse.arithmetic_twap");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryArithmeticTwapToNowResponse::ByteSizeLong(const MessageLite& base) {
          const QueryArithmeticTwapToNowResponse& this_ = static_cast<const QueryArithmeticTwapToNowResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryArithmeticTwapToNowResponse::ByteSizeLong() const {
          const QueryArithmeticTwapToNowResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
            if (!this_._internal_arithmetic_twap().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_arithmetic_twap());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryArithmeticTwapToNowResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryArithmeticTwapToNowResponse*>(&to_msg);
  auto& from = static_cast<const QueryArithmeticTwapToNowResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_arithmetic_twap().empty()) {
    _this->_internal_set_arithmetic_twap(from._internal_arithmetic_twap());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryArithmeticTwapToNowResponse::CopyFrom(const QueryArithmeticTwapToNowResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.QueryArithmeticTwapToNowResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryArithmeticTwapToNowResponse::InternalSwap(QueryArithmeticTwapToNowResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.arithmetic_twap_, &other->_impl_.arithmetic_twap_, arena);
}

::google::protobuf::Metadata QueryArithmeticTwapToNowResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterchainQueryRequest::_Internal {
 public:
};

InterchainQueryRequest::InterchainQueryRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.InterchainQueryRequest)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::InterchainQueryRequest& from_msg)
      : data_(arena, from.data_),
        path_(arena, from.path_),
        _cached_size_{0} {}

InterchainQueryRequest::InterchainQueryRequest(
    ::google::protobuf::Arena* arena,
    const InterchainQueryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterchainQueryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.InterchainQueryRequest)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        path_(arena),
        _cached_size_{0} {}

inline void InterchainQueryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InterchainQueryRequest::~InterchainQueryRequest() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.InterchainQueryRequest)
  SharedDtor(*this);
}
inline void InterchainQueryRequest::SharedDtor(MessageLite& self) {
  InterchainQueryRequest& this_ = static_cast<InterchainQueryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InterchainQueryRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterchainQueryRequest(arena);
}
constexpr auto InterchainQueryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InterchainQueryRequest),
                                            alignof(InterchainQueryRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterchainQueryRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterchainQueryRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterchainQueryRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterchainQueryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterchainQueryRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterchainQueryRequest>(), &InterchainQueryRequest::ByteSizeLong,
            &InterchainQueryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterchainQueryRequest, _impl_._cached_size_),
        false,
    },
    &InterchainQueryRequest::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterchainQueryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> InterchainQueryRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::InterchainQueryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string path = 2 [json_name = "path"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InterchainQueryRequest, _impl_.path_)}},
    // bytes data = 1 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InterchainQueryRequest, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(InterchainQueryRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string path = 2 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(InterchainQueryRequest, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\4\0\0\0\0\0"
    "xion.feeabs.v1beta1.InterchainQueryRequest"
    "path"
  }},
};

PROTOBUF_NOINLINE void InterchainQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.InterchainQueryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterchainQueryRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterchainQueryRequest& this_ = static_cast<const InterchainQueryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterchainQueryRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterchainQueryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.InterchainQueryRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // string path = 2 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.feeabs.v1beta1.InterchainQueryRequest.path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.InterchainQueryRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterchainQueryRequest::ByteSizeLong(const MessageLite& base) {
          const InterchainQueryRequest& this_ = static_cast<const InterchainQueryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterchainQueryRequest::ByteSizeLong() const {
          const InterchainQueryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.InterchainQueryRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes data = 1 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string path = 2 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterchainQueryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterchainQueryRequest*>(&to_msg);
  auto& from = static_cast<const InterchainQueryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.InterchainQueryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterchainQueryRequest::CopyFrom(const InterchainQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.InterchainQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterchainQueryRequest::InternalSwap(InterchainQueryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata InterchainQueryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterchainQueryPacketData::_Internal {
 public:
};

InterchainQueryPacketData::InterchainQueryPacketData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.InterchainQueryPacketData)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryPacketData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::InterchainQueryPacketData& from_msg)
      : data_(arena, from.data_),
        memo_(arena, from.memo_),
        _cached_size_{0} {}

InterchainQueryPacketData::InterchainQueryPacketData(
    ::google::protobuf::Arena* arena,
    const InterchainQueryPacketData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterchainQueryPacketData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.InterchainQueryPacketData)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryPacketData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        memo_(arena),
        _cached_size_{0} {}

inline void InterchainQueryPacketData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InterchainQueryPacketData::~InterchainQueryPacketData() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.InterchainQueryPacketData)
  SharedDtor(*this);
}
inline void InterchainQueryPacketData::SharedDtor(MessageLite& self) {
  InterchainQueryPacketData& this_ = static_cast<InterchainQueryPacketData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.memo_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InterchainQueryPacketData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterchainQueryPacketData(arena);
}
constexpr auto InterchainQueryPacketData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InterchainQueryPacketData),
                                            alignof(InterchainQueryPacketData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterchainQueryPacketData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterchainQueryPacketData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterchainQueryPacketData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterchainQueryPacketData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterchainQueryPacketData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterchainQueryPacketData>(), &InterchainQueryPacketData::ByteSizeLong,
            &InterchainQueryPacketData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterchainQueryPacketData, _impl_._cached_size_),
        false,
    },
    &InterchainQueryPacketData::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterchainQueryPacketData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> InterchainQueryPacketData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::InterchainQueryPacketData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string memo = 2 [json_name = "memo"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InterchainQueryPacketData, _impl_.memo_)}},
    // bytes data = 1 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InterchainQueryPacketData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(InterchainQueryPacketData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string memo = 2 [json_name = "memo"];
    {PROTOBUF_FIELD_OFFSET(InterchainQueryPacketData, _impl_.memo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\4\0\0\0\0\0"
    "xion.feeabs.v1beta1.InterchainQueryPacketData"
    "memo"
  }},
};

PROTOBUF_NOINLINE void InterchainQueryPacketData::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.InterchainQueryPacketData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.memo_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterchainQueryPacketData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterchainQueryPacketData& this_ = static_cast<const InterchainQueryPacketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterchainQueryPacketData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterchainQueryPacketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.InterchainQueryPacketData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // string memo = 2 [json_name = "memo"];
          if (!this_._internal_memo().empty()) {
            const std::string& _s = this_._internal_memo();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.feeabs.v1beta1.InterchainQueryPacketData.memo");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.InterchainQueryPacketData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterchainQueryPacketData::ByteSizeLong(const MessageLite& base) {
          const InterchainQueryPacketData& this_ = static_cast<const InterchainQueryPacketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterchainQueryPacketData::ByteSizeLong() const {
          const InterchainQueryPacketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.InterchainQueryPacketData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes data = 1 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string memo = 2 [json_name = "memo"];
            if (!this_._internal_memo().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_memo());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterchainQueryPacketData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterchainQueryPacketData*>(&to_msg);
  auto& from = static_cast<const InterchainQueryPacketData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.InterchainQueryPacketData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_memo().empty()) {
    _this->_internal_set_memo(from._internal_memo());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterchainQueryPacketData::CopyFrom(const InterchainQueryPacketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.InterchainQueryPacketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterchainQueryPacketData::InternalSwap(InterchainQueryPacketData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memo_, &other->_impl_.memo_, arena);
}

::google::protobuf::Metadata InterchainQueryPacketData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterchainQueryPacketAck::_Internal {
 public:
};

InterchainQueryPacketAck::InterchainQueryPacketAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.InterchainQueryPacketAck)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryPacketAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::InterchainQueryPacketAck& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

InterchainQueryPacketAck::InterchainQueryPacketAck(
    ::google::protobuf::Arena* arena,
    const InterchainQueryPacketAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterchainQueryPacketAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.InterchainQueryPacketAck)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryPacketAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void InterchainQueryPacketAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InterchainQueryPacketAck::~InterchainQueryPacketAck() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.InterchainQueryPacketAck)
  SharedDtor(*this);
}
inline void InterchainQueryPacketAck::SharedDtor(MessageLite& self) {
  InterchainQueryPacketAck& this_ = static_cast<InterchainQueryPacketAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InterchainQueryPacketAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterchainQueryPacketAck(arena);
}
constexpr auto InterchainQueryPacketAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InterchainQueryPacketAck),
                                            alignof(InterchainQueryPacketAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterchainQueryPacketAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterchainQueryPacketAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterchainQueryPacketAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterchainQueryPacketAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterchainQueryPacketAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterchainQueryPacketAck>(), &InterchainQueryPacketAck::ByteSizeLong,
            &InterchainQueryPacketAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterchainQueryPacketAck, _impl_._cached_size_),
        false,
    },
    &InterchainQueryPacketAck::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterchainQueryPacketAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> InterchainQueryPacketAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::InterchainQueryPacketAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InterchainQueryPacketAck, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(InterchainQueryPacketAck, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void InterchainQueryPacketAck::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.InterchainQueryPacketAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterchainQueryPacketAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterchainQueryPacketAck& this_ = static_cast<const InterchainQueryPacketAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterchainQueryPacketAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterchainQueryPacketAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.InterchainQueryPacketAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.InterchainQueryPacketAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterchainQueryPacketAck::ByteSizeLong(const MessageLite& base) {
          const InterchainQueryPacketAck& this_ = static_cast<const InterchainQueryPacketAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterchainQueryPacketAck::ByteSizeLong() const {
          const InterchainQueryPacketAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.InterchainQueryPacketAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterchainQueryPacketAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterchainQueryPacketAck*>(&to_msg);
  auto& from = static_cast<const InterchainQueryPacketAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.InterchainQueryPacketAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterchainQueryPacketAck::CopyFrom(const InterchainQueryPacketAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.InterchainQueryPacketAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterchainQueryPacketAck::InternalSwap(InterchainQueryPacketAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata InterchainQueryPacketAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterchainQueryRequestPacket::_Internal {
 public:
};

InterchainQueryRequestPacket::InterchainQueryRequestPacket(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryRequestPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::InterchainQueryRequestPacket& from_msg)
      : requests_{visibility, arena, from.requests_},
        _cached_size_{0} {}

InterchainQueryRequestPacket::InterchainQueryRequestPacket(
    ::google::protobuf::Arena* arena,
    const InterchainQueryRequestPacket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterchainQueryRequestPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
}
inline PROTOBUF_NDEBUG_INLINE InterchainQueryRequestPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : requests_{visibility, arena},
        _cached_size_{0} {}

inline void InterchainQueryRequestPacket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InterchainQueryRequestPacket::~InterchainQueryRequestPacket() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
  SharedDtor(*this);
}
inline void InterchainQueryRequestPacket::SharedDtor(MessageLite& self) {
  InterchainQueryRequestPacket& this_ = static_cast<InterchainQueryRequestPacket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* InterchainQueryRequestPacket::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterchainQueryRequestPacket(arena);
}
constexpr auto InterchainQueryRequestPacket::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InterchainQueryRequestPacket, _impl_.requests_) +
          decltype(InterchainQueryRequestPacket::_impl_.requests_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(InterchainQueryRequestPacket), alignof(InterchainQueryRequestPacket), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InterchainQueryRequestPacket::PlacementNew_,
                                 sizeof(InterchainQueryRequestPacket),
                                 alignof(InterchainQueryRequestPacket));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterchainQueryRequestPacket::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterchainQueryRequestPacket_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterchainQueryRequestPacket::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterchainQueryRequestPacket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterchainQueryRequestPacket::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterchainQueryRequestPacket>(), &InterchainQueryRequestPacket::ByteSizeLong,
            &InterchainQueryRequestPacket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterchainQueryRequestPacket, _impl_._cached_size_),
        false,
    },
    &InterchainQueryRequestPacket::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterchainQueryRequestPacket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> InterchainQueryRequestPacket::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::InterchainQueryRequestPacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .xion.feeabs.v1beta1.InterchainQueryRequest requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InterchainQueryRequestPacket, _impl_.requests_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .xion.feeabs.v1beta1.InterchainQueryRequest requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(InterchainQueryRequestPacket, _impl_.requests_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::InterchainQueryRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InterchainQueryRequestPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requests_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterchainQueryRequestPacket::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterchainQueryRequestPacket& this_ = static_cast<const InterchainQueryRequestPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterchainQueryRequestPacket::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterchainQueryRequestPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .xion.feeabs.v1beta1.InterchainQueryRequest requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_requests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_requests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterchainQueryRequestPacket::ByteSizeLong(const MessageLite& base) {
          const InterchainQueryRequestPacket& this_ = static_cast<const InterchainQueryRequestPacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterchainQueryRequestPacket::ByteSizeLong() const {
          const InterchainQueryRequestPacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .xion.feeabs.v1beta1.InterchainQueryRequest requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_requests_size();
              for (const auto& msg : this_._internal_requests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterchainQueryRequestPacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterchainQueryRequestPacket*>(&to_msg);
  auto& from = static_cast<const InterchainQueryRequestPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_requests()->MergeFrom(
      from._internal_requests());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterchainQueryRequestPacket::CopyFrom(const InterchainQueryRequestPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.InterchainQueryRequestPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterchainQueryRequestPacket::InternalSwap(InterchainQueryRequestPacket* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.requests_.InternalSwap(&other->_impl_.requests_);
}

::google::protobuf::Metadata InterchainQueryRequestPacket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CosmosQuery::_Internal {
 public:
};

void CosmosQuery::clear_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_.Clear();
}
CosmosQuery::CosmosQuery(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.CosmosQuery)
}
inline PROTOBUF_NDEBUG_INLINE CosmosQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::CosmosQuery& from_msg)
      : requests_{visibility, arena, from.requests_},
        _cached_size_{0} {}

CosmosQuery::CosmosQuery(
    ::google::protobuf::Arena* arena,
    const CosmosQuery& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CosmosQuery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.CosmosQuery)
}
inline PROTOBUF_NDEBUG_INLINE CosmosQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : requests_{visibility, arena},
        _cached_size_{0} {}

inline void CosmosQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CosmosQuery::~CosmosQuery() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.CosmosQuery)
  SharedDtor(*this);
}
inline void CosmosQuery::SharedDtor(MessageLite& self) {
  CosmosQuery& this_ = static_cast<CosmosQuery&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CosmosQuery::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CosmosQuery(arena);
}
constexpr auto CosmosQuery::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CosmosQuery, _impl_.requests_) +
          decltype(CosmosQuery::_impl_.requests_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CosmosQuery), alignof(CosmosQuery), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CosmosQuery::PlacementNew_,
                                 sizeof(CosmosQuery),
                                 alignof(CosmosQuery));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CosmosQuery::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CosmosQuery_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CosmosQuery::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CosmosQuery>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CosmosQuery::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CosmosQuery>(), &CosmosQuery::ByteSizeLong,
            &CosmosQuery::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CosmosQuery, _impl_._cached_size_),
        false,
    },
    &CosmosQuery::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CosmosQuery::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CosmosQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::CosmosQuery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.RequestQuery requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CosmosQuery, _impl_.requests_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tendermint.abci.RequestQuery requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(CosmosQuery, _impl_.requests_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestQuery>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CosmosQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.CosmosQuery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requests_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CosmosQuery::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CosmosQuery& this_ = static_cast<const CosmosQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CosmosQuery::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CosmosQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.CosmosQuery)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tendermint.abci.RequestQuery requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_requests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_requests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.CosmosQuery)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CosmosQuery::ByteSizeLong(const MessageLite& base) {
          const CosmosQuery& this_ = static_cast<const CosmosQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CosmosQuery::ByteSizeLong() const {
          const CosmosQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.CosmosQuery)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.RequestQuery requests = 1 [json_name = "requests", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_requests_size();
              for (const auto& msg : this_._internal_requests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CosmosQuery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CosmosQuery*>(&to_msg);
  auto& from = static_cast<const CosmosQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.CosmosQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_requests()->MergeFrom(
      from._internal_requests());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CosmosQuery::CopyFrom(const CosmosQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.CosmosQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CosmosQuery::InternalSwap(CosmosQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.requests_.InternalSwap(&other->_impl_.requests_);
}

::google::protobuf::Metadata CosmosQuery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CosmosResponse::_Internal {
 public:
};

void CosmosResponse::clear_responses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.responses_.Clear();
}
CosmosResponse::CosmosResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.feeabs.v1beta1.CosmosResponse)
}
inline PROTOBUF_NDEBUG_INLINE CosmosResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::feeabs::v1beta1::CosmosResponse& from_msg)
      : responses_{visibility, arena, from.responses_},
        _cached_size_{0} {}

CosmosResponse::CosmosResponse(
    ::google::protobuf::Arena* arena,
    const CosmosResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CosmosResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.feeabs.v1beta1.CosmosResponse)
}
inline PROTOBUF_NDEBUG_INLINE CosmosResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : responses_{visibility, arena},
        _cached_size_{0} {}

inline void CosmosResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CosmosResponse::~CosmosResponse() {
  // @@protoc_insertion_point(destructor:xion.feeabs.v1beta1.CosmosResponse)
  SharedDtor(*this);
}
inline void CosmosResponse::SharedDtor(MessageLite& self) {
  CosmosResponse& this_ = static_cast<CosmosResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CosmosResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CosmosResponse(arena);
}
constexpr auto CosmosResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CosmosResponse, _impl_.responses_) +
          decltype(CosmosResponse::_impl_.responses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CosmosResponse), alignof(CosmosResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CosmosResponse::PlacementNew_,
                                 sizeof(CosmosResponse),
                                 alignof(CosmosResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CosmosResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CosmosResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CosmosResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CosmosResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CosmosResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CosmosResponse>(), &CosmosResponse::ByteSizeLong,
            &CosmosResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CosmosResponse, _impl_._cached_size_),
        false,
    },
    &CosmosResponse::kDescriptorMethods,
    &descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CosmosResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CosmosResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::feeabs::v1beta1::CosmosResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.ResponseQuery responses = 1 [json_name = "responses", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CosmosResponse, _impl_.responses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tendermint.abci.ResponseQuery responses = 1 [json_name = "responses", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(CosmosResponse, _impl_.responses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseQuery>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CosmosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.feeabs.v1beta1.CosmosResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.responses_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CosmosResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CosmosResponse& this_ = static_cast<const CosmosResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CosmosResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CosmosResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.feeabs.v1beta1.CosmosResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tendermint.abci.ResponseQuery responses = 1 [json_name = "responses", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_responses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_responses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.feeabs.v1beta1.CosmosResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CosmosResponse::ByteSizeLong(const MessageLite& base) {
          const CosmosResponse& this_ = static_cast<const CosmosResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CosmosResponse::ByteSizeLong() const {
          const CosmosResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.feeabs.v1beta1.CosmosResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.ResponseQuery responses = 1 [json_name = "responses", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_responses_size();
              for (const auto& msg : this_._internal_responses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CosmosResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CosmosResponse*>(&to_msg);
  auto& from = static_cast<const CosmosResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.feeabs.v1beta1.CosmosResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_responses()->MergeFrom(
      from._internal_responses());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CosmosResponse::CopyFrom(const CosmosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.feeabs.v1beta1.CosmosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CosmosResponse::InternalSwap(CosmosResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.responses_.InternalSwap(&other->_impl_.responses_);
}

::google::protobuf::Metadata CosmosResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_xion_2ffeeabs_2fv1beta1_2fosmosisibc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
