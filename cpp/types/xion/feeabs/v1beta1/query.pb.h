// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/feeabs/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef xion_2ffeeabs_2fv1beta1_2fquery_2eproto_2epb_2eh
#define xion_2ffeeabs_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "xion/feeabs/v1beta1/proposal.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xion_2ffeeabs_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
namespace xion {
namespace feeabs {
namespace v1beta1 {
class AllQueryHostChainConfigRequest;
struct AllQueryHostChainConfigRequestDefaultTypeInternal;
extern AllQueryHostChainConfigRequestDefaultTypeInternal _AllQueryHostChainConfigRequest_default_instance_;
class AllQueryHostChainConfigResponse;
struct AllQueryHostChainConfigResponseDefaultTypeInternal;
extern AllQueryHostChainConfigResponseDefaultTypeInternal _AllQueryHostChainConfigResponse_default_instance_;
class QueryFeeabsModuleBalacesRequest;
struct QueryFeeabsModuleBalacesRequestDefaultTypeInternal;
extern QueryFeeabsModuleBalacesRequestDefaultTypeInternal _QueryFeeabsModuleBalacesRequest_default_instance_;
class QueryFeeabsModuleBalacesResponse;
struct QueryFeeabsModuleBalacesResponseDefaultTypeInternal;
extern QueryFeeabsModuleBalacesResponseDefaultTypeInternal _QueryFeeabsModuleBalacesResponse_default_instance_;
class QueryHostChainConfigRequest;
struct QueryHostChainConfigRequestDefaultTypeInternal;
extern QueryHostChainConfigRequestDefaultTypeInternal _QueryHostChainConfigRequest_default_instance_;
class QueryHostChainConfigResponse;
struct QueryHostChainConfigResponseDefaultTypeInternal;
extern QueryHostChainConfigResponseDefaultTypeInternal _QueryHostChainConfigResponse_default_instance_;
class QueryOsmosisArithmeticTwapRequest;
struct QueryOsmosisArithmeticTwapRequestDefaultTypeInternal;
extern QueryOsmosisArithmeticTwapRequestDefaultTypeInternal _QueryOsmosisArithmeticTwapRequest_default_instance_;
class QueryOsmosisArithmeticTwapResponse;
struct QueryOsmosisArithmeticTwapResponseDefaultTypeInternal;
extern QueryOsmosisArithmeticTwapResponseDefaultTypeInternal _QueryOsmosisArithmeticTwapResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xion {
namespace feeabs {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryOsmosisArithmeticTwapResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse) */ {
 public:
  inline QueryOsmosisArithmeticTwapResponse() : QueryOsmosisArithmeticTwapResponse(nullptr) {}
  ~QueryOsmosisArithmeticTwapResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryOsmosisArithmeticTwapResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryOsmosisArithmeticTwapResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryOsmosisArithmeticTwapResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryOsmosisArithmeticTwapResponse(const QueryOsmosisArithmeticTwapResponse& from) : QueryOsmosisArithmeticTwapResponse(nullptr, from) {}
  inline QueryOsmosisArithmeticTwapResponse(QueryOsmosisArithmeticTwapResponse&& from) noexcept
      : QueryOsmosisArithmeticTwapResponse(nullptr, std::move(from)) {}
  inline QueryOsmosisArithmeticTwapResponse& operator=(const QueryOsmosisArithmeticTwapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryOsmosisArithmeticTwapResponse& operator=(QueryOsmosisArithmeticTwapResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryOsmosisArithmeticTwapResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryOsmosisArithmeticTwapResponse* internal_default_instance() {
    return reinterpret_cast<const QueryOsmosisArithmeticTwapResponse*>(
        &_QueryOsmosisArithmeticTwapResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryOsmosisArithmeticTwapResponse& a, QueryOsmosisArithmeticTwapResponse& b) { a.Swap(&b); }
  inline void Swap(QueryOsmosisArithmeticTwapResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryOsmosisArithmeticTwapResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryOsmosisArithmeticTwapResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryOsmosisArithmeticTwapResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryOsmosisArithmeticTwapResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryOsmosisArithmeticTwapResponse& from) { QueryOsmosisArithmeticTwapResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryOsmosisArithmeticTwapResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse"; }

 protected:
  explicit QueryOsmosisArithmeticTwapResponse(::google::protobuf::Arena* arena);
  QueryOsmosisArithmeticTwapResponse(::google::protobuf::Arena* arena, const QueryOsmosisArithmeticTwapResponse& from);
  QueryOsmosisArithmeticTwapResponse(::google::protobuf::Arena* arena, QueryOsmosisArithmeticTwapResponse&& from) noexcept
      : QueryOsmosisArithmeticTwapResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArithmeticTwapFieldNumber = 1,
  };
  // string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
  void clear_arithmetic_twap() ;
  const std::string& arithmetic_twap() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_arithmetic_twap(Arg_&& arg, Args_... args);
  std::string* mutable_arithmetic_twap();
  PROTOBUF_NODISCARD std::string* release_arithmetic_twap();
  void set_allocated_arithmetic_twap(std::string* value);

  private:
  const std::string& _internal_arithmetic_twap() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_arithmetic_twap(
      const std::string& value);
  std::string* _internal_mutable_arithmetic_twap();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryOsmosisArithmeticTwapResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr arithmetic_twap_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryOsmosisArithmeticTwapRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest) */ {
 public:
  inline QueryOsmosisArithmeticTwapRequest() : QueryOsmosisArithmeticTwapRequest(nullptr) {}
  ~QueryOsmosisArithmeticTwapRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryOsmosisArithmeticTwapRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryOsmosisArithmeticTwapRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryOsmosisArithmeticTwapRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryOsmosisArithmeticTwapRequest(const QueryOsmosisArithmeticTwapRequest& from) : QueryOsmosisArithmeticTwapRequest(nullptr, from) {}
  inline QueryOsmosisArithmeticTwapRequest(QueryOsmosisArithmeticTwapRequest&& from) noexcept
      : QueryOsmosisArithmeticTwapRequest(nullptr, std::move(from)) {}
  inline QueryOsmosisArithmeticTwapRequest& operator=(const QueryOsmosisArithmeticTwapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryOsmosisArithmeticTwapRequest& operator=(QueryOsmosisArithmeticTwapRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryOsmosisArithmeticTwapRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryOsmosisArithmeticTwapRequest* internal_default_instance() {
    return reinterpret_cast<const QueryOsmosisArithmeticTwapRequest*>(
        &_QueryOsmosisArithmeticTwapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryOsmosisArithmeticTwapRequest& a, QueryOsmosisArithmeticTwapRequest& b) { a.Swap(&b); }
  inline void Swap(QueryOsmosisArithmeticTwapRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryOsmosisArithmeticTwapRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryOsmosisArithmeticTwapRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryOsmosisArithmeticTwapRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryOsmosisArithmeticTwapRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryOsmosisArithmeticTwapRequest& from) { QueryOsmosisArithmeticTwapRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryOsmosisArithmeticTwapRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest"; }

 protected:
  explicit QueryOsmosisArithmeticTwapRequest(::google::protobuf::Arena* arena);
  QueryOsmosisArithmeticTwapRequest(::google::protobuf::Arena* arena, const QueryOsmosisArithmeticTwapRequest& from);
  QueryOsmosisArithmeticTwapRequest(::google::protobuf::Arena* arena, QueryOsmosisArithmeticTwapRequest&& from) noexcept
      : QueryOsmosisArithmeticTwapRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIbcDenomFieldNumber = 1,
  };
  // string ibc_denom = 1 [json_name = "ibcDenom"];
  void clear_ibc_denom() ;
  const std::string& ibc_denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ibc_denom(Arg_&& arg, Args_... args);
  std::string* mutable_ibc_denom();
  PROTOBUF_NODISCARD std::string* release_ibc_denom();
  void set_allocated_ibc_denom(std::string* value);

  private:
  const std::string& _internal_ibc_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ibc_denom(
      const std::string& value);
  std::string* _internal_mutable_ibc_denom();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryOsmosisArithmeticTwapRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ibc_denom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryHostChainConfigRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryHostChainConfigRequest) */ {
 public:
  inline QueryHostChainConfigRequest() : QueryHostChainConfigRequest(nullptr) {}
  ~QueryHostChainConfigRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryHostChainConfigRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryHostChainConfigRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryHostChainConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryHostChainConfigRequest(const QueryHostChainConfigRequest& from) : QueryHostChainConfigRequest(nullptr, from) {}
  inline QueryHostChainConfigRequest(QueryHostChainConfigRequest&& from) noexcept
      : QueryHostChainConfigRequest(nullptr, std::move(from)) {}
  inline QueryHostChainConfigRequest& operator=(const QueryHostChainConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryHostChainConfigRequest& operator=(QueryHostChainConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryHostChainConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryHostChainConfigRequest* internal_default_instance() {
    return reinterpret_cast<const QueryHostChainConfigRequest*>(
        &_QueryHostChainConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryHostChainConfigRequest& a, QueryHostChainConfigRequest& b) { a.Swap(&b); }
  inline void Swap(QueryHostChainConfigRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryHostChainConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryHostChainConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryHostChainConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryHostChainConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryHostChainConfigRequest& from) { QueryHostChainConfigRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryHostChainConfigRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryHostChainConfigRequest"; }

 protected:
  explicit QueryHostChainConfigRequest(::google::protobuf::Arena* arena);
  QueryHostChainConfigRequest(::google::protobuf::Arena* arena, const QueryHostChainConfigRequest& from);
  QueryHostChainConfigRequest(::google::protobuf::Arena* arena, QueryHostChainConfigRequest&& from) noexcept
      : QueryHostChainConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIbcDenomFieldNumber = 1,
  };
  // string ibc_denom = 1 [json_name = "ibcDenom"];
  void clear_ibc_denom() ;
  const std::string& ibc_denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ibc_denom(Arg_&& arg, Args_... args);
  std::string* mutable_ibc_denom();
  PROTOBUF_NODISCARD std::string* release_ibc_denom();
  void set_allocated_ibc_denom(std::string* value);

  private:
  const std::string& _internal_ibc_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ibc_denom(
      const std::string& value);
  std::string* _internal_mutable_ibc_denom();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryHostChainConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryHostChainConfigRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr ibc_denom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryFeeabsModuleBalacesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesRequest) */ {
 public:
  inline QueryFeeabsModuleBalacesRequest() : QueryFeeabsModuleBalacesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryFeeabsModuleBalacesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryFeeabsModuleBalacesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryFeeabsModuleBalacesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryFeeabsModuleBalacesRequest(const QueryFeeabsModuleBalacesRequest& from) : QueryFeeabsModuleBalacesRequest(nullptr, from) {}
  inline QueryFeeabsModuleBalacesRequest(QueryFeeabsModuleBalacesRequest&& from) noexcept
      : QueryFeeabsModuleBalacesRequest(nullptr, std::move(from)) {}
  inline QueryFeeabsModuleBalacesRequest& operator=(const QueryFeeabsModuleBalacesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryFeeabsModuleBalacesRequest& operator=(QueryFeeabsModuleBalacesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryFeeabsModuleBalacesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryFeeabsModuleBalacesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryFeeabsModuleBalacesRequest*>(
        &_QueryFeeabsModuleBalacesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryFeeabsModuleBalacesRequest& a, QueryFeeabsModuleBalacesRequest& b) { a.Swap(&b); }
  inline void Swap(QueryFeeabsModuleBalacesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryFeeabsModuleBalacesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryFeeabsModuleBalacesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryFeeabsModuleBalacesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryFeeabsModuleBalacesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryFeeabsModuleBalacesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryFeeabsModuleBalacesRequest"; }

 protected:
  explicit QueryFeeabsModuleBalacesRequest(::google::protobuf::Arena* arena);
  QueryFeeabsModuleBalacesRequest(::google::protobuf::Arena* arena, const QueryFeeabsModuleBalacesRequest& from);
  QueryFeeabsModuleBalacesRequest(::google::protobuf::Arena* arena, QueryFeeabsModuleBalacesRequest&& from) noexcept
      : QueryFeeabsModuleBalacesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryFeeabsModuleBalacesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AllQueryHostChainConfigRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.AllQueryHostChainConfigRequest) */ {
 public:
  inline AllQueryHostChainConfigRequest() : AllQueryHostChainConfigRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AllQueryHostChainConfigRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AllQueryHostChainConfigRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AllQueryHostChainConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AllQueryHostChainConfigRequest(const AllQueryHostChainConfigRequest& from) : AllQueryHostChainConfigRequest(nullptr, from) {}
  inline AllQueryHostChainConfigRequest(AllQueryHostChainConfigRequest&& from) noexcept
      : AllQueryHostChainConfigRequest(nullptr, std::move(from)) {}
  inline AllQueryHostChainConfigRequest& operator=(const AllQueryHostChainConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AllQueryHostChainConfigRequest& operator=(AllQueryHostChainConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AllQueryHostChainConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AllQueryHostChainConfigRequest* internal_default_instance() {
    return reinterpret_cast<const AllQueryHostChainConfigRequest*>(
        &_AllQueryHostChainConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AllQueryHostChainConfigRequest& a, AllQueryHostChainConfigRequest& b) { a.Swap(&b); }
  inline void Swap(AllQueryHostChainConfigRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AllQueryHostChainConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AllQueryHostChainConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<AllQueryHostChainConfigRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AllQueryHostChainConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AllQueryHostChainConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.AllQueryHostChainConfigRequest"; }

 protected:
  explicit AllQueryHostChainConfigRequest(::google::protobuf::Arena* arena);
  AllQueryHostChainConfigRequest(::google::protobuf::Arena* arena, const AllQueryHostChainConfigRequest& from);
  AllQueryHostChainConfigRequest(::google::protobuf::Arena* arena, AllQueryHostChainConfigRequest&& from) noexcept
      : AllQueryHostChainConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.AllQueryHostChainConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AllQueryHostChainConfigRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryHostChainConfigResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryHostChainConfigResponse) */ {
 public:
  inline QueryHostChainConfigResponse() : QueryHostChainConfigResponse(nullptr) {}
  ~QueryHostChainConfigResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryHostChainConfigResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryHostChainConfigResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryHostChainConfigResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryHostChainConfigResponse(const QueryHostChainConfigResponse& from) : QueryHostChainConfigResponse(nullptr, from) {}
  inline QueryHostChainConfigResponse(QueryHostChainConfigResponse&& from) noexcept
      : QueryHostChainConfigResponse(nullptr, std::move(from)) {}
  inline QueryHostChainConfigResponse& operator=(const QueryHostChainConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryHostChainConfigResponse& operator=(QueryHostChainConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryHostChainConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryHostChainConfigResponse* internal_default_instance() {
    return reinterpret_cast<const QueryHostChainConfigResponse*>(
        &_QueryHostChainConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryHostChainConfigResponse& a, QueryHostChainConfigResponse& b) { a.Swap(&b); }
  inline void Swap(QueryHostChainConfigResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryHostChainConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryHostChainConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryHostChainConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryHostChainConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryHostChainConfigResponse& from) { QueryHostChainConfigResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryHostChainConfigResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryHostChainConfigResponse"; }

 protected:
  explicit QueryHostChainConfigResponse(::google::protobuf::Arena* arena);
  QueryHostChainConfigResponse(::google::protobuf::Arena* arena, const QueryHostChainConfigResponse& from);
  QueryHostChainConfigResponse(::google::protobuf::Arena* arena, QueryHostChainConfigResponse&& from) noexcept
      : QueryHostChainConfigResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostChainConfigFieldNumber = 1,
  };
  // .xion.feeabs.v1beta1.HostChainFeeAbsConfig host_chain_config = 1 [json_name = "hostChainConfig", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"host_chain_config\""];
  bool has_host_chain_config() const;
  void clear_host_chain_config() ;
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& host_chain_config() const;
  PROTOBUF_NODISCARD ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* release_host_chain_config();
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* mutable_host_chain_config();
  void set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value);
  void unsafe_arena_set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value);
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* unsafe_arena_release_host_chain_config();

  private:
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& _internal_host_chain_config() const;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _internal_mutable_host_chain_config();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryHostChainConfigResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryHostChainConfigResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* host_chain_config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryFeeabsModuleBalacesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse) */ {
 public:
  inline QueryFeeabsModuleBalacesResponse() : QueryFeeabsModuleBalacesResponse(nullptr) {}
  ~QueryFeeabsModuleBalacesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryFeeabsModuleBalacesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryFeeabsModuleBalacesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryFeeabsModuleBalacesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryFeeabsModuleBalacesResponse(const QueryFeeabsModuleBalacesResponse& from) : QueryFeeabsModuleBalacesResponse(nullptr, from) {}
  inline QueryFeeabsModuleBalacesResponse(QueryFeeabsModuleBalacesResponse&& from) noexcept
      : QueryFeeabsModuleBalacesResponse(nullptr, std::move(from)) {}
  inline QueryFeeabsModuleBalacesResponse& operator=(const QueryFeeabsModuleBalacesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryFeeabsModuleBalacesResponse& operator=(QueryFeeabsModuleBalacesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryFeeabsModuleBalacesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryFeeabsModuleBalacesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryFeeabsModuleBalacesResponse*>(
        &_QueryFeeabsModuleBalacesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryFeeabsModuleBalacesResponse& a, QueryFeeabsModuleBalacesResponse& b) { a.Swap(&b); }
  inline void Swap(QueryFeeabsModuleBalacesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryFeeabsModuleBalacesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryFeeabsModuleBalacesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryFeeabsModuleBalacesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryFeeabsModuleBalacesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryFeeabsModuleBalacesResponse& from) { QueryFeeabsModuleBalacesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryFeeabsModuleBalacesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse"; }

 protected:
  explicit QueryFeeabsModuleBalacesResponse(::google::protobuf::Arena* arena);
  QueryFeeabsModuleBalacesResponse(::google::protobuf::Arena* arena, const QueryFeeabsModuleBalacesResponse& from);
  QueryFeeabsModuleBalacesResponse(::google::protobuf::Arena* arena, QueryFeeabsModuleBalacesResponse&& from) noexcept
      : QueryFeeabsModuleBalacesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBalancesFieldNumber = 1,
    kAddressFieldNumber = 2,
  };
  // repeated .cosmos.base.v1beta1.Coin balances = 1 [json_name = "balances", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"balances\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  int balances_size() const;
  private:
  int _internal_balances_size() const;

  public:
  void clear_balances() ;
  ::cosmos::base::v1beta1::Coin* mutable_balances(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_balances();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_balances() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_balances();
  public:
  const ::cosmos::base::v1beta1::Coin& balances(int index) const;
  ::cosmos::base::v1beta1::Coin* add_balances();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& balances() const;
  // string address = 2 [json_name = "address"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryFeeabsModuleBalacesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > balances_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AllQueryHostChainConfigResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse) */ {
 public:
  inline AllQueryHostChainConfigResponse() : AllQueryHostChainConfigResponse(nullptr) {}
  ~AllQueryHostChainConfigResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AllQueryHostChainConfigResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AllQueryHostChainConfigResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AllQueryHostChainConfigResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AllQueryHostChainConfigResponse(const AllQueryHostChainConfigResponse& from) : AllQueryHostChainConfigResponse(nullptr, from) {}
  inline AllQueryHostChainConfigResponse(AllQueryHostChainConfigResponse&& from) noexcept
      : AllQueryHostChainConfigResponse(nullptr, std::move(from)) {}
  inline AllQueryHostChainConfigResponse& operator=(const AllQueryHostChainConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AllQueryHostChainConfigResponse& operator=(AllQueryHostChainConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AllQueryHostChainConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AllQueryHostChainConfigResponse* internal_default_instance() {
    return reinterpret_cast<const AllQueryHostChainConfigResponse*>(
        &_AllQueryHostChainConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AllQueryHostChainConfigResponse& a, AllQueryHostChainConfigResponse& b) { a.Swap(&b); }
  inline void Swap(AllQueryHostChainConfigResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AllQueryHostChainConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AllQueryHostChainConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AllQueryHostChainConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AllQueryHostChainConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AllQueryHostChainConfigResponse& from) { AllQueryHostChainConfigResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AllQueryHostChainConfigResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.feeabs.v1beta1.AllQueryHostChainConfigResponse"; }

 protected:
  explicit AllQueryHostChainConfigResponse(::google::protobuf::Arena* arena);
  AllQueryHostChainConfigResponse(::google::protobuf::Arena* arena, const AllQueryHostChainConfigResponse& from);
  AllQueryHostChainConfigResponse(::google::protobuf::Arena* arena, AllQueryHostChainConfigResponse&& from) noexcept
      : AllQueryHostChainConfigResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllHostChainConfigFieldNumber = 1,
  };
  // repeated .xion.feeabs.v1beta1.HostChainFeeAbsConfig all_host_chain_config = 1 [json_name = "allHostChainConfig", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"all_host_chain_config\""];
  int all_host_chain_config_size() const;
  private:
  int _internal_all_host_chain_config_size() const;

  public:
  void clear_all_host_chain_config() ;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* mutable_all_host_chain_config(int index);
  ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>* mutable_all_host_chain_config();

  private:
  const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>& _internal_all_host_chain_config() const;
  ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>* _internal_mutable_all_host_chain_config();
  public:
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& all_host_chain_config(int index) const;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* add_all_host_chain_config();
  const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>& all_host_chain_config() const;
  // @@protoc_insertion_point(class_scope:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AllQueryHostChainConfigResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::xion::feeabs::v1beta1::HostChainFeeAbsConfig > all_host_chain_config_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2ffeeabs_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryHostChainConfigRequest

// string ibc_denom = 1 [json_name = "ibcDenom"];
inline void QueryHostChainConfigRequest::clear_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.ClearToEmpty();
}
inline const std::string& QueryHostChainConfigRequest::ibc_denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryHostChainConfigRequest.ibc_denom)
  return _internal_ibc_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryHostChainConfigRequest::set_ibc_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryHostChainConfigRequest.ibc_denom)
}
inline std::string* QueryHostChainConfigRequest::mutable_ibc_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ibc_denom();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryHostChainConfigRequest.ibc_denom)
  return _s;
}
inline const std::string& QueryHostChainConfigRequest::_internal_ibc_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ibc_denom_.Get();
}
inline void QueryHostChainConfigRequest::_internal_set_ibc_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(value, GetArena());
}
inline std::string* QueryHostChainConfigRequest::_internal_mutable_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ibc_denom_.Mutable( GetArena());
}
inline std::string* QueryHostChainConfigRequest::release_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryHostChainConfigRequest.ibc_denom)
  return _impl_.ibc_denom_.Release();
}
inline void QueryHostChainConfigRequest::set_allocated_ibc_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ibc_denom_.IsDefault()) {
    _impl_.ibc_denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryHostChainConfigRequest.ibc_denom)
}

// -------------------------------------------------------------------

// QueryHostChainConfigResponse

// .xion.feeabs.v1beta1.HostChainFeeAbsConfig host_chain_config = 1 [json_name = "hostChainConfig", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"host_chain_config\""];
inline bool QueryHostChainConfigResponse::has_host_chain_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.host_chain_config_ != nullptr);
  return value;
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& QueryHostChainConfigResponse::_internal_host_chain_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* p = _impl_.host_chain_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig&>(::xion::feeabs::v1beta1::_HostChainFeeAbsConfig_default_instance_);
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& QueryHostChainConfigResponse::host_chain_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryHostChainConfigResponse.host_chain_config)
  return _internal_host_chain_config();
}
inline void QueryHostChainConfigResponse::unsafe_arena_set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.host_chain_config_);
  }
  _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.feeabs.v1beta1.QueryHostChainConfigResponse.host_chain_config)
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* QueryHostChainConfigResponse::release_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* released = _impl_.host_chain_config_;
  _impl_.host_chain_config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* QueryHostChainConfigResponse::unsafe_arena_release_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryHostChainConfigResponse.host_chain_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* temp = _impl_.host_chain_config_;
  _impl_.host_chain_config_ = nullptr;
  return temp;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* QueryHostChainConfigResponse::_internal_mutable_host_chain_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.host_chain_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>(GetArena());
    _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(p);
  }
  return _impl_.host_chain_config_;
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* QueryHostChainConfigResponse::mutable_host_chain_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _msg = _internal_mutable_host_chain_config();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryHostChainConfigResponse.host_chain_config)
  return _msg;
}
inline void QueryHostChainConfigResponse::set_allocated_host_chain_config(::xion::feeabs::v1beta1::HostChainFeeAbsConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.host_chain_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.host_chain_config_ = reinterpret_cast<::xion::feeabs::v1beta1::HostChainFeeAbsConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryHostChainConfigResponse.host_chain_config)
}

// -------------------------------------------------------------------

// QueryOsmosisArithmeticTwapRequest

// string ibc_denom = 1 [json_name = "ibcDenom"];
inline void QueryOsmosisArithmeticTwapRequest::clear_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.ClearToEmpty();
}
inline const std::string& QueryOsmosisArithmeticTwapRequest::ibc_denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest.ibc_denom)
  return _internal_ibc_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryOsmosisArithmeticTwapRequest::set_ibc_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest.ibc_denom)
}
inline std::string* QueryOsmosisArithmeticTwapRequest::mutable_ibc_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ibc_denom();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest.ibc_denom)
  return _s;
}
inline const std::string& QueryOsmosisArithmeticTwapRequest::_internal_ibc_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ibc_denom_.Get();
}
inline void QueryOsmosisArithmeticTwapRequest::_internal_set_ibc_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.Set(value, GetArena());
}
inline std::string* QueryOsmosisArithmeticTwapRequest::_internal_mutable_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ibc_denom_.Mutable( GetArena());
}
inline std::string* QueryOsmosisArithmeticTwapRequest::release_ibc_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest.ibc_denom)
  return _impl_.ibc_denom_.Release();
}
inline void QueryOsmosisArithmeticTwapRequest::set_allocated_ibc_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ibc_denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ibc_denom_.IsDefault()) {
    _impl_.ibc_denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapRequest.ibc_denom)
}

// -------------------------------------------------------------------

// QueryOsmosisArithmeticTwapResponse

// string arithmetic_twap = 1 [json_name = "arithmeticTwap", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"arithmetic_twap\""];
inline void QueryOsmosisArithmeticTwapResponse::clear_arithmetic_twap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.ClearToEmpty();
}
inline const std::string& QueryOsmosisArithmeticTwapResponse::arithmetic_twap() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse.arithmetic_twap)
  return _internal_arithmetic_twap();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryOsmosisArithmeticTwapResponse::set_arithmetic_twap(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse.arithmetic_twap)
}
inline std::string* QueryOsmosisArithmeticTwapResponse::mutable_arithmetic_twap() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_arithmetic_twap();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse.arithmetic_twap)
  return _s;
}
inline const std::string& QueryOsmosisArithmeticTwapResponse::_internal_arithmetic_twap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.arithmetic_twap_.Get();
}
inline void QueryOsmosisArithmeticTwapResponse::_internal_set_arithmetic_twap(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.Set(value, GetArena());
}
inline std::string* QueryOsmosisArithmeticTwapResponse::_internal_mutable_arithmetic_twap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.arithmetic_twap_.Mutable( GetArena());
}
inline std::string* QueryOsmosisArithmeticTwapResponse::release_arithmetic_twap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse.arithmetic_twap)
  return _impl_.arithmetic_twap_.Release();
}
inline void QueryOsmosisArithmeticTwapResponse::set_allocated_arithmetic_twap(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arithmetic_twap_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.arithmetic_twap_.IsDefault()) {
    _impl_.arithmetic_twap_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryOsmosisArithmeticTwapResponse.arithmetic_twap)
}

// -------------------------------------------------------------------

// QueryFeeabsModuleBalacesRequest

// -------------------------------------------------------------------

// QueryFeeabsModuleBalacesResponse

// repeated .cosmos.base.v1beta1.Coin balances = 1 [json_name = "balances", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"balances\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
inline int QueryFeeabsModuleBalacesResponse::_internal_balances_size() const {
  return _internal_balances().size();
}
inline int QueryFeeabsModuleBalacesResponse::balances_size() const {
  return _internal_balances_size();
}
inline ::cosmos::base::v1beta1::Coin* QueryFeeabsModuleBalacesResponse::mutable_balances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.balances)
  return _internal_mutable_balances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* QueryFeeabsModuleBalacesResponse::mutable_balances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.balances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_balances();
}
inline const ::cosmos::base::v1beta1::Coin& QueryFeeabsModuleBalacesResponse::balances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.balances)
  return _internal_balances().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* QueryFeeabsModuleBalacesResponse::add_balances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_balances()->Add();
  // @@protoc_insertion_point(field_add:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.balances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& QueryFeeabsModuleBalacesResponse::balances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.balances)
  return _internal_balances();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
QueryFeeabsModuleBalacesResponse::_internal_balances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balances_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
QueryFeeabsModuleBalacesResponse::_internal_mutable_balances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.balances_;
}

// string address = 2 [json_name = "address"];
inline void QueryFeeabsModuleBalacesResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryFeeabsModuleBalacesResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryFeeabsModuleBalacesResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.address)
}
inline std::string* QueryFeeabsModuleBalacesResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.address)
  return _s;
}
inline const std::string& QueryFeeabsModuleBalacesResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryFeeabsModuleBalacesResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryFeeabsModuleBalacesResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryFeeabsModuleBalacesResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.address)
  return _impl_.address_.Release();
}
inline void QueryFeeabsModuleBalacesResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.feeabs.v1beta1.QueryFeeabsModuleBalacesResponse.address)
}

// -------------------------------------------------------------------

// AllQueryHostChainConfigRequest

// -------------------------------------------------------------------

// AllQueryHostChainConfigResponse

// repeated .xion.feeabs.v1beta1.HostChainFeeAbsConfig all_host_chain_config = 1 [json_name = "allHostChainConfig", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"all_host_chain_config\""];
inline int AllQueryHostChainConfigResponse::_internal_all_host_chain_config_size() const {
  return _internal_all_host_chain_config().size();
}
inline int AllQueryHostChainConfigResponse::all_host_chain_config_size() const {
  return _internal_all_host_chain_config_size();
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* AllQueryHostChainConfigResponse::mutable_all_host_chain_config(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse.all_host_chain_config)
  return _internal_mutable_all_host_chain_config()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>* AllQueryHostChainConfigResponse::mutable_all_host_chain_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse.all_host_chain_config)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_all_host_chain_config();
}
inline const ::xion::feeabs::v1beta1::HostChainFeeAbsConfig& AllQueryHostChainConfigResponse::all_host_chain_config(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse.all_host_chain_config)
  return _internal_all_host_chain_config().Get(index);
}
inline ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* AllQueryHostChainConfigResponse::add_all_host_chain_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xion::feeabs::v1beta1::HostChainFeeAbsConfig* _add = _internal_mutable_all_host_chain_config()->Add();
  // @@protoc_insertion_point(field_add:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse.all_host_chain_config)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>& AllQueryHostChainConfigResponse::all_host_chain_config() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.feeabs.v1beta1.AllQueryHostChainConfigResponse.all_host_chain_config)
  return _internal_all_host_chain_config();
}
inline const ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>&
AllQueryHostChainConfigResponse::_internal_all_host_chain_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_host_chain_config_;
}
inline ::google::protobuf::RepeatedPtrField<::xion::feeabs::v1beta1::HostChainFeeAbsConfig>*
AllQueryHostChainConfigResponse::_internal_mutable_all_host_chain_config() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.all_host_chain_config_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feeabs
}  // namespace xion


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xion_2ffeeabs_2fv1beta1_2fquery_2eproto_2epb_2eh
