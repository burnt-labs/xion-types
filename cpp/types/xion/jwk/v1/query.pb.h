// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/jwk/v1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef xion_2fjwk_2fv1_2fquery_2eproto_2epb_2eh
#define xion_2fjwk_2fv1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "xion/jwk/v1/params.pb.h"
#include "xion/jwk/v1/audience.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xion_2fjwk_2fv1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_xion_2fjwk_2fv1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xion_2fjwk_2fv1_2fquery_2eproto;
namespace xion {
namespace jwk {
namespace v1 {
class PrivateClaim;
struct PrivateClaimDefaultTypeInternal;
extern PrivateClaimDefaultTypeInternal _PrivateClaim_default_instance_;
class QueryAllAudienceRequest;
struct QueryAllAudienceRequestDefaultTypeInternal;
extern QueryAllAudienceRequestDefaultTypeInternal _QueryAllAudienceRequest_default_instance_;
class QueryAllAudienceResponse;
struct QueryAllAudienceResponseDefaultTypeInternal;
extern QueryAllAudienceResponseDefaultTypeInternal _QueryAllAudienceResponse_default_instance_;
class QueryGetAudienceClaimRequest;
struct QueryGetAudienceClaimRequestDefaultTypeInternal;
extern QueryGetAudienceClaimRequestDefaultTypeInternal _QueryGetAudienceClaimRequest_default_instance_;
class QueryGetAudienceClaimResponse;
struct QueryGetAudienceClaimResponseDefaultTypeInternal;
extern QueryGetAudienceClaimResponseDefaultTypeInternal _QueryGetAudienceClaimResponse_default_instance_;
class QueryGetAudienceRequest;
struct QueryGetAudienceRequestDefaultTypeInternal;
extern QueryGetAudienceRequestDefaultTypeInternal _QueryGetAudienceRequest_default_instance_;
class QueryGetAudienceResponse;
struct QueryGetAudienceResponseDefaultTypeInternal;
extern QueryGetAudienceResponseDefaultTypeInternal _QueryGetAudienceResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
class QueryValidateJWTRequest;
struct QueryValidateJWTRequestDefaultTypeInternal;
extern QueryValidateJWTRequestDefaultTypeInternal _QueryValidateJWTRequest_default_instance_;
class QueryValidateJWTResponse;
struct QueryValidateJWTResponseDefaultTypeInternal;
extern QueryValidateJWTResponseDefaultTypeInternal _QueryValidateJWTResponse_default_instance_;
}  // namespace v1
}  // namespace jwk
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xion {
namespace jwk {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryValidateJWTRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryValidateJWTRequest) */ {
 public:
  inline QueryValidateJWTRequest() : QueryValidateJWTRequest(nullptr) {}
  ~QueryValidateJWTRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidateJWTRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidateJWTRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidateJWTRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidateJWTRequest(const QueryValidateJWTRequest& from) : QueryValidateJWTRequest(nullptr, from) {}
  inline QueryValidateJWTRequest(QueryValidateJWTRequest&& from) noexcept
      : QueryValidateJWTRequest(nullptr, std::move(from)) {}
  inline QueryValidateJWTRequest& operator=(const QueryValidateJWTRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidateJWTRequest& operator=(QueryValidateJWTRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidateJWTRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidateJWTRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidateJWTRequest*>(
        &_QueryValidateJWTRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryValidateJWTRequest& a, QueryValidateJWTRequest& b) { a.Swap(&b); }
  inline void Swap(QueryValidateJWTRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidateJWTRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidateJWTRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidateJWTRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidateJWTRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidateJWTRequest& from) { QueryValidateJWTRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidateJWTRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryValidateJWTRequest"; }

 protected:
  explicit QueryValidateJWTRequest(::google::protobuf::Arena* arena);
  QueryValidateJWTRequest(::google::protobuf::Arena* arena, const QueryValidateJWTRequest& from);
  QueryValidateJWTRequest(::google::protobuf::Arena* arena, QueryValidateJWTRequest&& from) noexcept
      : QueryValidateJWTRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudFieldNumber = 1,
    kSubFieldNumber = 2,
    kSigBytesFieldNumber = 3,
  };
  // string aud = 1 [json_name = "aud"];
  void clear_aud() ;
  const std::string& aud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud(Arg_&& arg, Args_... args);
  std::string* mutable_aud();
  PROTOBUF_NODISCARD std::string* release_aud();
  void set_allocated_aud(std::string* value);

  private:
  const std::string& _internal_aud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud(
      const std::string& value);
  std::string* _internal_mutable_aud();

  public:
  // string sub = 2 [json_name = "sub"];
  void clear_sub() ;
  const std::string& sub() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sub(Arg_&& arg, Args_... args);
  std::string* mutable_sub();
  PROTOBUF_NODISCARD std::string* release_sub();
  void set_allocated_sub(std::string* value);

  private:
  const std::string& _internal_sub() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sub(
      const std::string& value);
  std::string* _internal_mutable_sub();

  public:
  // string sigBytes = 3 [json_name = "sigBytes"];
  void clear_sigbytes() ;
  const std::string& sigbytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sigbytes(Arg_&& arg, Args_... args);
  std::string* mutable_sigbytes();
  PROTOBUF_NODISCARD std::string* release_sigbytes();
  void set_allocated_sigbytes(std::string* value);

  private:
  const std::string& _internal_sigbytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sigbytes(
      const std::string& value);
  std::string* _internal_mutable_sigbytes();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryValidateJWTRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidateJWTRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr aud_;
    ::google::protobuf::internal::ArenaStringPtr sub_;
    ::google::protobuf::internal::ArenaStringPtr sigbytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryGetAudienceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryGetAudienceRequest) */ {
 public:
  inline QueryGetAudienceRequest() : QueryGetAudienceRequest(nullptr) {}
  ~QueryGetAudienceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryGetAudienceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryGetAudienceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGetAudienceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryGetAudienceRequest(const QueryGetAudienceRequest& from) : QueryGetAudienceRequest(nullptr, from) {}
  inline QueryGetAudienceRequest(QueryGetAudienceRequest&& from) noexcept
      : QueryGetAudienceRequest(nullptr, std::move(from)) {}
  inline QueryGetAudienceRequest& operator=(const QueryGetAudienceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGetAudienceRequest& operator=(QueryGetAudienceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGetAudienceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGetAudienceRequest* internal_default_instance() {
    return reinterpret_cast<const QueryGetAudienceRequest*>(
        &_QueryGetAudienceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryGetAudienceRequest& a, QueryGetAudienceRequest& b) { a.Swap(&b); }
  inline void Swap(QueryGetAudienceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGetAudienceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGetAudienceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryGetAudienceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryGetAudienceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryGetAudienceRequest& from) { QueryGetAudienceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryGetAudienceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryGetAudienceRequest"; }

 protected:
  explicit QueryGetAudienceRequest(::google::protobuf::Arena* arena);
  QueryGetAudienceRequest(::google::protobuf::Arena* arena, const QueryGetAudienceRequest& from);
  QueryGetAudienceRequest(::google::protobuf::Arena* arena, QueryGetAudienceRequest&& from) noexcept
      : QueryGetAudienceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudFieldNumber = 1,
  };
  // string aud = 1 [json_name = "aud"];
  void clear_aud() ;
  const std::string& aud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud(Arg_&& arg, Args_... args);
  std::string* mutable_aud();
  PROTOBUF_NODISCARD std::string* release_aud();
  void set_allocated_aud(std::string* value);

  private:
  const std::string& _internal_aud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud(
      const std::string& value);
  std::string* _internal_mutable_aud();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryGetAudienceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryGetAudienceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr aud_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryGetAudienceClaimRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryGetAudienceClaimRequest) */ {
 public:
  inline QueryGetAudienceClaimRequest() : QueryGetAudienceClaimRequest(nullptr) {}
  ~QueryGetAudienceClaimRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryGetAudienceClaimRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryGetAudienceClaimRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGetAudienceClaimRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryGetAudienceClaimRequest(const QueryGetAudienceClaimRequest& from) : QueryGetAudienceClaimRequest(nullptr, from) {}
  inline QueryGetAudienceClaimRequest(QueryGetAudienceClaimRequest&& from) noexcept
      : QueryGetAudienceClaimRequest(nullptr, std::move(from)) {}
  inline QueryGetAudienceClaimRequest& operator=(const QueryGetAudienceClaimRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGetAudienceClaimRequest& operator=(QueryGetAudienceClaimRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGetAudienceClaimRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGetAudienceClaimRequest* internal_default_instance() {
    return reinterpret_cast<const QueryGetAudienceClaimRequest*>(
        &_QueryGetAudienceClaimRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryGetAudienceClaimRequest& a, QueryGetAudienceClaimRequest& b) { a.Swap(&b); }
  inline void Swap(QueryGetAudienceClaimRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGetAudienceClaimRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGetAudienceClaimRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryGetAudienceClaimRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryGetAudienceClaimRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryGetAudienceClaimRequest& from) { QueryGetAudienceClaimRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryGetAudienceClaimRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryGetAudienceClaimRequest"; }

 protected:
  explicit QueryGetAudienceClaimRequest(::google::protobuf::Arena* arena);
  QueryGetAudienceClaimRequest(::google::protobuf::Arena* arena, const QueryGetAudienceClaimRequest& from);
  QueryGetAudienceClaimRequest(::google::protobuf::Arena* arena, QueryGetAudienceClaimRequest&& from) noexcept
      : QueryGetAudienceClaimRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
  };
  // bytes hash = 1 [json_name = "hash"];
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryGetAudienceClaimRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryGetAudienceClaimRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class PrivateClaim final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.PrivateClaim) */ {
 public:
  inline PrivateClaim() : PrivateClaim(nullptr) {}
  ~PrivateClaim() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PrivateClaim* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PrivateClaim));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PrivateClaim(
      ::google::protobuf::internal::ConstantInitialized);

  inline PrivateClaim(const PrivateClaim& from) : PrivateClaim(nullptr, from) {}
  inline PrivateClaim(PrivateClaim&& from) noexcept
      : PrivateClaim(nullptr, std::move(from)) {}
  inline PrivateClaim& operator=(const PrivateClaim& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrivateClaim& operator=(PrivateClaim&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrivateClaim& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrivateClaim* internal_default_instance() {
    return reinterpret_cast<const PrivateClaim*>(
        &_PrivateClaim_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(PrivateClaim& a, PrivateClaim& b) { a.Swap(&b); }
  inline void Swap(PrivateClaim* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrivateClaim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrivateClaim* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PrivateClaim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PrivateClaim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PrivateClaim& from) { PrivateClaim::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PrivateClaim* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.PrivateClaim"; }

 protected:
  explicit PrivateClaim(::google::protobuf::Arena* arena);
  PrivateClaim(::google::protobuf::Arena* arena, const PrivateClaim& from);
  PrivateClaim(::google::protobuf::Arena* arena, PrivateClaim&& from) noexcept
      : PrivateClaim(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1 [json_name = "key"];
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string value = 2 [json_name = "value"];
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.PrivateClaim)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PrivateClaim& from_msg);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidateJWTResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryValidateJWTResponse) */ {
 public:
  inline QueryValidateJWTResponse() : QueryValidateJWTResponse(nullptr) {}
  ~QueryValidateJWTResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidateJWTResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidateJWTResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidateJWTResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidateJWTResponse(const QueryValidateJWTResponse& from) : QueryValidateJWTResponse(nullptr, from) {}
  inline QueryValidateJWTResponse(QueryValidateJWTResponse&& from) noexcept
      : QueryValidateJWTResponse(nullptr, std::move(from)) {}
  inline QueryValidateJWTResponse& operator=(const QueryValidateJWTResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidateJWTResponse& operator=(QueryValidateJWTResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidateJWTResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidateJWTResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidateJWTResponse*>(
        &_QueryValidateJWTResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QueryValidateJWTResponse& a, QueryValidateJWTResponse& b) { a.Swap(&b); }
  inline void Swap(QueryValidateJWTResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidateJWTResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidateJWTResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidateJWTResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidateJWTResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidateJWTResponse& from) { QueryValidateJWTResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidateJWTResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryValidateJWTResponse"; }

 protected:
  explicit QueryValidateJWTResponse(::google::protobuf::Arena* arena);
  QueryValidateJWTResponse(::google::protobuf::Arena* arena, const QueryValidateJWTResponse& from);
  QueryValidateJWTResponse(::google::protobuf::Arena* arena, QueryValidateJWTResponse&& from) noexcept
      : QueryValidateJWTResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrivateClaimsFieldNumber = 1,
  };
  // repeated .xion.jwk.v1.PrivateClaim privateClaims = 1 [json_name = "privateClaims"];
  int privateclaims_size() const;
  private:
  int _internal_privateclaims_size() const;

  public:
  void clear_privateclaims() ;
  ::xion::jwk::v1::PrivateClaim* mutable_privateclaims(int index);
  ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>* mutable_privateclaims();

  private:
  const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>& _internal_privateclaims() const;
  ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>* _internal_mutable_privateclaims();
  public:
  const ::xion::jwk::v1::PrivateClaim& privateclaims(int index) const;
  ::xion::jwk::v1::PrivateClaim* add_privateclaims();
  const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>& privateclaims() const;
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryValidateJWTResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidateJWTResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::xion::jwk::v1::PrivateClaim > privateclaims_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .xion.jwk.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::xion::jwk::v1::Params& params() const;
  PROTOBUF_NODISCARD ::xion::jwk::v1::Params* release_params();
  ::xion::jwk::v1::Params* mutable_params();
  void set_allocated_params(::xion::jwk::v1::Params* value);
  void unsafe_arena_set_allocated_params(::xion::jwk::v1::Params* value);
  ::xion::jwk::v1::Params* unsafe_arena_release_params();

  private:
  const ::xion::jwk::v1::Params& _internal_params() const;
  ::xion::jwk::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::jwk::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryGetAudienceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryGetAudienceResponse) */ {
 public:
  inline QueryGetAudienceResponse() : QueryGetAudienceResponse(nullptr) {}
  ~QueryGetAudienceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryGetAudienceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryGetAudienceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGetAudienceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryGetAudienceResponse(const QueryGetAudienceResponse& from) : QueryGetAudienceResponse(nullptr, from) {}
  inline QueryGetAudienceResponse(QueryGetAudienceResponse&& from) noexcept
      : QueryGetAudienceResponse(nullptr, std::move(from)) {}
  inline QueryGetAudienceResponse& operator=(const QueryGetAudienceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGetAudienceResponse& operator=(QueryGetAudienceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGetAudienceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGetAudienceResponse* internal_default_instance() {
    return reinterpret_cast<const QueryGetAudienceResponse*>(
        &_QueryGetAudienceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryGetAudienceResponse& a, QueryGetAudienceResponse& b) { a.Swap(&b); }
  inline void Swap(QueryGetAudienceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGetAudienceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGetAudienceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryGetAudienceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryGetAudienceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryGetAudienceResponse& from) { QueryGetAudienceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryGetAudienceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryGetAudienceResponse"; }

 protected:
  explicit QueryGetAudienceResponse(::google::protobuf::Arena* arena);
  QueryGetAudienceResponse(::google::protobuf::Arena* arena, const QueryGetAudienceResponse& from);
  QueryGetAudienceResponse(::google::protobuf::Arena* arena, QueryGetAudienceResponse&& from) noexcept
      : QueryGetAudienceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudienceFieldNumber = 1,
  };
  // .xion.jwk.v1.Audience audience = 1 [json_name = "audience", (.gogoproto.nullable) = false];
  bool has_audience() const;
  void clear_audience() ;
  const ::xion::jwk::v1::Audience& audience() const;
  PROTOBUF_NODISCARD ::xion::jwk::v1::Audience* release_audience();
  ::xion::jwk::v1::Audience* mutable_audience();
  void set_allocated_audience(::xion::jwk::v1::Audience* value);
  void unsafe_arena_set_allocated_audience(::xion::jwk::v1::Audience* value);
  ::xion::jwk::v1::Audience* unsafe_arena_release_audience();

  private:
  const ::xion::jwk::v1::Audience& _internal_audience() const;
  ::xion::jwk::v1::Audience* _internal_mutable_audience();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryGetAudienceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryGetAudienceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::jwk::v1::Audience* audience_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryGetAudienceClaimResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryGetAudienceClaimResponse) */ {
 public:
  inline QueryGetAudienceClaimResponse() : QueryGetAudienceClaimResponse(nullptr) {}
  ~QueryGetAudienceClaimResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryGetAudienceClaimResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryGetAudienceClaimResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryGetAudienceClaimResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryGetAudienceClaimResponse(const QueryGetAudienceClaimResponse& from) : QueryGetAudienceClaimResponse(nullptr, from) {}
  inline QueryGetAudienceClaimResponse(QueryGetAudienceClaimResponse&& from) noexcept
      : QueryGetAudienceClaimResponse(nullptr, std::move(from)) {}
  inline QueryGetAudienceClaimResponse& operator=(const QueryGetAudienceClaimResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryGetAudienceClaimResponse& operator=(QueryGetAudienceClaimResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryGetAudienceClaimResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryGetAudienceClaimResponse* internal_default_instance() {
    return reinterpret_cast<const QueryGetAudienceClaimResponse*>(
        &_QueryGetAudienceClaimResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryGetAudienceClaimResponse& a, QueryGetAudienceClaimResponse& b) { a.Swap(&b); }
  inline void Swap(QueryGetAudienceClaimResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryGetAudienceClaimResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryGetAudienceClaimResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryGetAudienceClaimResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryGetAudienceClaimResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryGetAudienceClaimResponse& from) { QueryGetAudienceClaimResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryGetAudienceClaimResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryGetAudienceClaimResponse"; }

 protected:
  explicit QueryGetAudienceClaimResponse(::google::protobuf::Arena* arena);
  QueryGetAudienceClaimResponse(::google::protobuf::Arena* arena, const QueryGetAudienceClaimResponse& from);
  QueryGetAudienceClaimResponse(::google::protobuf::Arena* arena, QueryGetAudienceClaimResponse&& from) noexcept
      : QueryGetAudienceClaimResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClaimFieldNumber = 1,
  };
  // .xion.jwk.v1.AudienceClaim claim = 1 [json_name = "claim"];
  bool has_claim() const;
  void clear_claim() ;
  const ::xion::jwk::v1::AudienceClaim& claim() const;
  PROTOBUF_NODISCARD ::xion::jwk::v1::AudienceClaim* release_claim();
  ::xion::jwk::v1::AudienceClaim* mutable_claim();
  void set_allocated_claim(::xion::jwk::v1::AudienceClaim* value);
  void unsafe_arena_set_allocated_claim(::xion::jwk::v1::AudienceClaim* value);
  ::xion::jwk::v1::AudienceClaim* unsafe_arena_release_claim();

  private:
  const ::xion::jwk::v1::AudienceClaim& _internal_claim() const;
  ::xion::jwk::v1::AudienceClaim* _internal_mutable_claim();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryGetAudienceClaimResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryGetAudienceClaimResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::jwk::v1::AudienceClaim* claim_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllAudienceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryAllAudienceResponse) */ {
 public:
  inline QueryAllAudienceResponse() : QueryAllAudienceResponse(nullptr) {}
  ~QueryAllAudienceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllAudienceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllAudienceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllAudienceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllAudienceResponse(const QueryAllAudienceResponse& from) : QueryAllAudienceResponse(nullptr, from) {}
  inline QueryAllAudienceResponse(QueryAllAudienceResponse&& from) noexcept
      : QueryAllAudienceResponse(nullptr, std::move(from)) {}
  inline QueryAllAudienceResponse& operator=(const QueryAllAudienceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllAudienceResponse& operator=(QueryAllAudienceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllAudienceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllAudienceResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAllAudienceResponse*>(
        &_QueryAllAudienceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryAllAudienceResponse& a, QueryAllAudienceResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAllAudienceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllAudienceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllAudienceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllAudienceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllAudienceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllAudienceResponse& from) { QueryAllAudienceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllAudienceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryAllAudienceResponse"; }

 protected:
  explicit QueryAllAudienceResponse(::google::protobuf::Arena* arena);
  QueryAllAudienceResponse(::google::protobuf::Arena* arena, const QueryAllAudienceResponse& from);
  QueryAllAudienceResponse(::google::protobuf::Arena* arena, QueryAllAudienceResponse&& from) noexcept
      : QueryAllAudienceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudienceFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .xion.jwk.v1.Audience audience = 1 [json_name = "audience", (.gogoproto.nullable) = false];
  int audience_size() const;
  private:
  int _internal_audience_size() const;

  public:
  void clear_audience() ;
  ::xion::jwk::v1::Audience* mutable_audience(int index);
  ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>* mutable_audience();

  private:
  const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>& _internal_audience() const;
  ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>* _internal_mutable_audience();
  public:
  const ::xion::jwk::v1::Audience& audience(int index) const;
  ::xion::jwk::v1::Audience* add_audience();
  const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>& audience() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryAllAudienceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllAudienceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::xion::jwk::v1::Audience > audience_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllAudienceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.QueryAllAudienceRequest) */ {
 public:
  inline QueryAllAudienceRequest() : QueryAllAudienceRequest(nullptr) {}
  ~QueryAllAudienceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllAudienceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllAudienceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllAudienceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllAudienceRequest(const QueryAllAudienceRequest& from) : QueryAllAudienceRequest(nullptr, from) {}
  inline QueryAllAudienceRequest(QueryAllAudienceRequest&& from) noexcept
      : QueryAllAudienceRequest(nullptr, std::move(from)) {}
  inline QueryAllAudienceRequest& operator=(const QueryAllAudienceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllAudienceRequest& operator=(QueryAllAudienceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllAudienceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllAudienceRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAllAudienceRequest*>(
        &_QueryAllAudienceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryAllAudienceRequest& a, QueryAllAudienceRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAllAudienceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllAudienceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllAudienceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllAudienceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllAudienceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllAudienceRequest& from) { QueryAllAudienceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllAudienceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.QueryAllAudienceRequest"; }

 protected:
  explicit QueryAllAudienceRequest(::google::protobuf::Arena* arena);
  QueryAllAudienceRequest(::google::protobuf::Arena* arena, const QueryAllAudienceRequest& from);
  QueryAllAudienceRequest(::google::protobuf::Arena* arena, QueryAllAudienceRequest&& from) noexcept
      : QueryAllAudienceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.QueryAllAudienceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllAudienceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .xion.jwk.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::xion::jwk::v1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::jwk::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::jwk::v1::Params&>(::xion::jwk::v1::_Params_default_instance_);
}
inline const ::xion::jwk::v1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::xion::jwk::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::xion::jwk::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.QueryParamsResponse.params)
}
inline ::xion::jwk::v1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::jwk::v1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::xion::jwk::v1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::jwk::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::xion::jwk::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::xion::jwk::v1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::jwk::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::xion::jwk::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::xion::jwk::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryGetAudienceClaimRequest

// bytes hash = 1 [json_name = "hash"];
inline void QueryGetAudienceClaimRequest::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& QueryGetAudienceClaimRequest::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryGetAudienceClaimRequest.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGetAudienceClaimRequest::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.QueryGetAudienceClaimRequest.hash)
}
inline std::string* QueryGetAudienceClaimRequest::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryGetAudienceClaimRequest.hash)
  return _s;
}
inline const std::string& QueryGetAudienceClaimRequest::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void QueryGetAudienceClaimRequest::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* QueryGetAudienceClaimRequest::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* QueryGetAudienceClaimRequest::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryGetAudienceClaimRequest.hash)
  return _impl_.hash_.Release();
}
inline void QueryGetAudienceClaimRequest::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hash_.IsDefault()) {
    _impl_.hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryGetAudienceClaimRequest.hash)
}

// -------------------------------------------------------------------

// QueryGetAudienceClaimResponse

// .xion.jwk.v1.AudienceClaim claim = 1 [json_name = "claim"];
inline bool QueryGetAudienceClaimResponse::has_claim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.claim_ != nullptr);
  return value;
}
inline const ::xion::jwk::v1::AudienceClaim& QueryGetAudienceClaimResponse::_internal_claim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::jwk::v1::AudienceClaim* p = _impl_.claim_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::jwk::v1::AudienceClaim&>(::xion::jwk::v1::_AudienceClaim_default_instance_);
}
inline const ::xion::jwk::v1::AudienceClaim& QueryGetAudienceClaimResponse::claim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryGetAudienceClaimResponse.claim)
  return _internal_claim();
}
inline void QueryGetAudienceClaimResponse::unsafe_arena_set_allocated_claim(::xion::jwk::v1::AudienceClaim* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.claim_);
  }
  _impl_.claim_ = reinterpret_cast<::xion::jwk::v1::AudienceClaim*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.QueryGetAudienceClaimResponse.claim)
}
inline ::xion::jwk::v1::AudienceClaim* QueryGetAudienceClaimResponse::release_claim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::AudienceClaim* released = _impl_.claim_;
  _impl_.claim_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::jwk::v1::AudienceClaim* QueryGetAudienceClaimResponse::unsafe_arena_release_claim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryGetAudienceClaimResponse.claim)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::AudienceClaim* temp = _impl_.claim_;
  _impl_.claim_ = nullptr;
  return temp;
}
inline ::xion::jwk::v1::AudienceClaim* QueryGetAudienceClaimResponse::_internal_mutable_claim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.claim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::jwk::v1::AudienceClaim>(GetArena());
    _impl_.claim_ = reinterpret_cast<::xion::jwk::v1::AudienceClaim*>(p);
  }
  return _impl_.claim_;
}
inline ::xion::jwk::v1::AudienceClaim* QueryGetAudienceClaimResponse::mutable_claim() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::jwk::v1::AudienceClaim* _msg = _internal_mutable_claim();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryGetAudienceClaimResponse.claim)
  return _msg;
}
inline void QueryGetAudienceClaimResponse::set_allocated_claim(::xion::jwk::v1::AudienceClaim* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.claim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.claim_ = reinterpret_cast<::xion::jwk::v1::AudienceClaim*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryGetAudienceClaimResponse.claim)
}

// -------------------------------------------------------------------

// QueryGetAudienceRequest

// string aud = 1 [json_name = "aud"];
inline void QueryGetAudienceRequest::clear_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.ClearToEmpty();
}
inline const std::string& QueryGetAudienceRequest::aud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryGetAudienceRequest.aud)
  return _internal_aud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryGetAudienceRequest::set_aud(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.QueryGetAudienceRequest.aud)
}
inline std::string* QueryGetAudienceRequest::mutable_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryGetAudienceRequest.aud)
  return _s;
}
inline const std::string& QueryGetAudienceRequest::_internal_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_.Get();
}
inline void QueryGetAudienceRequest::_internal_set_aud(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(value, GetArena());
}
inline std::string* QueryGetAudienceRequest::_internal_mutable_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_.Mutable( GetArena());
}
inline std::string* QueryGetAudienceRequest::release_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryGetAudienceRequest.aud)
  return _impl_.aud_.Release();
}
inline void QueryGetAudienceRequest::set_allocated_aud(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_.IsDefault()) {
    _impl_.aud_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryGetAudienceRequest.aud)
}

// -------------------------------------------------------------------

// QueryGetAudienceResponse

// .xion.jwk.v1.Audience audience = 1 [json_name = "audience", (.gogoproto.nullable) = false];
inline bool QueryGetAudienceResponse::has_audience() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.audience_ != nullptr);
  return value;
}
inline const ::xion::jwk::v1::Audience& QueryGetAudienceResponse::_internal_audience() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::jwk::v1::Audience* p = _impl_.audience_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::jwk::v1::Audience&>(::xion::jwk::v1::_Audience_default_instance_);
}
inline const ::xion::jwk::v1::Audience& QueryGetAudienceResponse::audience() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryGetAudienceResponse.audience)
  return _internal_audience();
}
inline void QueryGetAudienceResponse::unsafe_arena_set_allocated_audience(::xion::jwk::v1::Audience* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audience_);
  }
  _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.QueryGetAudienceResponse.audience)
}
inline ::xion::jwk::v1::Audience* QueryGetAudienceResponse::release_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Audience* released = _impl_.audience_;
  _impl_.audience_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::jwk::v1::Audience* QueryGetAudienceResponse::unsafe_arena_release_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryGetAudienceResponse.audience)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Audience* temp = _impl_.audience_;
  _impl_.audience_ = nullptr;
  return temp;
}
inline ::xion::jwk::v1::Audience* QueryGetAudienceResponse::_internal_mutable_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.audience_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::jwk::v1::Audience>(GetArena());
    _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(p);
  }
  return _impl_.audience_;
}
inline ::xion::jwk::v1::Audience* QueryGetAudienceResponse::mutable_audience() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::jwk::v1::Audience* _msg = _internal_mutable_audience();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryGetAudienceResponse.audience)
  return _msg;
}
inline void QueryGetAudienceResponse::set_allocated_audience(::xion::jwk::v1::Audience* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audience_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryGetAudienceResponse.audience)
}

// -------------------------------------------------------------------

// QueryAllAudienceRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
inline bool QueryAllAudienceRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllAudienceRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllAudienceRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryAllAudienceRequest.pagination)
  return _internal_pagination();
}
inline void QueryAllAudienceRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.QueryAllAudienceRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllAudienceRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllAudienceRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryAllAudienceRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllAudienceRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllAudienceRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryAllAudienceRequest.pagination)
  return _msg;
}
inline void QueryAllAudienceRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryAllAudienceRequest.pagination)
}

// -------------------------------------------------------------------

// QueryAllAudienceResponse

// repeated .xion.jwk.v1.Audience audience = 1 [json_name = "audience", (.gogoproto.nullable) = false];
inline int QueryAllAudienceResponse::_internal_audience_size() const {
  return _internal_audience().size();
}
inline int QueryAllAudienceResponse::audience_size() const {
  return _internal_audience_size();
}
inline ::xion::jwk::v1::Audience* QueryAllAudienceResponse::mutable_audience(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryAllAudienceResponse.audience)
  return _internal_mutable_audience()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>* QueryAllAudienceResponse::mutable_audience()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.jwk.v1.QueryAllAudienceResponse.audience)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_audience();
}
inline const ::xion::jwk::v1::Audience& QueryAllAudienceResponse::audience(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryAllAudienceResponse.audience)
  return _internal_audience().Get(index);
}
inline ::xion::jwk::v1::Audience* QueryAllAudienceResponse::add_audience() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xion::jwk::v1::Audience* _add = _internal_mutable_audience()->Add();
  // @@protoc_insertion_point(field_add:xion.jwk.v1.QueryAllAudienceResponse.audience)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>& QueryAllAudienceResponse::audience() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.jwk.v1.QueryAllAudienceResponse.audience)
  return _internal_audience();
}
inline const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>&
QueryAllAudienceResponse::_internal_audience() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.audience_;
}
inline ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::Audience>*
QueryAllAudienceResponse::_internal_mutable_audience() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.audience_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryAllAudienceResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllAudienceResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllAudienceResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryAllAudienceResponse.pagination)
  return _internal_pagination();
}
inline void QueryAllAudienceResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.QueryAllAudienceResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllAudienceResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllAudienceResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryAllAudienceResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllAudienceResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllAudienceResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryAllAudienceResponse.pagination)
  return _msg;
}
inline void QueryAllAudienceResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryAllAudienceResponse.pagination)
}

// -------------------------------------------------------------------

// QueryValidateJWTRequest

// string aud = 1 [json_name = "aud"];
inline void QueryValidateJWTRequest::clear_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.ClearToEmpty();
}
inline const std::string& QueryValidateJWTRequest::aud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryValidateJWTRequest.aud)
  return _internal_aud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidateJWTRequest::set_aud(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.QueryValidateJWTRequest.aud)
}
inline std::string* QueryValidateJWTRequest::mutable_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryValidateJWTRequest.aud)
  return _s;
}
inline const std::string& QueryValidateJWTRequest::_internal_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_.Get();
}
inline void QueryValidateJWTRequest::_internal_set_aud(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(value, GetArena());
}
inline std::string* QueryValidateJWTRequest::_internal_mutable_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_.Mutable( GetArena());
}
inline std::string* QueryValidateJWTRequest::release_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryValidateJWTRequest.aud)
  return _impl_.aud_.Release();
}
inline void QueryValidateJWTRequest::set_allocated_aud(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_.IsDefault()) {
    _impl_.aud_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryValidateJWTRequest.aud)
}

// string sub = 2 [json_name = "sub"];
inline void QueryValidateJWTRequest::clear_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_.ClearToEmpty();
}
inline const std::string& QueryValidateJWTRequest::sub() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryValidateJWTRequest.sub)
  return _internal_sub();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidateJWTRequest::set_sub(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.QueryValidateJWTRequest.sub)
}
inline std::string* QueryValidateJWTRequest::mutable_sub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sub();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryValidateJWTRequest.sub)
  return _s;
}
inline const std::string& QueryValidateJWTRequest::_internal_sub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sub_.Get();
}
inline void QueryValidateJWTRequest::_internal_set_sub(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_.Set(value, GetArena());
}
inline std::string* QueryValidateJWTRequest::_internal_mutable_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sub_.Mutable( GetArena());
}
inline std::string* QueryValidateJWTRequest::release_sub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryValidateJWTRequest.sub)
  return _impl_.sub_.Release();
}
inline void QueryValidateJWTRequest::set_allocated_sub(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sub_.IsDefault()) {
    _impl_.sub_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryValidateJWTRequest.sub)
}

// string sigBytes = 3 [json_name = "sigBytes"];
inline void QueryValidateJWTRequest::clear_sigbytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigbytes_.ClearToEmpty();
}
inline const std::string& QueryValidateJWTRequest::sigbytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryValidateJWTRequest.sigBytes)
  return _internal_sigbytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidateJWTRequest::set_sigbytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigbytes_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.QueryValidateJWTRequest.sigBytes)
}
inline std::string* QueryValidateJWTRequest::mutable_sigbytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sigbytes();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryValidateJWTRequest.sigBytes)
  return _s;
}
inline const std::string& QueryValidateJWTRequest::_internal_sigbytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sigbytes_.Get();
}
inline void QueryValidateJWTRequest::_internal_set_sigbytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigbytes_.Set(value, GetArena());
}
inline std::string* QueryValidateJWTRequest::_internal_mutable_sigbytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sigbytes_.Mutable( GetArena());
}
inline std::string* QueryValidateJWTRequest::release_sigbytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.QueryValidateJWTRequest.sigBytes)
  return _impl_.sigbytes_.Release();
}
inline void QueryValidateJWTRequest::set_allocated_sigbytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sigbytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sigbytes_.IsDefault()) {
    _impl_.sigbytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.QueryValidateJWTRequest.sigBytes)
}

// -------------------------------------------------------------------

// PrivateClaim

// string key = 1 [json_name = "key"];
inline void PrivateClaim::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& PrivateClaim::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.PrivateClaim.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrivateClaim::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.PrivateClaim.key)
}
inline std::string* PrivateClaim::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.PrivateClaim.key)
  return _s;
}
inline const std::string& PrivateClaim::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void PrivateClaim::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* PrivateClaim::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* PrivateClaim::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.PrivateClaim.key)
  return _impl_.key_.Release();
}
inline void PrivateClaim::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.PrivateClaim.key)
}

// string value = 2 [json_name = "value"];
inline void PrivateClaim::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& PrivateClaim::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.PrivateClaim.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PrivateClaim::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.PrivateClaim.value)
}
inline std::string* PrivateClaim::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.PrivateClaim.value)
  return _s;
}
inline const std::string& PrivateClaim::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void PrivateClaim::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* PrivateClaim::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* PrivateClaim::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.PrivateClaim.value)
  return _impl_.value_.Release();
}
inline void PrivateClaim::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.PrivateClaim.value)
}

// -------------------------------------------------------------------

// QueryValidateJWTResponse

// repeated .xion.jwk.v1.PrivateClaim privateClaims = 1 [json_name = "privateClaims"];
inline int QueryValidateJWTResponse::_internal_privateclaims_size() const {
  return _internal_privateclaims().size();
}
inline int QueryValidateJWTResponse::privateclaims_size() const {
  return _internal_privateclaims_size();
}
inline void QueryValidateJWTResponse::clear_privateclaims() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.privateclaims_.Clear();
}
inline ::xion::jwk::v1::PrivateClaim* QueryValidateJWTResponse::mutable_privateclaims(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.QueryValidateJWTResponse.privateClaims)
  return _internal_mutable_privateclaims()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>* QueryValidateJWTResponse::mutable_privateclaims()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.jwk.v1.QueryValidateJWTResponse.privateClaims)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_privateclaims();
}
inline const ::xion::jwk::v1::PrivateClaim& QueryValidateJWTResponse::privateclaims(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.QueryValidateJWTResponse.privateClaims)
  return _internal_privateclaims().Get(index);
}
inline ::xion::jwk::v1::PrivateClaim* QueryValidateJWTResponse::add_privateclaims() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::xion::jwk::v1::PrivateClaim* _add = _internal_mutable_privateclaims()->Add();
  // @@protoc_insertion_point(field_add:xion.jwk.v1.QueryValidateJWTResponse.privateClaims)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>& QueryValidateJWTResponse::privateclaims() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.jwk.v1.QueryValidateJWTResponse.privateClaims)
  return _internal_privateclaims();
}
inline const ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>&
QueryValidateJWTResponse::_internal_privateclaims() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.privateclaims_;
}
inline ::google::protobuf::RepeatedPtrField<::xion::jwk::v1::PrivateClaim>*
QueryValidateJWTResponse::_internal_mutable_privateclaims() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.privateclaims_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace jwk
}  // namespace xion


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xion_2fjwk_2fv1_2fquery_2eproto_2epb_2eh
