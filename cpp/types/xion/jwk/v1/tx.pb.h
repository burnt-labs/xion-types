// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/jwk/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef xion_2fjwk_2fv1_2ftx_2eproto_2epb_2eh
#define xion_2fjwk_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "xion/jwk/v1/audience.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xion_2fjwk_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_xion_2fjwk_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xion_2fjwk_2fv1_2ftx_2eproto;
namespace xion {
namespace jwk {
namespace v1 {
class MsgCreateAudience;
struct MsgCreateAudienceDefaultTypeInternal;
extern MsgCreateAudienceDefaultTypeInternal _MsgCreateAudience_default_instance_;
class MsgCreateAudienceClaim;
struct MsgCreateAudienceClaimDefaultTypeInternal;
extern MsgCreateAudienceClaimDefaultTypeInternal _MsgCreateAudienceClaim_default_instance_;
class MsgCreateAudienceClaimResponse;
struct MsgCreateAudienceClaimResponseDefaultTypeInternal;
extern MsgCreateAudienceClaimResponseDefaultTypeInternal _MsgCreateAudienceClaimResponse_default_instance_;
class MsgCreateAudienceResponse;
struct MsgCreateAudienceResponseDefaultTypeInternal;
extern MsgCreateAudienceResponseDefaultTypeInternal _MsgCreateAudienceResponse_default_instance_;
class MsgDeleteAudience;
struct MsgDeleteAudienceDefaultTypeInternal;
extern MsgDeleteAudienceDefaultTypeInternal _MsgDeleteAudience_default_instance_;
class MsgDeleteAudienceClaim;
struct MsgDeleteAudienceClaimDefaultTypeInternal;
extern MsgDeleteAudienceClaimDefaultTypeInternal _MsgDeleteAudienceClaim_default_instance_;
class MsgDeleteAudienceClaimResponse;
struct MsgDeleteAudienceClaimResponseDefaultTypeInternal;
extern MsgDeleteAudienceClaimResponseDefaultTypeInternal _MsgDeleteAudienceClaimResponse_default_instance_;
class MsgDeleteAudienceResponse;
struct MsgDeleteAudienceResponseDefaultTypeInternal;
extern MsgDeleteAudienceResponseDefaultTypeInternal _MsgDeleteAudienceResponse_default_instance_;
class MsgUpdateAudience;
struct MsgUpdateAudienceDefaultTypeInternal;
extern MsgUpdateAudienceDefaultTypeInternal _MsgUpdateAudience_default_instance_;
class MsgUpdateAudienceResponse;
struct MsgUpdateAudienceResponseDefaultTypeInternal;
extern MsgUpdateAudienceResponseDefaultTypeInternal _MsgUpdateAudienceResponse_default_instance_;
}  // namespace v1
}  // namespace jwk
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xion {
namespace jwk {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateAudience final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgUpdateAudience) */ {
 public:
  inline MsgUpdateAudience() : MsgUpdateAudience(nullptr) {}
  ~MsgUpdateAudience() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateAudience* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateAudience));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateAudience(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateAudience(const MsgUpdateAudience& from) : MsgUpdateAudience(nullptr, from) {}
  inline MsgUpdateAudience(MsgUpdateAudience&& from) noexcept
      : MsgUpdateAudience(nullptr, std::move(from)) {}
  inline MsgUpdateAudience& operator=(const MsgUpdateAudience& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateAudience& operator=(MsgUpdateAudience&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateAudience& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateAudience* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateAudience*>(
        &_MsgUpdateAudience_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgUpdateAudience& a, MsgUpdateAudience& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateAudience* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateAudience* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateAudience* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateAudience>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateAudience& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateAudience& from) { MsgUpdateAudience::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateAudience* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgUpdateAudience"; }

 protected:
  explicit MsgUpdateAudience(::google::protobuf::Arena* arena);
  MsgUpdateAudience(::google::protobuf::Arena* arena, const MsgUpdateAudience& from);
  MsgUpdateAudience(::google::protobuf::Arena* arena, MsgUpdateAudience&& from) noexcept
      : MsgUpdateAudience(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdminFieldNumber = 1,
    kNewAdminFieldNumber = 2,
    kAudFieldNumber = 3,
    kKeyFieldNumber = 4,
    kNewAudFieldNumber = 5,
  };
  // string admin = 1 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string new_admin = 2 [json_name = "newAdmin"];
  void clear_new_admin() ;
  const std::string& new_admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_admin(Arg_&& arg, Args_... args);
  std::string* mutable_new_admin();
  PROTOBUF_NODISCARD std::string* release_new_admin();
  void set_allocated_new_admin(std::string* value);

  private:
  const std::string& _internal_new_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_admin(
      const std::string& value);
  std::string* _internal_mutable_new_admin();

  public:
  // string aud = 3 [json_name = "aud"];
  void clear_aud() ;
  const std::string& aud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud(Arg_&& arg, Args_... args);
  std::string* mutable_aud();
  PROTOBUF_NODISCARD std::string* release_aud();
  void set_allocated_aud(std::string* value);

  private:
  const std::string& _internal_aud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud(
      const std::string& value);
  std::string* _internal_mutable_aud();

  public:
  // string key = 4 [json_name = "key"];
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string new_aud = 5 [json_name = "newAud"];
  void clear_new_aud() ;
  const std::string& new_aud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_aud(Arg_&& arg, Args_... args);
  std::string* mutable_new_aud();
  PROTOBUF_NODISCARD std::string* release_new_aud();
  void set_allocated_new_aud(std::string* value);

  private:
  const std::string& _internal_new_aud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_aud(
      const std::string& value);
  std::string* _internal_mutable_new_aud();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgUpdateAudience)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateAudience& from_msg);
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr new_admin_;
    ::google::protobuf::internal::ArenaStringPtr aud_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr new_aud_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDeleteAudienceResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgDeleteAudienceResponse) */ {
 public:
  inline MsgDeleteAudienceResponse() : MsgDeleteAudienceResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDeleteAudienceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDeleteAudienceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDeleteAudienceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDeleteAudienceResponse(const MsgDeleteAudienceResponse& from) : MsgDeleteAudienceResponse(nullptr, from) {}
  inline MsgDeleteAudienceResponse(MsgDeleteAudienceResponse&& from) noexcept
      : MsgDeleteAudienceResponse(nullptr, std::move(from)) {}
  inline MsgDeleteAudienceResponse& operator=(const MsgDeleteAudienceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeleteAudienceResponse& operator=(MsgDeleteAudienceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDeleteAudienceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDeleteAudienceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteAudienceResponse*>(
        &_MsgDeleteAudienceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgDeleteAudienceResponse& a, MsgDeleteAudienceResponse& b) { a.Swap(&b); }
  inline void Swap(MsgDeleteAudienceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeleteAudienceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDeleteAudienceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgDeleteAudienceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgDeleteAudienceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgDeleteAudienceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgDeleteAudienceResponse"; }

 protected:
  explicit MsgDeleteAudienceResponse(::google::protobuf::Arena* arena);
  MsgDeleteAudienceResponse(::google::protobuf::Arena* arena, const MsgDeleteAudienceResponse& from);
  MsgDeleteAudienceResponse(::google::protobuf::Arena* arena, MsgDeleteAudienceResponse&& from) noexcept
      : MsgDeleteAudienceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgDeleteAudienceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDeleteAudienceResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDeleteAudienceClaimResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgDeleteAudienceClaimResponse) */ {
 public:
  inline MsgDeleteAudienceClaimResponse() : MsgDeleteAudienceClaimResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDeleteAudienceClaimResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDeleteAudienceClaimResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDeleteAudienceClaimResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDeleteAudienceClaimResponse(const MsgDeleteAudienceClaimResponse& from) : MsgDeleteAudienceClaimResponse(nullptr, from) {}
  inline MsgDeleteAudienceClaimResponse(MsgDeleteAudienceClaimResponse&& from) noexcept
      : MsgDeleteAudienceClaimResponse(nullptr, std::move(from)) {}
  inline MsgDeleteAudienceClaimResponse& operator=(const MsgDeleteAudienceClaimResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeleteAudienceClaimResponse& operator=(MsgDeleteAudienceClaimResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDeleteAudienceClaimResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDeleteAudienceClaimResponse* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteAudienceClaimResponse*>(
        &_MsgDeleteAudienceClaimResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgDeleteAudienceClaimResponse& a, MsgDeleteAudienceClaimResponse& b) { a.Swap(&b); }
  inline void Swap(MsgDeleteAudienceClaimResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeleteAudienceClaimResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDeleteAudienceClaimResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgDeleteAudienceClaimResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgDeleteAudienceClaimResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgDeleteAudienceClaimResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgDeleteAudienceClaimResponse"; }

 protected:
  explicit MsgDeleteAudienceClaimResponse(::google::protobuf::Arena* arena);
  MsgDeleteAudienceClaimResponse(::google::protobuf::Arena* arena, const MsgDeleteAudienceClaimResponse& from);
  MsgDeleteAudienceClaimResponse(::google::protobuf::Arena* arena, MsgDeleteAudienceClaimResponse&& from) noexcept
      : MsgDeleteAudienceClaimResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgDeleteAudienceClaimResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDeleteAudienceClaimResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDeleteAudienceClaim final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgDeleteAudienceClaim) */ {
 public:
  inline MsgDeleteAudienceClaim() : MsgDeleteAudienceClaim(nullptr) {}
  ~MsgDeleteAudienceClaim() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDeleteAudienceClaim* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDeleteAudienceClaim));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDeleteAudienceClaim(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDeleteAudienceClaim(const MsgDeleteAudienceClaim& from) : MsgDeleteAudienceClaim(nullptr, from) {}
  inline MsgDeleteAudienceClaim(MsgDeleteAudienceClaim&& from) noexcept
      : MsgDeleteAudienceClaim(nullptr, std::move(from)) {}
  inline MsgDeleteAudienceClaim& operator=(const MsgDeleteAudienceClaim& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeleteAudienceClaim& operator=(MsgDeleteAudienceClaim&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDeleteAudienceClaim& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDeleteAudienceClaim* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteAudienceClaim*>(
        &_MsgDeleteAudienceClaim_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgDeleteAudienceClaim& a, MsgDeleteAudienceClaim& b) { a.Swap(&b); }
  inline void Swap(MsgDeleteAudienceClaim* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeleteAudienceClaim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDeleteAudienceClaim* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgDeleteAudienceClaim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgDeleteAudienceClaim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgDeleteAudienceClaim& from) { MsgDeleteAudienceClaim::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgDeleteAudienceClaim* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgDeleteAudienceClaim"; }

 protected:
  explicit MsgDeleteAudienceClaim(::google::protobuf::Arena* arena);
  MsgDeleteAudienceClaim(::google::protobuf::Arena* arena, const MsgDeleteAudienceClaim& from);
  MsgDeleteAudienceClaim(::google::protobuf::Arena* arena, MsgDeleteAudienceClaim&& from) noexcept
      : MsgDeleteAudienceClaim(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdminFieldNumber = 1,
    kAudHashFieldNumber = 2,
  };
  // string admin = 1 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // bytes aud_hash = 2 [json_name = "audHash"];
  void clear_aud_hash() ;
  const std::string& aud_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud_hash(Arg_&& arg, Args_... args);
  std::string* mutable_aud_hash();
  PROTOBUF_NODISCARD std::string* release_aud_hash();
  void set_allocated_aud_hash(std::string* value);

  private:
  const std::string& _internal_aud_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud_hash(
      const std::string& value);
  std::string* _internal_mutable_aud_hash();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgDeleteAudienceClaim)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDeleteAudienceClaim& from_msg);
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr aud_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDeleteAudience final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgDeleteAudience) */ {
 public:
  inline MsgDeleteAudience() : MsgDeleteAudience(nullptr) {}
  ~MsgDeleteAudience() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDeleteAudience* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDeleteAudience));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDeleteAudience(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDeleteAudience(const MsgDeleteAudience& from) : MsgDeleteAudience(nullptr, from) {}
  inline MsgDeleteAudience(MsgDeleteAudience&& from) noexcept
      : MsgDeleteAudience(nullptr, std::move(from)) {}
  inline MsgDeleteAudience& operator=(const MsgDeleteAudience& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeleteAudience& operator=(MsgDeleteAudience&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDeleteAudience& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDeleteAudience* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteAudience*>(
        &_MsgDeleteAudience_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgDeleteAudience& a, MsgDeleteAudience& b) { a.Swap(&b); }
  inline void Swap(MsgDeleteAudience* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeleteAudience* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDeleteAudience* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgDeleteAudience>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgDeleteAudience& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgDeleteAudience& from) { MsgDeleteAudience::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgDeleteAudience* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgDeleteAudience"; }

 protected:
  explicit MsgDeleteAudience(::google::protobuf::Arena* arena);
  MsgDeleteAudience(::google::protobuf::Arena* arena, const MsgDeleteAudience& from);
  MsgDeleteAudience(::google::protobuf::Arena* arena, MsgDeleteAudience&& from) noexcept
      : MsgDeleteAudience(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdminFieldNumber = 1,
    kAudFieldNumber = 2,
  };
  // string admin = 1 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string aud = 2 [json_name = "aud"];
  void clear_aud() ;
  const std::string& aud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud(Arg_&& arg, Args_... args);
  std::string* mutable_aud();
  PROTOBUF_NODISCARD std::string* release_aud();
  void set_allocated_aud(std::string* value);

  private:
  const std::string& _internal_aud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud(
      const std::string& value);
  std::string* _internal_mutable_aud();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgDeleteAudience)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDeleteAudience& from_msg);
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr aud_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateAudienceClaimResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgCreateAudienceClaimResponse) */ {
 public:
  inline MsgCreateAudienceClaimResponse() : MsgCreateAudienceClaimResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateAudienceClaimResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateAudienceClaimResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateAudienceClaimResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateAudienceClaimResponse(const MsgCreateAudienceClaimResponse& from) : MsgCreateAudienceClaimResponse(nullptr, from) {}
  inline MsgCreateAudienceClaimResponse(MsgCreateAudienceClaimResponse&& from) noexcept
      : MsgCreateAudienceClaimResponse(nullptr, std::move(from)) {}
  inline MsgCreateAudienceClaimResponse& operator=(const MsgCreateAudienceClaimResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateAudienceClaimResponse& operator=(MsgCreateAudienceClaimResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateAudienceClaimResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateAudienceClaimResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateAudienceClaimResponse*>(
        &_MsgCreateAudienceClaimResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgCreateAudienceClaimResponse& a, MsgCreateAudienceClaimResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreateAudienceClaimResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateAudienceClaimResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateAudienceClaimResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgCreateAudienceClaimResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreateAudienceClaimResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreateAudienceClaimResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgCreateAudienceClaimResponse"; }

 protected:
  explicit MsgCreateAudienceClaimResponse(::google::protobuf::Arena* arena);
  MsgCreateAudienceClaimResponse(::google::protobuf::Arena* arena, const MsgCreateAudienceClaimResponse& from);
  MsgCreateAudienceClaimResponse(::google::protobuf::Arena* arena, MsgCreateAudienceClaimResponse&& from) noexcept
      : MsgCreateAudienceClaimResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgCreateAudienceClaimResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateAudienceClaimResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateAudienceClaim final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgCreateAudienceClaim) */ {
 public:
  inline MsgCreateAudienceClaim() : MsgCreateAudienceClaim(nullptr) {}
  ~MsgCreateAudienceClaim() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateAudienceClaim* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateAudienceClaim));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateAudienceClaim(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateAudienceClaim(const MsgCreateAudienceClaim& from) : MsgCreateAudienceClaim(nullptr, from) {}
  inline MsgCreateAudienceClaim(MsgCreateAudienceClaim&& from) noexcept
      : MsgCreateAudienceClaim(nullptr, std::move(from)) {}
  inline MsgCreateAudienceClaim& operator=(const MsgCreateAudienceClaim& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateAudienceClaim& operator=(MsgCreateAudienceClaim&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateAudienceClaim& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateAudienceClaim* internal_default_instance() {
    return reinterpret_cast<const MsgCreateAudienceClaim*>(
        &_MsgCreateAudienceClaim_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgCreateAudienceClaim& a, MsgCreateAudienceClaim& b) { a.Swap(&b); }
  inline void Swap(MsgCreateAudienceClaim* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateAudienceClaim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateAudienceClaim* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateAudienceClaim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateAudienceClaim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateAudienceClaim& from) { MsgCreateAudienceClaim::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateAudienceClaim* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgCreateAudienceClaim"; }

 protected:
  explicit MsgCreateAudienceClaim(::google::protobuf::Arena* arena);
  MsgCreateAudienceClaim(::google::protobuf::Arena* arena, const MsgCreateAudienceClaim& from);
  MsgCreateAudienceClaim(::google::protobuf::Arena* arena, MsgCreateAudienceClaim&& from) noexcept
      : MsgCreateAudienceClaim(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdminFieldNumber = 1,
    kAudHashFieldNumber = 2,
  };
  // string admin = 1 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // bytes aud_hash = 2 [json_name = "audHash"];
  void clear_aud_hash() ;
  const std::string& aud_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud_hash(Arg_&& arg, Args_... args);
  std::string* mutable_aud_hash();
  PROTOBUF_NODISCARD std::string* release_aud_hash();
  void set_allocated_aud_hash(std::string* value);

  private:
  const std::string& _internal_aud_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud_hash(
      const std::string& value);
  std::string* _internal_mutable_aud_hash();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgCreateAudienceClaim)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateAudienceClaim& from_msg);
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr aud_hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateAudience final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgCreateAudience) */ {
 public:
  inline MsgCreateAudience() : MsgCreateAudience(nullptr) {}
  ~MsgCreateAudience() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateAudience* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateAudience));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateAudience(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateAudience(const MsgCreateAudience& from) : MsgCreateAudience(nullptr, from) {}
  inline MsgCreateAudience(MsgCreateAudience&& from) noexcept
      : MsgCreateAudience(nullptr, std::move(from)) {}
  inline MsgCreateAudience& operator=(const MsgCreateAudience& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateAudience& operator=(MsgCreateAudience&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateAudience& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateAudience* internal_default_instance() {
    return reinterpret_cast<const MsgCreateAudience*>(
        &_MsgCreateAudience_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgCreateAudience& a, MsgCreateAudience& b) { a.Swap(&b); }
  inline void Swap(MsgCreateAudience* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateAudience* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateAudience* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateAudience>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateAudience& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateAudience& from) { MsgCreateAudience::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateAudience* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgCreateAudience"; }

 protected:
  explicit MsgCreateAudience(::google::protobuf::Arena* arena);
  MsgCreateAudience(::google::protobuf::Arena* arena, const MsgCreateAudience& from);
  MsgCreateAudience(::google::protobuf::Arena* arena, MsgCreateAudience&& from) noexcept
      : MsgCreateAudience(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdminFieldNumber = 1,
    kAudFieldNumber = 2,
    kKeyFieldNumber = 3,
  };
  // string admin = 1 [json_name = "admin"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string aud = 2 [json_name = "aud"];
  void clear_aud() ;
  const std::string& aud() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_aud(Arg_&& arg, Args_... args);
  std::string* mutable_aud();
  PROTOBUF_NODISCARD std::string* release_aud();
  void set_allocated_aud(std::string* value);

  private:
  const std::string& _internal_aud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_aud(
      const std::string& value);
  std::string* _internal_mutable_aud();

  public:
  // string key = 3 [json_name = "key"];
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgCreateAudience)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateAudience& from_msg);
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr aud_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateAudienceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgUpdateAudienceResponse) */ {
 public:
  inline MsgUpdateAudienceResponse() : MsgUpdateAudienceResponse(nullptr) {}
  ~MsgUpdateAudienceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateAudienceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateAudienceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateAudienceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateAudienceResponse(const MsgUpdateAudienceResponse& from) : MsgUpdateAudienceResponse(nullptr, from) {}
  inline MsgUpdateAudienceResponse(MsgUpdateAudienceResponse&& from) noexcept
      : MsgUpdateAudienceResponse(nullptr, std::move(from)) {}
  inline MsgUpdateAudienceResponse& operator=(const MsgUpdateAudienceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateAudienceResponse& operator=(MsgUpdateAudienceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateAudienceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateAudienceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateAudienceResponse*>(
        &_MsgUpdateAudienceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgUpdateAudienceResponse& a, MsgUpdateAudienceResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateAudienceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateAudienceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateAudienceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateAudienceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateAudienceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateAudienceResponse& from) { MsgUpdateAudienceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateAudienceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgUpdateAudienceResponse"; }

 protected:
  explicit MsgUpdateAudienceResponse(::google::protobuf::Arena* arena);
  MsgUpdateAudienceResponse(::google::protobuf::Arena* arena, const MsgUpdateAudienceResponse& from);
  MsgUpdateAudienceResponse(::google::protobuf::Arena* arena, MsgUpdateAudienceResponse&& from) noexcept
      : MsgUpdateAudienceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudienceFieldNumber = 1,
  };
  // .xion.jwk.v1.Audience audience = 1 [json_name = "audience"];
  bool has_audience() const;
  void clear_audience() ;
  const ::xion::jwk::v1::Audience& audience() const;
  PROTOBUF_NODISCARD ::xion::jwk::v1::Audience* release_audience();
  ::xion::jwk::v1::Audience* mutable_audience();
  void set_allocated_audience(::xion::jwk::v1::Audience* value);
  void unsafe_arena_set_allocated_audience(::xion::jwk::v1::Audience* value);
  ::xion::jwk::v1::Audience* unsafe_arena_release_audience();

  private:
  const ::xion::jwk::v1::Audience& _internal_audience() const;
  ::xion::jwk::v1::Audience* _internal_mutable_audience();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgUpdateAudienceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateAudienceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::jwk::v1::Audience* audience_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateAudienceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.jwk.v1.MsgCreateAudienceResponse) */ {
 public:
  inline MsgCreateAudienceResponse() : MsgCreateAudienceResponse(nullptr) {}
  ~MsgCreateAudienceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateAudienceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateAudienceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateAudienceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateAudienceResponse(const MsgCreateAudienceResponse& from) : MsgCreateAudienceResponse(nullptr, from) {}
  inline MsgCreateAudienceResponse(MsgCreateAudienceResponse&& from) noexcept
      : MsgCreateAudienceResponse(nullptr, std::move(from)) {}
  inline MsgCreateAudienceResponse& operator=(const MsgCreateAudienceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateAudienceResponse& operator=(MsgCreateAudienceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateAudienceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateAudienceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateAudienceResponse*>(
        &_MsgCreateAudienceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgCreateAudienceResponse& a, MsgCreateAudienceResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreateAudienceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateAudienceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateAudienceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateAudienceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateAudienceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateAudienceResponse& from) { MsgCreateAudienceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateAudienceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.jwk.v1.MsgCreateAudienceResponse"; }

 protected:
  explicit MsgCreateAudienceResponse(::google::protobuf::Arena* arena);
  MsgCreateAudienceResponse(::google::protobuf::Arena* arena, const MsgCreateAudienceResponse& from);
  MsgCreateAudienceResponse(::google::protobuf::Arena* arena, MsgCreateAudienceResponse&& from) noexcept
      : MsgCreateAudienceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAudienceFieldNumber = 1,
  };
  // .xion.jwk.v1.Audience audience = 1 [json_name = "audience"];
  bool has_audience() const;
  void clear_audience() ;
  const ::xion::jwk::v1::Audience& audience() const;
  PROTOBUF_NODISCARD ::xion::jwk::v1::Audience* release_audience();
  ::xion::jwk::v1::Audience* mutable_audience();
  void set_allocated_audience(::xion::jwk::v1::Audience* value);
  void unsafe_arena_set_allocated_audience(::xion::jwk::v1::Audience* value);
  ::xion::jwk::v1::Audience* unsafe_arena_release_audience();

  private:
  const ::xion::jwk::v1::Audience& _internal_audience() const;
  ::xion::jwk::v1::Audience* _internal_mutable_audience();

  public:
  // @@protoc_insertion_point(class_scope:xion.jwk.v1.MsgCreateAudienceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateAudienceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::jwk::v1::Audience* audience_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fjwk_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreateAudienceClaim

// string admin = 1 [json_name = "admin"];
inline void MsgCreateAudienceClaim::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgCreateAudienceClaim::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgCreateAudienceClaim.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateAudienceClaim::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgCreateAudienceClaim.admin)
}
inline std::string* MsgCreateAudienceClaim::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgCreateAudienceClaim.admin)
  return _s;
}
inline const std::string& MsgCreateAudienceClaim::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgCreateAudienceClaim::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgCreateAudienceClaim::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgCreateAudienceClaim::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgCreateAudienceClaim.admin)
  return _impl_.admin_.Release();
}
inline void MsgCreateAudienceClaim::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgCreateAudienceClaim.admin)
}

// bytes aud_hash = 2 [json_name = "audHash"];
inline void MsgCreateAudienceClaim::clear_aud_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.ClearToEmpty();
}
inline const std::string& MsgCreateAudienceClaim::aud_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgCreateAudienceClaim.aud_hash)
  return _internal_aud_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateAudienceClaim::set_aud_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgCreateAudienceClaim.aud_hash)
}
inline std::string* MsgCreateAudienceClaim::mutable_aud_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud_hash();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgCreateAudienceClaim.aud_hash)
  return _s;
}
inline const std::string& MsgCreateAudienceClaim::_internal_aud_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_hash_.Get();
}
inline void MsgCreateAudienceClaim::_internal_set_aud_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.Set(value, GetArena());
}
inline std::string* MsgCreateAudienceClaim::_internal_mutable_aud_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_hash_.Mutable( GetArena());
}
inline std::string* MsgCreateAudienceClaim::release_aud_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgCreateAudienceClaim.aud_hash)
  return _impl_.aud_hash_.Release();
}
inline void MsgCreateAudienceClaim::set_allocated_aud_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_hash_.IsDefault()) {
    _impl_.aud_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgCreateAudienceClaim.aud_hash)
}

// -------------------------------------------------------------------

// MsgCreateAudienceClaimResponse

// -------------------------------------------------------------------

// MsgDeleteAudienceClaim

// string admin = 1 [json_name = "admin"];
inline void MsgDeleteAudienceClaim::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgDeleteAudienceClaim::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgDeleteAudienceClaim.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDeleteAudienceClaim::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgDeleteAudienceClaim.admin)
}
inline std::string* MsgDeleteAudienceClaim::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgDeleteAudienceClaim.admin)
  return _s;
}
inline const std::string& MsgDeleteAudienceClaim::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgDeleteAudienceClaim::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgDeleteAudienceClaim::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgDeleteAudienceClaim::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgDeleteAudienceClaim.admin)
  return _impl_.admin_.Release();
}
inline void MsgDeleteAudienceClaim::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgDeleteAudienceClaim.admin)
}

// bytes aud_hash = 2 [json_name = "audHash"];
inline void MsgDeleteAudienceClaim::clear_aud_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.ClearToEmpty();
}
inline const std::string& MsgDeleteAudienceClaim::aud_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgDeleteAudienceClaim.aud_hash)
  return _internal_aud_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDeleteAudienceClaim::set_aud_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgDeleteAudienceClaim.aud_hash)
}
inline std::string* MsgDeleteAudienceClaim::mutable_aud_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud_hash();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgDeleteAudienceClaim.aud_hash)
  return _s;
}
inline const std::string& MsgDeleteAudienceClaim::_internal_aud_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_hash_.Get();
}
inline void MsgDeleteAudienceClaim::_internal_set_aud_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.Set(value, GetArena());
}
inline std::string* MsgDeleteAudienceClaim::_internal_mutable_aud_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_hash_.Mutable( GetArena());
}
inline std::string* MsgDeleteAudienceClaim::release_aud_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgDeleteAudienceClaim.aud_hash)
  return _impl_.aud_hash_.Release();
}
inline void MsgDeleteAudienceClaim::set_allocated_aud_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_hash_.IsDefault()) {
    _impl_.aud_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgDeleteAudienceClaim.aud_hash)
}

// -------------------------------------------------------------------

// MsgDeleteAudienceClaimResponse

// -------------------------------------------------------------------

// MsgCreateAudience

// string admin = 1 [json_name = "admin"];
inline void MsgCreateAudience::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgCreateAudience::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgCreateAudience.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateAudience::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgCreateAudience.admin)
}
inline std::string* MsgCreateAudience::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgCreateAudience.admin)
  return _s;
}
inline const std::string& MsgCreateAudience::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgCreateAudience::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgCreateAudience::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgCreateAudience::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgCreateAudience.admin)
  return _impl_.admin_.Release();
}
inline void MsgCreateAudience::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgCreateAudience.admin)
}

// string aud = 2 [json_name = "aud"];
inline void MsgCreateAudience::clear_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.ClearToEmpty();
}
inline const std::string& MsgCreateAudience::aud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgCreateAudience.aud)
  return _internal_aud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateAudience::set_aud(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgCreateAudience.aud)
}
inline std::string* MsgCreateAudience::mutable_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgCreateAudience.aud)
  return _s;
}
inline const std::string& MsgCreateAudience::_internal_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_.Get();
}
inline void MsgCreateAudience::_internal_set_aud(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(value, GetArena());
}
inline std::string* MsgCreateAudience::_internal_mutable_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_.Mutable( GetArena());
}
inline std::string* MsgCreateAudience::release_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgCreateAudience.aud)
  return _impl_.aud_.Release();
}
inline void MsgCreateAudience::set_allocated_aud(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_.IsDefault()) {
    _impl_.aud_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgCreateAudience.aud)
}

// string key = 3 [json_name = "key"];
inline void MsgCreateAudience::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& MsgCreateAudience::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgCreateAudience.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateAudience::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgCreateAudience.key)
}
inline std::string* MsgCreateAudience::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgCreateAudience.key)
  return _s;
}
inline const std::string& MsgCreateAudience::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void MsgCreateAudience::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* MsgCreateAudience::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* MsgCreateAudience::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgCreateAudience.key)
  return _impl_.key_.Release();
}
inline void MsgCreateAudience::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgCreateAudience.key)
}

// -------------------------------------------------------------------

// MsgCreateAudienceResponse

// .xion.jwk.v1.Audience audience = 1 [json_name = "audience"];
inline bool MsgCreateAudienceResponse::has_audience() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.audience_ != nullptr);
  return value;
}
inline const ::xion::jwk::v1::Audience& MsgCreateAudienceResponse::_internal_audience() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::jwk::v1::Audience* p = _impl_.audience_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::jwk::v1::Audience&>(::xion::jwk::v1::_Audience_default_instance_);
}
inline const ::xion::jwk::v1::Audience& MsgCreateAudienceResponse::audience() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgCreateAudienceResponse.audience)
  return _internal_audience();
}
inline void MsgCreateAudienceResponse::unsafe_arena_set_allocated_audience(::xion::jwk::v1::Audience* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audience_);
  }
  _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.MsgCreateAudienceResponse.audience)
}
inline ::xion::jwk::v1::Audience* MsgCreateAudienceResponse::release_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Audience* released = _impl_.audience_;
  _impl_.audience_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::jwk::v1::Audience* MsgCreateAudienceResponse::unsafe_arena_release_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgCreateAudienceResponse.audience)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Audience* temp = _impl_.audience_;
  _impl_.audience_ = nullptr;
  return temp;
}
inline ::xion::jwk::v1::Audience* MsgCreateAudienceResponse::_internal_mutable_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.audience_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::jwk::v1::Audience>(GetArena());
    _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(p);
  }
  return _impl_.audience_;
}
inline ::xion::jwk::v1::Audience* MsgCreateAudienceResponse::mutable_audience() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::jwk::v1::Audience* _msg = _internal_mutable_audience();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgCreateAudienceResponse.audience)
  return _msg;
}
inline void MsgCreateAudienceResponse::set_allocated_audience(::xion::jwk::v1::Audience* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audience_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgCreateAudienceResponse.audience)
}

// -------------------------------------------------------------------

// MsgUpdateAudience

// string admin = 1 [json_name = "admin"];
inline void MsgUpdateAudience::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgUpdateAudience::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgUpdateAudience.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAudience::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgUpdateAudience.admin)
}
inline std::string* MsgUpdateAudience::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgUpdateAudience.admin)
  return _s;
}
inline const std::string& MsgUpdateAudience::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgUpdateAudience::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgUpdateAudience::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgUpdateAudience::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgUpdateAudience.admin)
  return _impl_.admin_.Release();
}
inline void MsgUpdateAudience::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgUpdateAudience.admin)
}

// string new_admin = 2 [json_name = "newAdmin"];
inline void MsgUpdateAudience::clear_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.ClearToEmpty();
}
inline const std::string& MsgUpdateAudience::new_admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgUpdateAudience.new_admin)
  return _internal_new_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAudience::set_new_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgUpdateAudience.new_admin)
}
inline std::string* MsgUpdateAudience::mutable_new_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_admin();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgUpdateAudience.new_admin)
  return _s;
}
inline const std::string& MsgUpdateAudience::_internal_new_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_admin_.Get();
}
inline void MsgUpdateAudience::_internal_set_new_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.Set(value, GetArena());
}
inline std::string* MsgUpdateAudience::_internal_mutable_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_admin_.Mutable( GetArena());
}
inline std::string* MsgUpdateAudience::release_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgUpdateAudience.new_admin)
  return _impl_.new_admin_.Release();
}
inline void MsgUpdateAudience::set_allocated_new_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_admin_.IsDefault()) {
    _impl_.new_admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgUpdateAudience.new_admin)
}

// string aud = 3 [json_name = "aud"];
inline void MsgUpdateAudience::clear_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.ClearToEmpty();
}
inline const std::string& MsgUpdateAudience::aud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgUpdateAudience.aud)
  return _internal_aud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAudience::set_aud(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgUpdateAudience.aud)
}
inline std::string* MsgUpdateAudience::mutable_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgUpdateAudience.aud)
  return _s;
}
inline const std::string& MsgUpdateAudience::_internal_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_.Get();
}
inline void MsgUpdateAudience::_internal_set_aud(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(value, GetArena());
}
inline std::string* MsgUpdateAudience::_internal_mutable_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_.Mutable( GetArena());
}
inline std::string* MsgUpdateAudience::release_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgUpdateAudience.aud)
  return _impl_.aud_.Release();
}
inline void MsgUpdateAudience::set_allocated_aud(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_.IsDefault()) {
    _impl_.aud_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgUpdateAudience.aud)
}

// string key = 4 [json_name = "key"];
inline void MsgUpdateAudience::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& MsgUpdateAudience::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgUpdateAudience.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAudience::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgUpdateAudience.key)
}
inline std::string* MsgUpdateAudience::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgUpdateAudience.key)
  return _s;
}
inline const std::string& MsgUpdateAudience::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void MsgUpdateAudience::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* MsgUpdateAudience::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* MsgUpdateAudience::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgUpdateAudience.key)
  return _impl_.key_.Release();
}
inline void MsgUpdateAudience::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgUpdateAudience.key)
}

// string new_aud = 5 [json_name = "newAud"];
inline void MsgUpdateAudience::clear_new_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_aud_.ClearToEmpty();
}
inline const std::string& MsgUpdateAudience::new_aud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgUpdateAudience.new_aud)
  return _internal_new_aud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAudience::set_new_aud(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_aud_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgUpdateAudience.new_aud)
}
inline std::string* MsgUpdateAudience::mutable_new_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_aud();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgUpdateAudience.new_aud)
  return _s;
}
inline const std::string& MsgUpdateAudience::_internal_new_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_aud_.Get();
}
inline void MsgUpdateAudience::_internal_set_new_aud(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_aud_.Set(value, GetArena());
}
inline std::string* MsgUpdateAudience::_internal_mutable_new_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_aud_.Mutable( GetArena());
}
inline std::string* MsgUpdateAudience::release_new_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgUpdateAudience.new_aud)
  return _impl_.new_aud_.Release();
}
inline void MsgUpdateAudience::set_allocated_new_aud(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_aud_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_aud_.IsDefault()) {
    _impl_.new_aud_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgUpdateAudience.new_aud)
}

// -------------------------------------------------------------------

// MsgUpdateAudienceResponse

// .xion.jwk.v1.Audience audience = 1 [json_name = "audience"];
inline bool MsgUpdateAudienceResponse::has_audience() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.audience_ != nullptr);
  return value;
}
inline const ::xion::jwk::v1::Audience& MsgUpdateAudienceResponse::_internal_audience() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::jwk::v1::Audience* p = _impl_.audience_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::jwk::v1::Audience&>(::xion::jwk::v1::_Audience_default_instance_);
}
inline const ::xion::jwk::v1::Audience& MsgUpdateAudienceResponse::audience() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgUpdateAudienceResponse.audience)
  return _internal_audience();
}
inline void MsgUpdateAudienceResponse::unsafe_arena_set_allocated_audience(::xion::jwk::v1::Audience* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audience_);
  }
  _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.jwk.v1.MsgUpdateAudienceResponse.audience)
}
inline ::xion::jwk::v1::Audience* MsgUpdateAudienceResponse::release_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Audience* released = _impl_.audience_;
  _impl_.audience_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::jwk::v1::Audience* MsgUpdateAudienceResponse::unsafe_arena_release_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgUpdateAudienceResponse.audience)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::jwk::v1::Audience* temp = _impl_.audience_;
  _impl_.audience_ = nullptr;
  return temp;
}
inline ::xion::jwk::v1::Audience* MsgUpdateAudienceResponse::_internal_mutable_audience() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.audience_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::jwk::v1::Audience>(GetArena());
    _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(p);
  }
  return _impl_.audience_;
}
inline ::xion::jwk::v1::Audience* MsgUpdateAudienceResponse::mutable_audience() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::jwk::v1::Audience* _msg = _internal_mutable_audience();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgUpdateAudienceResponse.audience)
  return _msg;
}
inline void MsgUpdateAudienceResponse::set_allocated_audience(::xion::jwk::v1::Audience* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.audience_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.audience_ = reinterpret_cast<::xion::jwk::v1::Audience*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgUpdateAudienceResponse.audience)
}

// -------------------------------------------------------------------

// MsgDeleteAudience

// string admin = 1 [json_name = "admin"];
inline void MsgDeleteAudience::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgDeleteAudience::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgDeleteAudience.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDeleteAudience::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgDeleteAudience.admin)
}
inline std::string* MsgDeleteAudience::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgDeleteAudience.admin)
  return _s;
}
inline const std::string& MsgDeleteAudience::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgDeleteAudience::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgDeleteAudience::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgDeleteAudience::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgDeleteAudience.admin)
  return _impl_.admin_.Release();
}
inline void MsgDeleteAudience::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgDeleteAudience.admin)
}

// string aud = 2 [json_name = "aud"];
inline void MsgDeleteAudience::clear_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.ClearToEmpty();
}
inline const std::string& MsgDeleteAudience::aud() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.jwk.v1.MsgDeleteAudience.aud)
  return _internal_aud();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDeleteAudience::set_aud(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:xion.jwk.v1.MsgDeleteAudience.aud)
}
inline std::string* MsgDeleteAudience::mutable_aud() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_aud();
  // @@protoc_insertion_point(field_mutable:xion.jwk.v1.MsgDeleteAudience.aud)
  return _s;
}
inline const std::string& MsgDeleteAudience::_internal_aud() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aud_.Get();
}
inline void MsgDeleteAudience::_internal_set_aud(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.Set(value, GetArena());
}
inline std::string* MsgDeleteAudience::_internal_mutable_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.aud_.Mutable( GetArena());
}
inline std::string* MsgDeleteAudience::release_aud() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.jwk.v1.MsgDeleteAudience.aud)
  return _impl_.aud_.Release();
}
inline void MsgDeleteAudience::set_allocated_aud(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aud_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.aud_.IsDefault()) {
    _impl_.aud_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:xion.jwk.v1.MsgDeleteAudience.aud)
}

// -------------------------------------------------------------------

// MsgDeleteAudienceResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace jwk
}  // namespace xion


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xion_2fjwk_2fv1_2ftx_2eproto_2epb_2eh
