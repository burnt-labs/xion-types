// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/v1/feegrant.proto
// Protobuf C++ Version: 5.29.4

#include "xion/v1/feegrant.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace xion {
namespace v1 {

inline constexpr MultiAnyAllowance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : allowances_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultiAnyAllowance::MultiAnyAllowance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiAnyAllowanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiAnyAllowanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiAnyAllowanceDefaultTypeInternal() {}
  union {
    MultiAnyAllowance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiAnyAllowanceDefaultTypeInternal _MultiAnyAllowance_default_instance_;

inline constexpr ContractsAllowance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contract_addresses_{},
        allowance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ContractsAllowance::ContractsAllowance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractsAllowanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractsAllowanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractsAllowanceDefaultTypeInternal() {}
  union {
    ContractsAllowance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractsAllowanceDefaultTypeInternal _ContractsAllowance_default_instance_;

inline constexpr AuthzAllowance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        authz_grantee_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        allowance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AuthzAllowance::AuthzAllowance(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AuthzAllowanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthzAllowanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthzAllowanceDefaultTypeInternal() {}
  union {
    AuthzAllowance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthzAllowanceDefaultTypeInternal _AuthzAllowance_default_instance_;
}  // namespace v1
}  // namespace xion
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_xion_2fv1_2ffeegrant_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_xion_2fv1_2ffeegrant_2eproto = nullptr;
const ::uint32_t
    TableStruct_xion_2fv1_2ffeegrant_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::xion::v1::AuthzAllowance, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xion::v1::AuthzAllowance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::v1::AuthzAllowance, _impl_.allowance_),
        PROTOBUF_FIELD_OFFSET(::xion::v1::AuthzAllowance, _impl_.authz_grantee_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::xion::v1::ContractsAllowance, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::xion::v1::ContractsAllowance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::v1::ContractsAllowance, _impl_.allowance_),
        PROTOBUF_FIELD_OFFSET(::xion::v1::ContractsAllowance, _impl_.contract_addresses_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::xion::v1::MultiAnyAllowance, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::xion::v1::MultiAnyAllowance, _impl_.allowances_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::xion::v1::AuthzAllowance)},
        {12, 22, -1, sizeof(::xion::v1::ContractsAllowance)},
        {24, -1, -1, sizeof(::xion::v1::MultiAnyAllowance)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::xion::v1::_AuthzAllowance_default_instance_._instance,
    &::xion::v1::_ContractsAllowance_default_instance_._instance,
    &::xion::v1::_MultiAnyAllowance_default_instance_._instance,
};
const char descriptor_table_protodef_xion_2fv1_2ffeegrant_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026xion/v1/feegrant.proto\022\007xion.v1\032\024gogop"
    "roto/gogo.proto\032\031google/protobuf/any.pro"
    "to\032\031cosmos_proto/cosmos.proto\032\036cosmos/ba"
    "se/v1beta1/coin.proto\032\021amino/amino.proto"
    "\032\037google/protobuf/timestamp.proto\032\036googl"
    "e/protobuf/duration.proto\"\365\001\n\016AuthzAllow"
    "ance\022]\n\tallowance\030\001 \001(\0132\024.google.protobu"
    "f.AnyB)\312\264-%cosmos.feegrant.v1beta1.FeeAl"
    "lowanceIR\tallowance\022=\n\rauthz_grantee\030\002 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\014authzGrant"
    "ee:E\210\240\037\000\312\264-%cosmos.feegrant.v1beta1.FeeA"
    "llowanceI\212\347\260*\023xion/AuthzAllowance\"\207\002\n\022Co"
    "ntractsAllowance\022]\n\tallowance\030\001 \001(\0132\024.go"
    "ogle.protobuf.AnyB)\312\264-%cosmos.feegrant.v"
    "1beta1.FeeAllowanceIR\tallowance\022G\n\022contr"
    "act_addresses\030\002 \003(\tB\030\322\264-\024cosmos.AddressS"
    "tringR\021contractAddresses:I\210\240\037\000\312\264-%cosmos"
    ".feegrant.v1beta1.FeeAllowanceI\212\347\260*\027xion"
    "/ContractsAllowance\"\276\001\n\021MultiAnyAllowanc"
    "e\022_\n\nallowances\030\001 \003(\0132\024.google.protobuf."
    "AnyB)\312\264-%cosmos.feegrant.v1beta1.FeeAllo"
    "wanceIR\nallowances:H\210\240\037\000\312\264-%cosmos.feegr"
    "ant.v1beta1.FeeAllowanceI\212\347\260*\026xion/Multi"
    "AnyAllowanceB)Z\'github.com/burnt-labs/xi"
    "on/x/xion/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_xion_2fv1_2ffeegrant_2eproto_deps[7] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_xion_2fv1_2ffeegrant_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_xion_2fv1_2ffeegrant_2eproto = {
    false,
    false,
    983,
    descriptor_table_protodef_xion_2fv1_2ffeegrant_2eproto,
    "xion/v1/feegrant.proto",
    &descriptor_table_xion_2fv1_2ffeegrant_2eproto_once,
    descriptor_table_xion_2fv1_2ffeegrant_2eproto_deps,
    7,
    3,
    schemas,
    file_default_instances,
    TableStruct_xion_2fv1_2ffeegrant_2eproto::offsets,
    file_level_enum_descriptors_xion_2fv1_2ffeegrant_2eproto,
    file_level_service_descriptors_xion_2fv1_2ffeegrant_2eproto,
};
namespace xion {
namespace v1 {
// ===================================================================

class AuthzAllowance::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AuthzAllowance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_._has_bits_);
};

void AuthzAllowance::clear_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allowance_ != nullptr) _impl_.allowance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AuthzAllowance::AuthzAllowance(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.v1.AuthzAllowance)
}
inline PROTOBUF_NDEBUG_INLINE AuthzAllowance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::v1::AuthzAllowance& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        authz_grantee_(arena, from.authz_grantee_) {}

AuthzAllowance::AuthzAllowance(
    ::google::protobuf::Arena* arena,
    const AuthzAllowance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AuthzAllowance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.allowance_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.allowance_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:xion.v1.AuthzAllowance)
}
inline PROTOBUF_NDEBUG_INLINE AuthzAllowance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        authz_grantee_(arena) {}

inline void AuthzAllowance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.allowance_ = {};
}
AuthzAllowance::~AuthzAllowance() {
  // @@protoc_insertion_point(destructor:xion.v1.AuthzAllowance)
  SharedDtor(*this);
}
inline void AuthzAllowance::SharedDtor(MessageLite& self) {
  AuthzAllowance& this_ = static_cast<AuthzAllowance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.authz_grantee_.Destroy();
  delete this_._impl_.allowance_;
  this_._impl_.~Impl_();
}

inline void* AuthzAllowance::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AuthzAllowance(arena);
}
constexpr auto AuthzAllowance::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AuthzAllowance),
                                            alignof(AuthzAllowance));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AuthzAllowance::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AuthzAllowance_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AuthzAllowance::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AuthzAllowance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AuthzAllowance::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AuthzAllowance>(), &AuthzAllowance::ByteSizeLong,
            &AuthzAllowance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_._cached_size_),
        false,
    },
    &AuthzAllowance::kDescriptorMethods,
    &descriptor_table_xion_2fv1_2ffeegrant_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AuthzAllowance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 44, 2> AuthzAllowance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::v1::AuthzAllowance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string authz_grantee = 2 [json_name = "authzGrantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_.authz_grantee_)}},
    // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_.allowance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
    {PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_.allowance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string authz_grantee = 2 [json_name = "authzGrantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(AuthzAllowance, _impl_.authz_grantee_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\26\0\15\0\0\0\0\0"
    "xion.v1.AuthzAllowance"
    "authz_grantee"
  }},
};

PROTOBUF_NOINLINE void AuthzAllowance::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.v1.AuthzAllowance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.authz_grantee_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.allowance_ != nullptr);
    _impl_.allowance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AuthzAllowance::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AuthzAllowance& this_ = static_cast<const AuthzAllowance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AuthzAllowance::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AuthzAllowance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.v1.AuthzAllowance)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.allowance_, this_._impl_.allowance_->GetCachedSize(), target,
                stream);
          }

          // string authz_grantee = 2 [json_name = "authzGrantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_authz_grantee().empty()) {
            const std::string& _s = this_._internal_authz_grantee();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.v1.AuthzAllowance.authz_grantee");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.v1.AuthzAllowance)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AuthzAllowance::ByteSizeLong(const MessageLite& base) {
          const AuthzAllowance& this_ = static_cast<const AuthzAllowance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AuthzAllowance::ByteSizeLong() const {
          const AuthzAllowance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.v1.AuthzAllowance)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string authz_grantee = 2 [json_name = "authzGrantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_authz_grantee().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_authz_grantee());
            }
          }
           {
            // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.allowance_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AuthzAllowance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AuthzAllowance*>(&to_msg);
  auto& from = static_cast<const AuthzAllowance&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.v1.AuthzAllowance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_authz_grantee().empty()) {
    _this->_internal_set_authz_grantee(from._internal_authz_grantee());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.allowance_ != nullptr);
    if (_this->_impl_.allowance_ == nullptr) {
      _this->_impl_.allowance_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.allowance_);
    } else {
      _this->_impl_.allowance_->MergeFrom(*from._impl_.allowance_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthzAllowance::CopyFrom(const AuthzAllowance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.v1.AuthzAllowance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AuthzAllowance::InternalSwap(AuthzAllowance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authz_grantee_, &other->_impl_.authz_grantee_, arena);
  swap(_impl_.allowance_, other->_impl_.allowance_);
}

::google::protobuf::Metadata AuthzAllowance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ContractsAllowance::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ContractsAllowance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_._has_bits_);
};

void ContractsAllowance::clear_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allowance_ != nullptr) _impl_.allowance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ContractsAllowance::ContractsAllowance(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.v1.ContractsAllowance)
}
inline PROTOBUF_NDEBUG_INLINE ContractsAllowance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::v1::ContractsAllowance& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contract_addresses_{visibility, arena, from.contract_addresses_} {}

ContractsAllowance::ContractsAllowance(
    ::google::protobuf::Arena* arena,
    const ContractsAllowance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContractsAllowance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.allowance_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.allowance_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:xion.v1.ContractsAllowance)
}
inline PROTOBUF_NDEBUG_INLINE ContractsAllowance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contract_addresses_{visibility, arena} {}

inline void ContractsAllowance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.allowance_ = {};
}
ContractsAllowance::~ContractsAllowance() {
  // @@protoc_insertion_point(destructor:xion.v1.ContractsAllowance)
  SharedDtor(*this);
}
inline void ContractsAllowance::SharedDtor(MessageLite& self) {
  ContractsAllowance& this_ = static_cast<ContractsAllowance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.allowance_;
  this_._impl_.~Impl_();
}

inline void* ContractsAllowance::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContractsAllowance(arena);
}
constexpr auto ContractsAllowance::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_.contract_addresses_) +
          decltype(ContractsAllowance::_impl_.contract_addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ContractsAllowance), alignof(ContractsAllowance), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContractsAllowance::PlacementNew_,
                                 sizeof(ContractsAllowance),
                                 alignof(ContractsAllowance));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContractsAllowance::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContractsAllowance_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContractsAllowance::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContractsAllowance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContractsAllowance::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContractsAllowance>(), &ContractsAllowance::ByteSizeLong,
            &ContractsAllowance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_._cached_size_),
        false,
    },
    &ContractsAllowance::kDescriptorMethods,
    &descriptor_table_xion_2fv1_2ffeegrant_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContractsAllowance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 53, 2> ContractsAllowance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::v1::ContractsAllowance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string contract_addresses = 2 [json_name = "contractAddresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_.contract_addresses_)}},
    // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_.allowance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
    {PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_.allowance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string contract_addresses = 2 [json_name = "contractAddresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(ContractsAllowance, _impl_.contract_addresses_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\32\0\22\0\0\0\0\0"
    "xion.v1.ContractsAllowance"
    "contract_addresses"
  }},
};

PROTOBUF_NOINLINE void ContractsAllowance::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.v1.ContractsAllowance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contract_addresses_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.allowance_ != nullptr);
    _impl_.allowance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContractsAllowance::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContractsAllowance& this_ = static_cast<const ContractsAllowance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContractsAllowance::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContractsAllowance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.v1.ContractsAllowance)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.allowance_, this_._impl_.allowance_->GetCachedSize(), target,
                stream);
          }

          // repeated string contract_addresses = 2 [json_name = "contractAddresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          for (int i = 0, n = this_._internal_contract_addresses_size(); i < n; ++i) {
            const auto& s = this_._internal_contract_addresses().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "xion.v1.ContractsAllowance.contract_addresses");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.v1.ContractsAllowance)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContractsAllowance::ByteSizeLong(const MessageLite& base) {
          const ContractsAllowance& this_ = static_cast<const ContractsAllowance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContractsAllowance::ByteSizeLong() const {
          const ContractsAllowance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.v1.ContractsAllowance)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string contract_addresses = 2 [json_name = "contractAddresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_contract_addresses().size());
              for (int i = 0, n = this_._internal_contract_addresses().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_contract_addresses().Get(i));
              }
            }
          }
           {
            // .google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.allowance_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContractsAllowance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContractsAllowance*>(&to_msg);
  auto& from = static_cast<const ContractsAllowance&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.v1.ContractsAllowance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contract_addresses()->MergeFrom(from._internal_contract_addresses());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.allowance_ != nullptr);
    if (_this->_impl_.allowance_ == nullptr) {
      _this->_impl_.allowance_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.allowance_);
    } else {
      _this->_impl_.allowance_->MergeFrom(*from._impl_.allowance_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContractsAllowance::CopyFrom(const ContractsAllowance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.v1.ContractsAllowance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContractsAllowance::InternalSwap(ContractsAllowance* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contract_addresses_.InternalSwap(&other->_impl_.contract_addresses_);
  swap(_impl_.allowance_, other->_impl_.allowance_);
}

::google::protobuf::Metadata ContractsAllowance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiAnyAllowance::_Internal {
 public:
};

void MultiAnyAllowance::clear_allowances() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allowances_.Clear();
}
MultiAnyAllowance::MultiAnyAllowance(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:xion.v1.MultiAnyAllowance)
}
inline PROTOBUF_NDEBUG_INLINE MultiAnyAllowance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::xion::v1::MultiAnyAllowance& from_msg)
      : allowances_{visibility, arena, from.allowances_},
        _cached_size_{0} {}

MultiAnyAllowance::MultiAnyAllowance(
    ::google::protobuf::Arena* arena,
    const MultiAnyAllowance& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MultiAnyAllowance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:xion.v1.MultiAnyAllowance)
}
inline PROTOBUF_NDEBUG_INLINE MultiAnyAllowance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : allowances_{visibility, arena},
        _cached_size_{0} {}

inline void MultiAnyAllowance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MultiAnyAllowance::~MultiAnyAllowance() {
  // @@protoc_insertion_point(destructor:xion.v1.MultiAnyAllowance)
  SharedDtor(*this);
}
inline void MultiAnyAllowance::SharedDtor(MessageLite& self) {
  MultiAnyAllowance& this_ = static_cast<MultiAnyAllowance&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MultiAnyAllowance::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MultiAnyAllowance(arena);
}
constexpr auto MultiAnyAllowance::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MultiAnyAllowance, _impl_.allowances_) +
          decltype(MultiAnyAllowance::_impl_.allowances_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MultiAnyAllowance), alignof(MultiAnyAllowance), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MultiAnyAllowance::PlacementNew_,
                                 sizeof(MultiAnyAllowance),
                                 alignof(MultiAnyAllowance));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MultiAnyAllowance::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MultiAnyAllowance_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MultiAnyAllowance::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MultiAnyAllowance>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MultiAnyAllowance::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MultiAnyAllowance>(), &MultiAnyAllowance::ByteSizeLong,
            &MultiAnyAllowance::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MultiAnyAllowance, _impl_._cached_size_),
        false,
    },
    &MultiAnyAllowance::kDescriptorMethods,
    &descriptor_table_xion_2fv1_2ffeegrant_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MultiAnyAllowance::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MultiAnyAllowance::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::xion::v1::MultiAnyAllowance>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Any allowances = 1 [json_name = "allowances", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MultiAnyAllowance, _impl_.allowances_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .google.protobuf.Any allowances = 1 [json_name = "allowances", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
    {PROTOBUF_FIELD_OFFSET(MultiAnyAllowance, _impl_.allowances_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MultiAnyAllowance::Clear() {
// @@protoc_insertion_point(message_clear_start:xion.v1.MultiAnyAllowance)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowances_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MultiAnyAllowance::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MultiAnyAllowance& this_ = static_cast<const MultiAnyAllowance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MultiAnyAllowance::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MultiAnyAllowance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:xion.v1.MultiAnyAllowance)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .google.protobuf.Any allowances = 1 [json_name = "allowances", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_allowances_size());
               i < n; i++) {
            const auto& repfield = this_._internal_allowances().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:xion.v1.MultiAnyAllowance)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MultiAnyAllowance::ByteSizeLong(const MessageLite& base) {
          const MultiAnyAllowance& this_ = static_cast<const MultiAnyAllowance&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MultiAnyAllowance::ByteSizeLong() const {
          const MultiAnyAllowance& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:xion.v1.MultiAnyAllowance)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .google.protobuf.Any allowances = 1 [json_name = "allowances", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
            {
              total_size += 1UL * this_._internal_allowances_size();
              for (const auto& msg : this_._internal_allowances()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MultiAnyAllowance::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiAnyAllowance*>(&to_msg);
  auto& from = static_cast<const MultiAnyAllowance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xion.v1.MultiAnyAllowance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowances()->MergeFrom(
      from._internal_allowances());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiAnyAllowance::CopyFrom(const MultiAnyAllowance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xion.v1.MultiAnyAllowance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiAnyAllowance::InternalSwap(MultiAnyAllowance* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowances_.InternalSwap(&other->_impl_.allowances_);
}

::google::protobuf::Metadata MultiAnyAllowance::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_xion_2fv1_2ffeegrant_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
