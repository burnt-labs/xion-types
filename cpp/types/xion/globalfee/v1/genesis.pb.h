// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/globalfee/v1/genesis.proto
// Protobuf C++ Version: 5.29.4

#ifndef xion_2fglobalfee_2fv1_2fgenesis_2eproto_2epb_2eh
#define xion_2fglobalfee_2fv1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_xion_2fglobalfee_2fv1_2fgenesis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_xion_2fglobalfee_2fv1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_xion_2fglobalfee_2fv1_2fgenesis_2eproto;
namespace xion {
namespace globalfee {
namespace v1 {
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
class Params;
struct ParamsDefaultTypeInternal;
extern ParamsDefaultTypeInternal _Params_default_instance_;
}  // namespace v1
}  // namespace globalfee
}  // namespace xion
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace xion {
namespace globalfee {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Params final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.globalfee.v1.Params) */ {
 public:
  inline Params() : Params(nullptr) {}
  ~Params() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Params* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Params));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Params(
      ::google::protobuf::internal::ConstantInitialized);

  inline Params(const Params& from) : Params(nullptr, from) {}
  inline Params(Params&& from) noexcept
      : Params(nullptr, std::move(from)) {}
  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline Params& operator=(Params&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Params& default_instance() {
    return *internal_default_instance();
  }
  static inline const Params* internal_default_instance() {
    return reinterpret_cast<const Params*>(
        &_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Params& a, Params& b) { a.Swap(&b); }
  inline void Swap(Params* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Params* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Params* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Params>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Params& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Params& from) { Params::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Params* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.globalfee.v1.Params"; }

 protected:
  explicit Params(::google::protobuf::Arena* arena);
  Params(::google::protobuf::Arena* arena, const Params& from);
  Params(::google::protobuf::Arena* arena, Params&& from) noexcept
      : Params(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinimumGasPricesFieldNumber = 1,
    kBypassMinFeeMsgTypesFieldNumber = 2,
    kMaxTotalBypassMinFeeMsgGasUsageFieldNumber = 3,
  };
  // repeated .cosmos.base.v1beta1.DecCoin minimum_gas_prices = 1 [json_name = "minimumGasPrices", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "minimum_gas_prices,omitempty", (.gogoproto.moretags) = "yaml:\"minimum_gas_prices\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
  int minimum_gas_prices_size() const;
  private:
  int _internal_minimum_gas_prices_size() const;

  public:
  void clear_minimum_gas_prices() ;
  ::cosmos::base::v1beta1::DecCoin* mutable_minimum_gas_prices(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* mutable_minimum_gas_prices();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& _internal_minimum_gas_prices() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* _internal_mutable_minimum_gas_prices();
  public:
  const ::cosmos::base::v1beta1::DecCoin& minimum_gas_prices(int index) const;
  ::cosmos::base::v1beta1::DecCoin* add_minimum_gas_prices();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& minimum_gas_prices() const;
  // repeated string bypass_min_fee_msg_types = 2 [json_name = "bypassMinFeeMsgTypes", (.gogoproto.jsontag) = "bypass_min_fee_msg_types,omitempty", (.gogoproto.moretags) = "yaml:\"bypass_min_fee_msg_types\""];
  int bypass_min_fee_msg_types_size() const;
  private:
  int _internal_bypass_min_fee_msg_types_size() const;

  public:
  void clear_bypass_min_fee_msg_types() ;
  const std::string& bypass_min_fee_msg_types(int index) const;
  std::string* mutable_bypass_min_fee_msg_types(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bypass_min_fee_msg_types(int index, Arg_&& value, Args_... args);
  std::string* add_bypass_min_fee_msg_types();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_bypass_min_fee_msg_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& bypass_min_fee_msg_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_bypass_min_fee_msg_types();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_bypass_min_fee_msg_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_bypass_min_fee_msg_types();

  public:
  // uint64 max_total_bypass_min_fee_msg_gas_usage = 3 [json_name = "maxTotalBypassMinFeeMsgGasUsage"];
  void clear_max_total_bypass_min_fee_msg_gas_usage() ;
  ::uint64_t max_total_bypass_min_fee_msg_gas_usage() const;
  void set_max_total_bypass_min_fee_msg_gas_usage(::uint64_t value);

  private:
  ::uint64_t _internal_max_total_bypass_min_fee_msg_gas_usage() const;
  void _internal_set_max_total_bypass_min_fee_msg_gas_usage(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:xion.globalfee.v1.Params)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Params& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::DecCoin > minimum_gas_prices_;
    ::google::protobuf::RepeatedPtrField<std::string> bypass_min_fee_msg_types_;
    ::uint64_t max_total_bypass_min_fee_msg_gas_usage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fglobalfee_2fv1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class GenesisState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:xion.globalfee.v1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenesisState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenesisState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenesisState(const GenesisState& from) : GenesisState(nullptr, from) {}
  inline GenesisState(GenesisState&& from) noexcept
      : GenesisState(nullptr, std::move(from)) {}
  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
        &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GenesisState& a, GenesisState& b) { a.Swap(&b); }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenesisState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenesisState& from) { GenesisState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenesisState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "xion.globalfee.v1.GenesisState"; }

 protected:
  explicit GenesisState(::google::protobuf::Arena* arena);
  GenesisState(::google::protobuf::Arena* arena, const GenesisState& from);
  GenesisState(::google::protobuf::Arena* arena, GenesisState&& from) noexcept
      : GenesisState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .xion.globalfee.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "params,omitempty"];
  bool has_params() const;
  void clear_params() ;
  const ::xion::globalfee::v1::Params& params() const;
  PROTOBUF_NODISCARD ::xion::globalfee::v1::Params* release_params();
  ::xion::globalfee::v1::Params* mutable_params();
  void set_allocated_params(::xion::globalfee::v1::Params* value);
  void unsafe_arena_set_allocated_params(::xion::globalfee::v1::Params* value);
  ::xion::globalfee::v1::Params* unsafe_arena_release_params();

  private:
  const ::xion::globalfee::v1::Params& _internal_params() const;
  ::xion::globalfee::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:xion.globalfee.v1.GenesisState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenesisState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::xion::globalfee::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xion_2fglobalfee_2fv1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenesisState

// .xion.globalfee.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "params,omitempty"];
inline bool GenesisState::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline void GenesisState::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::xion::globalfee::v1::Params& GenesisState::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::xion::globalfee::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::xion::globalfee::v1::Params&>(::xion::globalfee::v1::_Params_default_instance_);
}
inline const ::xion::globalfee::v1::Params& GenesisState::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.globalfee.v1.GenesisState.params)
  return _internal_params();
}
inline void GenesisState::unsafe_arena_set_allocated_params(::xion::globalfee::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::xion::globalfee::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xion.globalfee.v1.GenesisState.params)
}
inline ::xion::globalfee::v1::Params* GenesisState::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::globalfee::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::xion::globalfee::v1::Params* GenesisState::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:xion.globalfee.v1.GenesisState.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xion::globalfee::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::xion::globalfee::v1::Params* GenesisState::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::xion::globalfee::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::xion::globalfee::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::xion::globalfee::v1::Params* GenesisState::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::xion::globalfee::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:xion.globalfee.v1.GenesisState.params)
  return _msg;
}
inline void GenesisState::set_allocated_params(::xion::globalfee::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::xion::globalfee::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:xion.globalfee.v1.GenesisState.params)
}

// -------------------------------------------------------------------

// Params

// repeated .cosmos.base.v1beta1.DecCoin minimum_gas_prices = 1 [json_name = "minimumGasPrices", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "minimum_gas_prices,omitempty", (.gogoproto.moretags) = "yaml:\"minimum_gas_prices\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];
inline int Params::_internal_minimum_gas_prices_size() const {
  return _internal_minimum_gas_prices().size();
}
inline int Params::minimum_gas_prices_size() const {
  return _internal_minimum_gas_prices_size();
}
inline ::cosmos::base::v1beta1::DecCoin* Params::mutable_minimum_gas_prices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.globalfee.v1.Params.minimum_gas_prices)
  return _internal_mutable_minimum_gas_prices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>* Params::mutable_minimum_gas_prices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.globalfee.v1.Params.minimum_gas_prices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_minimum_gas_prices();
}
inline const ::cosmos::base::v1beta1::DecCoin& Params::minimum_gas_prices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.globalfee.v1.Params.minimum_gas_prices)
  return _internal_minimum_gas_prices().Get(index);
}
inline ::cosmos::base::v1beta1::DecCoin* Params::add_minimum_gas_prices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::DecCoin* _add = _internal_mutable_minimum_gas_prices()->Add();
  // @@protoc_insertion_point(field_add:xion.globalfee.v1.Params.minimum_gas_prices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>& Params::minimum_gas_prices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.globalfee.v1.Params.minimum_gas_prices)
  return _internal_minimum_gas_prices();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>&
Params::_internal_minimum_gas_prices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimum_gas_prices_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::DecCoin>*
Params::_internal_mutable_minimum_gas_prices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.minimum_gas_prices_;
}

// repeated string bypass_min_fee_msg_types = 2 [json_name = "bypassMinFeeMsgTypes", (.gogoproto.jsontag) = "bypass_min_fee_msg_types,omitempty", (.gogoproto.moretags) = "yaml:\"bypass_min_fee_msg_types\""];
inline int Params::_internal_bypass_min_fee_msg_types_size() const {
  return _internal_bypass_min_fee_msg_types().size();
}
inline int Params::bypass_min_fee_msg_types_size() const {
  return _internal_bypass_min_fee_msg_types_size();
}
inline void Params::clear_bypass_min_fee_msg_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bypass_min_fee_msg_types_.Clear();
}
inline std::string* Params::add_bypass_min_fee_msg_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_bypass_min_fee_msg_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
  return _s;
}
inline const std::string& Params::bypass_min_fee_msg_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
  return _internal_bypass_min_fee_msg_types().Get(index);
}
inline std::string* Params::mutable_bypass_min_fee_msg_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
  return _internal_mutable_bypass_min_fee_msg_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Params::set_bypass_min_fee_msg_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_bypass_min_fee_msg_types()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
}
template <typename Arg_, typename... Args_>
inline void Params::add_bypass_min_fee_msg_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_bypass_min_fee_msg_types(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Params::bypass_min_fee_msg_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
  return _internal_bypass_min_fee_msg_types();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Params::mutable_bypass_min_fee_msg_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:xion.globalfee.v1.Params.bypass_min_fee_msg_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bypass_min_fee_msg_types();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Params::_internal_bypass_min_fee_msg_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bypass_min_fee_msg_types_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Params::_internal_mutable_bypass_min_fee_msg_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bypass_min_fee_msg_types_;
}

// uint64 max_total_bypass_min_fee_msg_gas_usage = 3 [json_name = "maxTotalBypassMinFeeMsgGasUsage"];
inline void Params::clear_max_total_bypass_min_fee_msg_gas_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_total_bypass_min_fee_msg_gas_usage_ = ::uint64_t{0u};
}
inline ::uint64_t Params::max_total_bypass_min_fee_msg_gas_usage() const {
  // @@protoc_insertion_point(field_get:xion.globalfee.v1.Params.max_total_bypass_min_fee_msg_gas_usage)
  return _internal_max_total_bypass_min_fee_msg_gas_usage();
}
inline void Params::set_max_total_bypass_min_fee_msg_gas_usage(::uint64_t value) {
  _internal_set_max_total_bypass_min_fee_msg_gas_usage(value);
  // @@protoc_insertion_point(field_set:xion.globalfee.v1.Params.max_total_bypass_min_fee_msg_gas_usage)
}
inline ::uint64_t Params::_internal_max_total_bypass_min_fee_msg_gas_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_total_bypass_min_fee_msg_gas_usage_;
}
inline void Params::_internal_set_max_total_bypass_min_fee_msg_gas_usage(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_total_bypass_min_fee_msg_gas_usage_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace globalfee
}  // namespace xion


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // xion_2fglobalfee_2fv1_2fgenesis_2eproto_2epb_2eh
