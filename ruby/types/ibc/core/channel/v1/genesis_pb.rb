# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/core/channel/v1/genesis.proto

require 'google/protobuf'

require 'gogoproto/gogo_pb'
require 'ibc/core/channel/v1/channel_pb'


descriptor_data = "\n!ibc/core/channel/v1/genesis.proto\x12\x13ibc.core.channel.v1\x1a\x14gogoproto/gogo.proto\x1a!ibc/core/channel/v1/channel.proto\"\xf7\x04\n\x0cGenesisState\x12]\n\x08\x63hannels\x18\x01 \x03(\x0b\x32&.ibc.core.channel.v1.IdentifiedChannelB\x19\xc8\xde\x1f\x00\xfa\xde\x1f\x11IdentifiedChannelR\x08\x63hannels\x12R\n\x10\x61\x63knowledgements\x18\x02 \x03(\x0b\x32 .ibc.core.channel.v1.PacketStateB\x04\xc8\xde\x1f\x00R\x10\x61\x63knowledgements\x12H\n\x0b\x63ommitments\x18\x03 \x03(\x0b\x32 .ibc.core.channel.v1.PacketStateB\x04\xc8\xde\x1f\x00R\x0b\x63ommitments\x12\x42\n\x08receipts\x18\x04 \x03(\x0b\x32 .ibc.core.channel.v1.PacketStateB\x04\xc8\xde\x1f\x00R\x08receipts\x12P\n\x0esend_sequences\x18\x05 \x03(\x0b\x32#.ibc.core.channel.v1.PacketSequenceB\x04\xc8\xde\x1f\x00R\rsendSequences\x12P\n\x0erecv_sequences\x18\x06 \x03(\x0b\x32#.ibc.core.channel.v1.PacketSequenceB\x04\xc8\xde\x1f\x00R\rrecvSequences\x12N\n\rack_sequences\x18\x07 \x03(\x0b\x32#.ibc.core.channel.v1.PacketSequenceB\x04\xc8\xde\x1f\x00R\x0c\x61\x63kSequences\x12\x32\n\x15next_channel_sequence\x18\x08 \x01(\x04R\x13nextChannelSequence\"d\n\x0ePacketSequence\x12\x17\n\x07port_id\x18\x01 \x01(\tR\x06portId\x12\x1d\n\nchannel_id\x18\x02 \x01(\tR\tchannelId\x12\x1a\n\x08sequence\x18\x03 \x01(\x04R\x08sequenceB<Z:github.com/cosmos/ibc-go/v10/modules/core/04-channel/typesb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Ibc
  module Core
    module Channel
      module V1
        GenesisState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ibc.core.channel.v1.GenesisState").msgclass
        PacketSequence = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ibc.core.channel.v1.PacketSequence").msgclass
      end
    end
  end
end
