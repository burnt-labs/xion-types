# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cosmos/ics23/v1/proofs.proto

require 'google/protobuf'


descriptor_data = "\n\x1c\x63osmos/ics23/v1/proofs.proto\x12\x0f\x63osmos.ics23.v1\"\x93\x01\n\x0e\x45xistenceProof\x12\x10\n\x03key\x18\x01 \x01(\x0cR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x0cR\x05value\x12+\n\x04leaf\x18\x03 \x01(\x0b\x32\x17.cosmos.ics23.v1.LeafOpR\x04leaf\x12,\n\x04path\x18\x04 \x03(\x0b\x32\x18.cosmos.ics23.v1.InnerOpR\x04path\"\x91\x01\n\x11NonExistenceProof\x12\x10\n\x03key\x18\x01 \x01(\x0cR\x03key\x12\x33\n\x04left\x18\x02 \x01(\x0b\x32\x1f.cosmos.ics23.v1.ExistenceProofR\x04left\x12\x35\n\x05right\x18\x03 \x01(\x0b\x32\x1f.cosmos.ics23.v1.ExistenceProofR\x05right\"\x93\x02\n\x0f\x43ommitmentProof\x12\x37\n\x05\x65xist\x18\x01 \x01(\x0b\x32\x1f.cosmos.ics23.v1.ExistenceProofH\x00R\x05\x65xist\x12@\n\x08nonexist\x18\x02 \x01(\x0b\x32\".cosmos.ics23.v1.NonExistenceProofH\x00R\x08nonexist\x12\x33\n\x05\x62\x61tch\x18\x03 \x01(\x0b\x32\x1b.cosmos.ics23.v1.BatchProofH\x00R\x05\x62\x61tch\x12G\n\ncompressed\x18\x04 \x01(\x0b\x32%.cosmos.ics23.v1.CompressedBatchProofH\x00R\ncompressedB\x07\n\x05proof\"\xf8\x01\n\x06LeafOp\x12+\n\x04hash\x18\x01 \x01(\x0e\x32\x17.cosmos.ics23.v1.HashOpR\x04hash\x12\x38\n\x0bprehash_key\x18\x02 \x01(\x0e\x32\x17.cosmos.ics23.v1.HashOpR\nprehashKey\x12<\n\rprehash_value\x18\x03 \x01(\x0e\x32\x17.cosmos.ics23.v1.HashOpR\x0cprehashValue\x12\x31\n\x06length\x18\x04 \x01(\x0e\x32\x19.cosmos.ics23.v1.LengthOpR\x06length\x12\x16\n\x06prefix\x18\x05 \x01(\x0cR\x06prefix\"f\n\x07InnerOp\x12+\n\x04hash\x18\x01 \x01(\x0e\x32\x17.cosmos.ics23.v1.HashOpR\x04hash\x12\x16\n\x06prefix\x18\x02 \x01(\x0cR\x06prefix\x12\x16\n\x06suffix\x18\x03 \x01(\x0cR\x06suffix\"\xb6\x01\n\tProofSpec\x12\x34\n\tleaf_spec\x18\x01 \x01(\x0b\x32\x17.cosmos.ics23.v1.LeafOpR\x08leafSpec\x12\x39\n\ninner_spec\x18\x02 \x01(\x0b\x32\x1a.cosmos.ics23.v1.InnerSpecR\tinnerSpec\x12\x1b\n\tmax_depth\x18\x03 \x01(\x05R\x08maxDepth\x12\x1b\n\tmin_depth\x18\x04 \x01(\x05R\x08minDepth\"\xf1\x01\n\tInnerSpec\x12\x1f\n\x0b\x63hild_order\x18\x01 \x03(\x05R\nchildOrder\x12\x1d\n\nchild_size\x18\x02 \x01(\x05R\tchildSize\x12*\n\x11min_prefix_length\x18\x03 \x01(\x05R\x0fminPrefixLength\x12*\n\x11max_prefix_length\x18\x04 \x01(\x05R\x0fmaxPrefixLength\x12\x1f\n\x0b\x65mpty_child\x18\x05 \x01(\x0cR\nemptyChild\x12+\n\x04hash\x18\x06 \x01(\x0e\x32\x17.cosmos.ics23.v1.HashOpR\x04hash\"C\n\nBatchProof\x12\x35\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x1b.cosmos.ics23.v1.BatchEntryR\x07\x65ntries\"\x90\x01\n\nBatchEntry\x12\x37\n\x05\x65xist\x18\x01 \x01(\x0b\x32\x1f.cosmos.ics23.v1.ExistenceProofH\x00R\x05\x65xist\x12@\n\x08nonexist\x18\x02 \x01(\x0b\x32\".cosmos.ics23.v1.NonExistenceProofH\x00R\x08nonexistB\x07\n\x05proof\"\x96\x01\n\x14\x43ompressedBatchProof\x12?\n\x07\x65ntries\x18\x01 \x03(\x0b\x32%.cosmos.ics23.v1.CompressedBatchEntryR\x07\x65ntries\x12=\n\rlookup_inners\x18\x02 \x03(\x0b\x32\x18.cosmos.ics23.v1.InnerOpR\x0clookupInners\"\xae\x01\n\x14\x43ompressedBatchEntry\x12\x41\n\x05\x65xist\x18\x01 \x01(\x0b\x32).cosmos.ics23.v1.CompressedExistenceProofH\x00R\x05\x65xist\x12J\n\x08nonexist\x18\x02 \x01(\x0b\x32,.cosmos.ics23.v1.CompressedNonExistenceProofH\x00R\x08nonexistB\x07\n\x05proof\"\x83\x01\n\x18\x43ompressedExistenceProof\x12\x10\n\x03key\x18\x01 \x01(\x0cR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x0cR\x05value\x12+\n\x04leaf\x18\x03 \x01(\x0b\x32\x17.cosmos.ics23.v1.LeafOpR\x04leaf\x12\x12\n\x04path\x18\x04 \x03(\x05R\x04path\"\xaf\x01\n\x1b\x43ompressedNonExistenceProof\x12\x10\n\x03key\x18\x01 \x01(\x0cR\x03key\x12=\n\x04left\x18\x02 \x01(\x0b\x32).cosmos.ics23.v1.CompressedExistenceProofR\x04left\x12?\n\x05right\x18\x03 \x01(\x0b\x32).cosmos.ics23.v1.CompressedExistenceProofR\x05right*e\n\x06HashOp\x12\x0b\n\x07NO_HASH\x10\x00\x12\n\n\x06SHA256\x10\x01\x12\n\n\x06SHA512\x10\x02\x12\n\n\x06KECCAK\x10\x03\x12\r\n\tRIPEMD160\x10\x04\x12\x0b\n\x07\x42ITCOIN\x10\x05\x12\x0e\n\nSHA512_256\x10\x06*\xab\x01\n\x08LengthOp\x12\r\n\tNO_PREFIX\x10\x00\x12\r\n\tVAR_PROTO\x10\x01\x12\x0b\n\x07VAR_RLP\x10\x02\x12\x0f\n\x0b\x46IXED32_BIG\x10\x03\x12\x12\n\x0e\x46IXED32_LITTLE\x10\x04\x12\x0f\n\x0b\x46IXED64_BIG\x10\x05\x12\x12\n\x0e\x46IXED64_LITTLE\x10\x06\x12\x14\n\x10REQUIRE_32_BYTES\x10\x07\x12\x14\n\x10REQUIRE_64_BYTES\x10\x08\x42\"Z github.com/cosmos/ics23/go;ics23b\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Cosmos
  module Ics23
    module V1
      ExistenceProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.ExistenceProof").msgclass
      NonExistenceProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.NonExistenceProof").msgclass
      CommitmentProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.CommitmentProof").msgclass
      LeafOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.LeafOp").msgclass
      InnerOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.InnerOp").msgclass
      ProofSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.ProofSpec").msgclass
      InnerSpec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.InnerSpec").msgclass
      BatchProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.BatchProof").msgclass
      BatchEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.BatchEntry").msgclass
      CompressedBatchProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.CompressedBatchProof").msgclass
      CompressedBatchEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.CompressedBatchEntry").msgclass
      CompressedExistenceProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.CompressedExistenceProof").msgclass
      CompressedNonExistenceProof = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.CompressedNonExistenceProof").msgclass
      HashOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.HashOp").enummodule
      LengthOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("cosmos.ics23.v1.LengthOp").enummodule
    end
  end
end
