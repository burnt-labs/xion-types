# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: xion/feeabs/v1beta1/epoch.proto

require 'google/protobuf'

require 'gogoproto/gogo_pb'
require 'google/protobuf/duration_pb'
require 'google/protobuf/timestamp_pb'


descriptor_data = "\n\x1fxion/feeabs/v1beta1/epoch.proto\x12\x13xion.feeabs.v1beta1\x1a\x14gogoproto/gogo.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x90\x04\n\tEpochInfo\x12\x1e\n\nidentifier\x18\x01 \x01(\tR\nidentifier\x12X\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x1d\xc8\xde\x1f\x00\xf2\xde\x1f\x11yaml:\"start_time\"\x90\xdf\x1f\x01R\tstartTime\x12h\n\x08\x64uration\x18\x03 \x01(\x0b\x32\x19.google.protobuf.DurationB1\xc8\xde\x1f\x00\xea\xde\x1f\x12\x64uration,omitempty\xf2\xde\x1f\x0fyaml:\"duration\"\x98\xdf\x1f\x01R\x08\x64uration\x12#\n\rcurrent_epoch\x18\x04 \x01(\x03R\x0c\x63urrentEpoch\x12\x80\x01\n\x18\x63urrent_epoch_start_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampB+\xc8\xde\x1f\x00\xf2\xde\x1f\x1fyaml:\"current_epoch_start_time\"\x90\xdf\x1f\x01R\x15\x63urrentEpochStartTime\x12\x34\n\x16\x65poch_counting_started\x18\x06 \x01(\x08R\x14\x65pochCountingStarted\x12;\n\x1a\x63urrent_epoch_start_height\x18\x08 \x01(\x03R\x17\x63urrentEpochStartHeightJ\x04\x08\x07\x10\x08\"K\n\x12\x45xponentialBackoff\x12\x12\n\x04jump\x18\x01 \x01(\x03R\x04jump\x12!\n\x0c\x66uture_epoch\x18\x02 \x01(\x03R\x0b\x66utureEpochB+Z)github.com/burnt-labs/xion/x/feeabs/typesb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Xion
  module Feeabs
    module V1beta1
      EpochInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xion.feeabs.v1beta1.EpochInfo").msgclass
      ExponentialBackoff = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xion.feeabs.v1beta1.ExponentialBackoff").msgclass
    end
  end
end
