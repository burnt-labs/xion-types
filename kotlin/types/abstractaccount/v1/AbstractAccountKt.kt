// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: abstractaccount/v1/account.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package abstractaccount.v1;

@kotlin.jvm.JvmName("-initializeabstractAccount")
public inline fun abstractAccount(block: abstractaccount.v1.AbstractAccountKt.Dsl.() -> kotlin.Unit): abstractaccount.v1.Account.AbstractAccount =
  abstractaccount.v1.AbstractAccountKt.Dsl._create(abstractaccount.v1.Account.AbstractAccount.newBuilder()).apply { block() }._build()
/**
 * ```
 * AbstractAccount is a smart contract that is capable of initiating txs.
 *
 * This account type is similar to BaseAccount except for it doesn't have a
 * pubkey. If a pubkey is needed, it creates and returns a new NilPubKey.
 * ```
 *
 * Protobuf type `abstractaccount.v1.AbstractAccount`
 */
public object AbstractAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: abstractaccount.v1.Account.AbstractAccount.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: abstractaccount.v1.Account.AbstractAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): abstractaccount.v1.Account.AbstractAccount = _builder.build()

    /**
     * `string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.address
      @JvmName("setAddress")
      set(value) {
        _builder.address = value
      }
    /**
     * `string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * `uint64 account_number = 2 [json_name = "accountNumber"];`
     */
    public var accountNumber: kotlin.Long
      @JvmName("getAccountNumber")
      get() = _builder.accountNumber
      @JvmName("setAccountNumber")
      set(value) {
        _builder.accountNumber = value
      }
    /**
     * `uint64 account_number = 2 [json_name = "accountNumber"];`
     */
    public fun clearAccountNumber() {
      _builder.clearAccountNumber()
    }

    /**
     * `uint64 sequence = 3 [json_name = "sequence"];`
     */
    public var sequence: kotlin.Long
      @JvmName("getSequence")
      get() = _builder.sequence
      @JvmName("setSequence")
      set(value) {
        _builder.sequence = value
      }
    /**
     * `uint64 sequence = 3 [json_name = "sequence"];`
     */
    public fun clearSequence() {
      _builder.clearSequence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun abstractaccount.v1.Account.AbstractAccount.copy(block: `abstractaccount.v1`.AbstractAccountKt.Dsl.() -> kotlin.Unit): abstractaccount.v1.Account.AbstractAccount =
  `abstractaccount.v1`.AbstractAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

