// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: abstractaccount/v1/params.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package abstractaccount.v1;

@kotlin.jvm.JvmName("-initializeparams")
public inline fun params(block: abstractaccount.v1.ParamsKt.Dsl.() -> kotlin.Unit): abstractaccount.v1.ParamsOuterClass.Params =
  abstractaccount.v1.ParamsKt.Dsl._create(abstractaccount.v1.ParamsOuterClass.Params.newBuilder()).apply { block() }._build()
/**
 * ```
 * Params defines the parameters for the abstractaccount module.
 * ```
 *
 * Protobuf type `abstractaccount.v1.Params`
 */
public object ParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: abstractaccount.v1.ParamsOuterClass.Params.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: abstractaccount.v1.ParamsOuterClass.Params.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): abstractaccount.v1.ParamsOuterClass.Params = _builder.build()

    /**
     * ```
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     * ```
     *
     * `bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];`
     */
    public var allowAllCodeIds: kotlin.Boolean
      @JvmName("getAllowAllCodeIds")
      get() = _builder.allowAllCodeIds
      @JvmName("setAllowAllCodeIds")
      set(value) {
        _builder.allowAllCodeIds = value
      }
    /**
     * ```
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     * ```
     *
     * `bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];`
     */
    public fun clearAllowAllCodeIds() {
      _builder.clearAllowAllCodeIds()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AllowedCodeIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     */
     public val allowedCodeIds: com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.allowedCodeIdsList
      )
    /**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     * @param value The allowedCodeIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllowedCodeIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>.add(value: kotlin.Long) {
      _builder.addAllowedCodeIds(value)
    }/**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     * @param value The allowedCodeIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllowedCodeIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     * @param values The allowedCodeIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAllowedCodeIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllAllowedCodeIds(values)
    }/**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     * @param values The allowedCodeIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAllowedCodeIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     * @param index The index to set the value at.
     * @param value The allowedCodeIds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAllowedCodeIds")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setAllowedCodeIds(index, value)
    }/**
     * ```
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * ```
     *
     * `repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAllowedCodeIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, AllowedCodeIdsProxy>.clear() {
      _builder.clearAllowedCodeIds()
    }
    /**
     * ```
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     *
     * Must be greater than zero.
     * ```
     *
     * `uint64 max_gas_before = 3 [json_name = "maxGasBefore"];`
     */
    public var maxGasBefore: kotlin.Long
      @JvmName("getMaxGasBefore")
      get() = _builder.maxGasBefore
      @JvmName("setMaxGasBefore")
      set(value) {
        _builder.maxGasBefore = value
      }
    /**
     * ```
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     *
     * Must be greater than zero.
     * ```
     *
     * `uint64 max_gas_before = 3 [json_name = "maxGasBefore"];`
     */
    public fun clearMaxGasBefore() {
      _builder.clearMaxGasBefore()
    }

    /**
     * ```
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     *
     * Must be greater than zero.
     * ```
     *
     * `uint64 max_gas_after = 4 [json_name = "maxGasAfter"];`
     */
    public var maxGasAfter: kotlin.Long
      @JvmName("getMaxGasAfter")
      get() = _builder.maxGasAfter
      @JvmName("setMaxGasAfter")
      set(value) {
        _builder.maxGasAfter = value
      }
    /**
     * ```
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     *
     * Must be greater than zero.
     * ```
     *
     * `uint64 max_gas_after = 4 [json_name = "maxGasAfter"];`
     */
    public fun clearMaxGasAfter() {
      _builder.clearMaxGasAfter()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun abstractaccount.v1.ParamsOuterClass.Params.copy(block: `abstractaccount.v1`.ParamsKt.Dsl.() -> kotlin.Unit): abstractaccount.v1.ParamsOuterClass.Params =
  `abstractaccount.v1`.ParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

