// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/v1/feegrant.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package xion.v1;

@kotlin.jvm.JvmName("-initializeauthzAllowance")
public inline fun authzAllowance(block: xion.v1.AuthzAllowanceKt.Dsl.() -> kotlin.Unit): xion.v1.Feegrant.AuthzAllowance =
  xion.v1.AuthzAllowanceKt.Dsl._create(xion.v1.Feegrant.AuthzAllowance.newBuilder()).apply { block() }._build()
/**
 * ```
 * AuthzAllowance creates allowance only authz message for a specific grantee
 * ```
 *
 * Protobuf type `xion.v1.AuthzAllowance`
 */
public object AuthzAllowanceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: xion.v1.Feegrant.AuthzAllowance.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: xion.v1.Feegrant.AuthzAllowance.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): xion.v1.Feegrant.AuthzAllowance = _builder.build()

    /**
     * ```
     * allowance can be any of basic and periodic fee allowance.
     * ```
     *
     * `.google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];`
     */
    public var allowance: com.google.protobuf.Any
      @JvmName("getAllowance")
      get() = _builder.allowance
      @JvmName("setAllowance")
      set(value) {
        _builder.allowance = value
      }
    /**
     * ```
     * allowance can be any of basic and periodic fee allowance.
     * ```
     *
     * `.google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];`
     */
    public fun clearAllowance() {
      _builder.clearAllowance()
    }
    /**
     * ```
     * allowance can be any of basic and periodic fee allowance.
     * ```
     *
     * `.google.protobuf.Any allowance = 1 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];`
     * @return Whether the allowance field is set.
     */
    public fun hasAllowance(): kotlin.Boolean {
      return _builder.hasAllowance()
    }

    public val AuthzAllowanceKt.Dsl.allowanceOrNull: com.google.protobuf.Any?
      get() = _builder.allowanceOrNull

    /**
     * `string authz_grantee = 2 [json_name = "authzGrantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var authzGrantee: kotlin.String
      @JvmName("getAuthzGrantee")
      get() = _builder.authzGrantee
      @JvmName("setAuthzGrantee")
      set(value) {
        _builder.authzGrantee = value
      }
    /**
     * `string authz_grantee = 2 [json_name = "authzGrantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearAuthzGrantee() {
      _builder.clearAuthzGrantee()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun xion.v1.Feegrant.AuthzAllowance.copy(block: `xion.v1`.AuthzAllowanceKt.Dsl.() -> kotlin.Unit): xion.v1.Feegrant.AuthzAllowance =
  `xion.v1`.AuthzAllowanceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val xion.v1.Feegrant.AuthzAllowanceOrBuilder.allowanceOrNull: com.google.protobuf.Any?
  get() = if (hasAllowance()) getAllowance() else null

