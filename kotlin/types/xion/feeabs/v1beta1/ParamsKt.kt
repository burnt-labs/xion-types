// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/feeabs/v1beta1/params.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package xion.feeabs.v1beta1;

@kotlin.jvm.JvmName("-initializeparams")
public inline fun params(block: xion.feeabs.v1beta1.ParamsKt.Dsl.() -> kotlin.Unit): xion.feeabs.v1beta1.ParamsOuterClass.Params =
  xion.feeabs.v1beta1.ParamsKt.Dsl._create(xion.feeabs.v1beta1.ParamsOuterClass.Params.newBuilder()).apply { block() }._build()
/**
 * ```
 * Params defines the parameters for the feeabs module.
 * ```
 *
 * Protobuf type `xion.feeabs.v1beta1.Params`
 */
public object ParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: xion.feeabs.v1beta1.ParamsOuterClass.Params.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: xion.feeabs.v1beta1.ParamsOuterClass.Params.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): xion.feeabs.v1beta1.ParamsOuterClass.Params = _builder.build()

    /**
     * ```
     * native ibced in osmosis
     * ```
     *
     * `string native_ibced_in_osmosis = 1 [json_name = "nativeIbcedInOsmosis"];`
     */
    public var nativeIbcedInOsmosis: kotlin.String
      @JvmName("getNativeIbcedInOsmosis")
      get() = _builder.nativeIbcedInOsmosis
      @JvmName("setNativeIbcedInOsmosis")
      set(value) {
        _builder.nativeIbcedInOsmosis = value
      }
    /**
     * ```
     * native ibced in osmosis
     * ```
     *
     * `string native_ibced_in_osmosis = 1 [json_name = "nativeIbcedInOsmosis"];`
     */
    public fun clearNativeIbcedInOsmosis() {
      _builder.clearNativeIbcedInOsmosis()
    }

    /**
     * ```
     * osmosis query TWAP path
     * ```
     *
     * `string osmosis_query_twap_path = 2 [json_name = "osmosisQueryTwapPath"];`
     */
    public var osmosisQueryTwapPath: kotlin.String
      @JvmName("getOsmosisQueryTwapPath")
      get() = _builder.osmosisQueryTwapPath
      @JvmName("setOsmosisQueryTwapPath")
      set(value) {
        _builder.osmosisQueryTwapPath = value
      }
    /**
     * ```
     * osmosis query TWAP path
     * ```
     *
     * `string osmosis_query_twap_path = 2 [json_name = "osmosisQueryTwapPath"];`
     */
    public fun clearOsmosisQueryTwapPath() {
      _builder.clearOsmosisQueryTwapPath()
    }

    /**
     * ```
     * chain name for ibc path unwinding
     * ```
     *
     * `string chain_name = 3 [json_name = "chainName"];`
     */
    public var chainName: kotlin.String
      @JvmName("getChainName")
      get() = _builder.chainName
      @JvmName("setChainName")
      set(value) {
        _builder.chainName = value
      }
    /**
     * ```
     * chain name for ibc path unwinding
     * ```
     *
     * `string chain_name = 3 [json_name = "chainName"];`
     */
    public fun clearChainName() {
      _builder.clearChainName()
    }

    /**
     * ```
     * transfer channel for cross chain swap with osmosis
     * ```
     *
     * `string ibc_transfer_channel = 4 [json_name = "ibcTransferChannel"];`
     */
    public var ibcTransferChannel: kotlin.String
      @JvmName("getIbcTransferChannel")
      get() = _builder.ibcTransferChannel
      @JvmName("setIbcTransferChannel")
      set(value) {
        _builder.ibcTransferChannel = value
      }
    /**
     * ```
     * transfer channel for cross chain swap with osmosis
     * ```
     *
     * `string ibc_transfer_channel = 4 [json_name = "ibcTransferChannel"];`
     */
    public fun clearIbcTransferChannel() {
      _builder.clearIbcTransferChannel()
    }

    /**
     * ```
     * query twap price icq channel with osmosis
     * ```
     *
     * `string ibc_query_icq_channel = 5 [json_name = "ibcQueryIcqChannel"];`
     */
    public var ibcQueryIcqChannel: kotlin.String
      @JvmName("getIbcQueryIcqChannel")
      get() = _builder.ibcQueryIcqChannel
      @JvmName("setIbcQueryIcqChannel")
      set(value) {
        _builder.ibcQueryIcqChannel = value
      }
    /**
     * ```
     * query twap price icq channel with osmosis
     * ```
     *
     * `string ibc_query_icq_channel = 5 [json_name = "ibcQueryIcqChannel"];`
     */
    public fun clearIbcQueryIcqChannel() {
      _builder.clearIbcQueryIcqChannel()
    }

    /**
     * ```
     * osmosis crosschain swap contract address
     * ```
     *
     * `string osmosis_crosschain_swap_address = 6 [json_name = "osmosisCrosschainSwapAddress"];`
     */
    public var osmosisCrosschainSwapAddress: kotlin.String
      @JvmName("getOsmosisCrosschainSwapAddress")
      get() = _builder.osmosisCrosschainSwapAddress
      @JvmName("setOsmosisCrosschainSwapAddress")
      set(value) {
        _builder.osmosisCrosschainSwapAddress = value
      }
    /**
     * ```
     * osmosis crosschain swap contract address
     * ```
     *
     * `string osmosis_crosschain_swap_address = 6 [json_name = "osmosisCrosschainSwapAddress"];`
     */
    public fun clearOsmosisCrosschainSwapAddress() {
      _builder.clearOsmosisCrosschainSwapAddress()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun xion.feeabs.v1beta1.ParamsOuterClass.Params.copy(block: `xion.feeabs.v1beta1`.ParamsKt.Dsl.() -> kotlin.Unit): xion.feeabs.v1beta1.ParamsOuterClass.Params =
  `xion.feeabs.v1beta1`.ParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

