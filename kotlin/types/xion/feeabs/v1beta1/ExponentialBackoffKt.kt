// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: xion/feeabs/v1beta1/epoch.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package xion.feeabs.v1beta1;

@kotlin.jvm.JvmName("-initializeexponentialBackoff")
public inline fun exponentialBackoff(block: xion.feeabs.v1beta1.ExponentialBackoffKt.Dsl.() -> kotlin.Unit): xion.feeabs.v1beta1.Epoch.ExponentialBackoff =
  xion.feeabs.v1beta1.ExponentialBackoffKt.Dsl._create(xion.feeabs.v1beta1.Epoch.ExponentialBackoff.newBuilder()).apply { block() }._build()
/**
 * ```
 * ExponentialBackoff defines backoff epoch
 * ```
 *
 * Protobuf type `xion.feeabs.v1beta1.ExponentialBackoff`
 */
public object ExponentialBackoffKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: xion.feeabs.v1beta1.Epoch.ExponentialBackoff.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: xion.feeabs.v1beta1.Epoch.ExponentialBackoff.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): xion.feeabs.v1beta1.Epoch.ExponentialBackoff = _builder.build()

    /**
     * `int64 jump = 1 [json_name = "jump"];`
     */
    public var jump: kotlin.Long
      @JvmName("getJump")
      get() = _builder.jump
      @JvmName("setJump")
      set(value) {
        _builder.jump = value
      }
    /**
     * `int64 jump = 1 [json_name = "jump"];`
     */
    public fun clearJump() {
      _builder.clearJump()
    }

    /**
     * `int64 future_epoch = 2 [json_name = "futureEpoch"];`
     */
    public var futureEpoch: kotlin.Long
      @JvmName("getFutureEpoch")
      get() = _builder.futureEpoch
      @JvmName("setFutureEpoch")
      set(value) {
        _builder.futureEpoch = value
      }
    /**
     * `int64 future_epoch = 2 [json_name = "futureEpoch"];`
     */
    public fun clearFutureEpoch() {
      _builder.clearFutureEpoch()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun xion.feeabs.v1beta1.Epoch.ExponentialBackoff.copy(block: `xion.feeabs.v1beta1`.ExponentialBackoffKt.Dsl.() -> kotlin.Unit): xion.feeabs.v1beta1.Epoch.ExponentialBackoff =
  `xion.feeabs.v1beta1`.ExponentialBackoffKt.Dsl._create(this.toBuilder()).apply { block() }._build()

