// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializepackedTest")
public inline fun packedTest(block: test_proto.PackedTestKt.Dsl.() -> kotlin.Unit): test_proto.Test.PackedTest =
  test_proto.PackedTestKt.Dsl._create(test_proto.Test.PackedTest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.PackedTest`
 */
public object PackedTestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.PackedTest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.PackedTest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.PackedTest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     */
     public val b: com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.bList
      )
    /**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     * @param value The b to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addB")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>.add(value: kotlin.Int) {
      _builder.addB(value)
    }/**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     * @param value The b to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignB")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     * @param values The b to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllB")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllB(values)
    }/**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     * @param values The b to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllB")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     * @param index The index to set the value at.
     * @param value The b to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setB")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setB(index, value)
    }/**
     * `repeated int32 b = 1 [json_name = "b", packed = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearB")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, BProxy>.clear() {
      _builder.clearB()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.PackedTest.copy(block: `test_proto`.PackedTestKt.Dsl.() -> kotlin.Unit): test_proto.Test.PackedTest =
  `test_proto`.PackedTestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

