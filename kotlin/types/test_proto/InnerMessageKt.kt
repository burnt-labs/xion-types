// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializeinnerMessage")
public inline fun innerMessage(block: test_proto.InnerMessageKt.Dsl.() -> kotlin.Unit): test_proto.Test.InnerMessage =
  test_proto.InnerMessageKt.Dsl._create(test_proto.Test.InnerMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.InnerMessage`
 */
public object InnerMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.InnerMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.InnerMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.InnerMessage = _builder.build()

    /**
     * `required string host = 1 [json_name = "host"];`
     */
    public var host: kotlin.String
      @JvmName("getHost")
      get() = _builder.host
      @JvmName("setHost")
      set(value) {
        _builder.host = value
      }
    /**
     * `required string host = 1 [json_name = "host"];`
     */
    public fun clearHost() {
      _builder.clearHost()
    }
    /**
     * `required string host = 1 [json_name = "host"];`
     * @return Whether the host field is set.
     */
    public fun hasHost(): kotlin.Boolean {
      return _builder.hasHost()
    }

    /**
     * `optional int32 port = 2 [default = 4000, json_name = "port"];`
     */
    public var port: kotlin.Int
      @JvmName("getPort")
      get() = _builder.port
      @JvmName("setPort")
      set(value) {
        _builder.port = value
      }
    /**
     * `optional int32 port = 2 [default = 4000, json_name = "port"];`
     */
    public fun clearPort() {
      _builder.clearPort()
    }
    /**
     * `optional int32 port = 2 [default = 4000, json_name = "port"];`
     * @return Whether the port field is set.
     */
    public fun hasPort(): kotlin.Boolean {
      return _builder.hasPort()
    }

    /**
     * `optional bool connected = 3 [json_name = "connected"];`
     */
    public var connected: kotlin.Boolean
      @JvmName("getConnected")
      get() = _builder.connected
      @JvmName("setConnected")
      set(value) {
        _builder.connected = value
      }
    /**
     * `optional bool connected = 3 [json_name = "connected"];`
     */
    public fun clearConnected() {
      _builder.clearConnected()
    }
    /**
     * `optional bool connected = 3 [json_name = "connected"];`
     * @return Whether the connected field is set.
     */
    public fun hasConnected(): kotlin.Boolean {
      return _builder.hasConnected()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.InnerMessage.copy(block: `test_proto`.InnerMessageKt.Dsl.() -> kotlin.Unit): test_proto.Test.InnerMessage =
  `test_proto`.InnerMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

