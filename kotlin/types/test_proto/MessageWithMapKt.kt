// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializemessageWithMap")
public inline fun messageWithMap(block: test_proto.MessageWithMapKt.Dsl.() -> kotlin.Unit): test_proto.Test.MessageWithMap =
  test_proto.MessageWithMapKt.Dsl._create(test_proto.Test.MessageWithMap.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.MessageWithMap`
 */
public object MessageWithMapKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.MessageWithMap.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.MessageWithMap.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.MessageWithMap = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NameMappingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<int32, string> name_mapping = 1 [json_name = "nameMapping"];`
     */
     public val nameMapping: com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.String, NameMappingProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getNameMappingMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.nameMappingMap
      )
    /**
     * `map<int32, string> name_mapping = 1 [json_name = "nameMapping"];`
     */
    @JvmName("putNameMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.String, NameMappingProxy>
      .put(key: kotlin.Int, value: kotlin.String) {
         _builder.putNameMapping(key, value)
       }
    /**
     * `map<int32, string> name_mapping = 1 [json_name = "nameMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setNameMapping")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.String, NameMappingProxy>
      .set(key: kotlin.Int, value: kotlin.String) {
         put(key, value)
       }
    /**
     * `map<int32, string> name_mapping = 1 [json_name = "nameMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeNameMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.String, NameMappingProxy>
      .remove(key: kotlin.Int) {
         _builder.removeNameMapping(key)
       }
    /**
     * `map<int32, string> name_mapping = 1 [json_name = "nameMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllNameMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.String, NameMappingProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Int, kotlin.String>) {
         _builder.putAllNameMapping(map)
       }
    /**
     * `map<int32, string> name_mapping = 1 [json_name = "nameMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearNameMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Int, kotlin.String, NameMappingProxy>
      .clear() {
         _builder.clearNameMapping()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MsgMappingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<sint64, .test_proto.FloatingPoint> msg_mapping = 2 [json_name = "msgMapping"];`
     */
     public val msgMapping: com.google.protobuf.kotlin.DslMap<kotlin.Long, test_proto.Test.FloatingPoint, MsgMappingProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMsgMappingMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.msgMappingMap
      )
    /**
     * `map<sint64, .test_proto.FloatingPoint> msg_mapping = 2 [json_name = "msgMapping"];`
     */
    @JvmName("putMsgMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, test_proto.Test.FloatingPoint, MsgMappingProxy>
      .put(key: kotlin.Long, value: test_proto.Test.FloatingPoint) {
         _builder.putMsgMapping(key, value)
       }
    /**
     * `map<sint64, .test_proto.FloatingPoint> msg_mapping = 2 [json_name = "msgMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMsgMapping")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Long, test_proto.Test.FloatingPoint, MsgMappingProxy>
      .set(key: kotlin.Long, value: test_proto.Test.FloatingPoint) {
         put(key, value)
       }
    /**
     * `map<sint64, .test_proto.FloatingPoint> msg_mapping = 2 [json_name = "msgMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMsgMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, test_proto.Test.FloatingPoint, MsgMappingProxy>
      .remove(key: kotlin.Long) {
         _builder.removeMsgMapping(key)
       }
    /**
     * `map<sint64, .test_proto.FloatingPoint> msg_mapping = 2 [json_name = "msgMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMsgMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, test_proto.Test.FloatingPoint, MsgMappingProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Long, test_proto.Test.FloatingPoint>) {
         _builder.putAllMsgMapping(map)
       }
    /**
     * `map<sint64, .test_proto.FloatingPoint> msg_mapping = 2 [json_name = "msgMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMsgMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, test_proto.Test.FloatingPoint, MsgMappingProxy>
      .clear() {
         _builder.clearMsgMapping()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ByteMappingProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<bool, bytes> byte_mapping = 3 [json_name = "byteMapping"];`
     */
     public val byteMapping: com.google.protobuf.kotlin.DslMap<kotlin.Boolean, com.google.protobuf.ByteString, ByteMappingProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getByteMappingMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.byteMappingMap
      )
    /**
     * `map<bool, bytes> byte_mapping = 3 [json_name = "byteMapping"];`
     */
    @JvmName("putByteMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Boolean, com.google.protobuf.ByteString, ByteMappingProxy>
      .put(key: kotlin.Boolean, value: com.google.protobuf.ByteString) {
         _builder.putByteMapping(key, value)
       }
    /**
     * `map<bool, bytes> byte_mapping = 3 [json_name = "byteMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setByteMapping")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Boolean, com.google.protobuf.ByteString, ByteMappingProxy>
      .set(key: kotlin.Boolean, value: com.google.protobuf.ByteString) {
         put(key, value)
       }
    /**
     * `map<bool, bytes> byte_mapping = 3 [json_name = "byteMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeByteMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Boolean, com.google.protobuf.ByteString, ByteMappingProxy>
      .remove(key: kotlin.Boolean) {
         _builder.removeByteMapping(key)
       }
    /**
     * `map<bool, bytes> byte_mapping = 3 [json_name = "byteMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllByteMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Boolean, com.google.protobuf.ByteString, ByteMappingProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Boolean, com.google.protobuf.ByteString>) {
         _builder.putAllByteMapping(map)
       }
    /**
     * `map<bool, bytes> byte_mapping = 3 [json_name = "byteMapping"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearByteMapping")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Boolean, com.google.protobuf.ByteString, ByteMappingProxy>
      .clear() {
         _builder.clearByteMapping()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class StrToStrProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<string, string> str_to_str = 4 [json_name = "strToStr"];`
     */
     public val strToStr: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, StrToStrProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getStrToStrMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.strToStrMap
      )
    /**
     * `map<string, string> str_to_str = 4 [json_name = "strToStr"];`
     */
    @JvmName("putStrToStr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, StrToStrProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putStrToStr(key, value)
       }
    /**
     * `map<string, string> str_to_str = 4 [json_name = "strToStr"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setStrToStr")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, StrToStrProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * `map<string, string> str_to_str = 4 [json_name = "strToStr"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeStrToStr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, StrToStrProxy>
      .remove(key: kotlin.String) {
         _builder.removeStrToStr(key)
       }
    /**
     * `map<string, string> str_to_str = 4 [json_name = "strToStr"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllStrToStr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, StrToStrProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllStrToStr(map)
       }
    /**
     * `map<string, string> str_to_str = 4 [json_name = "strToStr"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearStrToStr")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, StrToStrProxy>
      .clear() {
         _builder.clearStrToStr()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.MessageWithMap.copy(block: `test_proto`.MessageWithMapKt.Dsl.() -> kotlin.Unit): test_proto.Test.MessageWithMap =
  `test_proto`.MessageWithMapKt.Dsl._create(this.toBuilder()).apply { block() }._build()

