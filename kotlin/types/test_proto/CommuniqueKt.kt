// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializecommunique")
public inline fun communique(block: test_proto.CommuniqueKt.Dsl.() -> kotlin.Unit): test_proto.Test.Communique =
  test_proto.CommuniqueKt.Dsl._create(test_proto.Test.Communique.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.Communique`
 */
public object CommuniqueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.Communique.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.Communique.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.Communique = _builder.build()

    /**
     * `optional bool make_me_cry = 1 [json_name = "makeMeCry"];`
     */
    public var makeMeCry: kotlin.Boolean
      @JvmName("getMakeMeCry")
      get() = _builder.makeMeCry
      @JvmName("setMakeMeCry")
      set(value) {
        _builder.makeMeCry = value
      }
    /**
     * `optional bool make_me_cry = 1 [json_name = "makeMeCry"];`
     */
    public fun clearMakeMeCry() {
      _builder.clearMakeMeCry()
    }
    /**
     * `optional bool make_me_cry = 1 [json_name = "makeMeCry"];`
     * @return Whether the makeMeCry field is set.
     */
    public fun hasMakeMeCry(): kotlin.Boolean {
      return _builder.hasMakeMeCry()
    }

    /**
     * `int32 number = 5 [json_name = "number"];`
     */
    public var number: kotlin.Int
      @JvmName("getNumber")
      get() = _builder.number
      @JvmName("setNumber")
      set(value) {
        _builder.number = value
      }
    /**
     * `int32 number = 5 [json_name = "number"];`
     */
    public fun clearNumber() {
      _builder.clearNumber()
    }
    /**
     * `int32 number = 5 [json_name = "number"];`
     * @return Whether the number field is set.
     */
    public fun hasNumber(): kotlin.Boolean {
      return _builder.hasNumber()
    }

    /**
     * `string name = 6 [json_name = "name"];`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.name
      @JvmName("setName")
      set(value) {
        _builder.name = value
      }
    /**
     * `string name = 6 [json_name = "name"];`
     */
    public fun clearName() {
      _builder.clearName()
    }
    /**
     * `string name = 6 [json_name = "name"];`
     * @return Whether the name field is set.
     */
    public fun hasName(): kotlin.Boolean {
      return _builder.hasName()
    }

    /**
     * `bytes data = 7 [json_name = "data"];`
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.data
      @JvmName("setData")
      set(value) {
        _builder.data = value
      }
    /**
     * `bytes data = 7 [json_name = "data"];`
     */
    public fun clearData() {
      _builder.clearData()
    }
    /**
     * `bytes data = 7 [json_name = "data"];`
     * @return Whether the data field is set.
     */
    public fun hasData(): kotlin.Boolean {
      return _builder.hasData()
    }

    /**
     * `double temp_c = 8 [json_name = "tempC"];`
     */
    public var tempC: kotlin.Double
      @JvmName("getTempC")
      get() = _builder.tempC
      @JvmName("setTempC")
      set(value) {
        _builder.tempC = value
      }
    /**
     * `double temp_c = 8 [json_name = "tempC"];`
     */
    public fun clearTempC() {
      _builder.clearTempC()
    }
    /**
     * `double temp_c = 8 [json_name = "tempC"];`
     * @return Whether the tempC field is set.
     */
    public fun hasTempC(): kotlin.Boolean {
      return _builder.hasTempC()
    }

    /**
     * `.test_proto.MyMessage.Color col = 9 [json_name = "col"];`
     */
    public var col: test_proto.Test.MyMessage.Color
      @JvmName("getCol")
      get() = _builder.col
      @JvmName("setCol")
      set(value) {
        _builder.col = value
      }
    /**
     * `.test_proto.MyMessage.Color col = 9 [json_name = "col"];`
     */
    public fun clearCol() {
      _builder.clearCol()
    }
    /**
     * `.test_proto.MyMessage.Color col = 9 [json_name = "col"];`
     * @return Whether the col field is set.
     */
    public fun hasCol(): kotlin.Boolean {
      return _builder.hasCol()
    }

    /**
     * `.test_proto.Strings msg = 10 [json_name = "msg"];`
     */
    public var msg: test_proto.Test.Strings
      @JvmName("getMsg")
      get() = _builder.msg
      @JvmName("setMsg")
      set(value) {
        _builder.msg = value
      }
    /**
     * `.test_proto.Strings msg = 10 [json_name = "msg"];`
     */
    public fun clearMsg() {
      _builder.clearMsg()
    }
    /**
     * `.test_proto.Strings msg = 10 [json_name = "msg"];`
     * @return Whether the msg field is set.
     */
    public fun hasMsg(): kotlin.Boolean {
      return _builder.hasMsg()
    }
    public val unionCase: test_proto.Test.Communique.UnionCase
    @kotlin.jvm.JvmName("getUnionCase")
      get() = _builder.getUnionCase()

    public fun clearUnion() {
      _builder.clearUnion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.Communique.copy(block: `test_proto`.CommuniqueKt.Dsl.() -> kotlin.Unit): test_proto.Test.Communique =
  `test_proto`.CommuniqueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val test_proto.Test.CommuniqueOrBuilder.msgOrNull: test_proto.Test.Strings?
  get() = if (hasMsg()) getMsg() else null

