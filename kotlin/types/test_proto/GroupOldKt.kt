// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializegroupOld")
public inline fun groupOld(block: test_proto.GroupOldKt.Dsl.() -> kotlin.Unit): test_proto.Test.GroupOld =
  test_proto.GroupOldKt.Dsl._create(test_proto.Test.GroupOld.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.GroupOld`
 */
public object GroupOldKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.GroupOld.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.GroupOld.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.GroupOld = _builder.build()

    /**
     * `optional group G = 101 [json_name = "g"] { ... }`
     */
    public var g: test_proto.Test.GroupOld.G
      @JvmName("getG")
      get() = _builder.g
      @JvmName("setG")
      set(value) {
        _builder.g = value
      }
    /**
     * `optional group G = 101 [json_name = "g"] { ... }`
     */
    public fun clearG() {
      _builder.clearG()
    }
    /**
     * `optional group G = 101 [json_name = "g"] { ... }`
     * @return Whether the g field is set.
     */
    public fun hasG(): kotlin.Boolean {
      return _builder.hasG()
    }

    public val GroupOldKt.Dsl.gOrNull: test_proto.Test.GroupOld.G?
      get() = _builder.gOrNull
  }
  @kotlin.jvm.JvmName("-initializeg")
  public inline fun g(block: test_proto.GroupOldKt.GKt.Dsl.() -> kotlin.Unit): test_proto.Test.GroupOld.G =
    test_proto.GroupOldKt.GKt.Dsl._create(test_proto.Test.GroupOld.G.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `test_proto.GroupOld.G`
   */
  public object GKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: test_proto.Test.GroupOld.G.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: test_proto.Test.GroupOld.G.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): test_proto.Test.GroupOld.G = _builder.build()

      /**
       * `optional int32 x = 2 [json_name = "x"];`
       */
      public var x: kotlin.Int
        @JvmName("getX")
        get() = _builder.x
        @JvmName("setX")
        set(value) {
          _builder.x = value
        }
      /**
       * `optional int32 x = 2 [json_name = "x"];`
       */
      public fun clearX() {
        _builder.clearX()
      }
      /**
       * `optional int32 x = 2 [json_name = "x"];`
       * @return Whether the x field is set.
       */
      public fun hasX(): kotlin.Boolean {
        return _builder.hasX()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.GroupOld.copy(block: `test_proto`.GroupOldKt.Dsl.() -> kotlin.Unit): test_proto.Test.GroupOld =
  `test_proto`.GroupOldKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.GroupOld.G.copy(block: `test_proto`.GroupOldKt.GKt.Dsl.() -> kotlin.Unit): test_proto.Test.GroupOld.G =
  `test_proto`.GroupOldKt.GKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val test_proto.Test.GroupOldOrBuilder.gOrNull: test_proto.Test.GroupOld.G?
  get() = if (hasG()) getG() else null

