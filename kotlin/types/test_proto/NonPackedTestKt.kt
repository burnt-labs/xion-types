// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializenonPackedTest")
public inline fun nonPackedTest(block: test_proto.NonPackedTestKt.Dsl.() -> kotlin.Unit): test_proto.Test.NonPackedTest =
  test_proto.NonPackedTestKt.Dsl._create(test_proto.Test.NonPackedTest.newBuilder()).apply { block() }._build()
/**
 * ```
 * For testing packed/non-packed decoder switching.
 * A serialized instance of one should be deserializable as the other.
 * ```
 *
 * Protobuf type `test_proto.NonPackedTest`
 */
public object NonPackedTestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.NonPackedTest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.NonPackedTest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.NonPackedTest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated int32 a = 1 [json_name = "a"];`
     */
     public val a: com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.aList
      )
    /**
     * `repeated int32 a = 1 [json_name = "a"];`
     * @param value The a to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addA")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>.add(value: kotlin.Int) {
      _builder.addA(value)
    }/**
     * `repeated int32 a = 1 [json_name = "a"];`
     * @param value The a to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignA")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * `repeated int32 a = 1 [json_name = "a"];`
     * @param values The a to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllA")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllA(values)
    }/**
     * `repeated int32 a = 1 [json_name = "a"];`
     * @param values The a to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllA")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * `repeated int32 a = 1 [json_name = "a"];`
     * @param index The index to set the value at.
     * @param value The a to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setA")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setA(index, value)
    }/**
     * `repeated int32 a = 1 [json_name = "a"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearA")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, AProxy>.clear() {
      _builder.clearA()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.NonPackedTest.copy(block: `test_proto`.NonPackedTestKt.Dsl.() -> kotlin.Unit): test_proto.Test.NonPackedTest =
  `test_proto`.NonPackedTestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

