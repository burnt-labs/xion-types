// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializerequiredInnerMessage")
public inline fun requiredInnerMessage(block: test_proto.RequiredInnerMessageKt.Dsl.() -> kotlin.Unit): test_proto.Test.RequiredInnerMessage =
  test_proto.RequiredInnerMessageKt.Dsl._create(test_proto.Test.RequiredInnerMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.RequiredInnerMessage`
 */
public object RequiredInnerMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.RequiredInnerMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.RequiredInnerMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.RequiredInnerMessage = _builder.build()

    /**
     * `required .test_proto.InnerMessage leo_finally_won_an_oscar = 1 [json_name = "leoFinallyWonAnOscar"];`
     */
    public var leoFinallyWonAnOscar: test_proto.Test.InnerMessage
      @JvmName("getLeoFinallyWonAnOscar")
      get() = _builder.leoFinallyWonAnOscar
      @JvmName("setLeoFinallyWonAnOscar")
      set(value) {
        _builder.leoFinallyWonAnOscar = value
      }
    /**
     * `required .test_proto.InnerMessage leo_finally_won_an_oscar = 1 [json_name = "leoFinallyWonAnOscar"];`
     */
    public fun clearLeoFinallyWonAnOscar() {
      _builder.clearLeoFinallyWonAnOscar()
    }
    /**
     * `required .test_proto.InnerMessage leo_finally_won_an_oscar = 1 [json_name = "leoFinallyWonAnOscar"];`
     * @return Whether the leoFinallyWonAnOscar field is set.
     */
    public fun hasLeoFinallyWonAnOscar(): kotlin.Boolean {
      return _builder.hasLeoFinallyWonAnOscar()
    }

    public val RequiredInnerMessageKt.Dsl.leoFinallyWonAnOscarOrNull: test_proto.Test.InnerMessage?
      get() = _builder.leoFinallyWonAnOscarOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.RequiredInnerMessage.copy(block: `test_proto`.RequiredInnerMessageKt.Dsl.() -> kotlin.Unit): test_proto.Test.RequiredInnerMessage =
  `test_proto`.RequiredInnerMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val test_proto.Test.RequiredInnerMessageOrBuilder.leoFinallyWonAnOscarOrNull: test_proto.Test.InnerMessage?
  get() = if (hasLeoFinallyWonAnOscar()) getLeoFinallyWonAnOscar() else null

