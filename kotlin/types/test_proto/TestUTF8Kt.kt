// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package test_proto;

@kotlin.jvm.JvmName("-initializetestUTF8")
public inline fun testUTF8(block: test_proto.TestUTF8Kt.Dsl.() -> kotlin.Unit): test_proto.Test.TestUTF8 =
  test_proto.TestUTF8Kt.Dsl._create(test_proto.Test.TestUTF8.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `test_proto.TestUTF8`
 */
public object TestUTF8Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: test_proto.Test.TestUTF8.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: test_proto.Test.TestUTF8.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): test_proto.Test.TestUTF8 = _builder.build()

    /**
     * `optional string scalar = 1 [json_name = "scalar"];`
     */
    public var scalar: kotlin.String
      @JvmName("getScalar")
      get() = _builder.scalar
      @JvmName("setScalar")
      set(value) {
        _builder.scalar = value
      }
    /**
     * `optional string scalar = 1 [json_name = "scalar"];`
     */
    public fun clearScalar() {
      _builder.clearScalar()
    }
    /**
     * `optional string scalar = 1 [json_name = "scalar"];`
     * @return Whether the scalar field is set.
     */
    public fun hasScalar(): kotlin.Boolean {
      return _builder.hasScalar()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VectorProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated string vector = 2 [json_name = "vector"];`
     * @return A list containing the vector.
     */
    public val vector: com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.vectorList
      )
    /**
     * `repeated string vector = 2 [json_name = "vector"];`
     * @param value The vector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVector")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>.add(value: kotlin.String) {
      _builder.addVector(value)
    }
    /**
     * `repeated string vector = 2 [json_name = "vector"];`
     * @param value The vector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVector")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * `repeated string vector = 2 [json_name = "vector"];`
     * @param values The vector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVector")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllVector(values)
    }
    /**
     * `repeated string vector = 2 [json_name = "vector"];`
     * @param values The vector to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVector")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * `repeated string vector = 2 [json_name = "vector"];`
     * @param index The index to set the value at.
     * @param value The vector to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVector")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setVector(index, value)
    }/**
     * `repeated string vector = 2 [json_name = "vector"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVector")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, VectorProxy>.clear() {
      _builder.clearVector()
    }
    /**
     * `string field = 3 [json_name = "field"];`
     */
    public var field: kotlin.String
      @JvmName("getField")
      get() = _builder.field
      @JvmName("setField")
      set(value) {
        _builder.field = value
      }
    /**
     * `string field = 3 [json_name = "field"];`
     */
    public fun clearField() {
      _builder.clearField()
    }
    /**
     * `string field = 3 [json_name = "field"];`
     * @return Whether the field field is set.
     */
    public fun hasField(): kotlin.Boolean {
      return _builder.hasField()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MapKeyProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<string, int64> map_key = 4 [json_name = "mapKey"];`
     */
     public val mapKey: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Long, MapKeyProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMapKeyMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.mapKeyMap
      )
    /**
     * `map<string, int64> map_key = 4 [json_name = "mapKey"];`
     */
    @JvmName("putMapKey")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Long, MapKeyProxy>
      .put(key: kotlin.String, value: kotlin.Long) {
         _builder.putMapKey(key, value)
       }
    /**
     * `map<string, int64> map_key = 4 [json_name = "mapKey"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMapKey")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Long, MapKeyProxy>
      .set(key: kotlin.String, value: kotlin.Long) {
         put(key, value)
       }
    /**
     * `map<string, int64> map_key = 4 [json_name = "mapKey"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMapKey")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Long, MapKeyProxy>
      .remove(key: kotlin.String) {
         _builder.removeMapKey(key)
       }
    /**
     * `map<string, int64> map_key = 4 [json_name = "mapKey"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMapKey")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Long, MapKeyProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.Long>) {
         _builder.putAllMapKey(map)
       }
    /**
     * `map<string, int64> map_key = 4 [json_name = "mapKey"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMapKey")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.Long, MapKeyProxy>
      .clear() {
         _builder.clearMapKey()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MapValueProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<int64, string> map_value = 5 [json_name = "mapValue"];`
     */
     public val mapValue: com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, MapValueProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getMapValueMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.mapValueMap
      )
    /**
     * `map<int64, string> map_value = 5 [json_name = "mapValue"];`
     */
    @JvmName("putMapValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, MapValueProxy>
      .put(key: kotlin.Long, value: kotlin.String) {
         _builder.putMapValue(key, value)
       }
    /**
     * `map<int64, string> map_value = 5 [json_name = "mapValue"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setMapValue")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, MapValueProxy>
      .set(key: kotlin.Long, value: kotlin.String) {
         put(key, value)
       }
    /**
     * `map<int64, string> map_value = 5 [json_name = "mapValue"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeMapValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, MapValueProxy>
      .remove(key: kotlin.Long) {
         _builder.removeMapValue(key)
       }
    /**
     * `map<int64, string> map_value = 5 [json_name = "mapValue"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllMapValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, MapValueProxy>
      .putAll(map: kotlin.collections.Map<kotlin.Long, kotlin.String>) {
         _builder.putAllMapValue(map)
       }
    /**
     * `map<int64, string> map_value = 5 [json_name = "mapValue"];`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearMapValue")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.Long, kotlin.String, MapValueProxy>
      .clear() {
         _builder.clearMapValue()
       }
    public val oneofCase: test_proto.Test.TestUTF8.OneofCase
    @kotlin.jvm.JvmName("getOneofCase")
      get() = _builder.getOneofCase()

    public fun clearOneof() {
      _builder.clearOneof()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun test_proto.Test.TestUTF8.copy(block: `test_proto`.TestUTF8Kt.Dsl.() -> kotlin.Unit): test_proto.Test.TestUTF8 =
  `test_proto`.TestUTF8Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

