// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializeparams")
public inline fun params(block: cosmwasm.wasm.v1.ParamsKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Types.Params =
  cosmwasm.wasm.v1.ParamsKt.Dsl._create(cosmwasm.wasm.v1.Types.Params.newBuilder()).apply { block() }._build()
/**
 * ```
 * Params defines the set of wasm parameters.
 * ```
 *
 * Protobuf type `cosmwasm.wasm.v1.Params`
 */
public object ParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.Types.Params.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.Types.Params.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.Types.Params = _builder.build()

    /**
     * `.cosmwasm.wasm.v1.AccessConfig code_upload_access = 1 [json_name = "codeUploadAccess", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"code_upload_access\"", (.amino.dont_omitempty) = true];`
     */
    public var codeUploadAccess: cosmwasm.wasm.v1.Types.AccessConfig
      @JvmName("getCodeUploadAccess")
      get() = _builder.codeUploadAccess
      @JvmName("setCodeUploadAccess")
      set(value) {
        _builder.codeUploadAccess = value
      }
    /**
     * `.cosmwasm.wasm.v1.AccessConfig code_upload_access = 1 [json_name = "codeUploadAccess", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"code_upload_access\"", (.amino.dont_omitempty) = true];`
     */
    public fun clearCodeUploadAccess() {
      _builder.clearCodeUploadAccess()
    }
    /**
     * `.cosmwasm.wasm.v1.AccessConfig code_upload_access = 1 [json_name = "codeUploadAccess", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"code_upload_access\"", (.amino.dont_omitempty) = true];`
     * @return Whether the codeUploadAccess field is set.
     */
    public fun hasCodeUploadAccess(): kotlin.Boolean {
      return _builder.hasCodeUploadAccess()
    }

    public val ParamsKt.Dsl.codeUploadAccessOrNull: cosmwasm.wasm.v1.Types.AccessConfig?
      get() = _builder.codeUploadAccessOrNull

    /**
     * `.cosmwasm.wasm.v1.AccessType instantiate_default_permission = 2 [json_name = "instantiateDefaultPermission", (.gogoproto.moretags) = "yaml:\"instantiate_default_permission\""];`
     */
    public var instantiateDefaultPermission: cosmwasm.wasm.v1.Types.AccessType
      @JvmName("getInstantiateDefaultPermission")
      get() = _builder.instantiateDefaultPermission
      @JvmName("setInstantiateDefaultPermission")
      set(value) {
        _builder.instantiateDefaultPermission = value
      }
    public var instantiateDefaultPermissionValue: kotlin.Int
      @JvmName("getInstantiateDefaultPermissionValue")
      get() = _builder.instantiateDefaultPermissionValue
      @JvmName("setInstantiateDefaultPermissionValue")
      set(value) {
        _builder.instantiateDefaultPermissionValue = value
      }
    /**
     * `.cosmwasm.wasm.v1.AccessType instantiate_default_permission = 2 [json_name = "instantiateDefaultPermission", (.gogoproto.moretags) = "yaml:\"instantiate_default_permission\""];`
     */
    public fun clearInstantiateDefaultPermission() {
      _builder.clearInstantiateDefaultPermission()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.Types.Params.copy(block: `cosmwasm.wasm.v1`.ParamsKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Types.Params =
  `cosmwasm.wasm.v1`.ParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmwasm.wasm.v1.Types.ParamsOrBuilder.codeUploadAccessOrNull: cosmwasm.wasm.v1.Types.AccessConfig?
  get() = if (hasCodeUploadAccess()) getCodeUploadAccess() else null

