// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/proposal_legacy.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializestoreCodeProposal")
public inline fun storeCodeProposal(block: cosmwasm.wasm.v1.StoreCodeProposalKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal =
  cosmwasm.wasm.v1.StoreCodeProposalKt.Dsl._create(cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal.newBuilder()).apply { block() }._build()
/**
 * ```
 * Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
 * an explicit StoreCodeProposal. To submit WASM code to the system,
 * a simple MsgStoreCode can be invoked from the x/gov module via
 * a v1 governance proposal.
 * ```
 *
 * Protobuf type `cosmwasm.wasm.v1.StoreCodeProposal`
 */
public object StoreCodeProposalKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal = _builder.build()

    /**
     * ```
     * Title is a short summary
     * ```
     *
     * `string title = 1 [json_name = "title"];`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.title
      @JvmName("setTitle")
      set(value) {
        _builder.title = value
      }
    /**
     * ```
     * Title is a short summary
     * ```
     *
     * `string title = 1 [json_name = "title"];`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * ```
     * Description is a human readable text
     * ```
     *
     * `string description = 2 [json_name = "description"];`
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.description
      @JvmName("setDescription")
      set(value) {
        _builder.description = value
      }
    /**
     * ```
     * Description is a human readable text
     * ```
     *
     * `string description = 2 [json_name = "description"];`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * ```
     * RunAs is the address that is passed to the contract's environment as sender
     * ```
     *
     * `string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var runAs: kotlin.String
      @JvmName("getRunAs")
      get() = _builder.runAs
      @JvmName("setRunAs")
      set(value) {
        _builder.runAs = value
      }
    /**
     * ```
     * RunAs is the address that is passed to the contract's environment as sender
     * ```
     *
     * `string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearRunAs() {
      _builder.clearRunAs()
    }

    /**
     * ```
     * WASMByteCode can be raw or gzip compressed
     * ```
     *
     * `bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];`
     */
    public var wasmByteCode: com.google.protobuf.ByteString
      @JvmName("getWasmByteCode")
      get() = _builder.wasmByteCode
      @JvmName("setWasmByteCode")
      set(value) {
        _builder.wasmByteCode = value
      }
    /**
     * ```
     * WASMByteCode can be raw or gzip compressed
     * ```
     *
     * `bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];`
     */
    public fun clearWasmByteCode() {
      _builder.clearWasmByteCode()
    }

    /**
     * ```
     * InstantiatePermission to apply on contract creation, optional
     * ```
     *
     * `.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];`
     */
    public var instantiatePermission: cosmwasm.wasm.v1.Types.AccessConfig
      @JvmName("getInstantiatePermission")
      get() = _builder.instantiatePermission
      @JvmName("setInstantiatePermission")
      set(value) {
        _builder.instantiatePermission = value
      }
    /**
     * ```
     * InstantiatePermission to apply on contract creation, optional
     * ```
     *
     * `.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];`
     */
    public fun clearInstantiatePermission() {
      _builder.clearInstantiatePermission()
    }
    /**
     * ```
     * InstantiatePermission to apply on contract creation, optional
     * ```
     *
     * `.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];`
     * @return Whether the instantiatePermission field is set.
     */
    public fun hasInstantiatePermission(): kotlin.Boolean {
      return _builder.hasInstantiatePermission()
    }

    public val StoreCodeProposalKt.Dsl.instantiatePermissionOrNull: cosmwasm.wasm.v1.Types.AccessConfig?
      get() = _builder.instantiatePermissionOrNull

    /**
     * ```
     * UnpinCode code on upload, optional
     * ```
     *
     * `bool unpin_code = 8 [json_name = "unpinCode"];`
     */
    public var unpinCode: kotlin.Boolean
      @JvmName("getUnpinCode")
      get() = _builder.unpinCode
      @JvmName("setUnpinCode")
      set(value) {
        _builder.unpinCode = value
      }
    /**
     * ```
     * UnpinCode code on upload, optional
     * ```
     *
     * `bool unpin_code = 8 [json_name = "unpinCode"];`
     */
    public fun clearUnpinCode() {
      _builder.clearUnpinCode()
    }

    /**
     * ```
     * Source is the URL where the code is hosted
     * ```
     *
     * `string source = 9 [json_name = "source"];`
     */
    public var source: kotlin.String
      @JvmName("getSource")
      get() = _builder.source
      @JvmName("setSource")
      set(value) {
        _builder.source = value
      }
    /**
     * ```
     * Source is the URL where the code is hosted
     * ```
     *
     * `string source = 9 [json_name = "source"];`
     */
    public fun clearSource() {
      _builder.clearSource()
    }

    /**
     * ```
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     * ```
     *
     * `string builder = 10 [json_name = "builder"];`
     */
    public var builder: kotlin.String
      @JvmName("getBuilder")
      get() = _builder.builder
      @JvmName("setBuilder")
      set(value) {
        _builder.builder = value
      }
    /**
     * ```
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     * ```
     *
     * `string builder = 10 [json_name = "builder"];`
     */
    public fun clearBuilder() {
      _builder.clearBuilder()
    }

    /**
     * ```
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     * ```
     *
     * `bytes code_hash = 11 [json_name = "codeHash"];`
     */
    public var codeHash: com.google.protobuf.ByteString
      @JvmName("getCodeHash")
      get() = _builder.codeHash
      @JvmName("setCodeHash")
      set(value) {
        _builder.codeHash = value
      }
    /**
     * ```
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     * ```
     *
     * `bytes code_hash = 11 [json_name = "codeHash"];`
     */
    public fun clearCodeHash() {
      _builder.clearCodeHash()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal.copy(block: `cosmwasm.wasm.v1`.StoreCodeProposalKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposal =
  `cosmwasm.wasm.v1`.StoreCodeProposalKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmwasm.wasm.v1.ProposalLegacy.StoreCodeProposalOrBuilder.instantiatePermissionOrNull: cosmwasm.wasm.v1.Types.AccessConfig?
  get() = if (hasInstantiatePermission()) getInstantiatePermission() else null

