// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/tendermint/v1/tendermint.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.lightclients.tendermint.v1;

@kotlin.jvm.JvmName("-initializeconsensusState")
public inline fun consensusState(block: ibc.lightclients.tendermint.v1.ConsensusStateKt.Dsl.() -> kotlin.Unit): ibc.lightclients.tendermint.v1.Tendermint.ConsensusState =
  ibc.lightclients.tendermint.v1.ConsensusStateKt.Dsl._create(ibc.lightclients.tendermint.v1.Tendermint.ConsensusState.newBuilder()).apply { block() }._build()
/**
 * ```
 * ConsensusState defines the consensus state from Tendermint.
 * ```
 *
 * Protobuf type `ibc.lightclients.tendermint.v1.ConsensusState`
 */
public object ConsensusStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.tendermint.v1.Tendermint.ConsensusState.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.tendermint.v1.Tendermint.ConsensusState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.tendermint.v1.Tendermint.ConsensusState = _builder.build()

    /**
     * ```
     * timestamp that corresponds to the block height in which the ConsensusState
     * was stored.
     * ```
     *
     * `.google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];`
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * ```
     * timestamp that corresponds to the block height in which the ConsensusState
     * was stored.
     * ```
     *
     * `.google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * ```
     * timestamp that corresponds to the block height in which the ConsensusState
     * was stored.
     * ```
     *
     * `.google.protobuf.Timestamp timestamp = 1 [json_name = "timestamp", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    public val ConsensusStateKt.Dsl.timestampOrNull: com.google.protobuf.Timestamp?
      get() = _builder.timestampOrNull

    /**
     * ```
     * commitment root (i.e app hash)
     * ```
     *
     * `.ibc.core.commitment.v1.MerkleRoot root = 2 [json_name = "root", (.gogoproto.nullable) = false];`
     */
    public var root: ibc.core.commitment.v1.Commitment.MerkleRoot
      @JvmName("getRoot")
      get() = _builder.root
      @JvmName("setRoot")
      set(value) {
        _builder.root = value
      }
    /**
     * ```
     * commitment root (i.e app hash)
     * ```
     *
     * `.ibc.core.commitment.v1.MerkleRoot root = 2 [json_name = "root", (.gogoproto.nullable) = false];`
     */
    public fun clearRoot() {
      _builder.clearRoot()
    }
    /**
     * ```
     * commitment root (i.e app hash)
     * ```
     *
     * `.ibc.core.commitment.v1.MerkleRoot root = 2 [json_name = "root", (.gogoproto.nullable) = false];`
     * @return Whether the root field is set.
     */
    public fun hasRoot(): kotlin.Boolean {
      return _builder.hasRoot()
    }

    public val ConsensusStateKt.Dsl.rootOrNull: ibc.core.commitment.v1.Commitment.MerkleRoot?
      get() = _builder.rootOrNull

    /**
     * `bytes next_validators_hash = 3 [json_name = "nextValidatorsHash", (.gogoproto.casttype) = "github.com/cometbft/cometbft/libs/bytes.HexBytes"];`
     */
    public var nextValidatorsHash: com.google.protobuf.ByteString
      @JvmName("getNextValidatorsHash")
      get() = _builder.nextValidatorsHash
      @JvmName("setNextValidatorsHash")
      set(value) {
        _builder.nextValidatorsHash = value
      }
    /**
     * `bytes next_validators_hash = 3 [json_name = "nextValidatorsHash", (.gogoproto.casttype) = "github.com/cometbft/cometbft/libs/bytes.HexBytes"];`
     */
    public fun clearNextValidatorsHash() {
      _builder.clearNextValidatorsHash()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.tendermint.v1.Tendermint.ConsensusState.copy(block: `ibc.lightclients.tendermint.v1`.ConsensusStateKt.Dsl.() -> kotlin.Unit): ibc.lightclients.tendermint.v1.Tendermint.ConsensusState =
  `ibc.lightclients.tendermint.v1`.ConsensusStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.lightclients.tendermint.v1.Tendermint.ConsensusStateOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

public val ibc.lightclients.tendermint.v1.Tendermint.ConsensusStateOrBuilder.rootOrNull: ibc.core.commitment.v1.Commitment.MerkleRoot?
  get() = if (hasRoot()) getRoot() else null

