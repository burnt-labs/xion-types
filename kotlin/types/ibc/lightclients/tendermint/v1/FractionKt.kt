// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/tendermint/v1/tendermint.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.lightclients.tendermint.v1;

@kotlin.jvm.JvmName("-initializefraction")
public inline fun fraction(block: ibc.lightclients.tendermint.v1.FractionKt.Dsl.() -> kotlin.Unit): ibc.lightclients.tendermint.v1.Tendermint.Fraction =
  ibc.lightclients.tendermint.v1.FractionKt.Dsl._create(ibc.lightclients.tendermint.v1.Tendermint.Fraction.newBuilder()).apply { block() }._build()
/**
 * ```
 * Fraction defines the protobuf message type for tmmath.Fraction that only
 * supports positive values.
 * ```
 *
 * Protobuf type `ibc.lightclients.tendermint.v1.Fraction`
 */
public object FractionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.tendermint.v1.Tendermint.Fraction.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.tendermint.v1.Tendermint.Fraction.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.tendermint.v1.Tendermint.Fraction = _builder.build()

    /**
     * `uint64 numerator = 1 [json_name = "numerator"];`
     */
    public var numerator: kotlin.Long
      @JvmName("getNumerator")
      get() = _builder.numerator
      @JvmName("setNumerator")
      set(value) {
        _builder.numerator = value
      }
    /**
     * `uint64 numerator = 1 [json_name = "numerator"];`
     */
    public fun clearNumerator() {
      _builder.clearNumerator()
    }

    /**
     * `uint64 denominator = 2 [json_name = "denominator"];`
     */
    public var denominator: kotlin.Long
      @JvmName("getDenominator")
      get() = _builder.denominator
      @JvmName("setDenominator")
      set(value) {
        _builder.denominator = value
      }
    /**
     * `uint64 denominator = 2 [json_name = "denominator"];`
     */
    public fun clearDenominator() {
      _builder.clearDenominator()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.tendermint.v1.Tendermint.Fraction.copy(block: `ibc.lightclients.tendermint.v1`.FractionKt.Dsl.() -> kotlin.Unit): ibc.lightclients.tendermint.v1.Tendermint.Fraction =
  `ibc.lightclients.tendermint.v1`.FractionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

