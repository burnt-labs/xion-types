// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/solomachine/v2/solomachine.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.lightclients.solomachine.v2;

@kotlin.jvm.JvmName("-initializemisbehaviour")
public inline fun misbehaviour(block: ibc.lightclients.solomachine.v2.MisbehaviourKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour =
  ibc.lightclients.solomachine.v2.MisbehaviourKt.Dsl._create(ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour.newBuilder()).apply { block() }._build()
/**
 * ```
 * Misbehaviour defines misbehaviour for a solo machine which consists
 * of a sequence and two signatures over different messages at that sequence.
 * ```
 *
 * Protobuf type `ibc.lightclients.solomachine.v2.Misbehaviour`
 */
public object MisbehaviourKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour = _builder.build()

    /**
     * `string client_id = 1 [json_name = "clientId"];`
     */
    public var clientId: kotlin.String
      @JvmName("getClientId")
      get() = _builder.clientId
      @JvmName("setClientId")
      set(value) {
        _builder.clientId = value
      }
    /**
     * `string client_id = 1 [json_name = "clientId"];`
     */
    public fun clearClientId() {
      _builder.clearClientId()
    }

    /**
     * `uint64 sequence = 2 [json_name = "sequence"];`
     */
    public var sequence: kotlin.Long
      @JvmName("getSequence")
      get() = _builder.sequence
      @JvmName("setSequence")
      set(value) {
        _builder.sequence = value
      }
    /**
     * `uint64 sequence = 2 [json_name = "sequence"];`
     */
    public fun clearSequence() {
      _builder.clearSequence()
    }

    /**
     * `.ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];`
     */
    public var signatureOne: ibc.lightclients.solomachine.v2.Solomachine.SignatureAndData
      @JvmName("getSignatureOne")
      get() = _builder.signatureOne
      @JvmName("setSignatureOne")
      set(value) {
        _builder.signatureOne = value
      }
    /**
     * `.ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];`
     */
    public fun clearSignatureOne() {
      _builder.clearSignatureOne()
    }
    /**
     * `.ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];`
     * @return Whether the signatureOne field is set.
     */
    public fun hasSignatureOne(): kotlin.Boolean {
      return _builder.hasSignatureOne()
    }

    public val MisbehaviourKt.Dsl.signatureOneOrNull: ibc.lightclients.solomachine.v2.Solomachine.SignatureAndData?
      get() = _builder.signatureOneOrNull

    /**
     * `.ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];`
     */
    public var signatureTwo: ibc.lightclients.solomachine.v2.Solomachine.SignatureAndData
      @JvmName("getSignatureTwo")
      get() = _builder.signatureTwo
      @JvmName("setSignatureTwo")
      set(value) {
        _builder.signatureTwo = value
      }
    /**
     * `.ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];`
     */
    public fun clearSignatureTwo() {
      _builder.clearSignatureTwo()
    }
    /**
     * `.ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];`
     * @return Whether the signatureTwo field is set.
     */
    public fun hasSignatureTwo(): kotlin.Boolean {
      return _builder.hasSignatureTwo()
    }

    public val MisbehaviourKt.Dsl.signatureTwoOrNull: ibc.lightclients.solomachine.v2.Solomachine.SignatureAndData?
      get() = _builder.signatureTwoOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour.copy(block: `ibc.lightclients.solomachine.v2`.MisbehaviourKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.Misbehaviour =
  `ibc.lightclients.solomachine.v2`.MisbehaviourKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.lightclients.solomachine.v2.Solomachine.MisbehaviourOrBuilder.signatureOneOrNull: ibc.lightclients.solomachine.v2.Solomachine.SignatureAndData?
  get() = if (hasSignatureOne()) getSignatureOne() else null

public val ibc.lightclients.solomachine.v2.Solomachine.MisbehaviourOrBuilder.signatureTwoOrNull: ibc.lightclients.solomachine.v2.Solomachine.SignatureAndData?
  get() = if (hasSignatureTwo()) getSignatureTwo() else null

