// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/solomachine/v2/solomachine.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.lightclients.solomachine.v2;

@kotlin.jvm.JvmName("-initializeconnectionStateData")
public inline fun connectionStateData(block: ibc.lightclients.solomachine.v2.ConnectionStateDataKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData =
  ibc.lightclients.solomachine.v2.ConnectionStateDataKt.Dsl._create(ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData.newBuilder()).apply { block() }._build()
/**
 * ```
 * ConnectionStateData returns the SignBytes data for connection state
 * verification.
 * ```
 *
 * Protobuf type `ibc.lightclients.solomachine.v2.ConnectionStateData`
 */
public object ConnectionStateDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData = _builder.build()

    /**
     * `bytes path = 1 [json_name = "path"];`
     */
    public var path: com.google.protobuf.ByteString
      @JvmName("getPath")
      get() = _builder.path
      @JvmName("setPath")
      set(value) {
        _builder.path = value
      }
    /**
     * `bytes path = 1 [json_name = "path"];`
     */
    public fun clearPath() {
      _builder.clearPath()
    }

    /**
     * `.ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];`
     */
    public var connection: ibc.core.connection.v1.Connection.ConnectionEnd
      @JvmName("getConnection")
      get() = _builder.connection
      @JvmName("setConnection")
      set(value) {
        _builder.connection = value
      }
    /**
     * `.ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];`
     */
    public fun clearConnection() {
      _builder.clearConnection()
    }
    /**
     * `.ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];`
     * @return Whether the connection field is set.
     */
    public fun hasConnection(): kotlin.Boolean {
      return _builder.hasConnection()
    }

    public val ConnectionStateDataKt.Dsl.connectionOrNull: ibc.core.connection.v1.Connection.ConnectionEnd?
      get() = _builder.connectionOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData.copy(block: `ibc.lightclients.solomachine.v2`.ConnectionStateDataKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateData =
  `ibc.lightclients.solomachine.v2`.ConnectionStateDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.lightclients.solomachine.v2.Solomachine.ConnectionStateDataOrBuilder.connectionOrNull: ibc.core.connection.v1.Connection.ConnectionEnd?
  get() = if (hasConnection()) getConnection() else null

