// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/solomachine/v2/solomachine.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.lightclients.solomachine.v2;

@kotlin.jvm.JvmName("-initializeconsensusState")
public inline fun consensusState(block: ibc.lightclients.solomachine.v2.ConsensusStateKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.ConsensusState =
  ibc.lightclients.solomachine.v2.ConsensusStateKt.Dsl._create(ibc.lightclients.solomachine.v2.Solomachine.ConsensusState.newBuilder()).apply { block() }._build()
/**
 * ```
 * ConsensusState defines a solo machine consensus state. The sequence of a
 * consensus state is contained in the "height" key used in storing the
 * consensus state.
 * ```
 *
 * Protobuf type `ibc.lightclients.solomachine.v2.ConsensusState`
 */
public object ConsensusStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.solomachine.v2.Solomachine.ConsensusState.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v2.Solomachine.ConsensusState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v2.Solomachine.ConsensusState = _builder.build()

    /**
     * ```
     * public key of the solo machine
     * ```
     *
     * `.google.protobuf.Any public_key = 1 [json_name = "publicKey"];`
     */
    public var publicKey: com.google.protobuf.Any
      @JvmName("getPublicKey")
      get() = _builder.publicKey
      @JvmName("setPublicKey")
      set(value) {
        _builder.publicKey = value
      }
    /**
     * ```
     * public key of the solo machine
     * ```
     *
     * `.google.protobuf.Any public_key = 1 [json_name = "publicKey"];`
     */
    public fun clearPublicKey() {
      _builder.clearPublicKey()
    }
    /**
     * ```
     * public key of the solo machine
     * ```
     *
     * `.google.protobuf.Any public_key = 1 [json_name = "publicKey"];`
     * @return Whether the publicKey field is set.
     */
    public fun hasPublicKey(): kotlin.Boolean {
      return _builder.hasPublicKey()
    }

    public val ConsensusStateKt.Dsl.publicKeyOrNull: com.google.protobuf.Any?
      get() = _builder.publicKeyOrNull

    /**
     * ```
     * diversifier allows the same public key to be reused across different solo
     * machine clients (potentially on different chains) without being considered
     * misbehaviour.
     * ```
     *
     * `string diversifier = 2 [json_name = "diversifier"];`
     */
    public var diversifier: kotlin.String
      @JvmName("getDiversifier")
      get() = _builder.diversifier
      @JvmName("setDiversifier")
      set(value) {
        _builder.diversifier = value
      }
    /**
     * ```
     * diversifier allows the same public key to be reused across different solo
     * machine clients (potentially on different chains) without being considered
     * misbehaviour.
     * ```
     *
     * `string diversifier = 2 [json_name = "diversifier"];`
     */
    public fun clearDiversifier() {
      _builder.clearDiversifier()
    }

    /**
     * `uint64 timestamp = 3 [json_name = "timestamp"];`
     */
    public var timestamp: kotlin.Long
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * `uint64 timestamp = 3 [json_name = "timestamp"];`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.solomachine.v2.Solomachine.ConsensusState.copy(block: `ibc.lightclients.solomachine.v2`.ConsensusStateKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.ConsensusState =
  `ibc.lightclients.solomachine.v2`.ConsensusStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.lightclients.solomachine.v2.Solomachine.ConsensusStateOrBuilder.publicKeyOrNull: com.google.protobuf.Any?
  get() = if (hasPublicKey()) getPublicKey() else null

