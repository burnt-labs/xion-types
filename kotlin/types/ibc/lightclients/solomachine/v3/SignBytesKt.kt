// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/solomachine/v3/solomachine.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.lightclients.solomachine.v3;

@kotlin.jvm.JvmName("-initializesignBytes")
public inline fun signBytes(block: ibc.lightclients.solomachine.v3.SignBytesKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v3.Solomachine.SignBytes =
  ibc.lightclients.solomachine.v3.SignBytesKt.Dsl._create(ibc.lightclients.solomachine.v3.Solomachine.SignBytes.newBuilder()).apply { block() }._build()
/**
 * ```
 * SignBytes defines the signed bytes used for signature verification.
 * ```
 *
 * Protobuf type `ibc.lightclients.solomachine.v3.SignBytes`
 */
public object SignBytesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.solomachine.v3.Solomachine.SignBytes.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v3.Solomachine.SignBytes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v3.Solomachine.SignBytes = _builder.build()

    /**
     * ```
     * the sequence number
     * ```
     *
     * `uint64 sequence = 1 [json_name = "sequence"];`
     */
    public var sequence: kotlin.Long
      @JvmName("getSequence")
      get() = _builder.sequence
      @JvmName("setSequence")
      set(value) {
        _builder.sequence = value
      }
    /**
     * ```
     * the sequence number
     * ```
     *
     * `uint64 sequence = 1 [json_name = "sequence"];`
     */
    public fun clearSequence() {
      _builder.clearSequence()
    }

    /**
     * ```
     * the proof timestamp
     * ```
     *
     * `uint64 timestamp = 2 [json_name = "timestamp"];`
     */
    public var timestamp: kotlin.Long
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * ```
     * the proof timestamp
     * ```
     *
     * `uint64 timestamp = 2 [json_name = "timestamp"];`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * ```
     * the public key diversifier
     * ```
     *
     * `string diversifier = 3 [json_name = "diversifier"];`
     */
    public var diversifier: kotlin.String
      @JvmName("getDiversifier")
      get() = _builder.diversifier
      @JvmName("setDiversifier")
      set(value) {
        _builder.diversifier = value
      }
    /**
     * ```
     * the public key diversifier
     * ```
     *
     * `string diversifier = 3 [json_name = "diversifier"];`
     */
    public fun clearDiversifier() {
      _builder.clearDiversifier()
    }

    /**
     * ```
     * the standardised path bytes
     * ```
     *
     * `bytes path = 4 [json_name = "path"];`
     */
    public var path: com.google.protobuf.ByteString
      @JvmName("getPath")
      get() = _builder.path
      @JvmName("setPath")
      set(value) {
        _builder.path = value
      }
    /**
     * ```
     * the standardised path bytes
     * ```
     *
     * `bytes path = 4 [json_name = "path"];`
     */
    public fun clearPath() {
      _builder.clearPath()
    }

    /**
     * ```
     * the marshaled data bytes
     * ```
     *
     * `bytes data = 5 [json_name = "data"];`
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.data
      @JvmName("setData")
      set(value) {
        _builder.data = value
      }
    /**
     * ```
     * the marshaled data bytes
     * ```
     *
     * `bytes data = 5 [json_name = "data"];`
     */
    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.solomachine.v3.Solomachine.SignBytes.copy(block: `ibc.lightclients.solomachine.v3`.SignBytesKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v3.Solomachine.SignBytes =
  `ibc.lightclients.solomachine.v3`.SignBytesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

