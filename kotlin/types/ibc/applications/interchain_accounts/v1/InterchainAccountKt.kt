// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/interchain_accounts/v1/account.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.applications.interchain_accounts.v1;

@kotlin.jvm.JvmName("-initializeinterchainAccount")
public inline fun interchainAccount(block: ibc.applications.interchain_accounts.v1.InterchainAccountKt.Dsl.() -> kotlin.Unit): ibc.applications.interchain_accounts.v1.Account.InterchainAccount =
  ibc.applications.interchain_accounts.v1.InterchainAccountKt.Dsl._create(ibc.applications.interchain_accounts.v1.Account.InterchainAccount.newBuilder()).apply { block() }._build()
/**
 * ```
 * An InterchainAccount is defined as a BaseAccount & the address of the account owner on the controller chain
 * ```
 *
 * Protobuf type `ibc.applications.interchain_accounts.v1.InterchainAccount`
 */
public object InterchainAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.interchain_accounts.v1.Account.InterchainAccount.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.interchain_accounts.v1.Account.InterchainAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.applications.interchain_accounts.v1.Account.InterchainAccount = _builder.build()

    /**
     * `.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];`
     */
    public var baseAccount: cosmos.auth.v1beta1.Auth.BaseAccount
      @JvmName("getBaseAccount")
      get() = _builder.baseAccount
      @JvmName("setBaseAccount")
      set(value) {
        _builder.baseAccount = value
      }
    /**
     * `.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];`
     */
    public fun clearBaseAccount() {
      _builder.clearBaseAccount()
    }
    /**
     * `.cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];`
     * @return Whether the baseAccount field is set.
     */
    public fun hasBaseAccount(): kotlin.Boolean {
      return _builder.hasBaseAccount()
    }

    public val InterchainAccountKt.Dsl.baseAccountOrNull: cosmos.auth.v1beta1.Auth.BaseAccount?
      get() = _builder.baseAccountOrNull

    /**
     * `string account_owner = 2 [json_name = "accountOwner"];`
     */
    public var accountOwner: kotlin.String
      @JvmName("getAccountOwner")
      get() = _builder.accountOwner
      @JvmName("setAccountOwner")
      set(value) {
        _builder.accountOwner = value
      }
    /**
     * `string account_owner = 2 [json_name = "accountOwner"];`
     */
    public fun clearAccountOwner() {
      _builder.clearAccountOwner()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.interchain_accounts.v1.Account.InterchainAccount.copy(block: `ibc.applications.interchain_accounts.v1`.InterchainAccountKt.Dsl.() -> kotlin.Unit): ibc.applications.interchain_accounts.v1.Account.InterchainAccount =
  `ibc.applications.interchain_accounts.v1`.InterchainAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.applications.interchain_accounts.v1.Account.InterchainAccountOrBuilder.baseAccountOrNull: cosmos.auth.v1beta1.Auth.BaseAccount?
  get() = if (hasBaseAccount()) getBaseAccount() else null

