// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/transfer/v1/token.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.applications.transfer.v1;

@kotlin.jvm.JvmName("-initializetoken")
public inline fun token(block: ibc.applications.transfer.v1.TokenKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.TokenOuterClass.Token =
  ibc.applications.transfer.v1.TokenKt.Dsl._create(ibc.applications.transfer.v1.TokenOuterClass.Token.newBuilder()).apply { block() }._build()
/**
 * ```
 * Token defines a struct which represents a token to be transferred.
 * ```
 *
 * Protobuf type `ibc.applications.transfer.v1.Token`
 */
public object TokenKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.transfer.v1.TokenOuterClass.Token.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.transfer.v1.TokenOuterClass.Token.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.applications.transfer.v1.TokenOuterClass.Token = _builder.build()

    /**
     * ```
     * the token denomination
     * ```
     *
     * `.ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];`
     */
    public var denom: ibc.applications.transfer.v1.TokenOuterClass.Denom
      @JvmName("getDenom")
      get() = _builder.denom
      @JvmName("setDenom")
      set(value) {
        _builder.denom = value
      }
    /**
     * ```
     * the token denomination
     * ```
     *
     * `.ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];`
     */
    public fun clearDenom() {
      _builder.clearDenom()
    }
    /**
     * ```
     * the token denomination
     * ```
     *
     * `.ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];`
     * @return Whether the denom field is set.
     */
    public fun hasDenom(): kotlin.Boolean {
      return _builder.hasDenom()
    }

    public val TokenKt.Dsl.denomOrNull: ibc.applications.transfer.v1.TokenOuterClass.Denom?
      get() = _builder.denomOrNull

    /**
     * ```
     * the token amount to be transferred
     * ```
     *
     * `string amount = 2 [json_name = "amount"];`
     */
    public var amount: kotlin.String
      @JvmName("getAmount")
      get() = _builder.amount
      @JvmName("setAmount")
      set(value) {
        _builder.amount = value
      }
    /**
     * ```
     * the token amount to be transferred
     * ```
     *
     * `string amount = 2 [json_name = "amount"];`
     */
    public fun clearAmount() {
      _builder.clearAmount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.transfer.v1.TokenOuterClass.Token.copy(block: `ibc.applications.transfer.v1`.TokenKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.TokenOuterClass.Token =
  `ibc.applications.transfer.v1`.TokenKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.applications.transfer.v1.TokenOuterClass.TokenOrBuilder.denomOrNull: ibc.applications.transfer.v1.TokenOuterClass.Denom?
  get() = if (hasDenom()) getDenom() else null

