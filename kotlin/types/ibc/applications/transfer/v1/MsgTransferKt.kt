// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/transfer/v1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.applications.transfer.v1;

@kotlin.jvm.JvmName("-initializemsgTransfer")
public inline fun msgTransfer(block: ibc.applications.transfer.v1.MsgTransferKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.Tx.MsgTransfer =
  ibc.applications.transfer.v1.MsgTransferKt.Dsl._create(ibc.applications.transfer.v1.Tx.MsgTransfer.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between
 * ICS20 enabled chains. See ICS Spec here:
 * https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 * ```
 *
 * Protobuf type `ibc.applications.transfer.v1.MsgTransfer`
 */
public object MsgTransferKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.transfer.v1.Tx.MsgTransfer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.transfer.v1.Tx.MsgTransfer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.applications.transfer.v1.Tx.MsgTransfer = _builder.build()

    /**
     * ```
     * the port on which the packet will be sent
     * ```
     *
     * `string source_port = 1 [json_name = "sourcePort"];`
     */
    public var sourcePort: kotlin.String
      @JvmName("getSourcePort")
      get() = _builder.sourcePort
      @JvmName("setSourcePort")
      set(value) {
        _builder.sourcePort = value
      }
    /**
     * ```
     * the port on which the packet will be sent
     * ```
     *
     * `string source_port = 1 [json_name = "sourcePort"];`
     */
    public fun clearSourcePort() {
      _builder.clearSourcePort()
    }

    /**
     * ```
     * the channel by which the packet will be sent
     * ```
     *
     * `string source_channel = 2 [json_name = "sourceChannel"];`
     */
    public var sourceChannel: kotlin.String
      @JvmName("getSourceChannel")
      get() = _builder.sourceChannel
      @JvmName("setSourceChannel")
      set(value) {
        _builder.sourceChannel = value
      }
    /**
     * ```
     * the channel by which the packet will be sent
     * ```
     *
     * `string source_channel = 2 [json_name = "sourceChannel"];`
     */
    public fun clearSourceChannel() {
      _builder.clearSourceChannel()
    }

    /**
     * ```
     * token to be transferred
     * ```
     *
     * `.cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var token: cosmos.base.v1beta1.CoinOuterClass.Coin
      @JvmName("getToken")
      get() = _builder.token
      @JvmName("setToken")
      set(value) {
        _builder.token = value
      }
    /**
     * ```
     * token to be transferred
     * ```
     *
     * `.cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearToken() {
      _builder.clearToken()
    }
    /**
     * ```
     * token to be transferred
     * ```
     *
     * `.cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the token field is set.
     */
    public fun hasToken(): kotlin.Boolean {
      return _builder.hasToken()
    }

    public val MsgTransferKt.Dsl.tokenOrNull: cosmos.base.v1beta1.CoinOuterClass.Coin?
      get() = _builder.tokenOrNull

    /**
     * ```
     * the sender address
     * ```
     *
     * `string sender = 4 [json_name = "sender"];`
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.sender
      @JvmName("setSender")
      set(value) {
        _builder.sender = value
      }
    /**
     * ```
     * the sender address
     * ```
     *
     * `string sender = 4 [json_name = "sender"];`
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * ```
     * the recipient address on the destination chain
     * ```
     *
     * `string receiver = 5 [json_name = "receiver"];`
     */
    public var receiver: kotlin.String
      @JvmName("getReceiver")
      get() = _builder.receiver
      @JvmName("setReceiver")
      set(value) {
        _builder.receiver = value
      }
    /**
     * ```
     * the recipient address on the destination chain
     * ```
     *
     * `string receiver = 5 [json_name = "receiver"];`
     */
    public fun clearReceiver() {
      _builder.clearReceiver()
    }

    /**
     * ```
     * Timeout height relative to the current block height.
     * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
     * If you are sending with IBC v2 protocol, timeout_timestamp must be set, and timeout_height must be omitted.
     * ```
     *
     * `.ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var timeoutHeight: ibc.core.client.v1.Client.Height
      @JvmName("getTimeoutHeight")
      get() = _builder.timeoutHeight
      @JvmName("setTimeoutHeight")
      set(value) {
        _builder.timeoutHeight = value
      }
    /**
     * ```
     * Timeout height relative to the current block height.
     * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
     * If you are sending with IBC v2 protocol, timeout_timestamp must be set, and timeout_height must be omitted.
     * ```
     *
     * `.ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearTimeoutHeight() {
      _builder.clearTimeoutHeight()
    }
    /**
     * ```
     * Timeout height relative to the current block height.
     * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
     * If you are sending with IBC v2 protocol, timeout_timestamp must be set, and timeout_height must be omitted.
     * ```
     *
     * `.ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the timeoutHeight field is set.
     */
    public fun hasTimeoutHeight(): kotlin.Boolean {
      return _builder.hasTimeoutHeight()
    }

    public val MsgTransferKt.Dsl.timeoutHeightOrNull: ibc.core.client.v1.Client.Height?
      get() = _builder.timeoutHeightOrNull

    /**
     * ```
     * Timeout timestamp in absolute nanoseconds since unix epoch.
     * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
     * If you are sending with IBC v2 protocol, timeout_timestamp must be set.
     * ```
     *
     * `uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];`
     */
    public var timeoutTimestamp: kotlin.Long
      @JvmName("getTimeoutTimestamp")
      get() = _builder.timeoutTimestamp
      @JvmName("setTimeoutTimestamp")
      set(value) {
        _builder.timeoutTimestamp = value
      }
    /**
     * ```
     * Timeout timestamp in absolute nanoseconds since unix epoch.
     * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
     * If you are sending with IBC v2 protocol, timeout_timestamp must be set.
     * ```
     *
     * `uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];`
     */
    public fun clearTimeoutTimestamp() {
      _builder.clearTimeoutTimestamp()
    }

    /**
     * ```
     * optional memo
     * ```
     *
     * `string memo = 8 [json_name = "memo"];`
     */
    public var memo: kotlin.String
      @JvmName("getMemo")
      get() = _builder.memo
      @JvmName("setMemo")
      set(value) {
        _builder.memo = value
      }
    /**
     * ```
     * optional memo
     * ```
     *
     * `string memo = 8 [json_name = "memo"];`
     */
    public fun clearMemo() {
      _builder.clearMemo()
    }

    /**
     * ```
     * optional encoding
     * ```
     *
     * `string encoding = 9 [json_name = "encoding"];`
     */
    public var encoding: kotlin.String
      @JvmName("getEncoding")
      get() = _builder.encoding
      @JvmName("setEncoding")
      set(value) {
        _builder.encoding = value
      }
    /**
     * ```
     * optional encoding
     * ```
     *
     * `string encoding = 9 [json_name = "encoding"];`
     */
    public fun clearEncoding() {
      _builder.clearEncoding()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.transfer.v1.Tx.MsgTransfer.copy(block: `ibc.applications.transfer.v1`.MsgTransferKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.Tx.MsgTransfer =
  `ibc.applications.transfer.v1`.MsgTransferKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.applications.transfer.v1.Tx.MsgTransferOrBuilder.tokenOrNull: cosmos.base.v1beta1.CoinOuterClass.Coin?
  get() = if (hasToken()) getToken() else null

public val ibc.applications.transfer.v1.Tx.MsgTransferOrBuilder.timeoutHeightOrNull: ibc.core.client.v1.Client.Height?
  get() = if (hasTimeoutHeight()) getTimeoutHeight() else null

