// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/commitment/v1/commitment.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.core.commitment.v1;

@kotlin.jvm.JvmName("-initializemerkleProof")
public inline fun merkleProof(block: ibc.core.commitment.v1.MerkleProofKt.Dsl.() -> kotlin.Unit): ibc.core.commitment.v1.Commitment.MerkleProof =
  ibc.core.commitment.v1.MerkleProofKt.Dsl._create(ibc.core.commitment.v1.Commitment.MerkleProof.newBuilder()).apply { block() }._build()
/**
 * ```
 * MerkleProof is a wrapper type over a chain of CommitmentProofs.
 * It demonstrates membership or non-membership for an element or set of
 * elements, verifiable in conjunction with a known commitment root. Proofs
 * should be succinct.
 * MerkleProofs are ordered from leaf-to-root
 * ```
 *
 * Protobuf type `ibc.core.commitment.v1.MerkleProof`
 */
public object MerkleProofKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.commitment.v1.Commitment.MerkleProof.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.commitment.v1.Commitment.MerkleProof.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.core.commitment.v1.Commitment.MerkleProof = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ProofsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     */
     public val proofs: com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.proofsList
      )
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     * @param value The proofs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addProofs")
    public fun com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>.add(value: cosmos.ics23.v1.Proofs.CommitmentProof) {
      _builder.addProofs(value)
    }
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     * @param value The proofs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignProofs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>.plusAssign(value: cosmos.ics23.v1.Proofs.CommitmentProof) {
      add(value)
    }
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     * @param values The proofs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllProofs")
    public fun com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.ics23.v1.Proofs.CommitmentProof>) {
      _builder.addAllProofs(values)
    }
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     * @param values The proofs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllProofs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.ics23.v1.Proofs.CommitmentProof>) {
      addAll(values)
    }
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     * @param index The index to set the value at.
     * @param value The proofs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setProofs")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>.set(index: kotlin.Int, value: cosmos.ics23.v1.Proofs.CommitmentProof) {
      _builder.setProofs(index, value)
    }
    /**
     * `repeated .cosmos.ics23.v1.CommitmentProof proofs = 1 [json_name = "proofs"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearProofs")
    public fun com.google.protobuf.kotlin.DslList<cosmos.ics23.v1.Proofs.CommitmentProof, ProofsProxy>.clear() {
      _builder.clearProofs()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.commitment.v1.Commitment.MerkleProof.copy(block: `ibc.core.commitment.v1`.MerkleProofKt.Dsl.() -> kotlin.Unit): ibc.core.commitment.v1.Commitment.MerkleProof =
  `ibc.core.commitment.v1`.MerkleProofKt.Dsl._create(this.toBuilder()).apply { block() }._build()

