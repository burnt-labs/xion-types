// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/client/v1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.core.client.v1;

@kotlin.jvm.JvmName("-initializemsgSubmitMisbehaviour")
public inline fun msgSubmitMisbehaviour(block: ibc.core.client.v1.MsgSubmitMisbehaviourKt.Dsl.() -> kotlin.Unit): ibc.core.client.v1.Tx.MsgSubmitMisbehaviour =
  ibc.core.client.v1.MsgSubmitMisbehaviourKt.Dsl._create(ibc.core.client.v1.Tx.MsgSubmitMisbehaviour.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
 * light client misbehaviour.
 * This message has been deprecated. Use MsgUpdateClient instead.
 * ```
 *
 * Protobuf type `ibc.core.client.v1.MsgSubmitMisbehaviour`
 */
public object MsgSubmitMisbehaviourKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.client.v1.Tx.MsgSubmitMisbehaviour.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.client.v1.Tx.MsgSubmitMisbehaviour.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.core.client.v1.Tx.MsgSubmitMisbehaviour = _builder.build()

    /**
     * ```
     * client unique identifier
     * ```
     *
     * `string client_id = 1 [json_name = "clientId"];`
     */
    public var clientId: kotlin.String
      @JvmName("getClientId")
      get() = _builder.clientId
      @JvmName("setClientId")
      set(value) {
        _builder.clientId = value
      }
    /**
     * ```
     * client unique identifier
     * ```
     *
     * `string client_id = 1 [json_name = "clientId"];`
     */
    public fun clearClientId() {
      _builder.clearClientId()
    }

    /**
     * ```
     * misbehaviour used for freezing the light client
     * ```
     *
     * `.google.protobuf.Any misbehaviour = 2 [json_name = "misbehaviour"];`
     */
    public var misbehaviour: com.google.protobuf.Any
      @JvmName("getMisbehaviour")
      get() = _builder.misbehaviour
      @JvmName("setMisbehaviour")
      set(value) {
        _builder.misbehaviour = value
      }
    /**
     * ```
     * misbehaviour used for freezing the light client
     * ```
     *
     * `.google.protobuf.Any misbehaviour = 2 [json_name = "misbehaviour"];`
     */
    public fun clearMisbehaviour() {
      _builder.clearMisbehaviour()
    }
    /**
     * ```
     * misbehaviour used for freezing the light client
     * ```
     *
     * `.google.protobuf.Any misbehaviour = 2 [json_name = "misbehaviour"];`
     * @return Whether the misbehaviour field is set.
     */
    public fun hasMisbehaviour(): kotlin.Boolean {
      return _builder.hasMisbehaviour()
    }

    public val MsgSubmitMisbehaviourKt.Dsl.misbehaviourOrNull: com.google.protobuf.Any?
      get() = _builder.misbehaviourOrNull

    /**
     * ```
     * signer address
     * ```
     *
     * `string signer = 3 [json_name = "signer"];`
     */
    public var signer: kotlin.String
      @JvmName("getSigner")
      get() = _builder.signer
      @JvmName("setSigner")
      set(value) {
        _builder.signer = value
      }
    /**
     * ```
     * signer address
     * ```
     *
     * `string signer = 3 [json_name = "signer"];`
     */
    public fun clearSigner() {
      _builder.clearSigner()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.client.v1.Tx.MsgSubmitMisbehaviour.copy(block: `ibc.core.client.v1`.MsgSubmitMisbehaviourKt.Dsl.() -> kotlin.Unit): ibc.core.client.v1.Tx.MsgSubmitMisbehaviour =
  `ibc.core.client.v1`.MsgSubmitMisbehaviourKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.client.v1.Tx.MsgSubmitMisbehaviourOrBuilder.misbehaviourOrNull: com.google.protobuf.Any?
  get() = if (hasMisbehaviour()) getMisbehaviour() else null

