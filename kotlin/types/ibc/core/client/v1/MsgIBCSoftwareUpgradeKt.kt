// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/client/v1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.core.client.v1;

@kotlin.jvm.JvmName("-initializemsgIBCSoftwareUpgrade")
public inline fun msgIBCSoftwareUpgrade(block: ibc.core.client.v1.MsgIBCSoftwareUpgradeKt.Dsl.() -> kotlin.Unit): ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade =
  ibc.core.client.v1.MsgIBCSoftwareUpgradeKt.Dsl._create(ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade of an IBC client using a v1 governance proposal
 * ```
 *
 * Protobuf type `ibc.core.client.v1.MsgIBCSoftwareUpgrade`
 */
public object MsgIBCSoftwareUpgradeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade = _builder.build()

    /**
     * `.cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan", (.gogoproto.nullable) = false];`
     */
    public var plan: cosmos.upgrade.v1beta1.Upgrade.Plan
      @JvmName("getPlan")
      get() = _builder.plan
      @JvmName("setPlan")
      set(value) {
        _builder.plan = value
      }
    /**
     * `.cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan", (.gogoproto.nullable) = false];`
     */
    public fun clearPlan() {
      _builder.clearPlan()
    }
    /**
     * `.cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan", (.gogoproto.nullable) = false];`
     * @return Whether the plan field is set.
     */
    public fun hasPlan(): kotlin.Boolean {
      return _builder.hasPlan()
    }

    public val MsgIBCSoftwareUpgradeKt.Dsl.planOrNull: cosmos.upgrade.v1beta1.Upgrade.Plan?
      get() = _builder.planOrNull

    /**
     * ```
     * An UpgradedClientState must be provided to perform an IBC breaking upgrade.
     * This will make the chain commit to the correct upgraded (self) client state
     * before the upgrade occurs, so that connecting chains can verify that the
     * new upgraded client is valid by verifying a proof on the previous version
     * of the chain. This will allow IBC connections to persist smoothly across
     * planned chain upgrades. Correspondingly, the UpgradedClientState field has been
     * deprecated in the Cosmos SDK to allow for this logic to exist solely in
     * the 02-client module.
     * ```
     *
     * `.google.protobuf.Any upgraded_client_state = 2 [json_name = "upgradedClientState"];`
     */
    public var upgradedClientState: com.google.protobuf.Any
      @JvmName("getUpgradedClientState")
      get() = _builder.upgradedClientState
      @JvmName("setUpgradedClientState")
      set(value) {
        _builder.upgradedClientState = value
      }
    /**
     * ```
     * An UpgradedClientState must be provided to perform an IBC breaking upgrade.
     * This will make the chain commit to the correct upgraded (self) client state
     * before the upgrade occurs, so that connecting chains can verify that the
     * new upgraded client is valid by verifying a proof on the previous version
     * of the chain. This will allow IBC connections to persist smoothly across
     * planned chain upgrades. Correspondingly, the UpgradedClientState field has been
     * deprecated in the Cosmos SDK to allow for this logic to exist solely in
     * the 02-client module.
     * ```
     *
     * `.google.protobuf.Any upgraded_client_state = 2 [json_name = "upgradedClientState"];`
     */
    public fun clearUpgradedClientState() {
      _builder.clearUpgradedClientState()
    }
    /**
     * ```
     * An UpgradedClientState must be provided to perform an IBC breaking upgrade.
     * This will make the chain commit to the correct upgraded (self) client state
     * before the upgrade occurs, so that connecting chains can verify that the
     * new upgraded client is valid by verifying a proof on the previous version
     * of the chain. This will allow IBC connections to persist smoothly across
     * planned chain upgrades. Correspondingly, the UpgradedClientState field has been
     * deprecated in the Cosmos SDK to allow for this logic to exist solely in
     * the 02-client module.
     * ```
     *
     * `.google.protobuf.Any upgraded_client_state = 2 [json_name = "upgradedClientState"];`
     * @return Whether the upgradedClientState field is set.
     */
    public fun hasUpgradedClientState(): kotlin.Boolean {
      return _builder.hasUpgradedClientState()
    }

    public val MsgIBCSoftwareUpgradeKt.Dsl.upgradedClientStateOrNull: com.google.protobuf.Any?
      get() = _builder.upgradedClientStateOrNull

    /**
     * ```
     * signer address
     * ```
     *
     * `string signer = 3 [json_name = "signer"];`
     */
    public var signer: kotlin.String
      @JvmName("getSigner")
      get() = _builder.signer
      @JvmName("setSigner")
      set(value) {
        _builder.signer = value
      }
    /**
     * ```
     * signer address
     * ```
     *
     * `string signer = 3 [json_name = "signer"];`
     */
    public fun clearSigner() {
      _builder.clearSigner()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade.copy(block: `ibc.core.client.v1`.MsgIBCSoftwareUpgradeKt.Dsl.() -> kotlin.Unit): ibc.core.client.v1.Tx.MsgIBCSoftwareUpgrade =
  `ibc.core.client.v1`.MsgIBCSoftwareUpgradeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.client.v1.Tx.MsgIBCSoftwareUpgradeOrBuilder.planOrNull: cosmos.upgrade.v1beta1.Upgrade.Plan?
  get() = if (hasPlan()) getPlan() else null

public val ibc.core.client.v1.Tx.MsgIBCSoftwareUpgradeOrBuilder.upgradedClientStateOrNull: com.google.protobuf.Any?
  get() = if (hasUpgradedClientState()) getUpgradedClientState() else null

