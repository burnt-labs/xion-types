// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/client/v2/genesis.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.core.client.v2;

@kotlin.jvm.JvmName("-initializegenesisState")
public inline fun genesisState(block: ibc.core.client.v2.GenesisStateKt.Dsl.() -> kotlin.Unit): ibc.core.client.v2.Genesis.GenesisState =
  ibc.core.client.v2.GenesisStateKt.Dsl._create(ibc.core.client.v2.Genesis.GenesisState.newBuilder()).apply { block() }._build()
/**
 * ```
 * GenesisState defines the ibc client v2 submodule's genesis state.
 * ```
 *
 * Protobuf type `ibc.core.client.v2.GenesisState`
 */
public object GenesisStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.client.v2.Genesis.GenesisState.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.client.v2.Genesis.GenesisState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.core.client.v2.Genesis.GenesisState = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class CounterpartyInfosProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     */
     public val counterpartyInfos: com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.counterpartyInfosList
      )
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     * @param value The counterpartyInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addCounterpartyInfos")
    public fun com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>.add(value: ibc.core.client.v2.Genesis.GenesisCounterpartyInfo) {
      _builder.addCounterpartyInfos(value)
    }
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     * @param value The counterpartyInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignCounterpartyInfos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>.plusAssign(value: ibc.core.client.v2.Genesis.GenesisCounterpartyInfo) {
      add(value)
    }
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     * @param values The counterpartyInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllCounterpartyInfos")
    public fun com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>.addAll(values: kotlin.collections.Iterable<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo>) {
      _builder.addAllCounterpartyInfos(values)
    }
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     * @param values The counterpartyInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllCounterpartyInfos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>.plusAssign(values: kotlin.collections.Iterable<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo>) {
      addAll(values)
    }
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     * @param index The index to set the value at.
     * @param value The counterpartyInfos to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setCounterpartyInfos")
    public operator fun com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>.set(index: kotlin.Int, value: ibc.core.client.v2.Genesis.GenesisCounterpartyInfo) {
      _builder.setCounterpartyInfos(index, value)
    }
    /**
     * ```
     * counterparty info for each client
     * ```
     *
     * `repeated .ibc.core.client.v2.GenesisCounterpartyInfo counterparty_infos = 1 [json_name = "counterpartyInfos", (.gogoproto.nullable) = false];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearCounterpartyInfos")
    public fun com.google.protobuf.kotlin.DslList<ibc.core.client.v2.Genesis.GenesisCounterpartyInfo, CounterpartyInfosProxy>.clear() {
      _builder.clearCounterpartyInfos()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.client.v2.Genesis.GenesisState.copy(block: `ibc.core.client.v2`.GenesisStateKt.Dsl.() -> kotlin.Unit): ibc.core.client.v2.Genesis.GenesisState =
  `ibc.core.client.v2`.GenesisStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

