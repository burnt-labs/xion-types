// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/connection/v1/connection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.core.connection.v1;

@kotlin.jvm.JvmName("-initializeidentifiedConnection")
public inline fun identifiedConnection(block: ibc.core.connection.v1.IdentifiedConnectionKt.Dsl.() -> kotlin.Unit): ibc.core.connection.v1.Connection.IdentifiedConnection =
  ibc.core.connection.v1.IdentifiedConnectionKt.Dsl._create(ibc.core.connection.v1.Connection.IdentifiedConnection.newBuilder()).apply { block() }._build()
/**
 * ```
 * IdentifiedConnection defines a connection with additional connection
 * identifier field.
 * ```
 *
 * Protobuf type `ibc.core.connection.v1.IdentifiedConnection`
 */
public object IdentifiedConnectionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.connection.v1.Connection.IdentifiedConnection.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.connection.v1.Connection.IdentifiedConnection.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.core.connection.v1.Connection.IdentifiedConnection = _builder.build()

    /**
     * ```
     * connection identifier.
     * ```
     *
     * `string id = 1 [json_name = "id"];`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * ```
     * connection identifier.
     * ```
     *
     * `string id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * client associated with this connection.
     * ```
     *
     * `string client_id = 2 [json_name = "clientId"];`
     */
    public var clientId: kotlin.String
      @JvmName("getClientId")
      get() = _builder.clientId
      @JvmName("setClientId")
      set(value) {
        _builder.clientId = value
      }
    /**
     * ```
     * client associated with this connection.
     * ```
     *
     * `string client_id = 2 [json_name = "clientId"];`
     */
    public fun clearClientId() {
      _builder.clearClientId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VersionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     */
     public val versions: com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.versionsList
      )
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     * @param value The versions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addVersions")
    public fun com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>.add(value: ibc.core.connection.v1.Connection.Version) {
      _builder.addVersions(value)
    }
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     * @param value The versions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignVersions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>.plusAssign(value: ibc.core.connection.v1.Connection.Version) {
      add(value)
    }
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     * @param values The versions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllVersions")
    public fun com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>.addAll(values: kotlin.collections.Iterable<ibc.core.connection.v1.Connection.Version>) {
      _builder.addAllVersions(values)
    }
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     * @param values The versions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllVersions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>.plusAssign(values: kotlin.collections.Iterable<ibc.core.connection.v1.Connection.Version>) {
      addAll(values)
    }
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     * @param index The index to set the value at.
     * @param value The versions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setVersions")
    public operator fun com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>.set(index: kotlin.Int, value: ibc.core.connection.v1.Connection.Version) {
      _builder.setVersions(index, value)
    }
    /**
     * ```
     * IBC version which can be utilised to determine encodings or protocols for
     * channels or packets utilising this connection
     * ```
     *
     * `repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearVersions")
    public fun com.google.protobuf.kotlin.DslList<ibc.core.connection.v1.Connection.Version, VersionsProxy>.clear() {
      _builder.clearVersions()
    }


    /**
     * ```
     * current state of the connection end.
     * ```
     *
     * `.ibc.core.connection.v1.State state = 4 [json_name = "state"];`
     */
    public var state: ibc.core.connection.v1.Connection.State
      @JvmName("getState")
      get() = _builder.state
      @JvmName("setState")
      set(value) {
        _builder.state = value
      }
    public var stateValue: kotlin.Int
      @JvmName("getStateValue")
      get() = _builder.stateValue
      @JvmName("setStateValue")
      set(value) {
        _builder.stateValue = value
      }
    /**
     * ```
     * current state of the connection end.
     * ```
     *
     * `.ibc.core.connection.v1.State state = 4 [json_name = "state"];`
     */
    public fun clearState() {
      _builder.clearState()
    }

    /**
     * ```
     * counterparty chain associated with this connection.
     * ```
     *
     * `.ibc.core.connection.v1.Counterparty counterparty = 5 [json_name = "counterparty", (.gogoproto.nullable) = false];`
     */
    public var counterparty: ibc.core.connection.v1.Connection.Counterparty
      @JvmName("getCounterparty")
      get() = _builder.counterparty
      @JvmName("setCounterparty")
      set(value) {
        _builder.counterparty = value
      }
    /**
     * ```
     * counterparty chain associated with this connection.
     * ```
     *
     * `.ibc.core.connection.v1.Counterparty counterparty = 5 [json_name = "counterparty", (.gogoproto.nullable) = false];`
     */
    public fun clearCounterparty() {
      _builder.clearCounterparty()
    }
    /**
     * ```
     * counterparty chain associated with this connection.
     * ```
     *
     * `.ibc.core.connection.v1.Counterparty counterparty = 5 [json_name = "counterparty", (.gogoproto.nullable) = false];`
     * @return Whether the counterparty field is set.
     */
    public fun hasCounterparty(): kotlin.Boolean {
      return _builder.hasCounterparty()
    }

    public val IdentifiedConnectionKt.Dsl.counterpartyOrNull: ibc.core.connection.v1.Connection.Counterparty?
      get() = _builder.counterpartyOrNull

    /**
     * ```
     * delay period associated with this connection.
     * ```
     *
     * `uint64 delay_period = 6 [json_name = "delayPeriod"];`
     */
    public var delayPeriod: kotlin.Long
      @JvmName("getDelayPeriod")
      get() = _builder.delayPeriod
      @JvmName("setDelayPeriod")
      set(value) {
        _builder.delayPeriod = value
      }
    /**
     * ```
     * delay period associated with this connection.
     * ```
     *
     * `uint64 delay_period = 6 [json_name = "delayPeriod"];`
     */
    public fun clearDelayPeriod() {
      _builder.clearDelayPeriod()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.connection.v1.Connection.IdentifiedConnection.copy(block: `ibc.core.connection.v1`.IdentifiedConnectionKt.Dsl.() -> kotlin.Unit): ibc.core.connection.v1.Connection.IdentifiedConnection =
  `ibc.core.connection.v1`.IdentifiedConnectionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.connection.v1.Connection.IdentifiedConnectionOrBuilder.counterpartyOrNull: ibc.core.connection.v1.Connection.Counterparty?
  get() = if (hasCounterparty()) getCounterparty() else null

