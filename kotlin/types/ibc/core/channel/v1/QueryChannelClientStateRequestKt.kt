// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/channel/v1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ibc.core.channel.v1;

@kotlin.jvm.JvmName("-initializequeryChannelClientStateRequest")
public inline fun queryChannelClientStateRequest(block: ibc.core.channel.v1.QueryChannelClientStateRequestKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest =
  ibc.core.channel.v1.QueryChannelClientStateRequestKt.Dsl._create(ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryChannelClientStateRequest is the request type for the Query/ClientState
 * RPC method
 * ```
 *
 * Protobuf type `ibc.core.channel.v1.QueryChannelClientStateRequest`
 */
public object QueryChannelClientStateRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest = _builder.build()

    /**
     * ```
     * port unique identifier
     * ```
     *
     * `string port_id = 1 [json_name = "portId"];`
     */
    public var portId: kotlin.String
      @JvmName("getPortId")
      get() = _builder.portId
      @JvmName("setPortId")
      set(value) {
        _builder.portId = value
      }
    /**
     * ```
     * port unique identifier
     * ```
     *
     * `string port_id = 1 [json_name = "portId"];`
     */
    public fun clearPortId() {
      _builder.clearPortId()
    }

    /**
     * ```
     * channel unique identifier
     * ```
     *
     * `string channel_id = 2 [json_name = "channelId"];`
     */
    public var channelId: kotlin.String
      @JvmName("getChannelId")
      get() = _builder.channelId
      @JvmName("setChannelId")
      set(value) {
        _builder.channelId = value
      }
    /**
     * ```
     * channel unique identifier
     * ```
     *
     * `string channel_id = 2 [json_name = "channelId"];`
     */
    public fun clearChannelId() {
      _builder.clearChannelId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest.copy(block: `ibc.core.channel.v1`.QueryChannelClientStateRequestKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.QueryOuterClass.QueryChannelClientStateRequest =
  `ibc.core.channel.v1`.QueryChannelClientStateRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

