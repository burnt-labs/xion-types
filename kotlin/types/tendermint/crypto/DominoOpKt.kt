// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/crypto/proof.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.crypto;

@kotlin.jvm.JvmName("-initializedominoOp")
public inline fun dominoOp(block: tendermint.crypto.DominoOpKt.Dsl.() -> kotlin.Unit): tendermint.crypto.ProofOuterClass.DominoOp =
  tendermint.crypto.DominoOpKt.Dsl._create(tendermint.crypto.ProofOuterClass.DominoOp.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tendermint.crypto.DominoOp`
 */
public object DominoOpKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.crypto.ProofOuterClass.DominoOp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.crypto.ProofOuterClass.DominoOp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.crypto.ProofOuterClass.DominoOp = _builder.build()

    /**
     * `string key = 1 [json_name = "key"];`
     */
    public var key: kotlin.String
      @JvmName("getKey")
      get() = _builder.key
      @JvmName("setKey")
      set(value) {
        _builder.key = value
      }
    /**
     * `string key = 1 [json_name = "key"];`
     */
    public fun clearKey() {
      _builder.clearKey()
    }

    /**
     * `string input = 2 [json_name = "input"];`
     */
    public var input: kotlin.String
      @JvmName("getInput")
      get() = _builder.input
      @JvmName("setInput")
      set(value) {
        _builder.input = value
      }
    /**
     * `string input = 2 [json_name = "input"];`
     */
    public fun clearInput() {
      _builder.clearInput()
    }

    /**
     * `string output = 3 [json_name = "output"];`
     */
    public var output: kotlin.String
      @JvmName("getOutput")
      get() = _builder.output
      @JvmName("setOutput")
      set(value) {
        _builder.output = value
      }
    /**
     * `string output = 3 [json_name = "output"];`
     */
    public fun clearOutput() {
      _builder.clearOutput()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.crypto.ProofOuterClass.DominoOp.copy(block: `tendermint.crypto`.DominoOpKt.Dsl.() -> kotlin.Unit): tendermint.crypto.ProofOuterClass.DominoOp =
  `tendermint.crypto`.DominoOpKt.Dsl._create(this.toBuilder()).apply { block() }._build()

