// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/types/evidence.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.types;

@kotlin.jvm.JvmName("-initializeduplicateVoteEvidence")
public inline fun duplicateVoteEvidence(block: tendermint.types.DuplicateVoteEvidenceKt.Dsl.() -> kotlin.Unit): tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence =
  tendermint.types.DuplicateVoteEvidenceKt.Dsl._create(tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence.newBuilder()).apply { block() }._build()
/**
 * ```
 * DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
 * ```
 *
 * Protobuf type `tendermint.types.DuplicateVoteEvidence`
 */
public object DuplicateVoteEvidenceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence = _builder.build()

    /**
     * `.tendermint.types.Vote vote_a = 1 [json_name = "voteA"];`
     */
    public var voteA: tendermint.types.Types.Vote
      @JvmName("getVoteA")
      get() = _builder.voteA
      @JvmName("setVoteA")
      set(value) {
        _builder.voteA = value
      }
    /**
     * `.tendermint.types.Vote vote_a = 1 [json_name = "voteA"];`
     */
    public fun clearVoteA() {
      _builder.clearVoteA()
    }
    /**
     * `.tendermint.types.Vote vote_a = 1 [json_name = "voteA"];`
     * @return Whether the voteA field is set.
     */
    public fun hasVoteA(): kotlin.Boolean {
      return _builder.hasVoteA()
    }

    public val DuplicateVoteEvidenceKt.Dsl.voteAOrNull: tendermint.types.Types.Vote?
      get() = _builder.voteAOrNull

    /**
     * `.tendermint.types.Vote vote_b = 2 [json_name = "voteB"];`
     */
    public var voteB: tendermint.types.Types.Vote
      @JvmName("getVoteB")
      get() = _builder.voteB
      @JvmName("setVoteB")
      set(value) {
        _builder.voteB = value
      }
    /**
     * `.tendermint.types.Vote vote_b = 2 [json_name = "voteB"];`
     */
    public fun clearVoteB() {
      _builder.clearVoteB()
    }
    /**
     * `.tendermint.types.Vote vote_b = 2 [json_name = "voteB"];`
     * @return Whether the voteB field is set.
     */
    public fun hasVoteB(): kotlin.Boolean {
      return _builder.hasVoteB()
    }

    public val DuplicateVoteEvidenceKt.Dsl.voteBOrNull: tendermint.types.Types.Vote?
      get() = _builder.voteBOrNull

    /**
     * `int64 total_voting_power = 3 [json_name = "totalVotingPower"];`
     */
    public var totalVotingPower: kotlin.Long
      @JvmName("getTotalVotingPower")
      get() = _builder.totalVotingPower
      @JvmName("setTotalVotingPower")
      set(value) {
        _builder.totalVotingPower = value
      }
    /**
     * `int64 total_voting_power = 3 [json_name = "totalVotingPower"];`
     */
    public fun clearTotalVotingPower() {
      _builder.clearTotalVotingPower()
    }

    /**
     * `int64 validator_power = 4 [json_name = "validatorPower"];`
     */
    public var validatorPower: kotlin.Long
      @JvmName("getValidatorPower")
      get() = _builder.validatorPower
      @JvmName("setValidatorPower")
      set(value) {
        _builder.validatorPower = value
      }
    /**
     * `int64 validator_power = 4 [json_name = "validatorPower"];`
     */
    public fun clearValidatorPower() {
      _builder.clearValidatorPower()
    }

    /**
     * `.google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];`
     */
    public var timestamp: com.google.protobuf.Timestamp
      @JvmName("getTimestamp")
      get() = _builder.timestamp
      @JvmName("setTimestamp")
      set(value) {
        _builder.timestamp = value
      }
    /**
     * `.google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];`
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * `.google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];`
     * @return Whether the timestamp field is set.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    public val DuplicateVoteEvidenceKt.Dsl.timestampOrNull: com.google.protobuf.Timestamp?
      get() = _builder.timestampOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence.copy(block: `tendermint.types`.DuplicateVoteEvidenceKt.Dsl.() -> kotlin.Unit): tendermint.types.EvidenceOuterClass.DuplicateVoteEvidence =
  `tendermint.types`.DuplicateVoteEvidenceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val tendermint.types.EvidenceOuterClass.DuplicateVoteEvidenceOrBuilder.voteAOrNull: tendermint.types.Types.Vote?
  get() = if (hasVoteA()) getVoteA() else null

public val tendermint.types.EvidenceOuterClass.DuplicateVoteEvidenceOrBuilder.voteBOrNull: tendermint.types.Types.Vote?
  get() = if (hasVoteB()) getVoteB() else null

public val tendermint.types.EvidenceOuterClass.DuplicateVoteEvidenceOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

