// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/types/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.types;

@kotlin.jvm.JvmName("-initializetxProof")
public inline fun txProof(block: tendermint.types.TxProofKt.Dsl.() -> kotlin.Unit): tendermint.types.Types.TxProof =
  tendermint.types.TxProofKt.Dsl._create(tendermint.types.Types.TxProof.newBuilder()).apply { block() }._build()
/**
 * ```
 * TxProof represents a Merkle proof of the presence of a transaction in the Merkle tree.
 * ```
 *
 * Protobuf type `tendermint.types.TxProof`
 */
public object TxProofKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.types.Types.TxProof.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.types.Types.TxProof.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.types.Types.TxProof = _builder.build()

    /**
     * `bytes root_hash = 1 [json_name = "rootHash"];`
     */
    public var rootHash: com.google.protobuf.ByteString
      @JvmName("getRootHash")
      get() = _builder.rootHash
      @JvmName("setRootHash")
      set(value) {
        _builder.rootHash = value
      }
    /**
     * `bytes root_hash = 1 [json_name = "rootHash"];`
     */
    public fun clearRootHash() {
      _builder.clearRootHash()
    }

    /**
     * `bytes data = 2 [json_name = "data"];`
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.data
      @JvmName("setData")
      set(value) {
        _builder.data = value
      }
    /**
     * `bytes data = 2 [json_name = "data"];`
     */
    public fun clearData() {
      _builder.clearData()
    }

    /**
     * `.tendermint.crypto.Proof proof = 3 [json_name = "proof"];`
     */
    public var proof: tendermint.crypto.ProofOuterClass.Proof
      @JvmName("getProof")
      get() = _builder.proof
      @JvmName("setProof")
      set(value) {
        _builder.proof = value
      }
    /**
     * `.tendermint.crypto.Proof proof = 3 [json_name = "proof"];`
     */
    public fun clearProof() {
      _builder.clearProof()
    }
    /**
     * `.tendermint.crypto.Proof proof = 3 [json_name = "proof"];`
     * @return Whether the proof field is set.
     */
    public fun hasProof(): kotlin.Boolean {
      return _builder.hasProof()
    }

    public val TxProofKt.Dsl.proofOrNull: tendermint.crypto.ProofOuterClass.Proof?
      get() = _builder.proofOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.types.Types.TxProof.copy(block: `tendermint.types`.TxProofKt.Dsl.() -> kotlin.Unit): tendermint.types.Types.TxProof =
  `tendermint.types`.TxProofKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val tendermint.types.Types.TxProofOrBuilder.proofOrNull: tendermint.crypto.ProofOuterClass.Proof?
  get() = if (hasProof()) getProof() else null

