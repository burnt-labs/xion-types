// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/version/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.version;

@kotlin.jvm.JvmName("-initializeapp")
public inline fun app(block: tendermint.version.AppKt.Dsl.() -> kotlin.Unit): tendermint.version.Types.App =
  tendermint.version.AppKt.Dsl._create(tendermint.version.Types.App.newBuilder()).apply { block() }._build()
/**
 * ```
 * App includes the protocol and software version for the application.
 * This information is included in ResponseInfo. The App.Protocol can be
 * updated in ResponseEndBlock.
 * ```
 *
 * Protobuf type `tendermint.version.App`
 */
public object AppKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.version.Types.App.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.version.Types.App.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.version.Types.App = _builder.build()

    /**
     * `uint64 protocol = 1 [json_name = "protocol"];`
     */
    public var protocol: kotlin.Long
      @JvmName("getProtocol")
      get() = _builder.protocol
      @JvmName("setProtocol")
      set(value) {
        _builder.protocol = value
      }
    /**
     * `uint64 protocol = 1 [json_name = "protocol"];`
     */
    public fun clearProtocol() {
      _builder.clearProtocol()
    }

    /**
     * `string software = 2 [json_name = "software"];`
     */
    public var software: kotlin.String
      @JvmName("getSoftware")
      get() = _builder.software
      @JvmName("setSoftware")
      set(value) {
        _builder.software = value
      }
    /**
     * `string software = 2 [json_name = "software"];`
     */
    public fun clearSoftware() {
      _builder.clearSoftware()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.version.Types.App.copy(block: `tendermint.version`.AppKt.Dsl.() -> kotlin.Unit): tendermint.version.Types.App =
  `tendermint.version`.AppKt.Dsl._create(this.toBuilder()).apply { block() }._build()

