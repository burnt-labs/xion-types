// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/p2p/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.p2p;

@kotlin.jvm.JvmName("-initializedefaultNodeInfo")
public inline fun defaultNodeInfo(block: tendermint.p2p.DefaultNodeInfoKt.Dsl.() -> kotlin.Unit): tendermint.p2p.Types.DefaultNodeInfo =
  tendermint.p2p.DefaultNodeInfoKt.Dsl._create(tendermint.p2p.Types.DefaultNodeInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tendermint.p2p.DefaultNodeInfo`
 */
public object DefaultNodeInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.p2p.Types.DefaultNodeInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.p2p.Types.DefaultNodeInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.p2p.Types.DefaultNodeInfo = _builder.build()

    /**
     * `.tendermint.p2p.ProtocolVersion protocol_version = 1 [json_name = "protocolVersion", (.gogoproto.nullable) = false];`
     */
    public var protocolVersion: tendermint.p2p.Types.ProtocolVersion
      @JvmName("getProtocolVersion")
      get() = _builder.protocolVersion
      @JvmName("setProtocolVersion")
      set(value) {
        _builder.protocolVersion = value
      }
    /**
     * `.tendermint.p2p.ProtocolVersion protocol_version = 1 [json_name = "protocolVersion", (.gogoproto.nullable) = false];`
     */
    public fun clearProtocolVersion() {
      _builder.clearProtocolVersion()
    }
    /**
     * `.tendermint.p2p.ProtocolVersion protocol_version = 1 [json_name = "protocolVersion", (.gogoproto.nullable) = false];`
     * @return Whether the protocolVersion field is set.
     */
    public fun hasProtocolVersion(): kotlin.Boolean {
      return _builder.hasProtocolVersion()
    }

    public val DefaultNodeInfoKt.Dsl.protocolVersionOrNull: tendermint.p2p.Types.ProtocolVersion?
      get() = _builder.protocolVersionOrNull

    /**
     * `string default_node_id = 2 [json_name = "defaultNodeId", (.gogoproto.customname) = "DefaultNodeID"];`
     */
    public var defaultNodeId: kotlin.String
      @JvmName("getDefaultNodeId")
      get() = _builder.defaultNodeId
      @JvmName("setDefaultNodeId")
      set(value) {
        _builder.defaultNodeId = value
      }
    /**
     * `string default_node_id = 2 [json_name = "defaultNodeId", (.gogoproto.customname) = "DefaultNodeID"];`
     */
    public fun clearDefaultNodeId() {
      _builder.clearDefaultNodeId()
    }

    /**
     * `string listen_addr = 3 [json_name = "listenAddr"];`
     */
    public var listenAddr: kotlin.String
      @JvmName("getListenAddr")
      get() = _builder.listenAddr
      @JvmName("setListenAddr")
      set(value) {
        _builder.listenAddr = value
      }
    /**
     * `string listen_addr = 3 [json_name = "listenAddr"];`
     */
    public fun clearListenAddr() {
      _builder.clearListenAddr()
    }

    /**
     * `string network = 4 [json_name = "network"];`
     */
    public var network: kotlin.String
      @JvmName("getNetwork")
      get() = _builder.network
      @JvmName("setNetwork")
      set(value) {
        _builder.network = value
      }
    /**
     * `string network = 4 [json_name = "network"];`
     */
    public fun clearNetwork() {
      _builder.clearNetwork()
    }

    /**
     * `string version = 5 [json_name = "version"];`
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.version
      @JvmName("setVersion")
      set(value) {
        _builder.version = value
      }
    /**
     * `string version = 5 [json_name = "version"];`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * `bytes channels = 6 [json_name = "channels"];`
     */
    public var channels: com.google.protobuf.ByteString
      @JvmName("getChannels")
      get() = _builder.channels
      @JvmName("setChannels")
      set(value) {
        _builder.channels = value
      }
    /**
     * `bytes channels = 6 [json_name = "channels"];`
     */
    public fun clearChannels() {
      _builder.clearChannels()
    }

    /**
     * `string moniker = 7 [json_name = "moniker"];`
     */
    public var moniker: kotlin.String
      @JvmName("getMoniker")
      get() = _builder.moniker
      @JvmName("setMoniker")
      set(value) {
        _builder.moniker = value
      }
    /**
     * `string moniker = 7 [json_name = "moniker"];`
     */
    public fun clearMoniker() {
      _builder.clearMoniker()
    }

    /**
     * `.tendermint.p2p.DefaultNodeInfoOther other = 8 [json_name = "other", (.gogoproto.nullable) = false];`
     */
    public var other: tendermint.p2p.Types.DefaultNodeInfoOther
      @JvmName("getOther")
      get() = _builder.other
      @JvmName("setOther")
      set(value) {
        _builder.other = value
      }
    /**
     * `.tendermint.p2p.DefaultNodeInfoOther other = 8 [json_name = "other", (.gogoproto.nullable) = false];`
     */
    public fun clearOther() {
      _builder.clearOther()
    }
    /**
     * `.tendermint.p2p.DefaultNodeInfoOther other = 8 [json_name = "other", (.gogoproto.nullable) = false];`
     * @return Whether the other field is set.
     */
    public fun hasOther(): kotlin.Boolean {
      return _builder.hasOther()
    }

    public val DefaultNodeInfoKt.Dsl.otherOrNull: tendermint.p2p.Types.DefaultNodeInfoOther?
      get() = _builder.otherOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.p2p.Types.DefaultNodeInfo.copy(block: `tendermint.p2p`.DefaultNodeInfoKt.Dsl.() -> kotlin.Unit): tendermint.p2p.Types.DefaultNodeInfo =
  `tendermint.p2p`.DefaultNodeInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val tendermint.p2p.Types.DefaultNodeInfoOrBuilder.protocolVersionOrNull: tendermint.p2p.Types.ProtocolVersion?
  get() = if (hasProtocolVersion()) getProtocolVersion() else null

public val tendermint.p2p.Types.DefaultNodeInfoOrBuilder.otherOrNull: tendermint.p2p.Types.DefaultNodeInfoOther?
  get() = if (hasOther()) getOther() else null

