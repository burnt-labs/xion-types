// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/abci/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.abci;

@kotlin.jvm.JvmName("-initializevalidatorUpdate")
public inline fun validatorUpdate(block: tendermint.abci.ValidatorUpdateKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.ValidatorUpdate =
  tendermint.abci.ValidatorUpdateKt.Dsl._create(tendermint.abci.Types.ValidatorUpdate.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tendermint.abci.ValidatorUpdate`
 */
public object ValidatorUpdateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.ValidatorUpdate.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.ValidatorUpdate.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.ValidatorUpdate = _builder.build()

    /**
     * `.tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];`
     */
    public var pubKey: tendermint.crypto.Keys.PublicKey
      @JvmName("getPubKey")
      get() = _builder.pubKey
      @JvmName("setPubKey")
      set(value) {
        _builder.pubKey = value
      }
    /**
     * `.tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];`
     */
    public fun clearPubKey() {
      _builder.clearPubKey()
    }
    /**
     * `.tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];`
     * @return Whether the pubKey field is set.
     */
    public fun hasPubKey(): kotlin.Boolean {
      return _builder.hasPubKey()
    }

    public val ValidatorUpdateKt.Dsl.pubKeyOrNull: tendermint.crypto.Keys.PublicKey?
      get() = _builder.pubKeyOrNull

    /**
     * `int64 power = 2 [json_name = "power"];`
     */
    public var power: kotlin.Long
      @JvmName("getPower")
      get() = _builder.power
      @JvmName("setPower")
      set(value) {
        _builder.power = value
      }
    /**
     * `int64 power = 2 [json_name = "power"];`
     */
    public fun clearPower() {
      _builder.clearPower()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.ValidatorUpdate.copy(block: `tendermint.abci`.ValidatorUpdateKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.ValidatorUpdate =
  `tendermint.abci`.ValidatorUpdateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val tendermint.abci.Types.ValidatorUpdateOrBuilder.pubKeyOrNull: tendermint.crypto.Keys.PublicKey?
  get() = if (hasPubKey()) getPubKey() else null

