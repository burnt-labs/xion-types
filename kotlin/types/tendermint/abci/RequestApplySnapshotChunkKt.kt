// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/abci/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.abci;

@kotlin.jvm.JvmName("-initializerequestApplySnapshotChunk")
public inline fun requestApplySnapshotChunk(block: tendermint.abci.RequestApplySnapshotChunkKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.RequestApplySnapshotChunk =
  tendermint.abci.RequestApplySnapshotChunkKt.Dsl._create(tendermint.abci.Types.RequestApplySnapshotChunk.newBuilder()).apply { block() }._build()
/**
 * ```
 * Applies a snapshot chunk
 * ```
 *
 * Protobuf type `tendermint.abci.RequestApplySnapshotChunk`
 */
public object RequestApplySnapshotChunkKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.RequestApplySnapshotChunk.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.RequestApplySnapshotChunk.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.RequestApplySnapshotChunk = _builder.build()

    /**
     * `uint32 index = 1 [json_name = "index"];`
     */
    public var index: kotlin.Int
      @JvmName("getIndex")
      get() = _builder.index
      @JvmName("setIndex")
      set(value) {
        _builder.index = value
      }
    /**
     * `uint32 index = 1 [json_name = "index"];`
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * `bytes chunk = 2 [json_name = "chunk"];`
     */
    public var chunk: com.google.protobuf.ByteString
      @JvmName("getChunk")
      get() = _builder.chunk
      @JvmName("setChunk")
      set(value) {
        _builder.chunk = value
      }
    /**
     * `bytes chunk = 2 [json_name = "chunk"];`
     */
    public fun clearChunk() {
      _builder.clearChunk()
    }

    /**
     * `string sender = 3 [json_name = "sender"];`
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.sender
      @JvmName("setSender")
      set(value) {
        _builder.sender = value
      }
    /**
     * `string sender = 3 [json_name = "sender"];`
     */
    public fun clearSender() {
      _builder.clearSender()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.RequestApplySnapshotChunk.copy(block: `tendermint.abci`.RequestApplySnapshotChunkKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.RequestApplySnapshotChunk =
  `tendermint.abci`.RequestApplySnapshotChunkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

