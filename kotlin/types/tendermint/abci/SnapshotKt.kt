// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/abci/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.abci;

@kotlin.jvm.JvmName("-initializesnapshot")
public inline fun snapshot(block: tendermint.abci.SnapshotKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.Snapshot =
  tendermint.abci.SnapshotKt.Dsl._create(tendermint.abci.Types.Snapshot.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tendermint.abci.Snapshot`
 */
public object SnapshotKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.Snapshot.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.Snapshot.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.Snapshot = _builder.build()

    /**
     * ```
     * The height at which the snapshot was taken
     * ```
     *
     * `uint64 height = 1 [json_name = "height"];`
     */
    public var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.height
      @JvmName("setHeight")
      set(value) {
        _builder.height = value
      }
    /**
     * ```
     * The height at which the snapshot was taken
     * ```
     *
     * `uint64 height = 1 [json_name = "height"];`
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }

    /**
     * ```
     * The application-specific snapshot format
     * ```
     *
     * `uint32 format = 2 [json_name = "format"];`
     */
    public var format: kotlin.Int
      @JvmName("getFormat")
      get() = _builder.format
      @JvmName("setFormat")
      set(value) {
        _builder.format = value
      }
    /**
     * ```
     * The application-specific snapshot format
     * ```
     *
     * `uint32 format = 2 [json_name = "format"];`
     */
    public fun clearFormat() {
      _builder.clearFormat()
    }

    /**
     * ```
     * Number of chunks in the snapshot
     * ```
     *
     * `uint32 chunks = 3 [json_name = "chunks"];`
     */
    public var chunks: kotlin.Int
      @JvmName("getChunks")
      get() = _builder.chunks
      @JvmName("setChunks")
      set(value) {
        _builder.chunks = value
      }
    /**
     * ```
     * Number of chunks in the snapshot
     * ```
     *
     * `uint32 chunks = 3 [json_name = "chunks"];`
     */
    public fun clearChunks() {
      _builder.clearChunks()
    }

    /**
     * ```
     * Arbitrary snapshot hash, equal only if identical
     * ```
     *
     * `bytes hash = 4 [json_name = "hash"];`
     */
    public var hash: com.google.protobuf.ByteString
      @JvmName("getHash")
      get() = _builder.hash
      @JvmName("setHash")
      set(value) {
        _builder.hash = value
      }
    /**
     * ```
     * Arbitrary snapshot hash, equal only if identical
     * ```
     *
     * `bytes hash = 4 [json_name = "hash"];`
     */
    public fun clearHash() {
      _builder.clearHash()
    }

    /**
     * ```
     * Arbitrary application metadata
     * ```
     *
     * `bytes metadata = 5 [json_name = "metadata"];`
     */
    public var metadata: com.google.protobuf.ByteString
      @JvmName("getMetadata")
      get() = _builder.metadata
      @JvmName("setMetadata")
      set(value) {
        _builder.metadata = value
      }
    /**
     * ```
     * Arbitrary application metadata
     * ```
     *
     * `bytes metadata = 5 [json_name = "metadata"];`
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.Snapshot.copy(block: `tendermint.abci`.SnapshotKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.Snapshot =
  `tendermint.abci`.SnapshotKt.Dsl._create(this.toBuilder()).apply { block() }._build()

