// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/abci/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.abci;

@kotlin.jvm.JvmName("-initializevoteInfo")
public inline fun voteInfo(block: tendermint.abci.VoteInfoKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.VoteInfo =
  tendermint.abci.VoteInfoKt.Dsl._create(tendermint.abci.Types.VoteInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tendermint.abci.VoteInfo`
 */
public object VoteInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.VoteInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.VoteInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.VoteInfo = _builder.build()

    /**
     * `.tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];`
     */
    public var validator: tendermint.abci.Types.Validator
      @JvmName("getValidator")
      get() = _builder.validator
      @JvmName("setValidator")
      set(value) {
        _builder.validator = value
      }
    /**
     * `.tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];`
     */
    public fun clearValidator() {
      _builder.clearValidator()
    }
    /**
     * `.tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];`
     * @return Whether the validator field is set.
     */
    public fun hasValidator(): kotlin.Boolean {
      return _builder.hasValidator()
    }

    public val VoteInfoKt.Dsl.validatorOrNull: tendermint.abci.Types.Validator?
      get() = _builder.validatorOrNull

    /**
     * `.tendermint.types.BlockIDFlag block_id_flag = 3 [json_name = "blockIdFlag"];`
     */
    public var blockIdFlag: tendermint.types.ValidatorOuterClass.BlockIDFlag
      @JvmName("getBlockIdFlag")
      get() = _builder.blockIdFlag
      @JvmName("setBlockIdFlag")
      set(value) {
        _builder.blockIdFlag = value
      }
    public var blockIdFlagValue: kotlin.Int
      @JvmName("getBlockIdFlagValue")
      get() = _builder.blockIdFlagValue
      @JvmName("setBlockIdFlagValue")
      set(value) {
        _builder.blockIdFlagValue = value
      }
    /**
     * `.tendermint.types.BlockIDFlag block_id_flag = 3 [json_name = "blockIdFlag"];`
     */
    public fun clearBlockIdFlag() {
      _builder.clearBlockIdFlag()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.VoteInfo.copy(block: `tendermint.abci`.VoteInfoKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.VoteInfo =
  `tendermint.abci`.VoteInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val tendermint.abci.Types.VoteInfoOrBuilder.validatorOrNull: tendermint.abci.Types.Validator?
  get() = if (hasValidator()) getValidator() else null

