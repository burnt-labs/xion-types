// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/abci/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package tendermint.abci;

@kotlin.jvm.JvmName("-initializerequestLoadSnapshotChunk")
public inline fun requestLoadSnapshotChunk(block: tendermint.abci.RequestLoadSnapshotChunkKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.RequestLoadSnapshotChunk =
  tendermint.abci.RequestLoadSnapshotChunkKt.Dsl._create(tendermint.abci.Types.RequestLoadSnapshotChunk.newBuilder()).apply { block() }._build()
/**
 * ```
 * loads a snapshot chunk
 * ```
 *
 * Protobuf type `tendermint.abci.RequestLoadSnapshotChunk`
 */
public object RequestLoadSnapshotChunkKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.RequestLoadSnapshotChunk.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.RequestLoadSnapshotChunk.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.RequestLoadSnapshotChunk = _builder.build()

    /**
     * `uint64 height = 1 [json_name = "height"];`
     */
    public var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.height
      @JvmName("setHeight")
      set(value) {
        _builder.height = value
      }
    /**
     * `uint64 height = 1 [json_name = "height"];`
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }

    /**
     * `uint32 format = 2 [json_name = "format"];`
     */
    public var format: kotlin.Int
      @JvmName("getFormat")
      get() = _builder.format
      @JvmName("setFormat")
      set(value) {
        _builder.format = value
      }
    /**
     * `uint32 format = 2 [json_name = "format"];`
     */
    public fun clearFormat() {
      _builder.clearFormat()
    }

    /**
     * `uint32 chunk = 3 [json_name = "chunk"];`
     */
    public var chunk: kotlin.Int
      @JvmName("getChunk")
      get() = _builder.chunk
      @JvmName("setChunk")
      set(value) {
        _builder.chunk = value
      }
    /**
     * `uint32 chunk = 3 [json_name = "chunk"];`
     */
    public fun clearChunk() {
      _builder.clearChunk()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.RequestLoadSnapshotChunk.copy(block: `tendermint.abci`.RequestLoadSnapshotChunkKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.RequestLoadSnapshotChunk =
  `tendermint.abci`.RequestLoadSnapshotChunkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

