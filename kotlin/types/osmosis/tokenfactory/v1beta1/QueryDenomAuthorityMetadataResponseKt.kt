// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package osmosis.tokenfactory.v1beta1;

@kotlin.jvm.JvmName("-initializequeryDenomAuthorityMetadataResponse")
public inline fun queryDenomAuthorityMetadataResponse(block: osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponseKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse =
  osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponseKt.Dsl._create(osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryDenomAuthorityMetadataResponse defines the response structure for the
 * DenomAuthorityMetadata gRPC query.
 * ```
 *
 * Protobuf type `osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse`
 */
public object QueryDenomAuthorityMetadataResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse = _builder.build()

    /**
     * `.osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];`
     */
    public var authorityMetadata: osmosis.tokenfactory.v1beta1.AuthorityMetadata.DenomAuthorityMetadata
      @JvmName("getAuthorityMetadata")
      get() = _builder.authorityMetadata
      @JvmName("setAuthorityMetadata")
      set(value) {
        _builder.authorityMetadata = value
      }
    /**
     * `.osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];`
     */
    public fun clearAuthorityMetadata() {
      _builder.clearAuthorityMetadata()
    }
    /**
     * `.osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];`
     * @return Whether the authorityMetadata field is set.
     */
    public fun hasAuthorityMetadata(): kotlin.Boolean {
      return _builder.hasAuthorityMetadata()
    }

    public val QueryDenomAuthorityMetadataResponseKt.Dsl.authorityMetadataOrNull: osmosis.tokenfactory.v1beta1.AuthorityMetadata.DenomAuthorityMetadata?
      get() = _builder.authorityMetadataOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse.copy(block: `osmosis.tokenfactory.v1beta1`.QueryDenomAuthorityMetadataResponseKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponse =
  `osmosis.tokenfactory.v1beta1`.QueryDenomAuthorityMetadataResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val osmosis.tokenfactory.v1beta1.QueryOuterClass.QueryDenomAuthorityMetadataResponseOrBuilder.authorityMetadataOrNull: osmosis.tokenfactory.v1beta1.AuthorityMetadata.DenomAuthorityMetadata?
  get() = if (hasAuthorityMetadata()) getAuthorityMetadata() else null

