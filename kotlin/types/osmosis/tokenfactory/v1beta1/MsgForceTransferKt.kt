// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package osmosis.tokenfactory.v1beta1;

@kotlin.jvm.JvmName("-initializemsgForceTransfer")
public inline fun msgForceTransfer(block: osmosis.tokenfactory.v1beta1.MsgForceTransferKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer =
  osmosis.tokenfactory.v1beta1.MsgForceTransferKt.Dsl._create(osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `osmosis.tokenfactory.v1beta1.MsgForceTransfer`
 */
public object MsgForceTransferKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer = _builder.build()

    /**
     * `string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];`
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.sender
      @JvmName("setSender")
      set(value) {
        _builder.sender = value
      }
    /**
     * `string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];`
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * `.cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];`
     */
    public var amount: cosmos.base.v1beta1.CoinOuterClass.Coin
      @JvmName("getAmount")
      get() = _builder.amount
      @JvmName("setAmount")
      set(value) {
        _builder.amount = value
      }
    /**
     * `.cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];`
     */
    public fun clearAmount() {
      _builder.clearAmount()
    }
    /**
     * `.cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];`
     * @return Whether the amount field is set.
     */
    public fun hasAmount(): kotlin.Boolean {
      return _builder.hasAmount()
    }

    public val MsgForceTransferKt.Dsl.amountOrNull: cosmos.base.v1beta1.CoinOuterClass.Coin?
      get() = _builder.amountOrNull

    /**
     * `string transferFromAddress = 3 [json_name = "transferFromAddress", (.gogoproto.moretags) = "yaml:\"transfer_from_address\""];`
     */
    public var transferFromAddress: kotlin.String
      @JvmName("getTransferFromAddress")
      get() = _builder.transferFromAddress
      @JvmName("setTransferFromAddress")
      set(value) {
        _builder.transferFromAddress = value
      }
    /**
     * `string transferFromAddress = 3 [json_name = "transferFromAddress", (.gogoproto.moretags) = "yaml:\"transfer_from_address\""];`
     */
    public fun clearTransferFromAddress() {
      _builder.clearTransferFromAddress()
    }

    /**
     * `string transferToAddress = 4 [json_name = "transferToAddress", (.gogoproto.moretags) = "yaml:\"transfer_to_address\""];`
     */
    public var transferToAddress: kotlin.String
      @JvmName("getTransferToAddress")
      get() = _builder.transferToAddress
      @JvmName("setTransferToAddress")
      set(value) {
        _builder.transferToAddress = value
      }
    /**
     * `string transferToAddress = 4 [json_name = "transferToAddress", (.gogoproto.moretags) = "yaml:\"transfer_to_address\""];`
     */
    public fun clearTransferToAddress() {
      _builder.clearTransferToAddress()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer.copy(block: `osmosis.tokenfactory.v1beta1`.MsgForceTransferKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.Tx.MsgForceTransfer =
  `osmosis.tokenfactory.v1beta1`.MsgForceTransferKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val osmosis.tokenfactory.v1beta1.Tx.MsgForceTransferOrBuilder.amountOrNull: cosmos.base.v1beta1.CoinOuterClass.Coin?
  get() = if (hasAmount()) getAmount() else null

