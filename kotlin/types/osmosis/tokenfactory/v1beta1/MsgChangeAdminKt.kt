// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package osmosis.tokenfactory.v1beta1;

@kotlin.jvm.JvmName("-initializemsgChangeAdmin")
public inline fun msgChangeAdmin(block: osmosis.tokenfactory.v1beta1.MsgChangeAdminKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin =
  osmosis.tokenfactory.v1beta1.MsgChangeAdminKt.Dsl._create(osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgChangeAdmin is the sdk.Msg type for allowing an admin account to reassign
 * adminship of a denom to a new account
 * ```
 *
 * Protobuf type `osmosis.tokenfactory.v1beta1.MsgChangeAdmin`
 */
public object MsgChangeAdminKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin = _builder.build()

    /**
     * `string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];`
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.sender
      @JvmName("setSender")
      set(value) {
        _builder.sender = value
      }
    /**
     * `string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];`
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * `string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];`
     */
    public var denom: kotlin.String
      @JvmName("getDenom")
      get() = _builder.denom
      @JvmName("setDenom")
      set(value) {
        _builder.denom = value
      }
    /**
     * `string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];`
     */
    public fun clearDenom() {
      _builder.clearDenom()
    }

    /**
     * `string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];`
     */
    public var newAdmin: kotlin.String
      @JvmName("getNewAdmin")
      get() = _builder.newAdmin
      @JvmName("setNewAdmin")
      set(value) {
        _builder.newAdmin = value
      }
    /**
     * `string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];`
     */
    public fun clearNewAdmin() {
      _builder.clearNewAdmin()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin.copy(block: `osmosis.tokenfactory.v1beta1`.MsgChangeAdminKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.Tx.MsgChangeAdmin =
  `osmosis.tokenfactory.v1beta1`.MsgChangeAdminKt.Dsl._create(this.toBuilder()).apply { block() }._build()

