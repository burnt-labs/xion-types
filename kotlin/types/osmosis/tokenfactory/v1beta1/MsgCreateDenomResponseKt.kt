// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package osmosis.tokenfactory.v1beta1;

@kotlin.jvm.JvmName("-initializemsgCreateDenomResponse")
public inline fun msgCreateDenomResponse(block: osmosis.tokenfactory.v1beta1.MsgCreateDenomResponseKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse =
  osmosis.tokenfactory.v1beta1.MsgCreateDenomResponseKt.Dsl._create(osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgCreateDenomResponse is the return value of MsgCreateDenom
 * It returns the full string of the newly created denom
 * ```
 *
 * Protobuf type `osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse`
 */
public object MsgCreateDenomResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse = _builder.build()

    /**
     * `string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];`
     */
    public var newTokenDenom: kotlin.String
      @JvmName("getNewTokenDenom")
      get() = _builder.newTokenDenom
      @JvmName("setNewTokenDenom")
      set(value) {
        _builder.newTokenDenom = value
      }
    /**
     * `string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];`
     */
    public fun clearNewTokenDenom() {
      _builder.clearNewTokenDenom()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse.copy(block: `osmosis.tokenfactory.v1beta1`.MsgCreateDenomResponseKt.Dsl.() -> kotlin.Unit): osmosis.tokenfactory.v1beta1.Tx.MsgCreateDenomResponse =
  `osmosis.tokenfactory.v1beta1`.MsgCreateDenomResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

