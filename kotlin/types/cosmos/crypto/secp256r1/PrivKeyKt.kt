// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/crypto/secp256r1/keys.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.crypto.secp256r1;

@kotlin.jvm.JvmName("-initializeprivKey")
public inline fun privKey(block: cosmos.crypto.secp256r1.PrivKeyKt.Dsl.() -> kotlin.Unit): cosmos.crypto.secp256r1.Keys.PrivKey =
  cosmos.crypto.secp256r1.PrivKeyKt.Dsl._create(cosmos.crypto.secp256r1.Keys.PrivKey.newBuilder()).apply { block() }._build()
/**
 * ```
 * PrivKey defines a secp256r1 ECDSA private key.
 * ```
 *
 * Protobuf type `cosmos.crypto.secp256r1.PrivKey`
 */
public object PrivKeyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.crypto.secp256r1.Keys.PrivKey.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.crypto.secp256r1.Keys.PrivKey.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.crypto.secp256r1.Keys.PrivKey = _builder.build()

    /**
     * ```
     * secret number serialized using big-endian encoding
     * ```
     *
     * `bytes secret = 1 [json_name = "secret", (.gogoproto.customtype) = "ecdsaSK"];`
     */
    public var secret: com.google.protobuf.ByteString
      @JvmName("getSecret")
      get() = _builder.secret
      @JvmName("setSecret")
      set(value) {
        _builder.secret = value
      }
    /**
     * ```
     * secret number serialized using big-endian encoding
     * ```
     *
     * `bytes secret = 1 [json_name = "secret", (.gogoproto.customtype) = "ecdsaSK"];`
     */
    public fun clearSecret() {
      _builder.clearSecret()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.crypto.secp256r1.Keys.PrivKey.copy(block: `cosmos.crypto.secp256r1`.PrivKeyKt.Dsl.() -> kotlin.Unit): cosmos.crypto.secp256r1.Keys.PrivKey =
  `cosmos.crypto.secp256r1`.PrivKeyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

