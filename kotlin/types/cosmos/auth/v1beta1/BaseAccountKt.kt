// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/auth/v1beta1/auth.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.auth.v1beta1;

@kotlin.jvm.JvmName("-initializebaseAccount")
public inline fun baseAccount(block: cosmos.auth.v1beta1.BaseAccountKt.Dsl.() -> kotlin.Unit): cosmos.auth.v1beta1.Auth.BaseAccount =
  cosmos.auth.v1beta1.BaseAccountKt.Dsl._create(cosmos.auth.v1beta1.Auth.BaseAccount.newBuilder()).apply { block() }._build()
/**
 * ```
 * BaseAccount defines a base account type. It contains all the necessary fields
 * for basic account functionality. Any custom account type should extend this
 * type for additional functionality (e.g. vesting).
 * ```
 *
 * Protobuf type `cosmos.auth.v1beta1.BaseAccount`
 */
public object BaseAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.auth.v1beta1.Auth.BaseAccount.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.auth.v1beta1.Auth.BaseAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.auth.v1beta1.Auth.BaseAccount = _builder.build()

    /**
     * `string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.address
      @JvmName("setAddress")
      set(value) {
        _builder.address = value
      }
    /**
     * `string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * `.google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];`
     */
    public var pubKey: com.google.protobuf.Any
      @JvmName("getPubKey")
      get() = _builder.pubKey
      @JvmName("setPubKey")
      set(value) {
        _builder.pubKey = value
      }
    /**
     * `.google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];`
     */
    public fun clearPubKey() {
      _builder.clearPubKey()
    }
    /**
     * `.google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];`
     * @return Whether the pubKey field is set.
     */
    public fun hasPubKey(): kotlin.Boolean {
      return _builder.hasPubKey()
    }

    public val BaseAccountKt.Dsl.pubKeyOrNull: com.google.protobuf.Any?
      get() = _builder.pubKeyOrNull

    /**
     * `uint64 account_number = 3 [json_name = "accountNumber"];`
     */
    public var accountNumber: kotlin.Long
      @JvmName("getAccountNumber")
      get() = _builder.accountNumber
      @JvmName("setAccountNumber")
      set(value) {
        _builder.accountNumber = value
      }
    /**
     * `uint64 account_number = 3 [json_name = "accountNumber"];`
     */
    public fun clearAccountNumber() {
      _builder.clearAccountNumber()
    }

    /**
     * `uint64 sequence = 4 [json_name = "sequence"];`
     */
    public var sequence: kotlin.Long
      @JvmName("getSequence")
      get() = _builder.sequence
      @JvmName("setSequence")
      set(value) {
        _builder.sequence = value
      }
    /**
     * `uint64 sequence = 4 [json_name = "sequence"];`
     */
    public fun clearSequence() {
      _builder.clearSequence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.auth.v1beta1.Auth.BaseAccount.copy(block: `cosmos.auth.v1beta1`.BaseAccountKt.Dsl.() -> kotlin.Unit): cosmos.auth.v1beta1.Auth.BaseAccount =
  `cosmos.auth.v1beta1`.BaseAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.auth.v1beta1.Auth.BaseAccountOrBuilder.pubKeyOrNull: com.google.protobuf.Any?
  get() = if (hasPubKey()) getPubKey() else null

