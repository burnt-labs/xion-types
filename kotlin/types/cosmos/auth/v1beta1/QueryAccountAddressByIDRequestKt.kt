// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/auth/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.auth.v1beta1;

@kotlin.jvm.JvmName("-initializequeryAccountAddressByIDRequest")
public inline fun queryAccountAddressByIDRequest(block: cosmos.auth.v1beta1.QueryAccountAddressByIDRequestKt.Dsl.() -> kotlin.Unit): cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest =
  cosmos.auth.v1beta1.QueryAccountAddressByIDRequestKt.Dsl._create(cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryAccountAddressByIDRequest is the request type for AccountAddressByID rpc method
 * ```
 *
 * Protobuf type `cosmos.auth.v1beta1.QueryAccountAddressByIDRequest`
 */
public object QueryAccountAddressByIDRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest = _builder.build()

    /**
     * ```
     * Deprecated, use account_id instead
     *
     * id is the account number of the address to be queried. This field
     * should have been an uint64 (like all account numbers), and will be
     * updated to uint64 in a future version of the auth query.
     * ```
     *
     * `int64 id = 1 [json_name = "id", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field id is deprecated") public var id: kotlin.Long
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * ```
     * Deprecated, use account_id instead
     *
     * id is the account number of the address to be queried. This field
     * should have been an uint64 (like all account numbers), and will be
     * updated to uint64 in a future version of the auth query.
     * ```
     *
     * `int64 id = 1 [json_name = "id", deprecated = true];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * account_id is the account number of the address to be queried.
     * ```
     *
     * `uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];`
     */
    public var accountId: kotlin.Long
      @JvmName("getAccountId")
      get() = _builder.accountId
      @JvmName("setAccountId")
      set(value) {
        _builder.accountId = value
      }
    /**
     * ```
     * account_id is the account number of the address to be queried.
     * ```
     *
     * `uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];`
     */
    public fun clearAccountId() {
      _builder.clearAccountId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest.copy(block: `cosmos.auth.v1beta1`.QueryAccountAddressByIDRequestKt.Dsl.() -> kotlin.Unit): cosmos.auth.v1beta1.QueryOuterClass.QueryAccountAddressByIDRequest =
  `cosmos.auth.v1beta1`.QueryAccountAddressByIDRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

