// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/tx/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.tx.v1beta1;

@kotlin.jvm.JvmName("-initializeauthInfo")
public inline fun authInfo(block: cosmos.tx.v1beta1.AuthInfoKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.TxOuterClass.AuthInfo =
  cosmos.tx.v1beta1.AuthInfoKt.Dsl._create(cosmos.tx.v1beta1.TxOuterClass.AuthInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * AuthInfo describes the fee and signer modes that are used to sign a
 * transaction.
 * ```
 *
 * Protobuf type `cosmos.tx.v1beta1.AuthInfo`
 */
public object AuthInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.tx.v1beta1.TxOuterClass.AuthInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.tx.v1beta1.TxOuterClass.AuthInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.tx.v1beta1.TxOuterClass.AuthInfo = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SignerInfosProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     */
     public val signerInfos: com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.signerInfosList
      )
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     * @param value The signerInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSignerInfos")
    public fun com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>.add(value: cosmos.tx.v1beta1.TxOuterClass.SignerInfo) {
      _builder.addSignerInfos(value)
    }
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     * @param value The signerInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSignerInfos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>.plusAssign(value: cosmos.tx.v1beta1.TxOuterClass.SignerInfo) {
      add(value)
    }
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     * @param values The signerInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSignerInfos")
    public fun com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>.addAll(values: kotlin.collections.Iterable<cosmos.tx.v1beta1.TxOuterClass.SignerInfo>) {
      _builder.addAllSignerInfos(values)
    }
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     * @param values The signerInfos to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSignerInfos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.tx.v1beta1.TxOuterClass.SignerInfo>) {
      addAll(values)
    }
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     * @param index The index to set the value at.
     * @param value The signerInfos to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSignerInfos")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>.set(index: kotlin.Int, value: cosmos.tx.v1beta1.TxOuterClass.SignerInfo) {
      _builder.setSignerInfos(index, value)
    }
    /**
     * ```
     * signer_infos defines the signing modes for the required signers. The number
     * and order of elements must match the required signers from TxBody's
     * messages. The first element is the primary signer and the one which pays
     * the fee.
     * ```
     *
     * `repeated .cosmos.tx.v1beta1.SignerInfo signer_infos = 1 [json_name = "signerInfos"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSignerInfos")
    public fun com.google.protobuf.kotlin.DslList<cosmos.tx.v1beta1.TxOuterClass.SignerInfo, SignerInfosProxy>.clear() {
      _builder.clearSignerInfos()
    }


    /**
     * ```
     * Fee is the fee and gas limit for the transaction. The first signer is the
     * primary signer and the one which pays the fee. The fee can be calculated
     * based on the cost of evaluating the body and doing signature verification
     * of the signers. This can be estimated via simulation.
     * ```
     *
     * `.cosmos.tx.v1beta1.Fee fee = 2 [json_name = "fee"];`
     */
    public var fee: cosmos.tx.v1beta1.TxOuterClass.Fee
      @JvmName("getFee")
      get() = _builder.fee
      @JvmName("setFee")
      set(value) {
        _builder.fee = value
      }
    /**
     * ```
     * Fee is the fee and gas limit for the transaction. The first signer is the
     * primary signer and the one which pays the fee. The fee can be calculated
     * based on the cost of evaluating the body and doing signature verification
     * of the signers. This can be estimated via simulation.
     * ```
     *
     * `.cosmos.tx.v1beta1.Fee fee = 2 [json_name = "fee"];`
     */
    public fun clearFee() {
      _builder.clearFee()
    }
    /**
     * ```
     * Fee is the fee and gas limit for the transaction. The first signer is the
     * primary signer and the one which pays the fee. The fee can be calculated
     * based on the cost of evaluating the body and doing signature verification
     * of the signers. This can be estimated via simulation.
     * ```
     *
     * `.cosmos.tx.v1beta1.Fee fee = 2 [json_name = "fee"];`
     * @return Whether the fee field is set.
     */
    public fun hasFee(): kotlin.Boolean {
      return _builder.hasFee()
    }

    public val AuthInfoKt.Dsl.feeOrNull: cosmos.tx.v1beta1.TxOuterClass.Fee?
      get() = _builder.feeOrNull

    /**
     * ```
     * Tip is the optional tip used for transactions fees paid in another denom.
     *
     * This field is ignored if the chain didn't enable tips, i.e. didn't add the
     * `TipDecorator` in its posthandler.
     * ```
     *
     * `.cosmos.tx.v1beta1.Tip tip = 3 [json_name = "tip", deprecated = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    @kotlin.Deprecated(message = "Field tip is deprecated") public var tip: cosmos.tx.v1beta1.TxOuterClass.Tip
      @JvmName("getTip")
      get() = _builder.tip
      @JvmName("setTip")
      set(value) {
        _builder.tip = value
      }
    /**
     * ```
     * Tip is the optional tip used for transactions fees paid in another denom.
     *
     * This field is ignored if the chain didn't enable tips, i.e. didn't add the
     * `TipDecorator` in its posthandler.
     * ```
     *
     * `.cosmos.tx.v1beta1.Tip tip = 3 [json_name = "tip", deprecated = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public fun clearTip() {
      _builder.clearTip()
    }
    /**
     * ```
     * Tip is the optional tip used for transactions fees paid in another denom.
     *
     * This field is ignored if the chain didn't enable tips, i.e. didn't add the
     * `TipDecorator` in its posthandler.
     * ```
     *
     * `.cosmos.tx.v1beta1.Tip tip = 3 [json_name = "tip", deprecated = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     * @return Whether the tip field is set.
     */
    public fun hasTip(): kotlin.Boolean {
      return _builder.hasTip()
    }
    @kotlin.Deprecated(message = "Field tip is deprecated") 
    public val AuthInfoKt.Dsl.tipOrNull: cosmos.tx.v1beta1.TxOuterClass.Tip?
      get() = _builder.tipOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.tx.v1beta1.TxOuterClass.AuthInfo.copy(block: `cosmos.tx.v1beta1`.AuthInfoKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.TxOuterClass.AuthInfo =
  `cosmos.tx.v1beta1`.AuthInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.tx.v1beta1.TxOuterClass.AuthInfoOrBuilder.feeOrNull: cosmos.tx.v1beta1.TxOuterClass.Fee?
  get() = if (hasFee()) getFee() else null

@kotlin.Deprecated(message = "Field tip is deprecated")
public val cosmos.tx.v1beta1.TxOuterClass.AuthInfoOrBuilder.tipOrNull: cosmos.tx.v1beta1.TxOuterClass.Tip?
  get() = if (hasTip()) getTip() else null

