// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/tx/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.tx.v1beta1;

@kotlin.jvm.JvmName("-initializetx")
public inline fun tx(block: cosmos.tx.v1beta1.TxKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.TxOuterClass.Tx =
  cosmos.tx.v1beta1.TxKt.Dsl._create(cosmos.tx.v1beta1.TxOuterClass.Tx.newBuilder()).apply { block() }._build()
/**
 * ```
 * Tx is the standard type used for broadcasting transactions.
 * ```
 *
 * Protobuf type `cosmos.tx.v1beta1.Tx`
 */
public object TxKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.tx.v1beta1.TxOuterClass.Tx.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.tx.v1beta1.TxOuterClass.Tx.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.tx.v1beta1.TxOuterClass.Tx = _builder.build()

    /**
     * ```
     * body is the processable content of the transaction
     * ```
     *
     * `.cosmos.tx.v1beta1.TxBody body = 1 [json_name = "body"];`
     */
    public var body: cosmos.tx.v1beta1.TxOuterClass.TxBody
      @JvmName("getBody")
      get() = _builder.body
      @JvmName("setBody")
      set(value) {
        _builder.body = value
      }
    /**
     * ```
     * body is the processable content of the transaction
     * ```
     *
     * `.cosmos.tx.v1beta1.TxBody body = 1 [json_name = "body"];`
     */
    public fun clearBody() {
      _builder.clearBody()
    }
    /**
     * ```
     * body is the processable content of the transaction
     * ```
     *
     * `.cosmos.tx.v1beta1.TxBody body = 1 [json_name = "body"];`
     * @return Whether the body field is set.
     */
    public fun hasBody(): kotlin.Boolean {
      return _builder.hasBody()
    }

    public val TxKt.Dsl.bodyOrNull: cosmos.tx.v1beta1.TxOuterClass.TxBody?
      get() = _builder.bodyOrNull

    /**
     * ```
     * auth_info is the authorization related content of the transaction,
     * specifically signers, signer modes and fee
     * ```
     *
     * `.cosmos.tx.v1beta1.AuthInfo auth_info = 2 [json_name = "authInfo"];`
     */
    public var authInfo: cosmos.tx.v1beta1.TxOuterClass.AuthInfo
      @JvmName("getAuthInfo")
      get() = _builder.authInfo
      @JvmName("setAuthInfo")
      set(value) {
        _builder.authInfo = value
      }
    /**
     * ```
     * auth_info is the authorization related content of the transaction,
     * specifically signers, signer modes and fee
     * ```
     *
     * `.cosmos.tx.v1beta1.AuthInfo auth_info = 2 [json_name = "authInfo"];`
     */
    public fun clearAuthInfo() {
      _builder.clearAuthInfo()
    }
    /**
     * ```
     * auth_info is the authorization related content of the transaction,
     * specifically signers, signer modes and fee
     * ```
     *
     * `.cosmos.tx.v1beta1.AuthInfo auth_info = 2 [json_name = "authInfo"];`
     * @return Whether the authInfo field is set.
     */
    public fun hasAuthInfo(): kotlin.Boolean {
      return _builder.hasAuthInfo()
    }

    public val TxKt.Dsl.authInfoOrNull: cosmos.tx.v1beta1.TxOuterClass.AuthInfo?
      get() = _builder.authInfoOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SignaturesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     */
     public val signatures: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.signaturesList
      )
    /**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     * @param value The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSignatures")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>.add(value: com.google.protobuf.ByteString) {
      _builder.addSignatures(value)
    }/**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     * @param value The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSignatures")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>.plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }/**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     * @param values The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSignatures")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllSignatures(values)
    }/**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     * @param values The signatures to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSignatures")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }/**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     * @param index The index to set the value at.
     * @param value The signatures to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSignatures")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setSignatures(index, value)
    }/**
     * ```
     * signatures is a list of signatures that matches the length and order of
     * AuthInfo's signer_infos to allow connecting signature meta information like
     * public key and signing mode by position.
     * ```
     *
     * `repeated bytes signatures = 3 [json_name = "signatures"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSignatures")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, SignaturesProxy>.clear() {
      _builder.clearSignatures()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.tx.v1beta1.TxOuterClass.Tx.copy(block: `cosmos.tx.v1beta1`.TxKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.TxOuterClass.Tx =
  `cosmos.tx.v1beta1`.TxKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.tx.v1beta1.TxOuterClass.TxOrBuilder.bodyOrNull: cosmos.tx.v1beta1.TxOuterClass.TxBody?
  get() = if (hasBody()) getBody() else null

public val cosmos.tx.v1beta1.TxOuterClass.TxOrBuilder.authInfoOrNull: cosmos.tx.v1beta1.TxOuterClass.AuthInfo?
  get() = if (hasAuthInfo()) getAuthInfo() else null

