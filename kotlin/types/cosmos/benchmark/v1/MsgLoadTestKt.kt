// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/benchmark/v1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.benchmark.v1;

@kotlin.jvm.JvmName("-initializemsgLoadTest")
public inline fun msgLoadTest(block: cosmos.benchmark.v1.MsgLoadTestKt.Dsl.() -> kotlin.Unit): cosmos.benchmark.v1.Tx.MsgLoadTest =
  cosmos.benchmark.v1.MsgLoadTestKt.Dsl._create(cosmos.benchmark.v1.Tx.MsgLoadTest.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgLoadTestOps defines a message containing a sequence of load test operations.
 * ```
 *
 * Protobuf type `cosmos.benchmark.v1.MsgLoadTest`
 */
public object MsgLoadTestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.benchmark.v1.Tx.MsgLoadTest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.benchmark.v1.Tx.MsgLoadTest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.benchmark.v1.Tx.MsgLoadTest = _builder.build()

    /**
     * `bytes caller = 1 [json_name = "caller"];`
     */
    public var caller: com.google.protobuf.ByteString
      @JvmName("getCaller")
      get() = _builder.caller
      @JvmName("setCaller")
      set(value) {
        _builder.caller = value
      }
    /**
     * `bytes caller = 1 [json_name = "caller"];`
     */
    public fun clearCaller() {
      _builder.clearCaller()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class OpsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     */
     public val ops: com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.opsList
      )
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     * @param value The ops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addOps")
    public fun com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>.add(value: cosmos.benchmark.v1.Benchmark.Op) {
      _builder.addOps(value)
    }
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     * @param value The ops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignOps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>.plusAssign(value: cosmos.benchmark.v1.Benchmark.Op) {
      add(value)
    }
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     * @param values The ops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllOps")
    public fun com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.benchmark.v1.Benchmark.Op>) {
      _builder.addAllOps(values)
    }
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     * @param values The ops to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllOps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.benchmark.v1.Benchmark.Op>) {
      addAll(values)
    }
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     * @param index The index to set the value at.
     * @param value The ops to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setOps")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>.set(index: kotlin.Int, value: cosmos.benchmark.v1.Benchmark.Op) {
      _builder.setOps(index, value)
    }
    /**
     * `repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearOps")
    public fun com.google.protobuf.kotlin.DslList<cosmos.benchmark.v1.Benchmark.Op, OpsProxy>.clear() {
      _builder.clearOps()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.benchmark.v1.Tx.MsgLoadTest.copy(block: `cosmos.benchmark.v1`.MsgLoadTestKt.Dsl.() -> kotlin.Unit): cosmos.benchmark.v1.Tx.MsgLoadTest =
  `cosmos.benchmark.v1`.MsgLoadTestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

