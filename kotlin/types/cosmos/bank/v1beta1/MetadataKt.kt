// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/bank/v1beta1/bank.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.bank.v1beta1;

@kotlin.jvm.JvmName("-initializemetadata")
public inline fun metadata(block: cosmos.bank.v1beta1.MetadataKt.Dsl.() -> kotlin.Unit): cosmos.bank.v1beta1.Bank.Metadata =
  cosmos.bank.v1beta1.MetadataKt.Dsl._create(cosmos.bank.v1beta1.Bank.Metadata.newBuilder()).apply { block() }._build()
/**
 * ```
 * Metadata represents a struct that describes
 * a basic token.
 * ```
 *
 * Protobuf type `cosmos.bank.v1beta1.Metadata`
 */
public object MetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.bank.v1beta1.Bank.Metadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.bank.v1beta1.Bank.Metadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.bank.v1beta1.Bank.Metadata = _builder.build()

    /**
     * `string description = 1 [json_name = "description"];`
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.description
      @JvmName("setDescription")
      set(value) {
        _builder.description = value
      }
    /**
     * `string description = 1 [json_name = "description"];`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DenomUnitsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     */
     public val denomUnits: com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.denomUnitsList
      )
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     * @param value The denomUnits to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDenomUnits")
    public fun com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>.add(value: cosmos.bank.v1beta1.Bank.DenomUnit) {
      _builder.addDenomUnits(value)
    }
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     * @param value The denomUnits to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDenomUnits")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>.plusAssign(value: cosmos.bank.v1beta1.Bank.DenomUnit) {
      add(value)
    }
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     * @param values The denomUnits to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDenomUnits")
    public fun com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.bank.v1beta1.Bank.DenomUnit>) {
      _builder.addAllDenomUnits(values)
    }
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     * @param values The denomUnits to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDenomUnits")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.bank.v1beta1.Bank.DenomUnit>) {
      addAll(values)
    }
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     * @param index The index to set the value at.
     * @param value The denomUnits to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDenomUnits")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>.set(index: kotlin.Int, value: cosmos.bank.v1beta1.Bank.DenomUnit) {
      _builder.setDenomUnits(index, value)
    }
    /**
     * ```
     * denom_units represents the list of DenomUnit's for a given coin
     * ```
     *
     * `repeated .cosmos.bank.v1beta1.DenomUnit denom_units = 2 [json_name = "denomUnits"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDenomUnits")
    public fun com.google.protobuf.kotlin.DslList<cosmos.bank.v1beta1.Bank.DenomUnit, DenomUnitsProxy>.clear() {
      _builder.clearDenomUnits()
    }


    /**
     * ```
     * base represents the base denom (should be the DenomUnit with exponent = 0).
     * ```
     *
     * `string base = 3 [json_name = "base"];`
     */
    public var base: kotlin.String
      @JvmName("getBase")
      get() = _builder.base
      @JvmName("setBase")
      set(value) {
        _builder.base = value
      }
    /**
     * ```
     * base represents the base denom (should be the DenomUnit with exponent = 0).
     * ```
     *
     * `string base = 3 [json_name = "base"];`
     */
    public fun clearBase() {
      _builder.clearBase()
    }

    /**
     * ```
     * display indicates the suggested denom that should be
     * displayed in clients.
     * ```
     *
     * `string display = 4 [json_name = "display"];`
     */
    public var display: kotlin.String
      @JvmName("getDisplay")
      get() = _builder.display
      @JvmName("setDisplay")
      set(value) {
        _builder.display = value
      }
    /**
     * ```
     * display indicates the suggested denom that should be
     * displayed in clients.
     * ```
     *
     * `string display = 4 [json_name = "display"];`
     */
    public fun clearDisplay() {
      _builder.clearDisplay()
    }

    /**
     * ```
     * name defines the name of the token (eg: Cosmos Atom)
     * ```
     *
     * `string name = 5 [json_name = "name", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.name
      @JvmName("setName")
      set(value) {
        _builder.name = value
      }
    /**
     * ```
     * name defines the name of the token (eg: Cosmos Atom)
     * ```
     *
     * `string name = 5 [json_name = "name", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
     * be the same as the display.
     * ```
     *
     * `string symbol = 6 [json_name = "symbol", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];`
     */
    public var symbol: kotlin.String
      @JvmName("getSymbol")
      get() = _builder.symbol
      @JvmName("setSymbol")
      set(value) {
        _builder.symbol = value
      }
    /**
     * ```
     * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
     * be the same as the display.
     * ```
     *
     * `string symbol = 6 [json_name = "symbol", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];`
     */
    public fun clearSymbol() {
      _builder.clearSymbol()
    }

    /**
     * ```
     * URI to a document (on or off-chain) that contains additional information. Optional.
     * ```
     *
     * `string uri = 7 [json_name = "uri", (.gogoproto.customname) = "URI", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public var uri: kotlin.String
      @JvmName("getUri")
      get() = _builder.uri
      @JvmName("setUri")
      set(value) {
        _builder.uri = value
      }
    /**
     * ```
     * URI to a document (on or off-chain) that contains additional information. Optional.
     * ```
     *
     * `string uri = 7 [json_name = "uri", (.gogoproto.customname) = "URI", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public fun clearUri() {
      _builder.clearUri()
    }

    /**
     * ```
     * URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
     * the document didn't change. Optional.
     * ```
     *
     * `string uri_hash = 8 [json_name = "uriHash", (.gogoproto.customname) = "URIHash", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public var uriHash: kotlin.String
      @JvmName("getUriHash")
      get() = _builder.uriHash
      @JvmName("setUriHash")
      set(value) {
        _builder.uriHash = value
      }
    /**
     * ```
     * URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
     * the document didn't change. Optional.
     * ```
     *
     * `string uri_hash = 8 [json_name = "uriHash", (.gogoproto.customname) = "URIHash", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public fun clearUriHash() {
      _builder.clearUriHash()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.bank.v1beta1.Bank.Metadata.copy(block: `cosmos.bank.v1beta1`.MetadataKt.Dsl.() -> kotlin.Unit): cosmos.bank.v1beta1.Bank.Metadata =
  `cosmos.bank.v1beta1`.MetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

