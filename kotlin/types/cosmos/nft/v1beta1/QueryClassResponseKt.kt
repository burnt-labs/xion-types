// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/nft/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.nft.v1beta1;

@kotlin.jvm.JvmName("-initializequeryClassResponse")
public inline fun queryClassResponse(block: cosmos.nft.v1beta1.QueryClassResponseKt.Dsl.() -> kotlin.Unit): cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse =
  cosmos.nft.v1beta1.QueryClassResponseKt.Dsl._create(cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryClassResponse is the response type for the Query/Class RPC method
 * ```
 *
 * Protobuf type `cosmos.nft.v1beta1.QueryClassResponse`
 */
public object QueryClassResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse = _builder.build()

    /**
     * ```
     * class defines the class of the nft type.
     * ```
     *
     * `.cosmos.nft.v1beta1.Class class = 1 [json_name = "class"];`
     */
    public var class_: cosmos.nft.v1beta1.Nft.Class
      @JvmName("getClass_")
      get() = _builder.class_
      @JvmName("setClass_")
      set(value) {
        _builder.class_ = value
      }
    /**
     * ```
     * class defines the class of the nft type.
     * ```
     *
     * `.cosmos.nft.v1beta1.Class class = 1 [json_name = "class"];`
     */
    public fun clearClass_() {
      _builder.clearClass_()
    }
    /**
     * ```
     * class defines the class of the nft type.
     * ```
     *
     * `.cosmos.nft.v1beta1.Class class = 1 [json_name = "class"];`
     * @return Whether the class field is set.
     */
    public fun hasClass_(): kotlin.Boolean {
      return _builder.hasClass_()
    }

    public val QueryClassResponseKt.Dsl.class_OrNull: cosmos.nft.v1beta1.Nft.Class?
      get() = _builder.class_OrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse.copy(block: `cosmos.nft.v1beta1`.QueryClassResponseKt.Dsl.() -> kotlin.Unit): cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponse =
  `cosmos.nft.v1beta1`.QueryClassResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.nft.v1beta1.QueryOuterClass.QueryClassResponseOrBuilder.class_OrNull: cosmos.nft.v1beta1.Nft.Class?
  get() = if (hasClass_()) getClass_() else null

