// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/nft/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.nft.v1beta1;

@kotlin.jvm.JvmName("-initializequeryNFTsRequest")
public inline fun queryNFTsRequest(block: cosmos.nft.v1beta1.QueryNFTsRequestKt.Dsl.() -> kotlin.Unit): cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest =
  cosmos.nft.v1beta1.QueryNFTsRequestKt.Dsl._create(cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryNFTstRequest is the request type for the Query/NFTs RPC method
 * ```
 *
 * Protobuf type `cosmos.nft.v1beta1.QueryNFTsRequest`
 */
public object QueryNFTsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest = _builder.build()

    /**
     * ```
     * class_id associated with the nft
     * ```
     *
     * `string class_id = 1 [json_name = "classId"];`
     */
    public var classId: kotlin.String
      @JvmName("getClassId")
      get() = _builder.classId
      @JvmName("setClassId")
      set(value) {
        _builder.classId = value
      }
    /**
     * ```
     * class_id associated with the nft
     * ```
     *
     * `string class_id = 1 [json_name = "classId"];`
     */
    public fun clearClassId() {
      _builder.clearClassId()
    }

    /**
     * ```
     * owner is the owner address of the nft
     * ```
     *
     * `string owner = 2 [json_name = "owner"];`
     */
    public var owner: kotlin.String
      @JvmName("getOwner")
      get() = _builder.owner
      @JvmName("setOwner")
      set(value) {
        _builder.owner = value
      }
    /**
     * ```
     * owner is the owner address of the nft
     * ```
     *
     * `string owner = 2 [json_name = "owner"];`
     */
    public fun clearOwner() {
      _builder.clearOwner()
    }

    /**
     * ```
     * pagination defines an optional pagination for the request.
     * ```
     *
     * `.cosmos.base.query.v1beta1.PageRequest pagination = 3 [json_name = "pagination"];`
     */
    public var pagination: cosmos.base.query.v1beta1.Pagination.PageRequest
      @JvmName("getPagination")
      get() = _builder.pagination
      @JvmName("setPagination")
      set(value) {
        _builder.pagination = value
      }
    /**
     * ```
     * pagination defines an optional pagination for the request.
     * ```
     *
     * `.cosmos.base.query.v1beta1.PageRequest pagination = 3 [json_name = "pagination"];`
     */
    public fun clearPagination() {
      _builder.clearPagination()
    }
    /**
     * ```
     * pagination defines an optional pagination for the request.
     * ```
     *
     * `.cosmos.base.query.v1beta1.PageRequest pagination = 3 [json_name = "pagination"];`
     * @return Whether the pagination field is set.
     */
    public fun hasPagination(): kotlin.Boolean {
      return _builder.hasPagination()
    }

    public val QueryNFTsRequestKt.Dsl.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
      get() = _builder.paginationOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest.copy(block: `cosmos.nft.v1beta1`.QueryNFTsRequestKt.Dsl.() -> kotlin.Unit): cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequest =
  `cosmos.nft.v1beta1`.QueryNFTsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.nft.v1beta1.QueryOuterClass.QueryNFTsRequestOrBuilder.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
  get() = if (hasPagination()) getPagination() else null

