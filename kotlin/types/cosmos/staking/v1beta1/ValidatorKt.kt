// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/staking/v1beta1/staking.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.staking.v1beta1;

@kotlin.jvm.JvmName("-initializevalidator")
public inline fun validator(block: cosmos.staking.v1beta1.ValidatorKt.Dsl.() -> kotlin.Unit): cosmos.staking.v1beta1.Staking.Validator =
  cosmos.staking.v1beta1.ValidatorKt.Dsl._create(cosmos.staking.v1beta1.Staking.Validator.newBuilder()).apply { block() }._build()
/**
 * ```
 * Validator defines a validator, together with the total amount of the
 * Validator's bond shares and their exchange rate to coins. Slashing results in
 * a decrease in the exchange rate, allowing correct calculation of future
 * undelegations without iterating over delegators. When coins are delegated to
 * this validator, the validator is credited with a delegation whose number of
 * bond shares is based on the amount of coins delegated divided by the current
 * exchange rate. Voting power can be calculated as total bonded shares
 * multiplied by exchange rate.
 * ```
 *
 * Protobuf type `cosmos.staking.v1beta1.Validator`
 */
public object ValidatorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.staking.v1beta1.Staking.Validator.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.staking.v1beta1.Staking.Validator.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.staking.v1beta1.Staking.Validator = _builder.build()

    /**
     * ```
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * ```
     *
     * `string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var operatorAddress: kotlin.String
      @JvmName("getOperatorAddress")
      get() = _builder.operatorAddress
      @JvmName("setOperatorAddress")
      set(value) {
        _builder.operatorAddress = value
      }
    /**
     * ```
     * operator_address defines the address of the validator's operator; bech encoded in JSON.
     * ```
     *
     * `string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearOperatorAddress() {
      _builder.clearOperatorAddress()
    }

    /**
     * ```
     * consensus_pubkey is the consensus public key of the validator, as a Protobuf Any.
     * ```
     *
     * `.google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];`
     */
    public var consensusPubkey: com.google.protobuf.Any
      @JvmName("getConsensusPubkey")
      get() = _builder.consensusPubkey
      @JvmName("setConsensusPubkey")
      set(value) {
        _builder.consensusPubkey = value
      }
    /**
     * ```
     * consensus_pubkey is the consensus public key of the validator, as a Protobuf Any.
     * ```
     *
     * `.google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];`
     */
    public fun clearConsensusPubkey() {
      _builder.clearConsensusPubkey()
    }
    /**
     * ```
     * consensus_pubkey is the consensus public key of the validator, as a Protobuf Any.
     * ```
     *
     * `.google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];`
     * @return Whether the consensusPubkey field is set.
     */
    public fun hasConsensusPubkey(): kotlin.Boolean {
      return _builder.hasConsensusPubkey()
    }

    public val ValidatorKt.Dsl.consensusPubkeyOrNull: com.google.protobuf.Any?
      get() = _builder.consensusPubkeyOrNull

    /**
     * ```
     * jailed defined whether the validator has been jailed from bonded status or not.
     * ```
     *
     * `bool jailed = 3 [json_name = "jailed"];`
     */
    public var jailed: kotlin.Boolean
      @JvmName("getJailed")
      get() = _builder.jailed
      @JvmName("setJailed")
      set(value) {
        _builder.jailed = value
      }
    /**
     * ```
     * jailed defined whether the validator has been jailed from bonded status or not.
     * ```
     *
     * `bool jailed = 3 [json_name = "jailed"];`
     */
    public fun clearJailed() {
      _builder.clearJailed()
    }

    /**
     * ```
     * status is the validator status (bonded/unbonding/unbonded).
     * ```
     *
     * `.cosmos.staking.v1beta1.BondStatus status = 4 [json_name = "status"];`
     */
    public var status: cosmos.staking.v1beta1.Staking.BondStatus
      @JvmName("getStatus")
      get() = _builder.status
      @JvmName("setStatus")
      set(value) {
        _builder.status = value
      }
    public var statusValue: kotlin.Int
      @JvmName("getStatusValue")
      get() = _builder.statusValue
      @JvmName("setStatusValue")
      set(value) {
        _builder.statusValue = value
      }
    /**
     * ```
     * status is the validator status (bonded/unbonding/unbonded).
     * ```
     *
     * `.cosmos.staking.v1beta1.BondStatus status = 4 [json_name = "status"];`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * tokens define the delegated tokens (incl. self-delegation).
     * ```
     *
     * `string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public var tokens: kotlin.String
      @JvmName("getTokens")
      get() = _builder.tokens
      @JvmName("setTokens")
      set(value) {
        _builder.tokens = value
      }
    /**
     * ```
     * tokens define the delegated tokens (incl. self-delegation).
     * ```
     *
     * `string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public fun clearTokens() {
      _builder.clearTokens()
    }

    /**
     * ```
     * delegator_shares defines total shares issued to a validator's delegators.
     * ```
     *
     * `string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];`
     */
    public var delegatorShares: kotlin.String
      @JvmName("getDelegatorShares")
      get() = _builder.delegatorShares
      @JvmName("setDelegatorShares")
      set(value) {
        _builder.delegatorShares = value
      }
    /**
     * ```
     * delegator_shares defines total shares issued to a validator's delegators.
     * ```
     *
     * `string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];`
     */
    public fun clearDelegatorShares() {
      _builder.clearDelegatorShares()
    }

    /**
     * ```
     * description defines the description terms for the validator.
     * ```
     *
     * `.cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var description: cosmos.staking.v1beta1.Staking.Description
      @JvmName("getDescription")
      get() = _builder.description
      @JvmName("setDescription")
      set(value) {
        _builder.description = value
      }
    /**
     * ```
     * description defines the description terms for the validator.
     * ```
     *
     * `.cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }
    /**
     * ```
     * description defines the description terms for the validator.
     * ```
     *
     * `.cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the description field is set.
     */
    public fun hasDescription(): kotlin.Boolean {
      return _builder.hasDescription()
    }

    public val ValidatorKt.Dsl.descriptionOrNull: cosmos.staking.v1beta1.Staking.Description?
      get() = _builder.descriptionOrNull

    /**
     * ```
     * unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
     * ```
     *
     * `int64 unbonding_height = 8 [json_name = "unbondingHeight"];`
     */
    public var unbondingHeight: kotlin.Long
      @JvmName("getUnbondingHeight")
      get() = _builder.unbondingHeight
      @JvmName("setUnbondingHeight")
      set(value) {
        _builder.unbondingHeight = value
      }
    /**
     * ```
     * unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
     * ```
     *
     * `int64 unbonding_height = 8 [json_name = "unbondingHeight"];`
     */
    public fun clearUnbondingHeight() {
      _builder.clearUnbondingHeight()
    }

    /**
     * ```
     * unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
     * ```
     *
     * `.google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     */
    public var unbondingTime: com.google.protobuf.Timestamp
      @JvmName("getUnbondingTime")
      get() = _builder.unbondingTime
      @JvmName("setUnbondingTime")
      set(value) {
        _builder.unbondingTime = value
      }
    /**
     * ```
     * unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
     * ```
     *
     * `.google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     */
    public fun clearUnbondingTime() {
      _builder.clearUnbondingTime()
    }
    /**
     * ```
     * unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
     * ```
     *
     * `.google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     * @return Whether the unbondingTime field is set.
     */
    public fun hasUnbondingTime(): kotlin.Boolean {
      return _builder.hasUnbondingTime()
    }

    public val ValidatorKt.Dsl.unbondingTimeOrNull: com.google.protobuf.Timestamp?
      get() = _builder.unbondingTimeOrNull

    /**
     * ```
     * commission defines the commission parameters.
     * ```
     *
     * `.cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var commission: cosmos.staking.v1beta1.Staking.Commission
      @JvmName("getCommission")
      get() = _builder.commission
      @JvmName("setCommission")
      set(value) {
        _builder.commission = value
      }
    /**
     * ```
     * commission defines the commission parameters.
     * ```
     *
     * `.cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearCommission() {
      _builder.clearCommission()
    }
    /**
     * ```
     * commission defines the commission parameters.
     * ```
     *
     * `.cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the commission field is set.
     */
    public fun hasCommission(): kotlin.Boolean {
      return _builder.hasCommission()
    }

    public val ValidatorKt.Dsl.commissionOrNull: cosmos.staking.v1beta1.Staking.Commission?
      get() = _builder.commissionOrNull

    /**
     * ```
     * min_self_delegation is the validator's self declared minimum self delegation.
     * ```
     *
     * `string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public var minSelfDelegation: kotlin.String
      @JvmName("getMinSelfDelegation")
      get() = _builder.minSelfDelegation
      @JvmName("setMinSelfDelegation")
      set(value) {
        _builder.minSelfDelegation = value
      }
    /**
     * ```
     * min_self_delegation is the validator's self declared minimum self delegation.
     * ```
     *
     * `string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];`
     */
    public fun clearMinSelfDelegation() {
      _builder.clearMinSelfDelegation()
    }

    /**
     * ```
     * strictly positive if this validator's unbonding has been stopped by external modules
     * ```
     *
     * `int64 unbonding_on_hold_ref_count = 12 [json_name = "unbondingOnHoldRefCount"];`
     */
    public var unbondingOnHoldRefCount: kotlin.Long
      @JvmName("getUnbondingOnHoldRefCount")
      get() = _builder.unbondingOnHoldRefCount
      @JvmName("setUnbondingOnHoldRefCount")
      set(value) {
        _builder.unbondingOnHoldRefCount = value
      }
    /**
     * ```
     * strictly positive if this validator's unbonding has been stopped by external modules
     * ```
     *
     * `int64 unbonding_on_hold_ref_count = 12 [json_name = "unbondingOnHoldRefCount"];`
     */
    public fun clearUnbondingOnHoldRefCount() {
      _builder.clearUnbondingOnHoldRefCount()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UnbondingIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     */
     public val unbondingIds: com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.unbondingIdsList
      )
    /**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     * @param value The unbondingIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUnbondingIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>.add(value: kotlin.Long) {
      _builder.addUnbondingIds(value)
    }/**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     * @param value The unbondingIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUnbondingIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>.plusAssign(value: kotlin.Long) {
      add(value)
    }/**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     * @param values The unbondingIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUnbondingIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Long>) {
      _builder.addAllUnbondingIds(values)
    }/**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     * @param values The unbondingIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUnbondingIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Long>) {
      addAll(values)
    }/**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     * @param index The index to set the value at.
     * @param value The unbondingIds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUnbondingIds")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>.set(index: kotlin.Int, value: kotlin.Long) {
      _builder.setUnbondingIds(index, value)
    }/**
     * ```
     * list of unbonding ids, each uniquely identifing an unbonding of this validator
     * ```
     *
     * `repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUnbondingIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Long, UnbondingIdsProxy>.clear() {
      _builder.clearUnbondingIds()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.staking.v1beta1.Staking.Validator.copy(block: `cosmos.staking.v1beta1`.ValidatorKt.Dsl.() -> kotlin.Unit): cosmos.staking.v1beta1.Staking.Validator =
  `cosmos.staking.v1beta1`.ValidatorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.staking.v1beta1.Staking.ValidatorOrBuilder.consensusPubkeyOrNull: com.google.protobuf.Any?
  get() = if (hasConsensusPubkey()) getConsensusPubkey() else null

public val cosmos.staking.v1beta1.Staking.ValidatorOrBuilder.descriptionOrNull: cosmos.staking.v1beta1.Staking.Description?
  get() = if (hasDescription()) getDescription() else null

public val cosmos.staking.v1beta1.Staking.ValidatorOrBuilder.unbondingTimeOrNull: com.google.protobuf.Timestamp?
  get() = if (hasUnbondingTime()) getUnbondingTime() else null

public val cosmos.staking.v1beta1.Staking.ValidatorOrBuilder.commissionOrNull: cosmos.staking.v1beta1.Staking.Commission?
  get() = if (hasCommission()) getCommission() else null

