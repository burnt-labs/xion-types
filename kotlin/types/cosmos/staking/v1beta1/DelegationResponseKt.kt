// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/staking/v1beta1/staking.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.staking.v1beta1;

@kotlin.jvm.JvmName("-initializedelegationResponse")
public inline fun delegationResponse(block: cosmos.staking.v1beta1.DelegationResponseKt.Dsl.() -> kotlin.Unit): cosmos.staking.v1beta1.Staking.DelegationResponse =
  cosmos.staking.v1beta1.DelegationResponseKt.Dsl._create(cosmos.staking.v1beta1.Staking.DelegationResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * DelegationResponse is equivalent to Delegation except that it contains a
 * balance in addition to shares which is more suitable for client responses.
 * ```
 *
 * Protobuf type `cosmos.staking.v1beta1.DelegationResponse`
 */
public object DelegationResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.staking.v1beta1.Staking.DelegationResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.staking.v1beta1.Staking.DelegationResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.staking.v1beta1.Staking.DelegationResponse = _builder.build()

    /**
     * `.cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var delegation: cosmos.staking.v1beta1.Staking.Delegation
      @JvmName("getDelegation")
      get() = _builder.delegation
      @JvmName("setDelegation")
      set(value) {
        _builder.delegation = value
      }
    /**
     * `.cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearDelegation() {
      _builder.clearDelegation()
    }
    /**
     * `.cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the delegation field is set.
     */
    public fun hasDelegation(): kotlin.Boolean {
      return _builder.hasDelegation()
    }

    public val DelegationResponseKt.Dsl.delegationOrNull: cosmos.staking.v1beta1.Staking.Delegation?
      get() = _builder.delegationOrNull

    /**
     * `.cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var balance: cosmos.base.v1beta1.CoinOuterClass.Coin
      @JvmName("getBalance")
      get() = _builder.balance
      @JvmName("setBalance")
      set(value) {
        _builder.balance = value
      }
    /**
     * `.cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearBalance() {
      _builder.clearBalance()
    }
    /**
     * `.cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the balance field is set.
     */
    public fun hasBalance(): kotlin.Boolean {
      return _builder.hasBalance()
    }

    public val DelegationResponseKt.Dsl.balanceOrNull: cosmos.base.v1beta1.CoinOuterClass.Coin?
      get() = _builder.balanceOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.staking.v1beta1.Staking.DelegationResponse.copy(block: `cosmos.staking.v1beta1`.DelegationResponseKt.Dsl.() -> kotlin.Unit): cosmos.staking.v1beta1.Staking.DelegationResponse =
  `cosmos.staking.v1beta1`.DelegationResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.staking.v1beta1.Staking.DelegationResponseOrBuilder.delegationOrNull: cosmos.staking.v1beta1.Staking.Delegation?
  get() = if (hasDelegation()) getDelegation() else null

public val cosmos.staking.v1beta1.Staking.DelegationResponseOrBuilder.balanceOrNull: cosmos.base.v1beta1.CoinOuterClass.Coin?
  get() = if (hasBalance()) getBalance() else null

