// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/epochs/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.epochs.v1beta1;

@kotlin.jvm.JvmName("-initializequeryCurrentEpochRequest")
public inline fun queryCurrentEpochRequest(block: cosmos.epochs.v1beta1.QueryCurrentEpochRequestKt.Dsl.() -> kotlin.Unit): cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest =
  cosmos.epochs.v1beta1.QueryCurrentEpochRequestKt.Dsl._create(cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryCurrentEpochRequest defines the gRPC request structure for
 * querying an epoch by its identifier.
 * ```
 *
 * Protobuf type `cosmos.epochs.v1beta1.QueryCurrentEpochRequest`
 */
public object QueryCurrentEpochRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest = _builder.build()

    /**
     * `string identifier = 1 [json_name = "identifier"];`
     */
    public var identifier: kotlin.String
      @JvmName("getIdentifier")
      get() = _builder.identifier
      @JvmName("setIdentifier")
      set(value) {
        _builder.identifier = value
      }
    /**
     * `string identifier = 1 [json_name = "identifier"];`
     */
    public fun clearIdentifier() {
      _builder.clearIdentifier()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest.copy(block: `cosmos.epochs.v1beta1`.QueryCurrentEpochRequestKt.Dsl.() -> kotlin.Unit): cosmos.epochs.v1beta1.QueryOuterClass.QueryCurrentEpochRequest =
  `cosmos.epochs.v1beta1`.QueryCurrentEpochRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

