// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/evidence/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.evidence.v1beta1;

@kotlin.jvm.JvmName("-initializemsgSubmitEvidenceResponse")
public inline fun msgSubmitEvidenceResponse(block: cosmos.evidence.v1beta1.MsgSubmitEvidenceResponseKt.Dsl.() -> kotlin.Unit): cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse =
  cosmos.evidence.v1beta1.MsgSubmitEvidenceResponseKt.Dsl._create(cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response type.
 * ```
 *
 * Protobuf type `cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse`
 */
public object MsgSubmitEvidenceResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse = _builder.build()

    /**
     * ```
     * hash defines the hash of the evidence.
     * ```
     *
     * `bytes hash = 4 [json_name = "hash"];`
     */
    public var hash: com.google.protobuf.ByteString
      @JvmName("getHash")
      get() = _builder.hash
      @JvmName("setHash")
      set(value) {
        _builder.hash = value
      }
    /**
     * ```
     * hash defines the hash of the evidence.
     * ```
     *
     * `bytes hash = 4 [json_name = "hash"];`
     */
    public fun clearHash() {
      _builder.clearHash()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse.copy(block: `cosmos.evidence.v1beta1`.MsgSubmitEvidenceResponseKt.Dsl.() -> kotlin.Unit): cosmos.evidence.v1beta1.Tx.MsgSubmitEvidenceResponse =
  `cosmos.evidence.v1beta1`.MsgSubmitEvidenceResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

