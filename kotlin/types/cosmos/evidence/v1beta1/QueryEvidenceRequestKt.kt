// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/evidence/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.evidence.v1beta1;

@kotlin.jvm.JvmName("-initializequeryEvidenceRequest")
public inline fun queryEvidenceRequest(block: cosmos.evidence.v1beta1.QueryEvidenceRequestKt.Dsl.() -> kotlin.Unit): cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest =
  cosmos.evidence.v1beta1.QueryEvidenceRequestKt.Dsl._create(cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryEvidenceRequest is the request type for the Query/Evidence RPC method.
 * ```
 *
 * Protobuf type `cosmos.evidence.v1beta1.QueryEvidenceRequest`
 */
public object QueryEvidenceRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest = _builder.build()

    /**
     * ```
     * evidence_hash defines the hash of the requested evidence.
     * Deprecated: Use hash, a HEX encoded string, instead.
     * ```
     *
     * `bytes evidence_hash = 1 [json_name = "evidenceHash", deprecated = true];`
     */
    @kotlin.Deprecated(message = "Field evidenceHash is deprecated") public var evidenceHash: com.google.protobuf.ByteString
      @JvmName("getEvidenceHash")
      get() = _builder.evidenceHash
      @JvmName("setEvidenceHash")
      set(value) {
        _builder.evidenceHash = value
      }
    /**
     * ```
     * evidence_hash defines the hash of the requested evidence.
     * Deprecated: Use hash, a HEX encoded string, instead.
     * ```
     *
     * `bytes evidence_hash = 1 [json_name = "evidenceHash", deprecated = true];`
     */
    public fun clearEvidenceHash() {
      _builder.clearEvidenceHash()
    }

    /**
     * ```
     * hash defines the evidence hash of the requested evidence.
     * ```
     *
     * `string hash = 2 [json_name = "hash", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];`
     */
    public var hash: kotlin.String
      @JvmName("getHash")
      get() = _builder.hash
      @JvmName("setHash")
      set(value) {
        _builder.hash = value
      }
    /**
     * ```
     * hash defines the evidence hash of the requested evidence.
     * ```
     *
     * `string hash = 2 [json_name = "hash", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];`
     */
    public fun clearHash() {
      _builder.clearHash()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest.copy(block: `cosmos.evidence.v1beta1`.QueryEvidenceRequestKt.Dsl.() -> kotlin.Unit): cosmos.evidence.v1beta1.QueryOuterClass.QueryEvidenceRequest =
  `cosmos.evidence.v1beta1`.QueryEvidenceRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

