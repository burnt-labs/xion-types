// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/store/streaming/abci/grpc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.store.streaming.abci;

@kotlin.jvm.JvmName("-initializelistenCommitRequest")
public inline fun listenCommitRequest(block: cosmos.store.streaming.abci.ListenCommitRequestKt.Dsl.() -> kotlin.Unit): cosmos.store.streaming.abci.Grpc.ListenCommitRequest =
  cosmos.store.streaming.abci.ListenCommitRequestKt.Dsl._create(cosmos.store.streaming.abci.Grpc.ListenCommitRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * ListenCommitRequest is the request type for the ListenCommit RPC method
 * ```
 *
 * Protobuf type `cosmos.store.streaming.abci.ListenCommitRequest`
 */
public object ListenCommitRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.store.streaming.abci.Grpc.ListenCommitRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.store.streaming.abci.Grpc.ListenCommitRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.store.streaming.abci.Grpc.ListenCommitRequest = _builder.build()

    /**
     * ```
     * explicitly pass in block height as ResponseCommit does not contain this info
     * ```
     *
     * `int64 block_height = 1 [json_name = "blockHeight"];`
     */
    public var blockHeight: kotlin.Long
      @JvmName("getBlockHeight")
      get() = _builder.blockHeight
      @JvmName("setBlockHeight")
      set(value) {
        _builder.blockHeight = value
      }
    /**
     * ```
     * explicitly pass in block height as ResponseCommit does not contain this info
     * ```
     *
     * `int64 block_height = 1 [json_name = "blockHeight"];`
     */
    public fun clearBlockHeight() {
      _builder.clearBlockHeight()
    }

    /**
     * `.tendermint.abci.ResponseCommit res = 2 [json_name = "res"];`
     */
    public var res: tendermint.abci.Types.ResponseCommit
      @JvmName("getRes")
      get() = _builder.res
      @JvmName("setRes")
      set(value) {
        _builder.res = value
      }
    /**
     * `.tendermint.abci.ResponseCommit res = 2 [json_name = "res"];`
     */
    public fun clearRes() {
      _builder.clearRes()
    }
    /**
     * `.tendermint.abci.ResponseCommit res = 2 [json_name = "res"];`
     * @return Whether the res field is set.
     */
    public fun hasRes(): kotlin.Boolean {
      return _builder.hasRes()
    }

    public val ListenCommitRequestKt.Dsl.resOrNull: tendermint.abci.Types.ResponseCommit?
      get() = _builder.resOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ChangeSetProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     */
     public val changeSet: com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.changeSetList
      )
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     * @param value The changeSet to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addChangeSet")
    public fun com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>.add(value: cosmos.store.v1beta1.Listening.StoreKVPair) {
      _builder.addChangeSet(value)
    }
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     * @param value The changeSet to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignChangeSet")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>.plusAssign(value: cosmos.store.v1beta1.Listening.StoreKVPair) {
      add(value)
    }
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     * @param values The changeSet to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllChangeSet")
    public fun com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>.addAll(values: kotlin.collections.Iterable<cosmos.store.v1beta1.Listening.StoreKVPair>) {
      _builder.addAllChangeSet(values)
    }
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     * @param values The changeSet to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllChangeSet")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.store.v1beta1.Listening.StoreKVPair>) {
      addAll(values)
    }
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     * @param index The index to set the value at.
     * @param value The changeSet to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setChangeSet")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>.set(index: kotlin.Int, value: cosmos.store.v1beta1.Listening.StoreKVPair) {
      _builder.setChangeSet(index, value)
    }
    /**
     * `repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearChangeSet")
    public fun com.google.protobuf.kotlin.DslList<cosmos.store.v1beta1.Listening.StoreKVPair, ChangeSetProxy>.clear() {
      _builder.clearChangeSet()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.store.streaming.abci.Grpc.ListenCommitRequest.copy(block: `cosmos.store.streaming.abci`.ListenCommitRequestKt.Dsl.() -> kotlin.Unit): cosmos.store.streaming.abci.Grpc.ListenCommitRequest =
  `cosmos.store.streaming.abci`.ListenCommitRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.store.streaming.abci.Grpc.ListenCommitRequestOrBuilder.resOrNull: tendermint.abci.Types.ResponseCommit?
  get() = if (hasRes()) getRes() else null

