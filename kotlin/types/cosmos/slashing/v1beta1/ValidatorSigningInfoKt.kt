// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/slashing/v1beta1/slashing.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.slashing.v1beta1;

@kotlin.jvm.JvmName("-initializevalidatorSigningInfo")
public inline fun validatorSigningInfo(block: cosmos.slashing.v1beta1.ValidatorSigningInfoKt.Dsl.() -> kotlin.Unit): cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo =
  cosmos.slashing.v1beta1.ValidatorSigningInfoKt.Dsl._create(cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * ValidatorSigningInfo defines a validator's signing info for monitoring their
 * liveness activity.
 * ```
 *
 * Protobuf type `cosmos.slashing.v1beta1.ValidatorSigningInfo`
 */
public object ValidatorSigningInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo = _builder.build()

    /**
     * `string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];`
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.address
      @JvmName("setAddress")
      set(value) {
        _builder.address = value
      }
    /**
     * `string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];`
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * ```
     * Height at which validator was first a candidate OR was un-jailed
     * ```
     *
     * `int64 start_height = 2 [json_name = "startHeight"];`
     */
    public var startHeight: kotlin.Long
      @JvmName("getStartHeight")
      get() = _builder.startHeight
      @JvmName("setStartHeight")
      set(value) {
        _builder.startHeight = value
      }
    /**
     * ```
     * Height at which validator was first a candidate OR was un-jailed
     * ```
     *
     * `int64 start_height = 2 [json_name = "startHeight"];`
     */
    public fun clearStartHeight() {
      _builder.clearStartHeight()
    }

    /**
     * ```
     * Index which is incremented every time a validator is bonded in a block and
     * _may_ have signed a pre-commit or not. This in conjunction with the
     * signed_blocks_window param determines the index in the missed block bitmap.
     * ```
     *
     * `int64 index_offset = 3 [json_name = "indexOffset"];`
     */
    public var indexOffset: kotlin.Long
      @JvmName("getIndexOffset")
      get() = _builder.indexOffset
      @JvmName("setIndexOffset")
      set(value) {
        _builder.indexOffset = value
      }
    /**
     * ```
     * Index which is incremented every time a validator is bonded in a block and
     * _may_ have signed a pre-commit or not. This in conjunction with the
     * signed_blocks_window param determines the index in the missed block bitmap.
     * ```
     *
     * `int64 index_offset = 3 [json_name = "indexOffset"];`
     */
    public fun clearIndexOffset() {
      _builder.clearIndexOffset()
    }

    /**
     * ```
     * Timestamp until which the validator is jailed due to liveness downtime.
     * ```
     *
     * `.google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     */
    public var jailedUntil: com.google.protobuf.Timestamp
      @JvmName("getJailedUntil")
      get() = _builder.jailedUntil
      @JvmName("setJailedUntil")
      set(value) {
        _builder.jailedUntil = value
      }
    /**
     * ```
     * Timestamp until which the validator is jailed due to liveness downtime.
     * ```
     *
     * `.google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     */
    public fun clearJailedUntil() {
      _builder.clearJailedUntil()
    }
    /**
     * ```
     * Timestamp until which the validator is jailed due to liveness downtime.
     * ```
     *
     * `.google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     * @return Whether the jailedUntil field is set.
     */
    public fun hasJailedUntil(): kotlin.Boolean {
      return _builder.hasJailedUntil()
    }

    public val ValidatorSigningInfoKt.Dsl.jailedUntilOrNull: com.google.protobuf.Timestamp?
      get() = _builder.jailedUntilOrNull

    /**
     * ```
     * Whether or not a validator has been tombstoned (killed out of validator
     * set). It is set once the validator commits an equivocation or for any other
     * configured misbehavior.
     * ```
     *
     * `bool tombstoned = 5 [json_name = "tombstoned"];`
     */
    public var tombstoned: kotlin.Boolean
      @JvmName("getTombstoned")
      get() = _builder.tombstoned
      @JvmName("setTombstoned")
      set(value) {
        _builder.tombstoned = value
      }
    /**
     * ```
     * Whether or not a validator has been tombstoned (killed out of validator
     * set). It is set once the validator commits an equivocation or for any other
     * configured misbehavior.
     * ```
     *
     * `bool tombstoned = 5 [json_name = "tombstoned"];`
     */
    public fun clearTombstoned() {
      _builder.clearTombstoned()
    }

    /**
     * ```
     * A counter of missed (unsigned) blocks. It is used to avoid unnecessary
     * reads in the missed block bitmap.
     * ```
     *
     * `int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];`
     */
    public var missedBlocksCounter: kotlin.Long
      @JvmName("getMissedBlocksCounter")
      get() = _builder.missedBlocksCounter
      @JvmName("setMissedBlocksCounter")
      set(value) {
        _builder.missedBlocksCounter = value
      }
    /**
     * ```
     * A counter of missed (unsigned) blocks. It is used to avoid unnecessary
     * reads in the missed block bitmap.
     * ```
     *
     * `int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];`
     */
    public fun clearMissedBlocksCounter() {
      _builder.clearMissedBlocksCounter()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo.copy(block: `cosmos.slashing.v1beta1`.ValidatorSigningInfoKt.Dsl.() -> kotlin.Unit): cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfo =
  `cosmos.slashing.v1beta1`.ValidatorSigningInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.slashing.v1beta1.Slashing.ValidatorSigningInfoOrBuilder.jailedUntilOrNull: com.google.protobuf.Timestamp?
  get() = if (hasJailedUntil()) getJailedUntil() else null

