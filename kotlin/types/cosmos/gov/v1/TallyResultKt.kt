// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/gov/v1/gov.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.gov.v1;

@kotlin.jvm.JvmName("-initializetallyResult")
public inline fun tallyResult(block: cosmos.gov.v1.TallyResultKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1.Gov.TallyResult =
  cosmos.gov.v1.TallyResultKt.Dsl._create(cosmos.gov.v1.Gov.TallyResult.newBuilder()).apply { block() }._build()
/**
 * ```
 * TallyResult defines a standard tally for a governance proposal.
 * ```
 *
 * Protobuf type `cosmos.gov.v1.TallyResult`
 */
public object TallyResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.gov.v1.Gov.TallyResult.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.gov.v1.Gov.TallyResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.gov.v1.Gov.TallyResult = _builder.build()

    /**
     * ```
     * yes_count is the number of yes votes on a proposal.
     * ```
     *
     * `string yes_count = 1 [json_name = "yesCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public var yesCount: kotlin.String
      @JvmName("getYesCount")
      get() = _builder.yesCount
      @JvmName("setYesCount")
      set(value) {
        _builder.yesCount = value
      }
    /**
     * ```
     * yes_count is the number of yes votes on a proposal.
     * ```
     *
     * `string yes_count = 1 [json_name = "yesCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public fun clearYesCount() {
      _builder.clearYesCount()
    }

    /**
     * ```
     * abstain_count is the number of abstain votes on a proposal.
     * ```
     *
     * `string abstain_count = 2 [json_name = "abstainCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public var abstainCount: kotlin.String
      @JvmName("getAbstainCount")
      get() = _builder.abstainCount
      @JvmName("setAbstainCount")
      set(value) {
        _builder.abstainCount = value
      }
    /**
     * ```
     * abstain_count is the number of abstain votes on a proposal.
     * ```
     *
     * `string abstain_count = 2 [json_name = "abstainCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public fun clearAbstainCount() {
      _builder.clearAbstainCount()
    }

    /**
     * ```
     * no_count is the number of no votes on a proposal.
     * ```
     *
     * `string no_count = 3 [json_name = "noCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public var noCount: kotlin.String
      @JvmName("getNoCount")
      get() = _builder.noCount
      @JvmName("setNoCount")
      set(value) {
        _builder.noCount = value
      }
    /**
     * ```
     * no_count is the number of no votes on a proposal.
     * ```
     *
     * `string no_count = 3 [json_name = "noCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public fun clearNoCount() {
      _builder.clearNoCount()
    }

    /**
     * ```
     * no_with_veto_count is the number of no with veto votes on a proposal.
     * ```
     *
     * `string no_with_veto_count = 4 [json_name = "noWithVetoCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public var noWithVetoCount: kotlin.String
      @JvmName("getNoWithVetoCount")
      get() = _builder.noWithVetoCount
      @JvmName("setNoWithVetoCount")
      set(value) {
        _builder.noWithVetoCount = value
      }
    /**
     * ```
     * no_with_veto_count is the number of no with veto votes on a proposal.
     * ```
     *
     * `string no_with_veto_count = 4 [json_name = "noWithVetoCount", (.cosmos_proto.scalar) = "cosmos.Int"];`
     */
    public fun clearNoWithVetoCount() {
      _builder.clearNoWithVetoCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.gov.v1.Gov.TallyResult.copy(block: `cosmos.gov.v1`.TallyResultKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1.Gov.TallyResult =
  `cosmos.gov.v1`.TallyResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

