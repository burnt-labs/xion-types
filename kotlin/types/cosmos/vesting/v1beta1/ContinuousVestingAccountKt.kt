// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/vesting/v1beta1/vesting.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.vesting.v1beta1;

@kotlin.jvm.JvmName("-initializecontinuousVestingAccount")
public inline fun continuousVestingAccount(block: cosmos.vesting.v1beta1.ContinuousVestingAccountKt.Dsl.() -> kotlin.Unit): cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount =
  cosmos.vesting.v1beta1.ContinuousVestingAccountKt.Dsl._create(cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.newBuilder()).apply { block() }._build()
/**
 * ```
 * ContinuousVestingAccount implements the VestingAccount interface. It
 * continuously vests by unlocking coins linearly with respect to time.
 * ```
 *
 * Protobuf type `cosmos.vesting.v1beta1.ContinuousVestingAccount`
 */
public object ContinuousVestingAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount = _builder.build()

    /**
     * `.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [json_name = "baseVestingAccount", (.gogoproto.embed) = true];`
     */
    public var baseVestingAccount: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount
      @JvmName("getBaseVestingAccount")
      get() = _builder.baseVestingAccount
      @JvmName("setBaseVestingAccount")
      set(value) {
        _builder.baseVestingAccount = value
      }
    /**
     * `.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [json_name = "baseVestingAccount", (.gogoproto.embed) = true];`
     */
    public fun clearBaseVestingAccount() {
      _builder.clearBaseVestingAccount()
    }
    /**
     * `.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [json_name = "baseVestingAccount", (.gogoproto.embed) = true];`
     * @return Whether the baseVestingAccount field is set.
     */
    public fun hasBaseVestingAccount(): kotlin.Boolean {
      return _builder.hasBaseVestingAccount()
    }

    public val ContinuousVestingAccountKt.Dsl.baseVestingAccountOrNull: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount?
      get() = _builder.baseVestingAccountOrNull

    /**
     * ```
     * Vesting start time, as unix timestamp (in seconds).
     * ```
     *
     * `int64 start_time = 2 [json_name = "startTime"];`
     */
    public var startTime: kotlin.Long
      @JvmName("getStartTime")
      get() = _builder.startTime
      @JvmName("setStartTime")
      set(value) {
        _builder.startTime = value
      }
    /**
     * ```
     * Vesting start time, as unix timestamp (in seconds).
     * ```
     *
     * `int64 start_time = 2 [json_name = "startTime"];`
     */
    public fun clearStartTime() {
      _builder.clearStartTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.copy(block: `cosmos.vesting.v1beta1`.ContinuousVestingAccountKt.Dsl.() -> kotlin.Unit): cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount =
  `cosmos.vesting.v1beta1`.ContinuousVestingAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccountOrBuilder.baseVestingAccountOrNull: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount?
  get() = if (hasBaseVestingAccount()) getBaseVestingAccount() else null

