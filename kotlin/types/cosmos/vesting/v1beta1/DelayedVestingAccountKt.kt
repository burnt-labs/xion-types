// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/vesting/v1beta1/vesting.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.vesting.v1beta1;

@kotlin.jvm.JvmName("-initializedelayedVestingAccount")
public inline fun delayedVestingAccount(block: cosmos.vesting.v1beta1.DelayedVestingAccountKt.Dsl.() -> kotlin.Unit): cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount =
  cosmos.vesting.v1beta1.DelayedVestingAccountKt.Dsl._create(cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount.newBuilder()).apply { block() }._build()
/**
 * ```
 * DelayedVestingAccount implements the VestingAccount interface. It vests all
 * coins after a specific time, but non prior. In other words, it keeps them
 * locked until a specified time.
 * ```
 *
 * Protobuf type `cosmos.vesting.v1beta1.DelayedVestingAccount`
 */
public object DelayedVestingAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount = _builder.build()

    /**
     * `.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [json_name = "baseVestingAccount", (.gogoproto.embed) = true];`
     */
    public var baseVestingAccount: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount
      @JvmName("getBaseVestingAccount")
      get() = _builder.baseVestingAccount
      @JvmName("setBaseVestingAccount")
      set(value) {
        _builder.baseVestingAccount = value
      }
    /**
     * `.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [json_name = "baseVestingAccount", (.gogoproto.embed) = true];`
     */
    public fun clearBaseVestingAccount() {
      _builder.clearBaseVestingAccount()
    }
    /**
     * `.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [json_name = "baseVestingAccount", (.gogoproto.embed) = true];`
     * @return Whether the baseVestingAccount field is set.
     */
    public fun hasBaseVestingAccount(): kotlin.Boolean {
      return _builder.hasBaseVestingAccount()
    }

    public val DelayedVestingAccountKt.Dsl.baseVestingAccountOrNull: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount?
      get() = _builder.baseVestingAccountOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount.copy(block: `cosmos.vesting.v1beta1`.DelayedVestingAccountKt.Dsl.() -> kotlin.Unit): cosmos.vesting.v1beta1.Vesting.DelayedVestingAccount =
  `cosmos.vesting.v1beta1`.DelayedVestingAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.vesting.v1beta1.Vesting.DelayedVestingAccountOrBuilder.baseVestingAccountOrNull: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount?
  get() = if (hasBaseVestingAccount()) getBaseVestingAccount() else null

