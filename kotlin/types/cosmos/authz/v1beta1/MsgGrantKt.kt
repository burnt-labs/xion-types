// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/authz/v1beta1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.authz.v1beta1;

@kotlin.jvm.JvmName("-initializemsgGrant")
public inline fun msgGrant(block: cosmos.authz.v1beta1.MsgGrantKt.Dsl.() -> kotlin.Unit): cosmos.authz.v1beta1.Tx.MsgGrant =
  cosmos.authz.v1beta1.MsgGrantKt.Dsl._create(cosmos.authz.v1beta1.Tx.MsgGrant.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgGrant is a request type for Grant method. It declares authorization to the grantee
 * on behalf of the granter with the provided expiration time.
 * ```
 *
 * Protobuf type `cosmos.authz.v1beta1.MsgGrant`
 */
public object MsgGrantKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.authz.v1beta1.Tx.MsgGrant.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.authz.v1beta1.Tx.MsgGrant.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.authz.v1beta1.Tx.MsgGrant = _builder.build()

    /**
     * `string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var granter: kotlin.String
      @JvmName("getGranter")
      get() = _builder.granter
      @JvmName("setGranter")
      set(value) {
        _builder.granter = value
      }
    /**
     * `string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearGranter() {
      _builder.clearGranter()
    }

    /**
     * `string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var grantee: kotlin.String
      @JvmName("getGrantee")
      get() = _builder.grantee
      @JvmName("setGrantee")
      set(value) {
        _builder.grantee = value
      }
    /**
     * `string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearGrantee() {
      _builder.clearGrantee()
    }

    /**
     * `.cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var grant: cosmos.authz.v1beta1.Authz.Grant
      @JvmName("getGrant")
      get() = _builder.grant
      @JvmName("setGrant")
      set(value) {
        _builder.grant = value
      }
    /**
     * `.cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearGrant() {
      _builder.clearGrant()
    }
    /**
     * `.cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the grant field is set.
     */
    public fun hasGrant(): kotlin.Boolean {
      return _builder.hasGrant()
    }

    public val MsgGrantKt.Dsl.grantOrNull: cosmos.authz.v1beta1.Authz.Grant?
      get() = _builder.grantOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.authz.v1beta1.Tx.MsgGrant.copy(block: `cosmos.authz.v1beta1`.MsgGrantKt.Dsl.() -> kotlin.Unit): cosmos.authz.v1beta1.Tx.MsgGrant =
  `cosmos.authz.v1beta1`.MsgGrantKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.authz.v1beta1.Tx.MsgGrantOrBuilder.grantOrNull: cosmos.authz.v1beta1.Authz.Grant?
  get() = if (hasGrant()) getGrant() else null

