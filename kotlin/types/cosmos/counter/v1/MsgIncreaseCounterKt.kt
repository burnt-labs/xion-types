// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/counter/v1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.counter.v1;

@kotlin.jvm.JvmName("-initializemsgIncreaseCounter")
public inline fun msgIncreaseCounter(block: cosmos.counter.v1.MsgIncreaseCounterKt.Dsl.() -> kotlin.Unit): cosmos.counter.v1.Tx.MsgIncreaseCounter =
  cosmos.counter.v1.MsgIncreaseCounterKt.Dsl._create(cosmos.counter.v1.Tx.MsgIncreaseCounter.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgIncreaseCounter defines a count Msg service counter.
 * ```
 *
 * Protobuf type `cosmos.counter.v1.MsgIncreaseCounter`
 */
public object MsgIncreaseCounterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.counter.v1.Tx.MsgIncreaseCounter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.counter.v1.Tx.MsgIncreaseCounter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.counter.v1.Tx.MsgIncreaseCounter = _builder.build()

    /**
     * ```
     * signer is the address that controls the module (defaults to x/gov unless overwritten).
     * ```
     *
     * `string signer = 1 [json_name = "signer", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var signer: kotlin.String
      @JvmName("getSigner")
      get() = _builder.signer
      @JvmName("setSigner")
      set(value) {
        _builder.signer = value
      }
    /**
     * ```
     * signer is the address that controls the module (defaults to x/gov unless overwritten).
     * ```
     *
     * `string signer = 1 [json_name = "signer", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearSigner() {
      _builder.clearSigner()
    }

    /**
     * ```
     * count is the number of times to increment the counter.
     * ```
     *
     * `int64 count = 2 [json_name = "count"];`
     */
    public var count: kotlin.Long
      @JvmName("getCount")
      get() = _builder.count
      @JvmName("setCount")
      set(value) {
        _builder.count = value
      }
    /**
     * ```
     * count is the number of times to increment the counter.
     * ```
     *
     * `int64 count = 2 [json_name = "count"];`
     */
    public fun clearCount() {
      _builder.clearCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.counter.v1.Tx.MsgIncreaseCounter.copy(block: `cosmos.counter.v1`.MsgIncreaseCounterKt.Dsl.() -> kotlin.Unit): cosmos.counter.v1.Tx.MsgIncreaseCounter =
  `cosmos.counter.v1`.MsgIncreaseCounterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

