// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializegetCodecDescriptorRequest")
public inline fun getCodecDescriptorRequest(block: cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequestKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest =
  cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequestKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * GetCodecDescriptorRequest is the request used for the GetCodecDescriptor RPC
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest`
 */
public object GetCodecDescriptorRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest.copy(block: `cosmos.base.reflection.v2alpha1`.GetCodecDescriptorRequestKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.GetCodecDescriptorRequest =
  `cosmos.base.reflection.v2alpha1`.GetCodecDescriptorRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

