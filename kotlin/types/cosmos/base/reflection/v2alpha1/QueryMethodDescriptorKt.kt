// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializequeryMethodDescriptor")
public inline fun queryMethodDescriptor(block: cosmos.base.reflection.v2alpha1.QueryMethodDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor =
  cosmos.base.reflection.v2alpha1.QueryMethodDescriptorKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryMethodDescriptor describes a queryable method of a query service
 * no other info is provided beside method name and tendermint queryable path
 * because it would be redundant with the grpc reflection service
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.QueryMethodDescriptor`
 */
public object QueryMethodDescriptorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor = _builder.build()

    /**
     * ```
     * name is the protobuf name (not fullname) of the method
     * ```
     *
     * `string name = 1 [json_name = "name"];`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.name
      @JvmName("setName")
      set(value) {
        _builder.name = value
      }
    /**
     * ```
     * name is the protobuf name (not fullname) of the method
     * ```
     *
     * `string name = 1 [json_name = "name"];`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * full_query_path is the path that can be used to query
     * this method via tendermint abci.Query
     * ```
     *
     * `string full_query_path = 2 [json_name = "fullQueryPath"];`
     */
    public var fullQueryPath: kotlin.String
      @JvmName("getFullQueryPath")
      get() = _builder.fullQueryPath
      @JvmName("setFullQueryPath")
      set(value) {
        _builder.fullQueryPath = value
      }
    /**
     * ```
     * full_query_path is the path that can be used to query
     * this method via tendermint abci.Query
     * ```
     *
     * `string full_query_path = 2 [json_name = "fullQueryPath"];`
     */
    public fun clearFullQueryPath() {
      _builder.clearFullQueryPath()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor.copy(block: `cosmos.base.reflection.v2alpha1`.QueryMethodDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor =
  `cosmos.base.reflection.v2alpha1`.QueryMethodDescriptorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

