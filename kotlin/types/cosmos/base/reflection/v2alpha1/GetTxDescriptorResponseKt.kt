// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializegetTxDescriptorResponse")
public inline fun getTxDescriptorResponse(block: cosmos.base.reflection.v2alpha1.GetTxDescriptorResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse =
  cosmos.base.reflection.v2alpha1.GetTxDescriptorResponseKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * GetTxDescriptorResponse is the response returned by the GetTxDescriptor RPC
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse`
 */
public object GetTxDescriptorResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse = _builder.build()

    /**
     * ```
     * tx provides information on msgs that can be forwarded to the application
     * alongside the accepted transaction protobuf type
     * ```
     *
     * `.cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];`
     */
    public var tx: cosmos.base.reflection.v2alpha1.Reflection.TxDescriptor
      @JvmName("getTx")
      get() = _builder.tx
      @JvmName("setTx")
      set(value) {
        _builder.tx = value
      }
    /**
     * ```
     * tx provides information on msgs that can be forwarded to the application
     * alongside the accepted transaction protobuf type
     * ```
     *
     * `.cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];`
     */
    public fun clearTx() {
      _builder.clearTx()
    }
    /**
     * ```
     * tx provides information on msgs that can be forwarded to the application
     * alongside the accepted transaction protobuf type
     * ```
     *
     * `.cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];`
     * @return Whether the tx field is set.
     */
    public fun hasTx(): kotlin.Boolean {
      return _builder.hasTx()
    }

    public val GetTxDescriptorResponseKt.Dsl.txOrNull: cosmos.base.reflection.v2alpha1.Reflection.TxDescriptor?
      get() = _builder.txOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse.copy(block: `cosmos.base.reflection.v2alpha1`.GetTxDescriptorResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponse =
  `cosmos.base.reflection.v2alpha1`.GetTxDescriptorResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.base.reflection.v2alpha1.Reflection.GetTxDescriptorResponseOrBuilder.txOrNull: cosmos.base.reflection.v2alpha1.Reflection.TxDescriptor?
  get() = if (hasTx()) getTx() else null

