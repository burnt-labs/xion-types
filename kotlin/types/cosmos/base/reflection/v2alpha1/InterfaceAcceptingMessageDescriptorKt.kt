// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializeinterfaceAcceptingMessageDescriptor")
public inline fun interfaceAcceptingMessageDescriptor(block: cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor =
  cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptorKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor.newBuilder()).apply { block() }._build()
/**
 * ```
 * InterfaceAcceptingMessageDescriptor describes a protobuf message which contains
 * an interface represented as a google.protobuf.Any
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor`
 */
public object InterfaceAcceptingMessageDescriptorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor = _builder.build()

    /**
     * ```
     * fullname is the protobuf fullname of the type containing the interface
     * ```
     *
     * `string fullname = 1 [json_name = "fullname"];`
     */
    public var fullname: kotlin.String
      @JvmName("getFullname")
      get() = _builder.fullname
      @JvmName("setFullname")
      set(value) {
        _builder.fullname = value
      }
    /**
     * ```
     * fullname is the protobuf fullname of the type containing the interface
     * ```
     *
     * `string fullname = 1 [json_name = "fullname"];`
     */
    public fun clearFullname() {
      _builder.clearFullname()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FieldDescriptorNamesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     * @return A list containing the fieldDescriptorNames.
     */
    public val fieldDescriptorNames: com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.fieldDescriptorNamesList
      )
    /**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     * @param value The fieldDescriptorNames to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFieldDescriptorNames")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>.add(value: kotlin.String) {
      _builder.addFieldDescriptorNames(value)
    }
    /**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     * @param value The fieldDescriptorNames to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFieldDescriptorNames")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     * @param values The fieldDescriptorNames to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFieldDescriptorNames")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllFieldDescriptorNames(values)
    }
    /**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     * @param values The fieldDescriptorNames to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFieldDescriptorNames")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     * @param index The index to set the value at.
     * @param value The fieldDescriptorNames to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFieldDescriptorNames")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setFieldDescriptorNames(index, value)
    }/**
     * ```
     * field_descriptor_names is a list of the protobuf name (not fullname) of the field
     * which contains the interface as google.protobuf.Any (the interface is the same, but
     * it can be in multiple fields of the same proto message)
     * ```
     *
     * `repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFieldDescriptorNames")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, FieldDescriptorNamesProxy>.clear() {
      _builder.clearFieldDescriptorNames()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor.copy(block: `cosmos.base.reflection.v2alpha1`.InterfaceAcceptingMessageDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.InterfaceAcceptingMessageDescriptor =
  `cosmos.base.reflection.v2alpha1`.InterfaceAcceptingMessageDescriptorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

