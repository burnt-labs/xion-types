// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializegetAuthnDescriptorResponse")
public inline fun getAuthnDescriptorResponse(block: cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse =
  cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponseKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * GetAuthnDescriptorResponse is the response returned by the GetAuthnDescriptor RPC
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse`
 */
public object GetAuthnDescriptorResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse = _builder.build()

    /**
     * ```
     * authn describes how to authenticate to the application when sending transactions
     * ```
     *
     * `.cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];`
     */
    public var authn: cosmos.base.reflection.v2alpha1.Reflection.AuthnDescriptor
      @JvmName("getAuthn")
      get() = _builder.authn
      @JvmName("setAuthn")
      set(value) {
        _builder.authn = value
      }
    /**
     * ```
     * authn describes how to authenticate to the application when sending transactions
     * ```
     *
     * `.cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];`
     */
    public fun clearAuthn() {
      _builder.clearAuthn()
    }
    /**
     * ```
     * authn describes how to authenticate to the application when sending transactions
     * ```
     *
     * `.cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];`
     * @return Whether the authn field is set.
     */
    public fun hasAuthn(): kotlin.Boolean {
      return _builder.hasAuthn()
    }

    public val GetAuthnDescriptorResponseKt.Dsl.authnOrNull: cosmos.base.reflection.v2alpha1.Reflection.AuthnDescriptor?
      get() = _builder.authnOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse.copy(block: `cosmos.base.reflection.v2alpha1`.GetAuthnDescriptorResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponse =
  `cosmos.base.reflection.v2alpha1`.GetAuthnDescriptorResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.base.reflection.v2alpha1.Reflection.GetAuthnDescriptorResponseOrBuilder.authnOrNull: cosmos.base.reflection.v2alpha1.Reflection.AuthnDescriptor?
  get() = if (hasAuthn()) getAuthn() else null

