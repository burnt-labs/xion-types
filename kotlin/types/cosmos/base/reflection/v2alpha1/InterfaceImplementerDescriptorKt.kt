// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializeinterfaceImplementerDescriptor")
public inline fun interfaceImplementerDescriptor(block: cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor =
  cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptorKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor.newBuilder()).apply { block() }._build()
/**
 * ```
 * InterfaceImplementerDescriptor describes an interface implementer
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor`
 */
public object InterfaceImplementerDescriptorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor = _builder.build()

    /**
     * ```
     * fullname is the protobuf queryable name of the interface implementer
     * ```
     *
     * `string fullname = 1 [json_name = "fullname"];`
     */
    public var fullname: kotlin.String
      @JvmName("getFullname")
      get() = _builder.fullname
      @JvmName("setFullname")
      set(value) {
        _builder.fullname = value
      }
    /**
     * ```
     * fullname is the protobuf queryable name of the interface implementer
     * ```
     *
     * `string fullname = 1 [json_name = "fullname"];`
     */
    public fun clearFullname() {
      _builder.clearFullname()
    }

    /**
     * ```
     * type_url defines the type URL used when marshalling the type as any
     * this is required so we can provide type safe google.protobuf.Any marshalling and
     * unmarshalling, making sure that we don't accept just 'any' type
     * in our interface fields
     * ```
     *
     * `string type_url = 2 [json_name = "typeUrl"];`
     */
    public var typeUrl: kotlin.String
      @JvmName("getTypeUrl")
      get() = _builder.typeUrl
      @JvmName("setTypeUrl")
      set(value) {
        _builder.typeUrl = value
      }
    /**
     * ```
     * type_url defines the type URL used when marshalling the type as any
     * this is required so we can provide type safe google.protobuf.Any marshalling and
     * unmarshalling, making sure that we don't accept just 'any' type
     * in our interface fields
     * ```
     *
     * `string type_url = 2 [json_name = "typeUrl"];`
     */
    public fun clearTypeUrl() {
      _builder.clearTypeUrl()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor.copy(block: `cosmos.base.reflection.v2alpha1`.InterfaceImplementerDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.InterfaceImplementerDescriptor =
  `cosmos.base.reflection.v2alpha1`.InterfaceImplementerDescriptorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

