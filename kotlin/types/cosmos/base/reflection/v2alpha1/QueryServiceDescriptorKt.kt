// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializequeryServiceDescriptor")
public inline fun queryServiceDescriptor(block: cosmos.base.reflection.v2alpha1.QueryServiceDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor =
  cosmos.base.reflection.v2alpha1.QueryServiceDescriptorKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryServiceDescriptor describes a cosmos-sdk queryable service
 * ```
 *
 * Protobuf type `cosmos.base.reflection.v2alpha1.QueryServiceDescriptor`
 */
public object QueryServiceDescriptorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor = _builder.build()

    /**
     * ```
     * fullname is the protobuf fullname of the service descriptor
     * ```
     *
     * `string fullname = 1 [json_name = "fullname"];`
     */
    public var fullname: kotlin.String
      @JvmName("getFullname")
      get() = _builder.fullname
      @JvmName("setFullname")
      set(value) {
        _builder.fullname = value
      }
    /**
     * ```
     * fullname is the protobuf fullname of the service descriptor
     * ```
     *
     * `string fullname = 1 [json_name = "fullname"];`
     */
    public fun clearFullname() {
      _builder.clearFullname()
    }

    /**
     * ```
     * is_module describes if this service is actually exposed by an application's module
     * ```
     *
     * `bool is_module = 2 [json_name = "isModule"];`
     */
    public var isModule: kotlin.Boolean
      @JvmName("getIsModule")
      get() = _builder.isModule
      @JvmName("setIsModule")
      set(value) {
        _builder.isModule = value
      }
    /**
     * ```
     * is_module describes if this service is actually exposed by an application's module
     * ```
     *
     * `bool is_module = 2 [json_name = "isModule"];`
     */
    public fun clearIsModule() {
      _builder.clearIsModule()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MethodsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     */
     public val methods: com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.methodsList
      )
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     * @param value The methods to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMethods")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>.add(value: cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor) {
      _builder.addMethods(value)
    }
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     * @param value The methods to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMethods")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>.plusAssign(value: cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor) {
      add(value)
    }
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     * @param values The methods to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMethods")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor>) {
      _builder.addAllMethods(values)
    }
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     * @param values The methods to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMethods")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor>) {
      addAll(values)
    }
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     * @param index The index to set the value at.
     * @param value The methods to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMethods")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>.set(index: kotlin.Int, value: cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor) {
      _builder.setMethods(index, value)
    }
    /**
     * ```
     * methods provides a list of query service methods
     * ```
     *
     * `repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMethods")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.reflection.v2alpha1.Reflection.QueryMethodDescriptor, MethodsProxy>.clear() {
      _builder.clearMethods()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor.copy(block: `cosmos.base.reflection.v2alpha1`.QueryServiceDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.QueryServiceDescriptor =
  `cosmos.base.reflection.v2alpha1`.QueryServiceDescriptorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

