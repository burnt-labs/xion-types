// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/tendermint/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.tendermint.v1beta1;

@kotlin.jvm.JvmName("-initializegetNodeInfoResponse")
public inline fun getNodeInfoResponse(block: cosmos.base.tendermint.v1beta1.GetNodeInfoResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse =
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponseKt.Dsl._create(cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method.
 * ```
 *
 * Protobuf type `cosmos.base.tendermint.v1beta1.GetNodeInfoResponse`
 */
public object GetNodeInfoResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse = _builder.build()

    /**
     * `.tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];`
     */
    public var defaultNodeInfo: tendermint.p2p.Types.DefaultNodeInfo
      @JvmName("getDefaultNodeInfo")
      get() = _builder.defaultNodeInfo
      @JvmName("setDefaultNodeInfo")
      set(value) {
        _builder.defaultNodeInfo = value
      }
    /**
     * `.tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];`
     */
    public fun clearDefaultNodeInfo() {
      _builder.clearDefaultNodeInfo()
    }
    /**
     * `.tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];`
     * @return Whether the defaultNodeInfo field is set.
     */
    public fun hasDefaultNodeInfo(): kotlin.Boolean {
      return _builder.hasDefaultNodeInfo()
    }

    public val GetNodeInfoResponseKt.Dsl.defaultNodeInfoOrNull: tendermint.p2p.Types.DefaultNodeInfo?
      get() = _builder.defaultNodeInfoOrNull

    /**
     * `.cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];`
     */
    public var applicationVersion: cosmos.base.tendermint.v1beta1.Query.VersionInfo
      @JvmName("getApplicationVersion")
      get() = _builder.applicationVersion
      @JvmName("setApplicationVersion")
      set(value) {
        _builder.applicationVersion = value
      }
    /**
     * `.cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];`
     */
    public fun clearApplicationVersion() {
      _builder.clearApplicationVersion()
    }
    /**
     * `.cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];`
     * @return Whether the applicationVersion field is set.
     */
    public fun hasApplicationVersion(): kotlin.Boolean {
      return _builder.hasApplicationVersion()
    }

    public val GetNodeInfoResponseKt.Dsl.applicationVersionOrNull: cosmos.base.tendermint.v1beta1.Query.VersionInfo?
      get() = _builder.applicationVersionOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.copy(block: `cosmos.base.tendermint.v1beta1`.GetNodeInfoResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse =
  `cosmos.base.tendermint.v1beta1`.GetNodeInfoResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponseOrBuilder.defaultNodeInfoOrNull: tendermint.p2p.Types.DefaultNodeInfo?
  get() = if (hasDefaultNodeInfo()) getDefaultNodeInfo() else null

public val cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponseOrBuilder.applicationVersionOrNull: cosmos.base.tendermint.v1beta1.Query.VersionInfo?
  get() = if (hasApplicationVersion()) getApplicationVersion() else null

