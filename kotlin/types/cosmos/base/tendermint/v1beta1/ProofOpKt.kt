// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/tendermint/v1beta1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.tendermint.v1beta1;

@kotlin.jvm.JvmName("-initializeproofOp")
public inline fun proofOp(block: cosmos.base.tendermint.v1beta1.ProofOpKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.ProofOp =
  cosmos.base.tendermint.v1beta1.ProofOpKt.Dsl._create(cosmos.base.tendermint.v1beta1.Query.ProofOp.newBuilder()).apply { block() }._build()
/**
 * ```
 * ProofOp defines an operation used for calculating Merkle root. The data could
 * be arbitrary format, providing necessary data for example neighbouring node
 * hash.
 *
 * Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
 * ```
 *
 * Protobuf type `cosmos.base.tendermint.v1beta1.ProofOp`
 */
public object ProofOpKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.tendermint.v1beta1.Query.ProofOp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.tendermint.v1beta1.Query.ProofOp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.tendermint.v1beta1.Query.ProofOp = _builder.build()

    /**
     * `string type = 1 [json_name = "type"];`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.type
      @JvmName("setType")
      set(value) {
        _builder.type = value
      }
    /**
     * `string type = 1 [json_name = "type"];`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * `bytes key = 2 [json_name = "key"];`
     */
    public var key: com.google.protobuf.ByteString
      @JvmName("getKey")
      get() = _builder.key
      @JvmName("setKey")
      set(value) {
        _builder.key = value
      }
    /**
     * `bytes key = 2 [json_name = "key"];`
     */
    public fun clearKey() {
      _builder.clearKey()
    }

    /**
     * `bytes data = 3 [json_name = "data"];`
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.data
      @JvmName("setData")
      set(value) {
        _builder.data = value
      }
    /**
     * `bytes data = 3 [json_name = "data"];`
     */
    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.tendermint.v1beta1.Query.ProofOp.copy(block: `cosmos.base.tendermint.v1beta1`.ProofOpKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.ProofOp =
  `cosmos.base.tendermint.v1beta1`.ProofOpKt.Dsl._create(this.toBuilder()).apply { block() }._build()

