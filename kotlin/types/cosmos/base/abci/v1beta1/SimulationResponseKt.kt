// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/abci/v1beta1/abci.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.abci.v1beta1;

@kotlin.jvm.JvmName("-initializesimulationResponse")
public inline fun simulationResponse(block: cosmos.base.abci.v1beta1.SimulationResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.abci.v1beta1.Abci.SimulationResponse =
  cosmos.base.abci.v1beta1.SimulationResponseKt.Dsl._create(cosmos.base.abci.v1beta1.Abci.SimulationResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * SimulationResponse defines the response generated when a transaction is
 * successfully simulated.
 * ```
 *
 * Protobuf type `cosmos.base.abci.v1beta1.SimulationResponse`
 */
public object SimulationResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.abci.v1beta1.Abci.SimulationResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.abci.v1beta1.Abci.SimulationResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.abci.v1beta1.Abci.SimulationResponse = _builder.build()

    /**
     * `.cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];`
     */
    public var gasInfo: cosmos.base.abci.v1beta1.Abci.GasInfo
      @JvmName("getGasInfo")
      get() = _builder.gasInfo
      @JvmName("setGasInfo")
      set(value) {
        _builder.gasInfo = value
      }
    /**
     * `.cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];`
     */
    public fun clearGasInfo() {
      _builder.clearGasInfo()
    }
    /**
     * `.cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];`
     * @return Whether the gasInfo field is set.
     */
    public fun hasGasInfo(): kotlin.Boolean {
      return _builder.hasGasInfo()
    }

    public val SimulationResponseKt.Dsl.gasInfoOrNull: cosmos.base.abci.v1beta1.Abci.GasInfo?
      get() = _builder.gasInfoOrNull

    /**
     * `.cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];`
     */
    public var result: cosmos.base.abci.v1beta1.Abci.Result
      @JvmName("getResult")
      get() = _builder.result
      @JvmName("setResult")
      set(value) {
        _builder.result = value
      }
    /**
     * `.cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];`
     */
    public fun clearResult() {
      _builder.clearResult()
    }
    /**
     * `.cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];`
     * @return Whether the result field is set.
     */
    public fun hasResult(): kotlin.Boolean {
      return _builder.hasResult()
    }

    public val SimulationResponseKt.Dsl.resultOrNull: cosmos.base.abci.v1beta1.Abci.Result?
      get() = _builder.resultOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.abci.v1beta1.Abci.SimulationResponse.copy(block: `cosmos.base.abci.v1beta1`.SimulationResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.abci.v1beta1.Abci.SimulationResponse =
  `cosmos.base.abci.v1beta1`.SimulationResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.base.abci.v1beta1.Abci.SimulationResponseOrBuilder.gasInfoOrNull: cosmos.base.abci.v1beta1.Abci.GasInfo?
  get() = if (hasGasInfo()) getGasInfo() else null

public val cosmos.base.abci.v1beta1.Abci.SimulationResponseOrBuilder.resultOrNull: cosmos.base.abci.v1beta1.Abci.Result?
  get() = if (hasResult()) getResult() else null

