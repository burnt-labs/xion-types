// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/v1beta1/coin.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.base.v1beta1;

@kotlin.jvm.JvmName("-initializedecCoin")
public inline fun decCoin(block: cosmos.base.v1beta1.DecCoinKt.Dsl.() -> kotlin.Unit): cosmos.base.v1beta1.CoinOuterClass.DecCoin =
  cosmos.base.v1beta1.DecCoinKt.Dsl._create(cosmos.base.v1beta1.CoinOuterClass.DecCoin.newBuilder()).apply { block() }._build()
/**
 * ```
 * DecCoin defines a token with a denomination and a decimal amount.
 *
 * NOTE: The amount field is an Dec which implements the custom method
 * signatures required by gogoproto.
 * ```
 *
 * Protobuf type `cosmos.base.v1beta1.DecCoin`
 */
public object DecCoinKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.base.v1beta1.CoinOuterClass.DecCoin = _builder.build()

    /**
     * `string denom = 1 [json_name = "denom"];`
     */
    public var denom: kotlin.String
      @JvmName("getDenom")
      get() = _builder.denom
      @JvmName("setDenom")
      set(value) {
        _builder.denom = value
      }
    /**
     * `string denom = 1 [json_name = "denom"];`
     */
    public fun clearDenom() {
      _builder.clearDenom()
    }

    /**
     * `string amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];`
     */
    public var amount: kotlin.String
      @JvmName("getAmount")
      get() = _builder.amount
      @JvmName("setAmount")
      set(value) {
        _builder.amount = value
      }
    /**
     * `string amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];`
     */
    public fun clearAmount() {
      _builder.clearAmount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.v1beta1.CoinOuterClass.DecCoin.copy(block: `cosmos.base.v1beta1`.DecCoinKt.Dsl.() -> kotlin.Unit): cosmos.base.v1beta1.CoinOuterClass.DecCoin =
  `cosmos.base.v1beta1`.DecCoinKt.Dsl._create(this.toBuilder()).apply { block() }._build()

