// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/protocolpool/v1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.protocolpool.v1;

@kotlin.jvm.JvmName("-initializequeryContinuousFundResponse")
public inline fun queryContinuousFundResponse(block: cosmos.protocolpool.v1.QueryContinuousFundResponseKt.Dsl.() -> kotlin.Unit): cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse =
  cosmos.protocolpool.v1.QueryContinuousFundResponseKt.Dsl._create(cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryUnclaimedBudgetResponse is the response type for the Query/ContinuousFund
 * RPC method.
 * ```
 *
 * Protobuf type `cosmos.protocolpool.v1.QueryContinuousFundResponse`
 */
public object QueryContinuousFundResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse = _builder.build()

    /**
     * ```
     * ContinuousFunds is the given continuous fund returned in the query.
     * ```
     *
     * `.cosmos.protocolpool.v1.ContinuousFund continuous_fund = 1 [json_name = "continuousFund", (.gogoproto.nullable) = false];`
     */
    public var continuousFund: cosmos.protocolpool.v1.Types.ContinuousFund
      @JvmName("getContinuousFund")
      get() = _builder.continuousFund
      @JvmName("setContinuousFund")
      set(value) {
        _builder.continuousFund = value
      }
    /**
     * ```
     * ContinuousFunds is the given continuous fund returned in the query.
     * ```
     *
     * `.cosmos.protocolpool.v1.ContinuousFund continuous_fund = 1 [json_name = "continuousFund", (.gogoproto.nullable) = false];`
     */
    public fun clearContinuousFund() {
      _builder.clearContinuousFund()
    }
    /**
     * ```
     * ContinuousFunds is the given continuous fund returned in the query.
     * ```
     *
     * `.cosmos.protocolpool.v1.ContinuousFund continuous_fund = 1 [json_name = "continuousFund", (.gogoproto.nullable) = false];`
     * @return Whether the continuousFund field is set.
     */
    public fun hasContinuousFund(): kotlin.Boolean {
      return _builder.hasContinuousFund()
    }

    public val QueryContinuousFundResponseKt.Dsl.continuousFundOrNull: cosmos.protocolpool.v1.Types.ContinuousFund?
      get() = _builder.continuousFundOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse.copy(block: `cosmos.protocolpool.v1`.QueryContinuousFundResponseKt.Dsl.() -> kotlin.Unit): cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponse =
  `cosmos.protocolpool.v1`.QueryContinuousFundResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundResponseOrBuilder.continuousFundOrNull: cosmos.protocolpool.v1.Types.ContinuousFund?
  get() = if (hasContinuousFund()) getContinuousFund() else null

