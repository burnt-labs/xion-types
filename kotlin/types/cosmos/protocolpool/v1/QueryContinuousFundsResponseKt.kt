// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/protocolpool/v1/query.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.protocolpool.v1;

@kotlin.jvm.JvmName("-initializequeryContinuousFundsResponse")
public inline fun queryContinuousFundsResponse(block: cosmos.protocolpool.v1.QueryContinuousFundsResponseKt.Dsl.() -> kotlin.Unit): cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse =
  cosmos.protocolpool.v1.QueryContinuousFundsResponseKt.Dsl._create(cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * QueryUnclaimedBudgetResponse is the response type for the Query/ContinuousFunds
 * RPC method.
 * ```
 *
 * Protobuf type `cosmos.protocolpool.v1.QueryContinuousFundsResponse`
 */
public object QueryContinuousFundsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContinuousFundsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     */
     public val continuousFunds: com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.continuousFundsList
      )
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     * @param value The continuousFunds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContinuousFunds")
    public fun com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>.add(value: cosmos.protocolpool.v1.Types.ContinuousFund) {
      _builder.addContinuousFunds(value)
    }
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     * @param value The continuousFunds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContinuousFunds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>.plusAssign(value: cosmos.protocolpool.v1.Types.ContinuousFund) {
      add(value)
    }
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     * @param values The continuousFunds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContinuousFunds")
    public fun com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.protocolpool.v1.Types.ContinuousFund>) {
      _builder.addAllContinuousFunds(values)
    }
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     * @param values The continuousFunds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContinuousFunds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.protocolpool.v1.Types.ContinuousFund>) {
      addAll(values)
    }
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     * @param index The index to set the value at.
     * @param value The continuousFunds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContinuousFunds")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>.set(index: kotlin.Int, value: cosmos.protocolpool.v1.Types.ContinuousFund) {
      _builder.setContinuousFunds(index, value)
    }
    /**
     * ```
     * ContinuousFunds defines all continuous funds in state.
     * ```
     *
     * `repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContinuousFunds")
    public fun com.google.protobuf.kotlin.DslList<cosmos.protocolpool.v1.Types.ContinuousFund, ContinuousFundsProxy>.clear() {
      _builder.clearContinuousFunds()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse.copy(block: `cosmos.protocolpool.v1`.QueryContinuousFundsResponseKt.Dsl.() -> kotlin.Unit): cosmos.protocolpool.v1.QueryOuterClass.QueryContinuousFundsResponse =
  `cosmos.protocolpool.v1`.QueryContinuousFundsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

