// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/protocolpool/v1/tx.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.protocolpool.v1;

@kotlin.jvm.JvmName("-initializemsgCreateContinuousFund")
public inline fun msgCreateContinuousFund(block: cosmos.protocolpool.v1.MsgCreateContinuousFundKt.Dsl.() -> kotlin.Unit): cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund =
  cosmos.protocolpool.v1.MsgCreateContinuousFundKt.Dsl._create(cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund.newBuilder()).apply { block() }._build()
/**
 * ```
 * MsgCreateContinuousFund defines a message for adding continuous funds.
 * ```
 *
 * Protobuf type `cosmos.protocolpool.v1.MsgCreateContinuousFund`
 */
public object MsgCreateContinuousFundKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund = _builder.build()

    /**
     * ```
     * Authority is the address that controls the module (defaults to x/gov unless overwritten).
     * ```
     *
     * `string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var authority: kotlin.String
      @JvmName("getAuthority")
      get() = _builder.authority
      @JvmName("setAuthority")
      set(value) {
        _builder.authority = value
      }
    /**
     * ```
     * Authority is the address that controls the module (defaults to x/gov unless overwritten).
     * ```
     *
     * `string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearAuthority() {
      _builder.clearAuthority()
    }

    /**
     * ```
     * Recipient address of the account receiving funds.
     * ```
     *
     * `string recipient = 2 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public var recipient: kotlin.String
      @JvmName("getRecipient")
      get() = _builder.recipient
      @JvmName("setRecipient")
      set(value) {
        _builder.recipient = value
      }
    /**
     * ```
     * Recipient address of the account receiving funds.
     * ```
     *
     * `string recipient = 2 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];`
     */
    public fun clearRecipient() {
      _builder.clearRecipient()
    }

    /**
     * ```
     * Percentage is the percentage of funds to be allocated from Community pool.
     * ```
     *
     * `string percentage = 3 [json_name = "percentage", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];`
     */
    public var percentage: kotlin.String
      @JvmName("getPercentage")
      get() = _builder.percentage
      @JvmName("setPercentage")
      set(value) {
        _builder.percentage = value
      }
    /**
     * ```
     * Percentage is the percentage of funds to be allocated from Community pool.
     * ```
     *
     * `string percentage = 3 [json_name = "percentage", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];`
     */
    public fun clearPercentage() {
      _builder.clearPercentage()
    }

    /**
     * ```
     * Optional, if expiry is set, removes the state object when expired.
     * ```
     *
     * `.google.protobuf.Timestamp expiry = 4 [json_name = "expiry", (.gogoproto.stdtime) = true];`
     */
    public var expiry: com.google.protobuf.Timestamp
      @JvmName("getExpiry")
      get() = _builder.expiry
      @JvmName("setExpiry")
      set(value) {
        _builder.expiry = value
      }
    /**
     * ```
     * Optional, if expiry is set, removes the state object when expired.
     * ```
     *
     * `.google.protobuf.Timestamp expiry = 4 [json_name = "expiry", (.gogoproto.stdtime) = true];`
     */
    public fun clearExpiry() {
      _builder.clearExpiry()
    }
    /**
     * ```
     * Optional, if expiry is set, removes the state object when expired.
     * ```
     *
     * `.google.protobuf.Timestamp expiry = 4 [json_name = "expiry", (.gogoproto.stdtime) = true];`
     * @return Whether the expiry field is set.
     */
    public fun hasExpiry(): kotlin.Boolean {
      return _builder.hasExpiry()
    }

    public val MsgCreateContinuousFundKt.Dsl.expiryOrNull: com.google.protobuf.Timestamp?
      get() = _builder.expiryOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund.copy(block: `cosmos.protocolpool.v1`.MsgCreateContinuousFundKt.Dsl.() -> kotlin.Unit): cosmos.protocolpool.v1.Tx.MsgCreateContinuousFund =
  `cosmos.protocolpool.v1`.MsgCreateContinuousFundKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.protocolpool.v1.Tx.MsgCreateContinuousFundOrBuilder.expiryOrNull: com.google.protobuf.Timestamp?
  get() = if (hasExpiry()) getExpiry() else null

