// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/circuit/v1/types.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.circuit.v1;

@kotlin.jvm.JvmName("-initializegenesisAccountPermissions")
public inline fun genesisAccountPermissions(block: cosmos.circuit.v1.GenesisAccountPermissionsKt.Dsl.() -> kotlin.Unit): cosmos.circuit.v1.Types.GenesisAccountPermissions =
  cosmos.circuit.v1.GenesisAccountPermissionsKt.Dsl._create(cosmos.circuit.v1.Types.GenesisAccountPermissions.newBuilder()).apply { block() }._build()
/**
 * ```
 * GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
 * ```
 *
 * Protobuf type `cosmos.circuit.v1.GenesisAccountPermissions`
 */
public object GenesisAccountPermissionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.circuit.v1.Types.GenesisAccountPermissions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.circuit.v1.Types.GenesisAccountPermissions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.circuit.v1.Types.GenesisAccountPermissions = _builder.build()

    /**
     * `string address = 1 [json_name = "address"];`
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.address
      @JvmName("setAddress")
      set(value) {
        _builder.address = value
      }
    /**
     * `string address = 1 [json_name = "address"];`
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * `.cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];`
     */
    public var permissions: cosmos.circuit.v1.Types.Permissions
      @JvmName("getPermissions")
      get() = _builder.permissions
      @JvmName("setPermissions")
      set(value) {
        _builder.permissions = value
      }
    /**
     * `.cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];`
     */
    public fun clearPermissions() {
      _builder.clearPermissions()
    }
    /**
     * `.cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];`
     * @return Whether the permissions field is set.
     */
    public fun hasPermissions(): kotlin.Boolean {
      return _builder.hasPermissions()
    }

    public val GenesisAccountPermissionsKt.Dsl.permissionsOrNull: cosmos.circuit.v1.Types.Permissions?
      get() = _builder.permissionsOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.circuit.v1.Types.GenesisAccountPermissions.copy(block: `cosmos.circuit.v1`.GenesisAccountPermissionsKt.Dsl.() -> kotlin.Unit): cosmos.circuit.v1.Types.GenesisAccountPermissions =
  `cosmos.circuit.v1`.GenesisAccountPermissionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.circuit.v1.Types.GenesisAccountPermissionsOrBuilder.permissionsOrNull: cosmos.circuit.v1.Types.Permissions?
  get() = if (hasPermissions()) getPermissions() else null

