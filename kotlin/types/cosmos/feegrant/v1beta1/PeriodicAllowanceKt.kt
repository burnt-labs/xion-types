// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/feegrant/v1beta1/feegrant.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package cosmos.feegrant.v1beta1;

@kotlin.jvm.JvmName("-initializeperiodicAllowance")
public inline fun periodicAllowance(block: cosmos.feegrant.v1beta1.PeriodicAllowanceKt.Dsl.() -> kotlin.Unit): cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance =
  cosmos.feegrant.v1beta1.PeriodicAllowanceKt.Dsl._create(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.newBuilder()).apply { block() }._build()
/**
 * ```
 * PeriodicAllowance extends Allowance to allow for both a maximum cap,
 * as well as a limit per time period.
 * ```
 *
 * Protobuf type `cosmos.feegrant.v1beta1.PeriodicAllowance`
 */
public object PeriodicAllowanceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance = _builder.build()

    /**
     * ```
     * basic specifies a struct of `BasicAllowance`
     * ```
     *
     * `.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public var basic: cosmos.feegrant.v1beta1.Feegrant.BasicAllowance
      @JvmName("getBasic")
      get() = _builder.basic
      @JvmName("setBasic")
      set(value) {
        _builder.basic = value
      }
    /**
     * ```
     * basic specifies a struct of `BasicAllowance`
     * ```
     *
     * `.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     */
    public fun clearBasic() {
      _builder.clearBasic()
    }
    /**
     * ```
     * basic specifies a struct of `BasicAllowance`
     * ```
     *
     * `.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [json_name = "basic", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];`
     * @return Whether the basic field is set.
     */
    public fun hasBasic(): kotlin.Boolean {
      return _builder.hasBasic()
    }

    public val PeriodicAllowanceKt.Dsl.basicOrNull: cosmos.feegrant.v1beta1.Feegrant.BasicAllowance?
      get() = _builder.basicOrNull

    /**
     * ```
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * ```
     *
     * `.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];`
     */
    public var period: com.google.protobuf.Duration
      @JvmName("getPeriod")
      get() = _builder.period
      @JvmName("setPeriod")
      set(value) {
        _builder.period = value
      }
    /**
     * ```
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * ```
     *
     * `.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];`
     */
    public fun clearPeriod() {
      _builder.clearPeriod()
    }
    /**
     * ```
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * ```
     *
     * `.google.protobuf.Duration period = 2 [json_name = "period", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];`
     * @return Whether the period field is set.
     */
    public fun hasPeriod(): kotlin.Boolean {
      return _builder.hasPeriod()
    }

    public val PeriodicAllowanceKt.Dsl.periodOrNull: com.google.protobuf.Duration?
      get() = _builder.periodOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PeriodSpendLimitProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     */
     public val periodSpendLimit: com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.periodSpendLimitList
      )
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param value The periodSpendLimit to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPeriodSpendLimit")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>.add(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.addPeriodSpendLimit(value)
    }
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param value The periodSpendLimit to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPeriodSpendLimit")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>.plusAssign(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      add(value)
    }
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param values The periodSpendLimit to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPeriodSpendLimit")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      _builder.addAllPeriodSpendLimit(values)
    }
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param values The periodSpendLimit to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPeriodSpendLimit")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      addAll(values)
    }
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param index The index to set the value at.
     * @param value The periodSpendLimit to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPeriodSpendLimit")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>.set(index: kotlin.Int, value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.setPeriodSpendLimit(index, value)
    }
    /**
     * ```
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [json_name = "periodSpendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPeriodSpendLimit")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodSpendLimitProxy>.clear() {
      _builder.clearPeriodSpendLimit()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PeriodCanSpendProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     */
     public val periodCanSpend: com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.periodCanSpendList
      )
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param value The periodCanSpend to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPeriodCanSpend")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>.add(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.addPeriodCanSpend(value)
    }
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param value The periodCanSpend to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPeriodCanSpend")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>.plusAssign(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      add(value)
    }
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param values The periodCanSpend to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPeriodCanSpend")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      _builder.addAllPeriodCanSpend(values)
    }
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param values The periodCanSpend to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPeriodCanSpend")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      addAll(values)
    }
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     * @param index The index to set the value at.
     * @param value The periodCanSpend to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPeriodCanSpend")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>.set(index: kotlin.Int, value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.setPeriodCanSpend(index, value)
    }
    /**
     * ```
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * ```
     *
     * `repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [json_name = "periodCanSpend", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPeriodCanSpend")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, PeriodCanSpendProxy>.clear() {
      _builder.clearPeriodCanSpend()
    }


    /**
     * ```
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * ```
     *
     * `.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     */
    public var periodReset: com.google.protobuf.Timestamp
      @JvmName("getPeriodReset")
      get() = _builder.periodReset
      @JvmName("setPeriodReset")
      set(value) {
        _builder.periodReset = value
      }
    /**
     * ```
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * ```
     *
     * `.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     */
    public fun clearPeriodReset() {
      _builder.clearPeriodReset()
    }
    /**
     * ```
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * ```
     *
     * `.google.protobuf.Timestamp period_reset = 5 [json_name = "periodReset", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];`
     * @return Whether the periodReset field is set.
     */
    public fun hasPeriodReset(): kotlin.Boolean {
      return _builder.hasPeriodReset()
    }

    public val PeriodicAllowanceKt.Dsl.periodResetOrNull: com.google.protobuf.Timestamp?
      get() = _builder.periodResetOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.copy(block: `cosmos.feegrant.v1beta1`.PeriodicAllowanceKt.Dsl.() -> kotlin.Unit): cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance =
  `cosmos.feegrant.v1beta1`.PeriodicAllowanceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowanceOrBuilder.basicOrNull: cosmos.feegrant.v1beta1.Feegrant.BasicAllowance?
  get() = if (hasBasic()) getBasic() else null

public val cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowanceOrBuilder.periodOrNull: com.google.protobuf.Duration?
  get() = if (hasPeriod()) getPeriod() else null

public val cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowanceOrBuilder.periodResetOrNull: com.google.protobuf.Timestamp?
  get() = if (hasPeriodReset()) getPeriodReset() else null

