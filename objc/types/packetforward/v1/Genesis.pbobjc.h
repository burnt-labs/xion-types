// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: packetforward/v1/genesis.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class InFlightPacket;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GenesisRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GenesisRoot : GPBRootObject
@end

#pragma mark - GenesisState

typedef GPB_ENUM(GenesisState_FieldNumber) {
  GenesisState_FieldNumber_InFlightPackets = 2,
};

/**
 * GenesisState defines the packetforward genesis state
 **/
GPB_FINAL @interface GenesisState : GPBMessage

/**
 * key - information about forwarded packet: src_channel
 * (parsedReceiver.Channel), src_port (parsedReceiver.Port), sequence value -
 * information about original packet for refunding if necessary: retries,
 * srcPacketSender, srcPacket.DestinationChannel, srcPacket.DestinationPort
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, InFlightPacket*> *inFlightPackets;
/** The number of items in @c inFlightPackets without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger inFlightPackets_Count;

@end

#pragma mark - InFlightPacket

typedef GPB_ENUM(InFlightPacket_FieldNumber) {
  InFlightPacket_FieldNumber_OriginalSenderAddress = 1,
  InFlightPacket_FieldNumber_RefundChannelId = 2,
  InFlightPacket_FieldNumber_RefundPortId = 3,
  InFlightPacket_FieldNumber_PacketSrcChannelId = 4,
  InFlightPacket_FieldNumber_PacketSrcPortId = 5,
  InFlightPacket_FieldNumber_PacketTimeoutTimestamp = 6,
  InFlightPacket_FieldNumber_PacketTimeoutHeight = 7,
  InFlightPacket_FieldNumber_PacketData = 8,
  InFlightPacket_FieldNumber_RefundSequence = 9,
  InFlightPacket_FieldNumber_RetriesRemaining = 10,
  InFlightPacket_FieldNumber_Timeout = 11,
  InFlightPacket_FieldNumber_Nonrefundable = 12,
};

/**
 * InFlightPacket contains information about original packet for
 * writing the acknowledgement and refunding if necessary.
 **/
GPB_FINAL @interface InFlightPacket : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *originalSenderAddress;

@property(nonatomic, readwrite, copy, null_resettable) NSString *refundChannelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *refundPortId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *packetSrcChannelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *packetSrcPortId;

@property(nonatomic, readwrite) uint64_t packetTimeoutTimestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSString *packetTimeoutHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSData *packetData;

@property(nonatomic, readwrite) uint64_t refundSequence;

@property(nonatomic, readwrite) int32_t retriesRemaining;

@property(nonatomic, readwrite) uint64_t timeout;

@property(nonatomic, readwrite) BOOL nonrefundable;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
