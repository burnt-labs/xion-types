// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/lightclients/solomachine/v3/solomachine.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ConsensusState;
@class SignatureAndData;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SolomachineRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SolomachineRoot : GPBRootObject
@end

#pragma mark - ClientState

typedef GPB_ENUM(ClientState_FieldNumber) {
  ClientState_FieldNumber_Sequence = 1,
  ClientState_FieldNumber_IsFrozen = 2,
  ClientState_FieldNumber_ConsensusState = 3,
};

/**
 * ClientState defines a solo machine client that tracks the current consensus
 * state and if the client is frozen.
 **/
GPB_FINAL @interface ClientState : GPBMessage

/** latest sequence of the client state */
@property(nonatomic, readwrite) uint64_t sequence;

/** frozen sequence of the solo machine */
@property(nonatomic, readwrite) BOOL isFrozen;

@property(nonatomic, readwrite, strong, null_resettable) ConsensusState *consensusState;
/** Test to see if @c consensusState has been set. */
@property(nonatomic, readwrite) BOOL hasConsensusState;

@end

#pragma mark - ConsensusState

typedef GPB_ENUM(ConsensusState_FieldNumber) {
  ConsensusState_FieldNumber_PublicKey = 1,
  ConsensusState_FieldNumber_Diversifier = 2,
  ConsensusState_FieldNumber_Timestamp = 3,
};

/**
 * ConsensusState defines a solo machine consensus state. The sequence of a
 * consensus state is contained in the "height" key used in storing the
 * consensus state.
 **/
GPB_FINAL @interface ConsensusState : GPBMessage

/** public key of the solo machine */
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *publicKey;
/** Test to see if @c publicKey has been set. */
@property(nonatomic, readwrite) BOOL hasPublicKey;

/**
 * diversifier allows the same public key to be reused across different solo
 * machine clients (potentially on different chains) without being considered
 * misbehaviour.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *diversifier;

@property(nonatomic, readwrite) uint64_t timestamp;

@end

#pragma mark - Header

typedef GPB_ENUM(Header_FieldNumber) {
  Header_FieldNumber_Timestamp = 1,
  Header_FieldNumber_Signature = 2,
  Header_FieldNumber_NewPublicKey = 3,
  Header_FieldNumber_NewDiversifier = 4,
};

/**
 * Header defines a solo machine consensus header
 **/
GPB_FINAL @interface Header : GPBMessage

@property(nonatomic, readwrite) uint64_t timestamp;

@property(nonatomic, readwrite, copy, null_resettable) NSData *signature;

@property(nonatomic, readwrite, strong, null_resettable) GPBAny *newPublicKey NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newPublicKey has been set. */
@property(nonatomic, readwrite) BOOL hasNewPublicKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newDiversifier NS_RETURNS_NOT_RETAINED;

@end

#pragma mark - Misbehaviour

typedef GPB_ENUM(Misbehaviour_FieldNumber) {
  Misbehaviour_FieldNumber_Sequence = 1,
  Misbehaviour_FieldNumber_SignatureOne = 2,
  Misbehaviour_FieldNumber_SignatureTwo = 3,
};

/**
 * Misbehaviour defines misbehaviour for a solo machine which consists
 * of a sequence and two signatures over different messages at that sequence.
 **/
GPB_FINAL @interface Misbehaviour : GPBMessage

@property(nonatomic, readwrite) uint64_t sequence;

@property(nonatomic, readwrite, strong, null_resettable) SignatureAndData *signatureOne;
/** Test to see if @c signatureOne has been set. */
@property(nonatomic, readwrite) BOOL hasSignatureOne;

@property(nonatomic, readwrite, strong, null_resettable) SignatureAndData *signatureTwo;
/** Test to see if @c signatureTwo has been set. */
@property(nonatomic, readwrite) BOOL hasSignatureTwo;

@end

#pragma mark - SignatureAndData

typedef GPB_ENUM(SignatureAndData_FieldNumber) {
  SignatureAndData_FieldNumber_Signature = 1,
  SignatureAndData_FieldNumber_Path = 2,
  SignatureAndData_FieldNumber_Data_p = 3,
  SignatureAndData_FieldNumber_Timestamp = 4,
};

/**
 * SignatureAndData contains a signature and the data signed over to create that
 * signature.
 **/
GPB_FINAL @interface SignatureAndData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *signature;

@property(nonatomic, readwrite, copy, null_resettable) NSData *path;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@property(nonatomic, readwrite) uint64_t timestamp;

@end

#pragma mark - TimestampedSignatureData

typedef GPB_ENUM(TimestampedSignatureData_FieldNumber) {
  TimestampedSignatureData_FieldNumber_SignatureData = 1,
  TimestampedSignatureData_FieldNumber_Timestamp = 2,
};

/**
 * TimestampedSignatureData contains the signature data and the timestamp of the
 * signature.
 **/
GPB_FINAL @interface TimestampedSignatureData : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *signatureData;

@property(nonatomic, readwrite) uint64_t timestamp;

@end

#pragma mark - SignBytes

typedef GPB_ENUM(SignBytes_FieldNumber) {
  SignBytes_FieldNumber_Sequence = 1,
  SignBytes_FieldNumber_Timestamp = 2,
  SignBytes_FieldNumber_Diversifier = 3,
  SignBytes_FieldNumber_Path = 4,
  SignBytes_FieldNumber_Data_p = 5,
};

/**
 * SignBytes defines the signed bytes used for signature verification.
 **/
GPB_FINAL @interface SignBytes : GPBMessage

/** the sequence number */
@property(nonatomic, readwrite) uint64_t sequence;

/** the proof timestamp */
@property(nonatomic, readwrite) uint64_t timestamp;

/** the public key diversifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *diversifier;

/** the standardised path bytes */
@property(nonatomic, readwrite, copy, null_resettable) NSData *path;

/** the marshaled data bytes */
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

#pragma mark - HeaderData

typedef GPB_ENUM(HeaderData_FieldNumber) {
  HeaderData_FieldNumber_NewPubKey = 1,
  HeaderData_FieldNumber_NewDiversifier = 2,
};

/**
 * HeaderData returns the SignBytes data for update verification.
 **/
GPB_FINAL @interface HeaderData : GPBMessage

/** header public key */
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *newPubKey NS_RETURNS_NOT_RETAINED;
/** Test to see if @c newPubKey has been set. */
@property(nonatomic, readwrite) BOOL hasNewPubKey;

/** header diversifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *newDiversifier NS_RETURNS_NOT_RETAINED;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
