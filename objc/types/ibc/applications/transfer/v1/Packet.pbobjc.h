// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/applications/transfer/v1/packet.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PacketRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface PacketRoot : GPBRootObject
@end

#pragma mark - FungibleTokenPacketData

typedef GPB_ENUM(FungibleTokenPacketData_FieldNumber) {
  FungibleTokenPacketData_FieldNumber_Denom = 1,
  FungibleTokenPacketData_FieldNumber_Amount = 2,
  FungibleTokenPacketData_FieldNumber_Sender = 3,
  FungibleTokenPacketData_FieldNumber_Receiver = 4,
  FungibleTokenPacketData_FieldNumber_Memo = 5,
};

/**
 * FungibleTokenPacketData defines a struct for the packet payload
 * See FungibleTokenPacketData spec:
 * https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 **/
GPB_FINAL @interface FungibleTokenPacketData : GPBMessage

/** the token denomination to be transferred */
@property(nonatomic, readwrite, copy, null_resettable) NSString *denom;

/** the token amount to be transferred */
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

/** the sender address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

/** the recipient address on the destination chain */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receiver;

/** optional memo */
@property(nonatomic, readwrite, copy, null_resettable) NSString *memo;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
