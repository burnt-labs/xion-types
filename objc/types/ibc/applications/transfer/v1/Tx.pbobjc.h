// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/applications/transfer/v1/tx.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/v1beta1/Coin.pbobjc.h"
#import "ibc/core/client/v1/Client.pbobjc.h"
#import "ibc/applications/transfer/v1/Transfer.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TxRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TxRoot : GPBRootObject
@end

#pragma mark - MsgTransfer

typedef GPB_ENUM(MsgTransfer_FieldNumber) {
  MsgTransfer_FieldNumber_SourcePort = 1,
  MsgTransfer_FieldNumber_SourceChannel = 2,
  MsgTransfer_FieldNumber_Token = 3,
  MsgTransfer_FieldNumber_Sender = 4,
  MsgTransfer_FieldNumber_Receiver = 5,
  MsgTransfer_FieldNumber_TimeoutHeight = 6,
  MsgTransfer_FieldNumber_TimeoutTimestamp = 7,
  MsgTransfer_FieldNumber_Memo = 8,
  MsgTransfer_FieldNumber_Encoding = 9,
};

/**
 * MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between
 * ICS20 enabled chains. See ICS Spec here:
 * https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 **/
GPB_FINAL @interface MsgTransfer : GPBMessage

/** the port on which the packet will be sent */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourcePort;

/** the channel by which the packet will be sent */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceChannel;

/** token to be transferred */
@property(nonatomic, readwrite, strong, null_resettable) Coin *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

/** the sender address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

/** the recipient address on the destination chain */
@property(nonatomic, readwrite, copy, null_resettable) NSString *receiver;

/**
 * Timeout height relative to the current block height.
 * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
 * If you are sending with IBC v2 protocol, timeout_timestamp must be set, and timeout_height must be omitted.
 **/
@property(nonatomic, readwrite, strong, null_resettable) Height *timeoutHeight;
/** Test to see if @c timeoutHeight has been set. */
@property(nonatomic, readwrite) BOOL hasTimeoutHeight;

/**
 * Timeout timestamp in absolute nanoseconds since unix epoch.
 * If you are sending with IBC v1 protocol, either timeout_height or timeout_timestamp must be set.
 * If you are sending with IBC v2 protocol, timeout_timestamp must be set.
 **/
@property(nonatomic, readwrite) uint64_t timeoutTimestamp;

/** optional memo */
@property(nonatomic, readwrite, copy, null_resettable) NSString *memo;

/** optional encoding */
@property(nonatomic, readwrite, copy, null_resettable) NSString *encoding;

@end

#pragma mark - MsgTransferResponse

typedef GPB_ENUM(MsgTransferResponse_FieldNumber) {
  MsgTransferResponse_FieldNumber_Sequence = 1,
};

/**
 * MsgTransferResponse defines the Msg/Transfer response type.
 **/
GPB_FINAL @interface MsgTransferResponse : GPBMessage

/** sequence number of the transfer packet sent */
@property(nonatomic, readwrite) uint64_t sequence;

@end

#pragma mark - MsgUpdateParams

typedef GPB_ENUM(MsgUpdateParams_FieldNumber) {
  MsgUpdateParams_FieldNumber_Signer = 1,
  MsgUpdateParams_FieldNumber_Params = 2,
};

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 **/
GPB_FINAL @interface MsgUpdateParams : GPBMessage

/** signer address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

/**
 * params defines the transfer parameters to update.
 *
 * NOTE: All parameters must be supplied.
 **/
@property(nonatomic, readwrite, strong, null_resettable) Params *params;
/** Test to see if @c params has been set. */
@property(nonatomic, readwrite) BOOL hasParams;

@end

#pragma mark - MsgUpdateParamsResponse

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 **/
GPB_FINAL @interface MsgUpdateParamsResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
