// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/core/channel/v2/packet.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Payload;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PacketStatus

/** PacketStatus specifies the status of a RecvPacketResult. */
typedef GPB_ENUM(PacketStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PacketStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** PACKET_STATUS_UNSPECIFIED indicates an unknown packet status. */
  PacketStatus_PacketStatusUnspecified = 0,

  /** PACKET_STATUS_SUCCESS indicates a successful packet receipt. */
  PacketStatus_PacketStatusSuccess = 1,

  /** PACKET_STATUS_FAILURE indicates a failed packet receipt. */
  PacketStatus_PacketStatusFailure = 2,

  /** PACKET_STATUS_ASYNC indicates an async packet receipt. */
  PacketStatus_PacketStatusAsync = 3,
};

GPBEnumDescriptor *PacketStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PacketStatus_IsValidValue(int32_t value);

#pragma mark - PacketRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface PacketRoot : GPBRootObject
@end

#pragma mark - Packet

typedef GPB_ENUM(Packet_FieldNumber) {
  Packet_FieldNumber_Sequence = 1,
  Packet_FieldNumber_SourceClient = 2,
  Packet_FieldNumber_DestinationClient = 3,
  Packet_FieldNumber_TimeoutTimestamp = 4,
  Packet_FieldNumber_PayloadsArray = 5,
};

/**
 * Packet defines a type that carries data across different chains through IBC
 **/
GPB_FINAL @interface Packet : GPBMessage

/**
 * number corresponds to the order of sends and receives, where a Packet
 * with an earlier sequence number must be sent and received before a Packet
 * with a later sequence number.
 **/
@property(nonatomic, readwrite) uint64_t sequence;

/** identifies the sending client on the sending chain. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourceClient;

/** identifies the receiving client on the receiving chain. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destinationClient;

/** timeout timestamp in seconds after which the packet times out. */
@property(nonatomic, readwrite) uint64_t timeoutTimestamp;

/** a list of payloads, each one for a specific application. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Payload*> *payloadsArray;
/** The number of items in @c payloadsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger payloadsArray_Count;

@end

#pragma mark - Payload

typedef GPB_ENUM(Payload_FieldNumber) {
  Payload_FieldNumber_SourcePort = 1,
  Payload_FieldNumber_DestinationPort = 2,
  Payload_FieldNumber_Version = 3,
  Payload_FieldNumber_Encoding = 4,
  Payload_FieldNumber_Value = 5,
};

/**
 * Payload contains the source and destination ports and payload for the application (version, encoding, raw bytes)
 **/
GPB_FINAL @interface Payload : GPBMessage

/** specifies the source port of the packet. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sourcePort;

/** specifies the destination port of the packet. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destinationPort;

/** version of the specified application. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** the encoding used for the provided value. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *encoding;

/** the raw bytes for the payload. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@end

#pragma mark - Acknowledgement

typedef GPB_ENUM(Acknowledgement_FieldNumber) {
  Acknowledgement_FieldNumber_AppAcknowledgementsArray = 1,
};

/**
 * Acknowledgement contains a list of all ack results associated with a single packet.
 * In the case of a successful receive, the acknowledgement will contain an app acknowledgement
 * for each application that received a payload in the same order that the payloads were sent
 * in the packet.
 * If the receive is not successful, the acknowledgement will contain a single app acknowledgment
 * which will be a constant error acknowledgment as defined by the IBC v2 protocol.
 **/
GPB_FINAL @interface Acknowledgement : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *appAcknowledgementsArray;
/** The number of items in @c appAcknowledgementsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger appAcknowledgementsArray_Count;

@end

#pragma mark - RecvPacketResult

typedef GPB_ENUM(RecvPacketResult_FieldNumber) {
  RecvPacketResult_FieldNumber_Status = 1,
  RecvPacketResult_FieldNumber_Acknowledgement = 2,
};

/**
 * RecvPacketResult speecifies the status of a packet as well as the acknowledgement bytes.
 **/
GPB_FINAL @interface RecvPacketResult : GPBMessage

/** status of the packet */
@property(nonatomic, readwrite) PacketStatus status;

/** acknowledgement of the packet */
@property(nonatomic, readwrite, copy, null_resettable) NSData *acknowledgement;

@end

/**
 * Fetches the raw value of a @c RecvPacketResult's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RecvPacketResult_Status_RawValue(RecvPacketResult *message);
/**
 * Sets the raw value of an @c RecvPacketResult's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRecvPacketResult_Status_RawValue(RecvPacketResult *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
