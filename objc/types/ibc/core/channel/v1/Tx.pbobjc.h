// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/core/channel/v1/tx.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "ibc/core/client/v1/Client.pbobjc.h"
#import "ibc/core/channel/v1/Channel.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ResponseResultType

/** ResponseResultType defines the possible outcomes of the execution of a message */
typedef GPB_ENUM(ResponseResultType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResponseResultType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Default zero value enumeration */
  ResponseResultType_ResponseResultTypeUnspecified = 0,

  /** The message did not call the IBC application callbacks (because, for example, the packet had already been relayed) */
  ResponseResultType_ResponseResultTypeNoop = 1,

  /** The message was executed successfully */
  ResponseResultType_ResponseResultTypeSuccess = 2,

  /** The message was executed unsuccessfully */
  ResponseResultType_ResponseResultTypeFailure = 3,
};

GPBEnumDescriptor *ResponseResultType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResponseResultType_IsValidValue(int32_t value);

#pragma mark - TxRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TxRoot : GPBRootObject
@end

#pragma mark - MsgChannelOpenInit

typedef GPB_ENUM(MsgChannelOpenInit_FieldNumber) {
  MsgChannelOpenInit_FieldNumber_PortId = 1,
  MsgChannelOpenInit_FieldNumber_Channel = 2,
  MsgChannelOpenInit_FieldNumber_Signer = 3,
};

/**
 * MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
 * is called by a relayer on Chain A.
 **/
GPB_FINAL @interface MsgChannelOpenInit : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portId;

@property(nonatomic, readwrite, strong, null_resettable) Channel *channel;
/** Test to see if @c channel has been set. */
@property(nonatomic, readwrite) BOOL hasChannel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgChannelOpenInitResponse

typedef GPB_ENUM(MsgChannelOpenInitResponse_FieldNumber) {
  MsgChannelOpenInitResponse_FieldNumber_ChannelId = 1,
  MsgChannelOpenInitResponse_FieldNumber_Version = 2,
};

/**
 * MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response type.
 **/
GPB_FINAL @interface MsgChannelOpenInitResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@end

#pragma mark - MsgChannelOpenTry

typedef GPB_ENUM(MsgChannelOpenTry_FieldNumber) {
  MsgChannelOpenTry_FieldNumber_PortId = 1,
  MsgChannelOpenTry_FieldNumber_PreviousChannelId = 2,
  MsgChannelOpenTry_FieldNumber_Channel = 3,
  MsgChannelOpenTry_FieldNumber_CounterpartyVersion = 4,
  MsgChannelOpenTry_FieldNumber_ProofInit = 5,
  MsgChannelOpenTry_FieldNumber_ProofHeight = 6,
  MsgChannelOpenTry_FieldNumber_Signer = 7,
};

/**
 * MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
 * on Chain B. The version field within the Channel field has been deprecated. Its
 * value will be ignored by core IBC.
 **/
GPB_FINAL @interface MsgChannelOpenTry : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portId;

/** Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *previousChannelId GPB_DEPRECATED_MSG("ibc.core.channel.v1.MsgChannelOpenTry.previous_channel_id is deprecated (see ibc/core/channel/v1/tx.proto).");

/** NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC. */
@property(nonatomic, readwrite, strong, null_resettable) Channel *channel;
/** Test to see if @c channel has been set. */
@property(nonatomic, readwrite) BOOL hasChannel;

@property(nonatomic, readwrite, copy, null_resettable) NSString *counterpartyVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofInit;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgChannelOpenTryResponse

typedef GPB_ENUM(MsgChannelOpenTryResponse_FieldNumber) {
  MsgChannelOpenTryResponse_FieldNumber_Version = 1,
  MsgChannelOpenTryResponse_FieldNumber_ChannelId = 2,
};

/**
 * MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response type.
 **/
GPB_FINAL @interface MsgChannelOpenTryResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@end

#pragma mark - MsgChannelOpenAck

typedef GPB_ENUM(MsgChannelOpenAck_FieldNumber) {
  MsgChannelOpenAck_FieldNumber_PortId = 1,
  MsgChannelOpenAck_FieldNumber_ChannelId = 2,
  MsgChannelOpenAck_FieldNumber_CounterpartyChannelId = 3,
  MsgChannelOpenAck_FieldNumber_CounterpartyVersion = 4,
  MsgChannelOpenAck_FieldNumber_ProofTry = 5,
  MsgChannelOpenAck_FieldNumber_ProofHeight = 6,
  MsgChannelOpenAck_FieldNumber_Signer = 7,
};

/**
 * MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
 * the change of channel state to TRYOPEN on Chain B.
 **/
GPB_FINAL @interface MsgChannelOpenAck : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *counterpartyChannelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *counterpartyVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofTry;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgChannelOpenAckResponse

/**
 * MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response type.
 **/
GPB_FINAL @interface MsgChannelOpenAckResponse : GPBMessage

@end

#pragma mark - MsgChannelOpenConfirm

typedef GPB_ENUM(MsgChannelOpenConfirm_FieldNumber) {
  MsgChannelOpenConfirm_FieldNumber_PortId = 1,
  MsgChannelOpenConfirm_FieldNumber_ChannelId = 2,
  MsgChannelOpenConfirm_FieldNumber_ProofAck = 3,
  MsgChannelOpenConfirm_FieldNumber_ProofHeight = 4,
  MsgChannelOpenConfirm_FieldNumber_Signer = 5,
};

/**
 * MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
 * acknowledge the change of channel state to OPEN on Chain A.
 **/
GPB_FINAL @interface MsgChannelOpenConfirm : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofAck;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgChannelOpenConfirmResponse

/**
 * MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response
 * type.
 **/
GPB_FINAL @interface MsgChannelOpenConfirmResponse : GPBMessage

@end

#pragma mark - MsgChannelCloseInit

typedef GPB_ENUM(MsgChannelCloseInit_FieldNumber) {
  MsgChannelCloseInit_FieldNumber_PortId = 1,
  MsgChannelCloseInit_FieldNumber_ChannelId = 2,
  MsgChannelCloseInit_FieldNumber_Signer = 3,
};

/**
 * MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
 * to close a channel with Chain B.
 **/
GPB_FINAL @interface MsgChannelCloseInit : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgChannelCloseInitResponse

/**
 * MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response type.
 **/
GPB_FINAL @interface MsgChannelCloseInitResponse : GPBMessage

@end

#pragma mark - MsgChannelCloseConfirm

typedef GPB_ENUM(MsgChannelCloseConfirm_FieldNumber) {
  MsgChannelCloseConfirm_FieldNumber_PortId = 1,
  MsgChannelCloseConfirm_FieldNumber_ChannelId = 2,
  MsgChannelCloseConfirm_FieldNumber_ProofInit = 3,
  MsgChannelCloseConfirm_FieldNumber_ProofHeight = 4,
  MsgChannelCloseConfirm_FieldNumber_Signer = 5,
};

/**
 * MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
 * to acknowledge the change of channel state to CLOSED on Chain A.
 **/
GPB_FINAL @interface MsgChannelCloseConfirm : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *portId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofInit;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgChannelCloseConfirmResponse

/**
 * MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm response
 * type.
 **/
GPB_FINAL @interface MsgChannelCloseConfirmResponse : GPBMessage

@end

#pragma mark - MsgRecvPacket

typedef GPB_ENUM(MsgRecvPacket_FieldNumber) {
  MsgRecvPacket_FieldNumber_Packet = 1,
  MsgRecvPacket_FieldNumber_ProofCommitment = 2,
  MsgRecvPacket_FieldNumber_ProofHeight = 3,
  MsgRecvPacket_FieldNumber_Signer = 4,
};

/**
 * MsgRecvPacket receives incoming IBC packet
 **/
GPB_FINAL @interface MsgRecvPacket : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Packet *packet;
/** Test to see if @c packet has been set. */
@property(nonatomic, readwrite) BOOL hasPacket;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofCommitment;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgRecvPacketResponse

typedef GPB_ENUM(MsgRecvPacketResponse_FieldNumber) {
  MsgRecvPacketResponse_FieldNumber_Result = 1,
};

/**
 * MsgRecvPacketResponse defines the Msg/RecvPacket response type.
 **/
GPB_FINAL @interface MsgRecvPacketResponse : GPBMessage

@property(nonatomic, readwrite) ResponseResultType result;

@end

/**
 * Fetches the raw value of a @c MsgRecvPacketResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MsgRecvPacketResponse_Result_RawValue(MsgRecvPacketResponse *message);
/**
 * Sets the raw value of an @c MsgRecvPacketResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMsgRecvPacketResponse_Result_RawValue(MsgRecvPacketResponse *message, int32_t value);

#pragma mark - MsgTimeout

typedef GPB_ENUM(MsgTimeout_FieldNumber) {
  MsgTimeout_FieldNumber_Packet = 1,
  MsgTimeout_FieldNumber_ProofUnreceived = 2,
  MsgTimeout_FieldNumber_ProofHeight = 3,
  MsgTimeout_FieldNumber_NextSequenceRecv = 4,
  MsgTimeout_FieldNumber_Signer = 5,
};

/**
 * MsgTimeout receives timed-out packet
 **/
GPB_FINAL @interface MsgTimeout : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Packet *packet;
/** Test to see if @c packet has been set. */
@property(nonatomic, readwrite) BOOL hasPacket;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofUnreceived;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite) uint64_t nextSequenceRecv;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgTimeoutResponse

typedef GPB_ENUM(MsgTimeoutResponse_FieldNumber) {
  MsgTimeoutResponse_FieldNumber_Result = 1,
};

/**
 * MsgTimeoutResponse defines the Msg/Timeout response type.
 **/
GPB_FINAL @interface MsgTimeoutResponse : GPBMessage

@property(nonatomic, readwrite) ResponseResultType result;

@end

/**
 * Fetches the raw value of a @c MsgTimeoutResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MsgTimeoutResponse_Result_RawValue(MsgTimeoutResponse *message);
/**
 * Sets the raw value of an @c MsgTimeoutResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMsgTimeoutResponse_Result_RawValue(MsgTimeoutResponse *message, int32_t value);

#pragma mark - MsgTimeoutOnClose

typedef GPB_ENUM(MsgTimeoutOnClose_FieldNumber) {
  MsgTimeoutOnClose_FieldNumber_Packet = 1,
  MsgTimeoutOnClose_FieldNumber_ProofUnreceived = 2,
  MsgTimeoutOnClose_FieldNumber_ProofClose = 3,
  MsgTimeoutOnClose_FieldNumber_ProofHeight = 4,
  MsgTimeoutOnClose_FieldNumber_NextSequenceRecv = 5,
  MsgTimeoutOnClose_FieldNumber_Signer = 6,
};

/**
 * MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
 **/
GPB_FINAL @interface MsgTimeoutOnClose : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Packet *packet;
/** Test to see if @c packet has been set. */
@property(nonatomic, readwrite) BOOL hasPacket;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofUnreceived;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofClose;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite) uint64_t nextSequenceRecv;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgTimeoutOnCloseResponse

typedef GPB_ENUM(MsgTimeoutOnCloseResponse_FieldNumber) {
  MsgTimeoutOnCloseResponse_FieldNumber_Result = 1,
};

/**
 * MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response type.
 **/
GPB_FINAL @interface MsgTimeoutOnCloseResponse : GPBMessage

@property(nonatomic, readwrite) ResponseResultType result;

@end

/**
 * Fetches the raw value of a @c MsgTimeoutOnCloseResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MsgTimeoutOnCloseResponse_Result_RawValue(MsgTimeoutOnCloseResponse *message);
/**
 * Sets the raw value of an @c MsgTimeoutOnCloseResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMsgTimeoutOnCloseResponse_Result_RawValue(MsgTimeoutOnCloseResponse *message, int32_t value);

#pragma mark - MsgAcknowledgement

typedef GPB_ENUM(MsgAcknowledgement_FieldNumber) {
  MsgAcknowledgement_FieldNumber_Packet = 1,
  MsgAcknowledgement_FieldNumber_Acknowledgement = 2,
  MsgAcknowledgement_FieldNumber_ProofAcked = 3,
  MsgAcknowledgement_FieldNumber_ProofHeight = 4,
  MsgAcknowledgement_FieldNumber_Signer = 5,
};

/**
 * MsgAcknowledgement receives incoming IBC acknowledgement
 **/
GPB_FINAL @interface MsgAcknowledgement : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Packet *packet;
/** Test to see if @c packet has been set. */
@property(nonatomic, readwrite) BOOL hasPacket;

@property(nonatomic, readwrite, copy, null_resettable) NSData *acknowledgement;

@property(nonatomic, readwrite, copy, null_resettable) NSData *proofAcked;

@property(nonatomic, readwrite, strong, null_resettable) Height *proofHeight;
/** Test to see if @c proofHeight has been set. */
@property(nonatomic, readwrite) BOOL hasProofHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgAcknowledgementResponse

typedef GPB_ENUM(MsgAcknowledgementResponse_FieldNumber) {
  MsgAcknowledgementResponse_FieldNumber_Result = 1,
};

/**
 * MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
 **/
GPB_FINAL @interface MsgAcknowledgementResponse : GPBMessage

@property(nonatomic, readwrite) ResponseResultType result;

@end

/**
 * Fetches the raw value of a @c MsgAcknowledgementResponse's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MsgAcknowledgementResponse_Result_RawValue(MsgAcknowledgementResponse *message);
/**
 * Sets the raw value of an @c MsgAcknowledgementResponse's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMsgAcknowledgementResponse_Result_RawValue(MsgAcknowledgementResponse *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
