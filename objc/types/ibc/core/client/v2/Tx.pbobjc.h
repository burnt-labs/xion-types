// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/core/client/v2/tx.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "ibc/core/client/v2/Config.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TxRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TxRoot : GPBRootObject
@end

#pragma mark - MsgRegisterCounterparty

typedef GPB_ENUM(MsgRegisterCounterparty_FieldNumber) {
  MsgRegisterCounterparty_FieldNumber_ClientId = 1,
  MsgRegisterCounterparty_FieldNumber_CounterpartyMerklePrefixArray = 2,
  MsgRegisterCounterparty_FieldNumber_CounterpartyClientId = 3,
  MsgRegisterCounterparty_FieldNumber_Signer = 4,
};

/**
 * MsgRegisterCounterparty defines a message to register a counterparty on a client
 **/
GPB_FINAL @interface MsgRegisterCounterparty : GPBMessage

/** client identifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/** counterparty merkle prefix */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *counterpartyMerklePrefixArray;
/** The number of items in @c counterpartyMerklePrefixArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger counterpartyMerklePrefixArray_Count;

/** counterparty client identifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *counterpartyClientId;

/** signer address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgRegisterCounterpartyResponse

/**
 * MsgRegisterCounterpartyResponse defines the Msg/RegisterCounterparty response type.
 **/
GPB_FINAL @interface MsgRegisterCounterpartyResponse : GPBMessage

@end

#pragma mark - MsgUpdateClientConfig

typedef GPB_ENUM(MsgUpdateClientConfig_FieldNumber) {
  MsgUpdateClientConfig_FieldNumber_ClientId = 1,
  MsgUpdateClientConfig_FieldNumber_Config = 2,
  MsgUpdateClientConfig_FieldNumber_Signer = 3,
};

/**
 * MsgUpdateClientConfig defines the sdk.Msg type to update the configuration for a given client
 **/
GPB_FINAL @interface MsgUpdateClientConfig : GPBMessage

/** client identifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/**
 * allowed relayers
 *
 * NOTE: All fields in the config must be supplied.
 **/
@property(nonatomic, readwrite, strong, null_resettable) Config *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

/** signer address */
@property(nonatomic, readwrite, copy, null_resettable) NSString *signer;

@end

#pragma mark - MsgUpdateClientConfigResponse

/**
 * MsgUpdateClientConfigResponse defines the MsgUpdateClientConfig response type.
 **/
GPB_FINAL @interface MsgUpdateClientConfigResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
