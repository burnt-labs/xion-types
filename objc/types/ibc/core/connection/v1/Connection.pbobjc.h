// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: ibc/core/connection/v1/connection.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "ibc/core/commitment/v1/Commitment.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Counterparty;
@class Version;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum State

/**
 * State defines if a connection is in one of the following states:
 * INIT, TRYOPEN, OPEN or UNINITIALIZED.
 **/
typedef GPB_ENUM(State) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Default State */
  State_StateUninitializedUnspecified = 0,

  /** A connection end has just started the opening handshake. */
  State_StateInit = 1,

  /**
   * A connection end has acknowledged the handshake step on the counterparty
   * chain.
   **/
  State_StateTryopen = 2,

  /** A connection end has completed the handshake. */
  State_StateOpen = 3,
};

GPBEnumDescriptor *State_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL State_IsValidValue(int32_t value);

#pragma mark - ConnectionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ConnectionRoot : GPBRootObject
@end

#pragma mark - ConnectionEnd

typedef GPB_ENUM(ConnectionEnd_FieldNumber) {
  ConnectionEnd_FieldNumber_ClientId = 1,
  ConnectionEnd_FieldNumber_VersionsArray = 2,
  ConnectionEnd_FieldNumber_State = 3,
  ConnectionEnd_FieldNumber_Counterparty = 4,
  ConnectionEnd_FieldNumber_DelayPeriod = 5,
};

/**
 * ConnectionEnd defines a stateful object on a chain connected to another
 * separate one.
 * NOTE: there must only be 2 defined ConnectionEnds to establish
 * a connection between two chains.
 **/
GPB_FINAL @interface ConnectionEnd : GPBMessage

/** client associated with this connection. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/**
 * IBC version which can be utilised to determine encodings or protocols for
 * channels or packets utilising this connection.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Version*> *versionsArray;
/** The number of items in @c versionsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger versionsArray_Count;

/** current state of the connection end. */
@property(nonatomic, readwrite) State state;

/** counterparty chain associated with this connection. */
@property(nonatomic, readwrite, strong, null_resettable) Counterparty *counterparty;
/** Test to see if @c counterparty has been set. */
@property(nonatomic, readwrite) BOOL hasCounterparty;

/**
 * delay period that must pass before a consensus state can be used for
 * packet-verification NOTE: delay period logic is only implemented by some
 * clients.
 **/
@property(nonatomic, readwrite) uint64_t delayPeriod;

@end

/**
 * Fetches the raw value of a @c ConnectionEnd's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ConnectionEnd_State_RawValue(ConnectionEnd *message);
/**
 * Sets the raw value of an @c ConnectionEnd's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetConnectionEnd_State_RawValue(ConnectionEnd *message, int32_t value);

#pragma mark - IdentifiedConnection

typedef GPB_ENUM(IdentifiedConnection_FieldNumber) {
  IdentifiedConnection_FieldNumber_Id_p = 1,
  IdentifiedConnection_FieldNumber_ClientId = 2,
  IdentifiedConnection_FieldNumber_VersionsArray = 3,
  IdentifiedConnection_FieldNumber_State = 4,
  IdentifiedConnection_FieldNumber_Counterparty = 5,
  IdentifiedConnection_FieldNumber_DelayPeriod = 6,
};

/**
 * IdentifiedConnection defines a connection with additional connection
 * identifier field.
 **/
GPB_FINAL @interface IdentifiedConnection : GPBMessage

/** connection identifier. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** client associated with this connection. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/**
 * IBC version which can be utilised to determine encodings or protocols for
 * channels or packets utilising this connection
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Version*> *versionsArray;
/** The number of items in @c versionsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger versionsArray_Count;

/** current state of the connection end. */
@property(nonatomic, readwrite) State state;

/** counterparty chain associated with this connection. */
@property(nonatomic, readwrite, strong, null_resettable) Counterparty *counterparty;
/** Test to see if @c counterparty has been set. */
@property(nonatomic, readwrite) BOOL hasCounterparty;

/** delay period associated with this connection. */
@property(nonatomic, readwrite) uint64_t delayPeriod;

@end

/**
 * Fetches the raw value of a @c IdentifiedConnection's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t IdentifiedConnection_State_RawValue(IdentifiedConnection *message);
/**
 * Sets the raw value of an @c IdentifiedConnection's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetIdentifiedConnection_State_RawValue(IdentifiedConnection *message, int32_t value);

#pragma mark - Counterparty

typedef GPB_ENUM(Counterparty_FieldNumber) {
  Counterparty_FieldNumber_ClientId = 1,
  Counterparty_FieldNumber_ConnectionId = 2,
  Counterparty_FieldNumber_Prefix = 3,
};

/**
 * Counterparty defines the counterparty chain associated with a connection end.
 **/
GPB_FINAL @interface Counterparty : GPBMessage

/**
 * identifies the client on the counterparty chain associated with a given
 * connection.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/**
 * identifies the connection end on the counterparty chain associated with a
 * given connection.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *connectionId;

/** commitment merkle prefix of the counterparty chain. */
@property(nonatomic, readwrite, strong, null_resettable) MerklePrefix *prefix;
/** Test to see if @c prefix has been set. */
@property(nonatomic, readwrite) BOOL hasPrefix;

@end

#pragma mark - ClientPaths

typedef GPB_ENUM(ClientPaths_FieldNumber) {
  ClientPaths_FieldNumber_PathsArray = 1,
};

/**
 * ClientPaths define all the connection paths for a client state.
 **/
GPB_FINAL @interface ClientPaths : GPBMessage

/** list of connection paths */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *pathsArray;
/** The number of items in @c pathsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger pathsArray_Count;

@end

#pragma mark - ConnectionPaths

typedef GPB_ENUM(ConnectionPaths_FieldNumber) {
  ConnectionPaths_FieldNumber_ClientId = 1,
  ConnectionPaths_FieldNumber_PathsArray = 2,
};

/**
 * ConnectionPaths define all the connection paths for a given client state.
 **/
GPB_FINAL @interface ConnectionPaths : GPBMessage

/** client state unique identifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/** list of connection paths */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *pathsArray;
/** The number of items in @c pathsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger pathsArray_Count;

@end

#pragma mark - Version

typedef GPB_ENUM(Version_FieldNumber) {
  Version_FieldNumber_Identifier = 1,
  Version_FieldNumber_FeaturesArray = 2,
};

/**
 * Version defines the versioning scheme used to negotiate the IBC version in
 * the connection handshake.
 **/
GPB_FINAL @interface Version : GPBMessage

/** unique version identifier */
@property(nonatomic, readwrite, copy, null_resettable) NSString *identifier;

/** list of features compatible with the specified identifier */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *featuresArray;
/** The number of items in @c featuresArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger featuresArray_Count;

@end

#pragma mark - Params

typedef GPB_ENUM(Params_FieldNumber) {
  Params_FieldNumber_MaxExpectedTimePerBlock = 1,
};

/**
 * Params defines the set of Connection parameters.
 **/
GPB_FINAL @interface Params : GPBMessage

/**
 * maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
 * largest amount of time that the chain might reasonably take to produce the next block under normal operating
 * conditions. A safe choice is 3-5x the expected time per block.
 **/
@property(nonatomic, readwrite) uint64_t maxExpectedTimePerBlock;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
