// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: xion/v1/query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "xion/v1/Query.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Coin);
GPBObjCClassDeclaration(QueryPlatformMinimumRequest);
GPBObjCClassDeclaration(QueryPlatformMinimumResponse);
GPBObjCClassDeclaration(QueryPlatformPercentageRequest);
GPBObjCClassDeclaration(QueryPlatformPercentageResponse);
GPBObjCClassDeclaration(QueryWebAuthNVerifyAuthenticateRequest);
GPBObjCClassDeclaration(QueryWebAuthNVerifyAuthenticateResponse);
GPBObjCClassDeclaration(QueryWebAuthNVerifyRegisterRequest);
GPBObjCClassDeclaration(QueryWebAuthNVerifyRegisterResponse);

#pragma mark - QueryRoot

@implementation QueryRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription QueryRoot_FileDescription = {
  .package = "xion.v1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - QueryWebAuthNVerifyRegisterRequest

@implementation QueryWebAuthNVerifyRegisterRequest

@dynamic addr;
@dynamic challenge;
@dynamic rp;
@dynamic data_p;

typedef struct QueryWebAuthNVerifyRegisterRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *addr;
  NSString *challenge;
  NSString *rp;
  NSData *data_p;
} QueryWebAuthNVerifyRegisterRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "addr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyRegisterRequest_FieldNumber_Addr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyRegisterRequest__storage_, addr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "challenge",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyRegisterRequest_FieldNumber_Challenge,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyRegisterRequest__storage_, challenge),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rp",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyRegisterRequest_FieldNumber_Rp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyRegisterRequest__storage_, rp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyRegisterRequest_FieldNumber_Data_p,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyRegisterRequest__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryWebAuthNVerifyRegisterRequest)
                                   messageName:@"QueryWebAuthNVerifyRegisterRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryWebAuthNVerifyRegisterRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryWebAuthNVerifyRegisterResponse

@implementation QueryWebAuthNVerifyRegisterResponse

@dynamic credential;

typedef struct QueryWebAuthNVerifyRegisterResponse__storage_ {
  uint32_t _has_storage_[1];
  NSData *credential;
} QueryWebAuthNVerifyRegisterResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "credential",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyRegisterResponse_FieldNumber_Credential,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyRegisterResponse__storage_, credential),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryWebAuthNVerifyRegisterResponse)
                                   messageName:@"QueryWebAuthNVerifyRegisterResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryWebAuthNVerifyRegisterResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryWebAuthNVerifyAuthenticateRequest

@implementation QueryWebAuthNVerifyAuthenticateRequest

@dynamic addr;
@dynamic challenge;
@dynamic rp;
@dynamic credential;
@dynamic data_p;

typedef struct QueryWebAuthNVerifyAuthenticateRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *addr;
  NSString *challenge;
  NSString *rp;
  NSData *credential;
  NSData *data_p;
} QueryWebAuthNVerifyAuthenticateRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "addr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyAuthenticateRequest_FieldNumber_Addr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyAuthenticateRequest__storage_, addr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "challenge",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyAuthenticateRequest_FieldNumber_Challenge,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyAuthenticateRequest__storage_, challenge),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "rp",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyAuthenticateRequest_FieldNumber_Rp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyAuthenticateRequest__storage_, rp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "credential",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyAuthenticateRequest_FieldNumber_Credential,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyAuthenticateRequest__storage_, credential),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "data_p",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryWebAuthNVerifyAuthenticateRequest_FieldNumber_Data_p,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(QueryWebAuthNVerifyAuthenticateRequest__storage_, data_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryWebAuthNVerifyAuthenticateRequest)
                                   messageName:@"QueryWebAuthNVerifyAuthenticateRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryWebAuthNVerifyAuthenticateRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryWebAuthNVerifyAuthenticateResponse

@implementation QueryWebAuthNVerifyAuthenticateResponse


typedef struct QueryWebAuthNVerifyAuthenticateResponse__storage_ {
  uint32_t _has_storage_[1];
} QueryWebAuthNVerifyAuthenticateResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryWebAuthNVerifyAuthenticateResponse)
                                   messageName:@"QueryWebAuthNVerifyAuthenticateResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(QueryWebAuthNVerifyAuthenticateResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryPlatformPercentageRequest

@implementation QueryPlatformPercentageRequest


typedef struct QueryPlatformPercentageRequest__storage_ {
  uint32_t _has_storage_[1];
} QueryPlatformPercentageRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryPlatformPercentageRequest)
                                   messageName:@"QueryPlatformPercentageRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(QueryPlatformPercentageRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryPlatformPercentageResponse

@implementation QueryPlatformPercentageResponse

@dynamic platformPercentage;

typedef struct QueryPlatformPercentageResponse__storage_ {
  uint32_t _has_storage_[1];
  uint64_t platformPercentage;
} QueryPlatformPercentageResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "platformPercentage",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryPlatformPercentageResponse_FieldNumber_PlatformPercentage,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryPlatformPercentageResponse__storage_, platformPercentage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryPlatformPercentageResponse)
                                   messageName:@"QueryPlatformPercentageResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryPlatformPercentageResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryPlatformMinimumRequest

@implementation QueryPlatformMinimumRequest


typedef struct QueryPlatformMinimumRequest__storage_ {
  uint32_t _has_storage_[1];
} QueryPlatformMinimumRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryPlatformMinimumRequest)
                                   messageName:@"QueryPlatformMinimumRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(QueryPlatformMinimumRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryPlatformMinimumResponse

@implementation QueryPlatformMinimumResponse

@dynamic minimumsArray, minimumsArray_Count;

typedef struct QueryPlatformMinimumResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *minimumsArray;
} QueryPlatformMinimumResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "minimumsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = QueryPlatformMinimumResponse_FieldNumber_MinimumsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryPlatformMinimumResponse__storage_, minimumsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryPlatformMinimumResponse)
                                   messageName:@"QueryPlatformMinimumResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryPlatformMinimumResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
