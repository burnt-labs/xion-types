// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: xion/v1/feegrant.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - FeegrantRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface FeegrantRoot : GPBRootObject
@end

#pragma mark - AuthzAllowance

typedef GPB_ENUM(AuthzAllowance_FieldNumber) {
  AuthzAllowance_FieldNumber_Allowance = 1,
  AuthzAllowance_FieldNumber_AuthzGrantee = 2,
};

/**
 * AuthzAllowance creates allowance only authz message for a specific grantee
 **/
GPB_FINAL @interface AuthzAllowance : GPBMessage

/** allowance can be any of basic and periodic fee allowance. */
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *allowance;
/** Test to see if @c allowance has been set. */
@property(nonatomic, readwrite) BOOL hasAllowance;

@property(nonatomic, readwrite, copy, null_resettable) NSString *authzGrantee;

@end

#pragma mark - ContractsAllowance

typedef GPB_ENUM(ContractsAllowance_FieldNumber) {
  ContractsAllowance_FieldNumber_Allowance = 1,
  ContractsAllowance_FieldNumber_ContractAddressesArray = 2,
};

/**
 * ContractsAllowance creates allowance only for specific contracts
 **/
GPB_FINAL @interface ContractsAllowance : GPBMessage

/** allowance can be any allowance interface type. */
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *allowance;
/** Test to see if @c allowance has been set. */
@property(nonatomic, readwrite) BOOL hasAllowance;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *contractAddressesArray;
/** The number of items in @c contractAddressesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger contractAddressesArray_Count;

@end

#pragma mark - MultiAnyAllowance

typedef GPB_ENUM(MultiAnyAllowance_FieldNumber) {
  MultiAnyAllowance_FieldNumber_AllowancesArray = 1,
};

/**
 * MultiAnyAllowance creates an allowance that pays if any of the internal
 * allowances are met
 **/
GPB_FINAL @interface MultiAnyAllowance : GPBMessage

/** allowance can be any allowance interface type. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GPBAny*> *allowancesArray;
/** The number of items in @c allowancesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger allowancesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
