// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/app/v1alpha1/config.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GolangBinding;
@class ModuleConfig;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ConfigRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ConfigRoot : GPBRootObject
@end

#pragma mark - Config

typedef GPB_ENUM(Config_FieldNumber) {
  Config_FieldNumber_ModulesArray = 1,
  Config_FieldNumber_GolangBindingsArray = 2,
};

/**
 * Config represents the configuration for a Cosmos SDK ABCI app.
 * It is intended that all state machine logic including the version of
 * baseapp and tx handlers (and possibly even Tendermint) that an app needs
 * can be described in a config object. For compatibility, the framework should
 * allow a mixture of declarative and imperative app wiring, however, apps
 * that strive for the maximum ease of maintainability should be able to describe
 * their state machine with a config object alone.
 **/
GPB_FINAL @interface Config : GPBMessage

/** modules are the module configurations for the app. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ModuleConfig*> *modulesArray;
/** The number of items in @c modulesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger modulesArray_Count;

/**
 * golang_bindings specifies explicit interface to implementation type bindings which
 * depinject uses to resolve interface inputs to provider functions.  The scope of this
 * field's configuration is global (not module specific).
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GolangBinding*> *golangBindingsArray;
/** The number of items in @c golangBindingsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger golangBindingsArray_Count;

@end

#pragma mark - ModuleConfig

typedef GPB_ENUM(ModuleConfig_FieldNumber) {
  ModuleConfig_FieldNumber_Name = 1,
  ModuleConfig_FieldNumber_Config = 2,
  ModuleConfig_FieldNumber_GolangBindingsArray = 3,
};

/**
 * ModuleConfig is a module configuration for an app.
 **/
GPB_FINAL @interface ModuleConfig : GPBMessage

/**
 * name is the unique name of the module within the app. It should be a name
 * that persists between different versions of a module so that modules
 * can be smoothly upgraded to new versions.
 *
 * For example, for the module cosmos.bank.module.v1.Module, we may chose
 * to simply name the module "bank" in the app. When we upgrade to
 * cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
 * and the framework knows that the v2 module should receive all the same state
 * that the v1 module had. Note: modules should provide info on which versions
 * they can migrate from in the ModuleDescriptor.can_migration_from field.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * config is the config object for the module. Module config messages should
 * define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

/**
 * golang_bindings specifies explicit interface to implementation type bindings which
 * depinject uses to resolve interface inputs to provider functions.  The scope of this
 * field's configuration is module specific.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GolangBinding*> *golangBindingsArray;
/** The number of items in @c golangBindingsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger golangBindingsArray_Count;

@end

#pragma mark - GolangBinding

typedef GPB_ENUM(GolangBinding_FieldNumber) {
  GolangBinding_FieldNumber_InterfaceType = 1,
  GolangBinding_FieldNumber_Implementation = 2,
};

/**
 * GolangBinding is an explicit interface type to implementing type binding for dependency injection.
 **/
GPB_FINAL @interface GolangBinding : GPBMessage

/** interface_type is the interface type which will be bound to a specific implementation type */
@property(nonatomic, readwrite, copy, null_resettable) NSString *interfaceType;

/** implementation is the implementing type which will be supplied when an input of type interface is requested */
@property(nonatomic, readwrite, copy, null_resettable) NSString *implementation;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
