// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/circuit/v1/types.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GenesisAccountPermissions;
@class Permissions;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Permissions_Level

/** Level is the permission level. */
typedef GPB_ENUM(Permissions_Level) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Permissions_Level_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**
   * LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
   * breaker permissions.
   **/
  Permissions_Level_LevelNoneUnspecified = 0,

  /**
   * LEVEL_SOME_MSGS indicates that the account will have permission to
   * trip or reset the circuit breaker for some Msg type URLs. If this level
   * is chosen, a non-empty list of Msg type URLs must be provided in
   * limit_type_urls.
   **/
  Permissions_Level_LevelSomeMsgs = 1,

  /**
   * LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
   * breaker for Msg's of all type URLs.
   **/
  Permissions_Level_LevelAllMsgs = 2,

  /**
   * LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
   * actions and can grant permissions to other accounts.
   **/
  Permissions_Level_LevelSuperAdmin = 3,
};

GPBEnumDescriptor *Permissions_Level_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Permissions_Level_IsValidValue(int32_t value);

#pragma mark - TypesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TypesRoot : GPBRootObject
@end

#pragma mark - Permissions

typedef GPB_ENUM(Permissions_FieldNumber) {
  Permissions_FieldNumber_Level = 1,
  Permissions_FieldNumber_LimitTypeUrlsArray = 2,
};

/**
 * Permissions are the permissions that an account has to trip
 * or reset the circuit breaker.
 **/
GPB_FINAL @interface Permissions : GPBMessage

/** level is the level of permissions granted to this account. */
@property(nonatomic, readwrite) Permissions_Level level;

/**
 * limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
 * URLs that the account can trip. It is an error to use limit_type_urls with
 * a level other than LEVEL_SOME_MSGS.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *limitTypeUrlsArray;
/** The number of items in @c limitTypeUrlsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger limitTypeUrlsArray_Count;

@end

/**
 * Fetches the raw value of a @c Permissions's @c level property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Permissions_Level_RawValue(Permissions *message);
/**
 * Sets the raw value of an @c Permissions's @c level property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPermissions_Level_RawValue(Permissions *message, int32_t value);

#pragma mark - GenesisAccountPermissions

typedef GPB_ENUM(GenesisAccountPermissions_FieldNumber) {
  GenesisAccountPermissions_FieldNumber_Address = 1,
  GenesisAccountPermissions_FieldNumber_Permissions = 2,
};

/**
 * GenesisAccountPermissions is the account permissions for the circuit breaker in genesis
 **/
GPB_FINAL @interface GenesisAccountPermissions : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite, strong, null_resettable) Permissions *permissions;
/** Test to see if @c permissions has been set. */
@property(nonatomic, readwrite) BOOL hasPermissions;

@end

#pragma mark - GenesisState

typedef GPB_ENUM(GenesisState_FieldNumber) {
  GenesisState_FieldNumber_AccountPermissionsArray = 1,
  GenesisState_FieldNumber_DisabledTypeUrlsArray = 2,
};

/**
 * GenesisState is the state that must be provided at genesis.
 **/
GPB_FINAL @interface GenesisState : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GenesisAccountPermissions*> *accountPermissionsArray;
/** The number of items in @c accountPermissionsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger accountPermissionsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *disabledTypeUrlsArray;
/** The number of items in @c disabledTypeUrlsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger disabledTypeUrlsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
