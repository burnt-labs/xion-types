// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/base/node/v1beta1/query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/node/v1beta1/Query.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(ConfigRequest);
GPBObjCClassDeclaration(ConfigResponse);
GPBObjCClassDeclaration(GPBTimestamp);
GPBObjCClassDeclaration(StatusRequest);
GPBObjCClassDeclaration(StatusResponse);

#pragma mark - QueryRoot

@implementation QueryRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription QueryRoot_FileDescription = {
  .package = "cosmos.base.node.v1beta1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - ConfigRequest

@implementation ConfigRequest


typedef struct ConfigRequest__storage_ {
  uint32_t _has_storage_[1];
} ConfigRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ConfigRequest)
                                   messageName:@"ConfigRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(ConfigRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ConfigResponse

@implementation ConfigResponse

@dynamic minimumGasPrice;
@dynamic pruningKeepRecent;
@dynamic pruningInterval;
@dynamic haltHeight;

typedef struct ConfigResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *minimumGasPrice;
  NSString *pruningKeepRecent;
  NSString *pruningInterval;
  uint64_t haltHeight;
} ConfigResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "minimumGasPrice",
        .dataTypeSpecific.clazz = Nil,
        .number = ConfigResponse_FieldNumber_MinimumGasPrice,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ConfigResponse__storage_, minimumGasPrice),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pruningKeepRecent",
        .dataTypeSpecific.clazz = Nil,
        .number = ConfigResponse_FieldNumber_PruningKeepRecent,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ConfigResponse__storage_, pruningKeepRecent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pruningInterval",
        .dataTypeSpecific.clazz = Nil,
        .number = ConfigResponse_FieldNumber_PruningInterval,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ConfigResponse__storage_, pruningInterval),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "haltHeight",
        .dataTypeSpecific.clazz = Nil,
        .number = ConfigResponse_FieldNumber_HaltHeight,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ConfigResponse__storage_, haltHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ConfigResponse)
                                   messageName:@"ConfigResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ConfigResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - StatusRequest

@implementation StatusRequest


typedef struct StatusRequest__storage_ {
  uint32_t _has_storage_[1];
} StatusRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(StatusRequest)
                                   messageName:@"StatusRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(StatusRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - StatusResponse

@implementation StatusResponse

@dynamic earliestStoreHeight;
@dynamic height;
@dynamic hasTimestamp, timestamp;
@dynamic appHash;
@dynamic validatorHash;

typedef struct StatusResponse__storage_ {
  uint32_t _has_storage_[1];
  GPBTimestamp *timestamp;
  NSData *appHash;
  NSData *validatorHash;
  uint64_t earliestStoreHeight;
  uint64_t height;
} StatusResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "earliestStoreHeight",
        .dataTypeSpecific.clazz = Nil,
        .number = StatusResponse_FieldNumber_EarliestStoreHeight,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(StatusResponse__storage_, earliestStoreHeight),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "height",
        .dataTypeSpecific.clazz = Nil,
        .number = StatusResponse_FieldNumber_Height,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(StatusResponse__storage_, height),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.clazz = GPBObjCClass(GPBTimestamp),
        .number = StatusResponse_FieldNumber_Timestamp,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(StatusResponse__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appHash",
        .dataTypeSpecific.clazz = Nil,
        .number = StatusResponse_FieldNumber_AppHash,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(StatusResponse__storage_, appHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "validatorHash",
        .dataTypeSpecific.clazz = Nil,
        .number = StatusResponse_FieldNumber_ValidatorHash,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(StatusResponse__storage_, validatorHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(StatusResponse)
                                   messageName:@"StatusResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(StatusResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
