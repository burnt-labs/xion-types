// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/base/reflection/v2alpha1/reflection.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AuthnDescriptor;
@class ChainDescriptor;
@class CodecDescriptor;
@class ConfigurationDescriptor;
@class InterfaceAcceptingMessageDescriptor;
@class InterfaceDescriptor;
@class InterfaceImplementerDescriptor;
@class MsgDescriptor;
@class QueryMethodDescriptor;
@class QueryServiceDescriptor;
@class QueryServicesDescriptor;
@class SigningModeDescriptor;
@class TxDescriptor;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ReflectionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ReflectionRoot : GPBRootObject
@end

#pragma mark - AppDescriptor

typedef GPB_ENUM(AppDescriptor_FieldNumber) {
  AppDescriptor_FieldNumber_Authn = 1,
  AppDescriptor_FieldNumber_Chain = 2,
  AppDescriptor_FieldNumber_Codec = 3,
  AppDescriptor_FieldNumber_Configuration = 4,
  AppDescriptor_FieldNumber_QueryServices = 5,
  AppDescriptor_FieldNumber_Tx = 6,
};

/**
 * AppDescriptor describes a cosmos-sdk based application
 **/
GPB_FINAL @interface AppDescriptor : GPBMessage

/**
 * AuthnDescriptor provides information on how to authenticate transactions on the application
 * NOTE: experimental and subject to change in future releases.
 **/
@property(nonatomic, readwrite, strong, null_resettable) AuthnDescriptor *authn;
/** Test to see if @c authn has been set. */
@property(nonatomic, readwrite) BOOL hasAuthn;

/** chain provides the chain descriptor */
@property(nonatomic, readwrite, strong, null_resettable) ChainDescriptor *chain;
/** Test to see if @c chain has been set. */
@property(nonatomic, readwrite) BOOL hasChain;

/** codec provides metadata information regarding codec related types */
@property(nonatomic, readwrite, strong, null_resettable) CodecDescriptor *codec;
/** Test to see if @c codec has been set. */
@property(nonatomic, readwrite) BOOL hasCodec;

/** configuration provides metadata information regarding the sdk.Config type */
@property(nonatomic, readwrite, strong, null_resettable) ConfigurationDescriptor *configuration;
/** Test to see if @c configuration has been set. */
@property(nonatomic, readwrite) BOOL hasConfiguration;

/** query_services provides metadata information regarding the available queriable endpoints */
@property(nonatomic, readwrite, strong, null_resettable) QueryServicesDescriptor *queryServices;
/** Test to see if @c queryServices has been set. */
@property(nonatomic, readwrite) BOOL hasQueryServices;

/** tx provides metadata information regarding how to send transactions to the given application */
@property(nonatomic, readwrite, strong, null_resettable) TxDescriptor *tx;
/** Test to see if @c tx has been set. */
@property(nonatomic, readwrite) BOOL hasTx;

@end

#pragma mark - TxDescriptor

typedef GPB_ENUM(TxDescriptor_FieldNumber) {
  TxDescriptor_FieldNumber_Fullname = 1,
  TxDescriptor_FieldNumber_MsgsArray = 2,
};

/**
 * TxDescriptor describes the accepted transaction type
 **/
GPB_FINAL @interface TxDescriptor : GPBMessage

/**
 * fullname is the protobuf fullname of the raw transaction type (for instance the tx.Tx type)
 * it is not meant to support polymorphism of transaction types, it is supposed to be used by
 * reflection clients to understand if they can handle a specific transaction type in an application.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *fullname;

/** msgs lists the accepted application messages (sdk.Msg) */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<MsgDescriptor*> *msgsArray;
/** The number of items in @c msgsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger msgsArray_Count;

@end

#pragma mark - AuthnDescriptor

typedef GPB_ENUM(AuthnDescriptor_FieldNumber) {
  AuthnDescriptor_FieldNumber_SignModesArray = 1,
};

/**
 * AuthnDescriptor provides information on how to sign transactions without relying
 * on the online RPCs GetTxMetadata and CombineUnsignedTxAndSignatures
 **/
GPB_FINAL @interface AuthnDescriptor : GPBMessage

/** sign_modes defines the supported signature algorithm */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SigningModeDescriptor*> *signModesArray;
/** The number of items in @c signModesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger signModesArray_Count;

@end

#pragma mark - SigningModeDescriptor

typedef GPB_ENUM(SigningModeDescriptor_FieldNumber) {
  SigningModeDescriptor_FieldNumber_Name = 1,
  SigningModeDescriptor_FieldNumber_Number = 2,
  SigningModeDescriptor_FieldNumber_AuthnInfoProviderMethodFullname = 3,
};

/**
 * SigningModeDescriptor provides information on a signing flow of the application
 * NOTE(fdymylja): here we could go as far as providing an entire flow on how
 * to sign a message given a SigningModeDescriptor, but it's better to think about
 * this another time
 **/
GPB_FINAL @interface SigningModeDescriptor : GPBMessage

/** name defines the unique name of the signing mode */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** number is the unique int32 identifier for the sign_mode enum */
@property(nonatomic, readwrite) int32_t number;

/**
 * authn_info_provider_method_fullname defines the fullname of the method to call to get
 * the metadata required to authenticate using the provided sign_modes
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *authnInfoProviderMethodFullname;

@end

#pragma mark - ChainDescriptor

typedef GPB_ENUM(ChainDescriptor_FieldNumber) {
  ChainDescriptor_FieldNumber_Id_p = 1,
};

/**
 * ChainDescriptor describes chain information of the application
 **/
GPB_FINAL @interface ChainDescriptor : GPBMessage

/** id is the chain id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@end

#pragma mark - CodecDescriptor

typedef GPB_ENUM(CodecDescriptor_FieldNumber) {
  CodecDescriptor_FieldNumber_InterfacesArray = 1,
};

/**
 * CodecDescriptor describes the registered interfaces and provides metadata information on the types
 **/
GPB_FINAL @interface CodecDescriptor : GPBMessage

/** interfaces is a list of the registerted interfaces descriptors */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InterfaceDescriptor*> *interfacesArray;
/** The number of items in @c interfacesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger interfacesArray_Count;

@end

#pragma mark - InterfaceDescriptor

typedef GPB_ENUM(InterfaceDescriptor_FieldNumber) {
  InterfaceDescriptor_FieldNumber_Fullname = 1,
  InterfaceDescriptor_FieldNumber_InterfaceAcceptingMessagesArray = 2,
  InterfaceDescriptor_FieldNumber_InterfaceImplementersArray = 3,
};

/**
 * InterfaceDescriptor describes the implementation of an interface
 **/
GPB_FINAL @interface InterfaceDescriptor : GPBMessage

/** fullname is the name of the interface */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fullname;

/**
 * interface_accepting_messages contains information regarding the proto messages which contain the interface as
 * google.protobuf.Any field
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InterfaceAcceptingMessageDescriptor*> *interfaceAcceptingMessagesArray;
/** The number of items in @c interfaceAcceptingMessagesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger interfaceAcceptingMessagesArray_Count;

/** interface_implementers is a list of the descriptors of the interface implementers */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InterfaceImplementerDescriptor*> *interfaceImplementersArray;
/** The number of items in @c interfaceImplementersArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger interfaceImplementersArray_Count;

@end

#pragma mark - InterfaceImplementerDescriptor

typedef GPB_ENUM(InterfaceImplementerDescriptor_FieldNumber) {
  InterfaceImplementerDescriptor_FieldNumber_Fullname = 1,
  InterfaceImplementerDescriptor_FieldNumber_TypeURL = 2,
};

/**
 * InterfaceImplementerDescriptor describes an interface implementer
 **/
GPB_FINAL @interface InterfaceImplementerDescriptor : GPBMessage

/** fullname is the protobuf queryable name of the interface implementer */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fullname;

/**
 * type_url defines the type URL used when marshalling the type as any
 * this is required so we can provide type safe google.protobuf.Any marshalling and
 * unmarshalling, making sure that we don't accept just 'any' type
 * in our interface fields
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *typeURL;

@end

#pragma mark - InterfaceAcceptingMessageDescriptor

typedef GPB_ENUM(InterfaceAcceptingMessageDescriptor_FieldNumber) {
  InterfaceAcceptingMessageDescriptor_FieldNumber_Fullname = 1,
  InterfaceAcceptingMessageDescriptor_FieldNumber_FieldDescriptorNamesArray = 2,
};

/**
 * InterfaceAcceptingMessageDescriptor describes a protobuf message which contains
 * an interface represented as a google.protobuf.Any
 **/
GPB_FINAL @interface InterfaceAcceptingMessageDescriptor : GPBMessage

/** fullname is the protobuf fullname of the type containing the interface */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fullname;

/**
 * field_descriptor_names is a list of the protobuf name (not fullname) of the field
 * which contains the interface as google.protobuf.Any (the interface is the same, but
 * it can be in multiple fields of the same proto message)
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *fieldDescriptorNamesArray;
/** The number of items in @c fieldDescriptorNamesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger fieldDescriptorNamesArray_Count;

@end

#pragma mark - ConfigurationDescriptor

typedef GPB_ENUM(ConfigurationDescriptor_FieldNumber) {
  ConfigurationDescriptor_FieldNumber_Bech32AccountAddressPrefix = 1,
};

/**
 * ConfigurationDescriptor contains metadata information on the sdk.Config
 **/
GPB_FINAL @interface ConfigurationDescriptor : GPBMessage

/** bech32_account_address_prefix is the account address prefix */
@property(nonatomic, readwrite, copy, null_resettable) NSString *bech32AccountAddressPrefix;

@end

#pragma mark - MsgDescriptor

typedef GPB_ENUM(MsgDescriptor_FieldNumber) {
  MsgDescriptor_FieldNumber_MsgTypeURL = 1,
};

/**
 * MsgDescriptor describes a cosmos-sdk message that can be delivered with a transaction
 **/
GPB_FINAL @interface MsgDescriptor : GPBMessage

/** msg_type_url contains the TypeURL of a sdk.Msg. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgTypeURL;

@end

#pragma mark - GetAuthnDescriptorRequest

/**
 * GetAuthnDescriptorRequest is the request used for the GetAuthnDescriptor RPC
 **/
GPB_FINAL @interface GetAuthnDescriptorRequest : GPBMessage

@end

#pragma mark - GetAuthnDescriptorResponse

typedef GPB_ENUM(GetAuthnDescriptorResponse_FieldNumber) {
  GetAuthnDescriptorResponse_FieldNumber_Authn = 1,
};

/**
 * GetAuthnDescriptorResponse is the response returned by the GetAuthnDescriptor RPC
 **/
GPB_FINAL @interface GetAuthnDescriptorResponse : GPBMessage

/** authn describes how to authenticate to the application when sending transactions */
@property(nonatomic, readwrite, strong, null_resettable) AuthnDescriptor *authn;
/** Test to see if @c authn has been set. */
@property(nonatomic, readwrite) BOOL hasAuthn;

@end

#pragma mark - GetChainDescriptorRequest

/**
 * GetChainDescriptorRequest is the request used for the GetChainDescriptor RPC
 **/
GPB_FINAL @interface GetChainDescriptorRequest : GPBMessage

@end

#pragma mark - GetChainDescriptorResponse

typedef GPB_ENUM(GetChainDescriptorResponse_FieldNumber) {
  GetChainDescriptorResponse_FieldNumber_Chain = 1,
};

/**
 * GetChainDescriptorResponse is the response returned by the GetChainDescriptor RPC
 **/
GPB_FINAL @interface GetChainDescriptorResponse : GPBMessage

/** chain describes application chain information */
@property(nonatomic, readwrite, strong, null_resettable) ChainDescriptor *chain;
/** Test to see if @c chain has been set. */
@property(nonatomic, readwrite) BOOL hasChain;

@end

#pragma mark - GetCodecDescriptorRequest

/**
 * GetCodecDescriptorRequest is the request used for the GetCodecDescriptor RPC
 **/
GPB_FINAL @interface GetCodecDescriptorRequest : GPBMessage

@end

#pragma mark - GetCodecDescriptorResponse

typedef GPB_ENUM(GetCodecDescriptorResponse_FieldNumber) {
  GetCodecDescriptorResponse_FieldNumber_Codec = 1,
};

/**
 * GetCodecDescriptorResponse is the response returned by the GetCodecDescriptor RPC
 **/
GPB_FINAL @interface GetCodecDescriptorResponse : GPBMessage

/** codec describes the application codec such as registered interfaces and implementations */
@property(nonatomic, readwrite, strong, null_resettable) CodecDescriptor *codec;
/** Test to see if @c codec has been set. */
@property(nonatomic, readwrite) BOOL hasCodec;

@end

#pragma mark - GetConfigurationDescriptorRequest

/**
 * GetConfigurationDescriptorRequest is the request used for the GetConfigurationDescriptor RPC
 **/
GPB_FINAL @interface GetConfigurationDescriptorRequest : GPBMessage

@end

#pragma mark - GetConfigurationDescriptorResponse

typedef GPB_ENUM(GetConfigurationDescriptorResponse_FieldNumber) {
  GetConfigurationDescriptorResponse_FieldNumber_Config = 1,
};

/**
 * GetConfigurationDescriptorResponse is the response returned by the GetConfigurationDescriptor RPC
 **/
GPB_FINAL @interface GetConfigurationDescriptorResponse : GPBMessage

/** config describes the application's sdk.Config */
@property(nonatomic, readwrite, strong, null_resettable) ConfigurationDescriptor *config;
/** Test to see if @c config has been set. */
@property(nonatomic, readwrite) BOOL hasConfig;

@end

#pragma mark - GetQueryServicesDescriptorRequest

/**
 * GetQueryServicesDescriptorRequest is the request used for the GetQueryServicesDescriptor RPC
 **/
GPB_FINAL @interface GetQueryServicesDescriptorRequest : GPBMessage

@end

#pragma mark - GetQueryServicesDescriptorResponse

typedef GPB_ENUM(GetQueryServicesDescriptorResponse_FieldNumber) {
  GetQueryServicesDescriptorResponse_FieldNumber_Queries = 1,
};

/**
 * GetQueryServicesDescriptorResponse is the response returned by the GetQueryServicesDescriptor RPC
 **/
GPB_FINAL @interface GetQueryServicesDescriptorResponse : GPBMessage

/** queries provides information on the available queryable services */
@property(nonatomic, readwrite, strong, null_resettable) QueryServicesDescriptor *queries;
/** Test to see if @c queries has been set. */
@property(nonatomic, readwrite) BOOL hasQueries;

@end

#pragma mark - GetTxDescriptorRequest

/**
 * GetTxDescriptorRequest is the request used for the GetTxDescriptor RPC
 **/
GPB_FINAL @interface GetTxDescriptorRequest : GPBMessage

@end

#pragma mark - GetTxDescriptorResponse

typedef GPB_ENUM(GetTxDescriptorResponse_FieldNumber) {
  GetTxDescriptorResponse_FieldNumber_Tx = 1,
};

/**
 * GetTxDescriptorResponse is the response returned by the GetTxDescriptor RPC
 **/
GPB_FINAL @interface GetTxDescriptorResponse : GPBMessage

/**
 * tx provides information on msgs that can be forwarded to the application
 * alongside the accepted transaction protobuf type
 **/
@property(nonatomic, readwrite, strong, null_resettable) TxDescriptor *tx;
/** Test to see if @c tx has been set. */
@property(nonatomic, readwrite) BOOL hasTx;

@end

#pragma mark - QueryServicesDescriptor

typedef GPB_ENUM(QueryServicesDescriptor_FieldNumber) {
  QueryServicesDescriptor_FieldNumber_QueryServicesArray = 1,
};

/**
 * QueryServicesDescriptor contains the list of cosmos-sdk queriable services
 **/
GPB_FINAL @interface QueryServicesDescriptor : GPBMessage

/** query_services is a list of cosmos-sdk QueryServiceDescriptor */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<QueryServiceDescriptor*> *queryServicesArray;
/** The number of items in @c queryServicesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger queryServicesArray_Count;

@end

#pragma mark - QueryServiceDescriptor

typedef GPB_ENUM(QueryServiceDescriptor_FieldNumber) {
  QueryServiceDescriptor_FieldNumber_Fullname = 1,
  QueryServiceDescriptor_FieldNumber_IsModule = 2,
  QueryServiceDescriptor_FieldNumber_MethodsArray = 3,
};

/**
 * QueryServiceDescriptor describes a cosmos-sdk queryable service
 **/
GPB_FINAL @interface QueryServiceDescriptor : GPBMessage

/** fullname is the protobuf fullname of the service descriptor */
@property(nonatomic, readwrite, copy, null_resettable) NSString *fullname;

/** is_module describes if this service is actually exposed by an application's module */
@property(nonatomic, readwrite) BOOL isModule;

/** methods provides a list of query service methods */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<QueryMethodDescriptor*> *methodsArray;
/** The number of items in @c methodsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger methodsArray_Count;

@end

#pragma mark - QueryMethodDescriptor

typedef GPB_ENUM(QueryMethodDescriptor_FieldNumber) {
  QueryMethodDescriptor_FieldNumber_Name = 1,
  QueryMethodDescriptor_FieldNumber_FullQueryPath = 2,
};

/**
 * QueryMethodDescriptor describes a queryable method of a query service
 * no other info is provided beside method name and tendermint queryable path
 * because it would be redundant with the grpc reflection service
 **/
GPB_FINAL @interface QueryMethodDescriptor : GPBMessage

/** name is the protobuf name (not fullname) of the method */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * full_query_path is the path that can be used to query
 * this method via tendermint abci.Query
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *fullQueryPath;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
