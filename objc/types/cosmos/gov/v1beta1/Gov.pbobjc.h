// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/gov/v1beta1/gov.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/v1beta1/Coin.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class TallyResult;
@class WeightedVoteOption;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum VoteOption

/** VoteOption enumerates the valid vote options for a given governance proposal. */
typedef GPB_ENUM(VoteOption) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  VoteOption_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */
  VoteOption_VoteOptionUnspecified = 0,

  /** VOTE_OPTION_YES defines a yes vote option. */
  VoteOption_VoteOptionYes = 1,

  /** VOTE_OPTION_ABSTAIN defines an abstain vote option. */
  VoteOption_VoteOptionAbstain = 2,

  /** VOTE_OPTION_NO defines a no vote option. */
  VoteOption_VoteOptionNo = 3,

  /** VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */
  VoteOption_VoteOptionNoWithVeto = 4,
};

GPBEnumDescriptor *VoteOption_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL VoteOption_IsValidValue(int32_t value);

#pragma mark - Enum ProposalStatus

/** ProposalStatus enumerates the valid statuses of a proposal. */
typedef GPB_ENUM(ProposalStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ProposalStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status. */
  ProposalStatus_ProposalStatusUnspecified = 0,

  /**
   * PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
   * period.
   **/
  ProposalStatus_ProposalStatusDepositPeriod = 1,

  /**
   * PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
   * period.
   **/
  ProposalStatus_ProposalStatusVotingPeriod = 2,

  /**
   * PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
   * passed.
   **/
  ProposalStatus_ProposalStatusPassed = 3,

  /**
   * PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
   * been rejected.
   **/
  ProposalStatus_ProposalStatusRejected = 4,

  /**
   * PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
   * failed.
   **/
  ProposalStatus_ProposalStatusFailed = 5,
};

GPBEnumDescriptor *ProposalStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ProposalStatus_IsValidValue(int32_t value);

#pragma mark - GovRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GovRoot : GPBRootObject
@end

#pragma mark - WeightedVoteOption

typedef GPB_ENUM(WeightedVoteOption_FieldNumber) {
  WeightedVoteOption_FieldNumber_Option = 1,
  WeightedVoteOption_FieldNumber_Weight = 2,
};

/**
 * WeightedVoteOption defines a unit of vote for vote split.
 **/
GPB_FINAL @interface WeightedVoteOption : GPBMessage

/** option defines the valid vote options, it must not contain duplicate vote options. */
@property(nonatomic, readwrite) VoteOption option;

/** weight is the vote weight associated with the vote option. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *weight;

@end

/**
 * Fetches the raw value of a @c WeightedVoteOption's @c option property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t WeightedVoteOption_Option_RawValue(WeightedVoteOption *message);
/**
 * Sets the raw value of an @c WeightedVoteOption's @c option property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetWeightedVoteOption_Option_RawValue(WeightedVoteOption *message, int32_t value);

#pragma mark - TextProposal

typedef GPB_ENUM(TextProposal_FieldNumber) {
  TextProposal_FieldNumber_Title = 1,
  TextProposal_FieldNumber_Description_p = 2,
};

/**
 * TextProposal defines a standard text proposal whose changes need to be
 * manually updated in case of approval.
 **/
GPB_FINAL @interface TextProposal : GPBMessage

/** title of the proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** description associated with the proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

#pragma mark - Deposit

typedef GPB_ENUM(Deposit_FieldNumber) {
  Deposit_FieldNumber_ProposalId = 1,
  Deposit_FieldNumber_Depositor = 2,
  Deposit_FieldNumber_AmountArray = 3,
};

/**
 * Deposit defines an amount deposited by an account address to an active
 * proposal.
 **/
GPB_FINAL @interface Deposit : GPBMessage

/** proposal_id defines the unique id of the proposal. */
@property(nonatomic, readwrite) uint64_t proposalId;

/** depositor defines the deposit addresses from the proposals. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *depositor;

/** amount to be deposited by depositor. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *amountArray;
/** The number of items in @c amountArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger amountArray_Count;

@end

#pragma mark - Proposal

typedef GPB_ENUM(Proposal_FieldNumber) {
  Proposal_FieldNumber_ProposalId = 1,
  Proposal_FieldNumber_Content = 2,
  Proposal_FieldNumber_Status = 3,
  Proposal_FieldNumber_FinalTallyResult = 4,
  Proposal_FieldNumber_SubmitTime = 5,
  Proposal_FieldNumber_DepositEndTime = 6,
  Proposal_FieldNumber_TotalDepositArray = 7,
  Proposal_FieldNumber_VotingStartTime = 8,
  Proposal_FieldNumber_VotingEndTime = 9,
};

/**
 * Proposal defines the core field members of a governance proposal.
 **/
GPB_FINAL @interface Proposal : GPBMessage

/** proposal_id defines the unique id of the proposal. */
@property(nonatomic, readwrite) uint64_t proposalId;

/** content is the proposal's content. */
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** status defines the proposal status. */
@property(nonatomic, readwrite) ProposalStatus status;

/**
 * final_tally_result is the final tally result of the proposal. When
 * querying a proposal via gRPC, this field is not populated until the
 * proposal's voting period has ended.
 **/
@property(nonatomic, readwrite, strong, null_resettable) TallyResult *finalTallyResult;
/** Test to see if @c finalTallyResult has been set. */
@property(nonatomic, readwrite) BOOL hasFinalTallyResult;

/** submit_time is the time of proposal submission. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *submitTime;
/** Test to see if @c submitTime has been set. */
@property(nonatomic, readwrite) BOOL hasSubmitTime;

/** deposit_end_time is the end time for deposition. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *depositEndTime;
/** Test to see if @c depositEndTime has been set. */
@property(nonatomic, readwrite) BOOL hasDepositEndTime;

/** total_deposit is the total deposit on the proposal. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *totalDepositArray;
/** The number of items in @c totalDepositArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger totalDepositArray_Count;

/** voting_start_time is the starting time to vote on a proposal. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *votingStartTime;
/** Test to see if @c votingStartTime has been set. */
@property(nonatomic, readwrite) BOOL hasVotingStartTime;

/** voting_end_time is the end time of voting on a proposal. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *votingEndTime;
/** Test to see if @c votingEndTime has been set. */
@property(nonatomic, readwrite) BOOL hasVotingEndTime;

@end

/**
 * Fetches the raw value of a @c Proposal's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Proposal_Status_RawValue(Proposal *message);
/**
 * Sets the raw value of an @c Proposal's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetProposal_Status_RawValue(Proposal *message, int32_t value);

#pragma mark - TallyResult

typedef GPB_ENUM(TallyResult_FieldNumber) {
  TallyResult_FieldNumber_Yes = 1,
  TallyResult_FieldNumber_Abstain = 2,
  TallyResult_FieldNumber_No = 3,
  TallyResult_FieldNumber_NoWithVeto = 4,
};

/**
 * TallyResult defines a standard tally for a governance proposal.
 **/
GPB_FINAL @interface TallyResult : GPBMessage

/** yes is the number of yes votes on a proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *yes;

/** abstain is the number of abstain votes on a proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *abstain;

/** no is the number of no votes on a proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *no;

/** no_with_veto is the number of no with veto votes on a proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *noWithVeto;

@end

#pragma mark - Vote

typedef GPB_ENUM(Vote_FieldNumber) {
  Vote_FieldNumber_ProposalId = 1,
  Vote_FieldNumber_Voter = 2,
  Vote_FieldNumber_Option = 3,
  Vote_FieldNumber_OptionsArray = 4,
};

/**
 * Vote defines a vote on a governance proposal.
 * A Vote consists of a proposal ID, the voter, and the vote option.
 **/
GPB_FINAL @interface Vote : GPBMessage

/** proposal_id defines the unique id of the proposal. */
@property(nonatomic, readwrite) uint64_t proposalId;

/** voter is the voter address of the proposal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *voter;

/**
 * Deprecated: Prefer to use `options` instead. This field is set in queries
 * if and only if `len(options) == 1` and that option has weight 1. In all
 * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
 **/
@property(nonatomic, readwrite) VoteOption option GPB_DEPRECATED_MSG("cosmos.gov.v1beta1.Vote.option is deprecated (see cosmos/gov/v1beta1/gov.proto).");

/** options is the weighted vote options. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<WeightedVoteOption*> *optionsArray;
/** The number of items in @c optionsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger optionsArray_Count;

@end

/**
 * Fetches the raw value of a @c Vote's @c option property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Vote_Option_RawValue(Vote *message);
/**
 * Sets the raw value of an @c Vote's @c option property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetVote_Option_RawValue(Vote *message, int32_t value);

#pragma mark - DepositParams

typedef GPB_ENUM(DepositParams_FieldNumber) {
  DepositParams_FieldNumber_MinDepositArray = 1,
  DepositParams_FieldNumber_MaxDepositPeriod = 2,
};

/**
 * DepositParams defines the params for deposits on governance proposals.
 **/
GPB_FINAL @interface DepositParams : GPBMessage

/** Minimum deposit for a proposal to enter voting period. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *minDepositArray;
/** The number of items in @c minDepositArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger minDepositArray_Count;

/**
 * Maximum period for Atom holders to deposit on a proposal. Initial value: 2
 * months.
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBDuration *maxDepositPeriod;
/** Test to see if @c maxDepositPeriod has been set. */
@property(nonatomic, readwrite) BOOL hasMaxDepositPeriod;

@end

#pragma mark - VotingParams

typedef GPB_ENUM(VotingParams_FieldNumber) {
  VotingParams_FieldNumber_VotingPeriod = 1,
};

/**
 * VotingParams defines the params for voting on governance proposals.
 **/
GPB_FINAL @interface VotingParams : GPBMessage

/** Duration of the voting period. */
@property(nonatomic, readwrite, strong, null_resettable) GPBDuration *votingPeriod;
/** Test to see if @c votingPeriod has been set. */
@property(nonatomic, readwrite) BOOL hasVotingPeriod;

@end

#pragma mark - TallyParams

typedef GPB_ENUM(TallyParams_FieldNumber) {
  TallyParams_FieldNumber_Quorum = 1,
  TallyParams_FieldNumber_Threshold = 2,
  TallyParams_FieldNumber_VetoThreshold = 3,
};

/**
 * TallyParams defines the params for tallying votes on governance proposals.
 **/
GPB_FINAL @interface TallyParams : GPBMessage

/**
 * Minimum percentage of total stake needed to vote for a result to be
 * considered valid.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSData *quorum;

/** Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *threshold;

/**
 * Minimum value of Veto votes to Total votes ratio for proposal to be
 * vetoed. Default value: 1/3.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSData *vetoThreshold;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
