// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/gov/v1/query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/gov/v1/Query.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Deposit);
GPBObjCClassDeclaration(DepositParams);
GPBObjCClassDeclaration(PageRequest);
GPBObjCClassDeclaration(PageResponse);
GPBObjCClassDeclaration(Params);
GPBObjCClassDeclaration(Proposal);
GPBObjCClassDeclaration(QueryConstitutionRequest);
GPBObjCClassDeclaration(QueryConstitutionResponse);
GPBObjCClassDeclaration(QueryDepositRequest);
GPBObjCClassDeclaration(QueryDepositResponse);
GPBObjCClassDeclaration(QueryDepositsRequest);
GPBObjCClassDeclaration(QueryDepositsResponse);
GPBObjCClassDeclaration(QueryParamsRequest);
GPBObjCClassDeclaration(QueryParamsResponse);
GPBObjCClassDeclaration(QueryProposalRequest);
GPBObjCClassDeclaration(QueryProposalResponse);
GPBObjCClassDeclaration(QueryProposalsRequest);
GPBObjCClassDeclaration(QueryProposalsResponse);
GPBObjCClassDeclaration(QueryTallyResultRequest);
GPBObjCClassDeclaration(QueryTallyResultResponse);
GPBObjCClassDeclaration(QueryVoteRequest);
GPBObjCClassDeclaration(QueryVoteResponse);
GPBObjCClassDeclaration(QueryVotesRequest);
GPBObjCClassDeclaration(QueryVotesResponse);
GPBObjCClassDeclaration(TallyParams);
GPBObjCClassDeclaration(TallyResult);
GPBObjCClassDeclaration(Vote);
GPBObjCClassDeclaration(VotingParams);

#pragma mark - QueryRoot

@implementation QueryRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription QueryRoot_FileDescription = {
  .package = "cosmos.gov.v1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - QueryConstitutionRequest

@implementation QueryConstitutionRequest


typedef struct QueryConstitutionRequest__storage_ {
  uint32_t _has_storage_[1];
} QueryConstitutionRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryConstitutionRequest)
                                   messageName:@"QueryConstitutionRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(QueryConstitutionRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryConstitutionResponse

@implementation QueryConstitutionResponse

@dynamic constitution;

typedef struct QueryConstitutionResponse__storage_ {
  uint32_t _has_storage_[1];
  NSString *constitution;
} QueryConstitutionResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "constitution",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryConstitutionResponse_FieldNumber_Constitution,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryConstitutionResponse__storage_, constitution),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryConstitutionResponse)
                                   messageName:@"QueryConstitutionResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryConstitutionResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryProposalRequest

@implementation QueryProposalRequest

@dynamic proposalId;

typedef struct QueryProposalRequest__storage_ {
  uint32_t _has_storage_[1];
  uint64_t proposalId;
} QueryProposalRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryProposalRequest_FieldNumber_ProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryProposalRequest__storage_, proposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryProposalRequest)
                                   messageName:@"QueryProposalRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryProposalRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryProposalResponse

@implementation QueryProposalResponse

@dynamic hasProposal, proposal;

typedef struct QueryProposalResponse__storage_ {
  uint32_t _has_storage_[1];
  Proposal *proposal;
} QueryProposalResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposal",
        .dataTypeSpecific.clazz = GPBObjCClass(Proposal),
        .number = QueryProposalResponse_FieldNumber_Proposal,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryProposalResponse__storage_, proposal),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryProposalResponse)
                                   messageName:@"QueryProposalResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryProposalResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryProposalsRequest

@implementation QueryProposalsRequest

@dynamic proposalStatus;
@dynamic voter;
@dynamic depositor;
@dynamic hasPagination, pagination;

typedef struct QueryProposalsRequest__storage_ {
  uint32_t _has_storage_[1];
  ProposalStatus proposalStatus;
  NSString *voter;
  NSString *depositor;
  PageRequest *pagination;
} QueryProposalsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalStatus",
        .dataTypeSpecific.enumDescFunc = ProposalStatus_EnumDescriptor,
        .number = QueryProposalsRequest_FieldNumber_ProposalStatus,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryProposalsRequest__storage_, proposalStatus),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "voter",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryProposalsRequest_FieldNumber_Voter,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryProposalsRequest__storage_, voter),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "depositor",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryProposalsRequest_FieldNumber_Depositor,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(QueryProposalsRequest__storage_, depositor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryProposalsRequest_FieldNumber_Pagination,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(QueryProposalsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryProposalsRequest)
                                   messageName:@"QueryProposalsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryProposalsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t QueryProposalsRequest_ProposalStatus_RawValue(QueryProposalsRequest *message) {
  GPBDescriptor *descriptor = [QueryProposalsRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:QueryProposalsRequest_FieldNumber_ProposalStatus];
  return GPBGetMessageRawEnumField(message, field);
}

void SetQueryProposalsRequest_ProposalStatus_RawValue(QueryProposalsRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [QueryProposalsRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:QueryProposalsRequest_FieldNumber_ProposalStatus];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - QueryProposalsResponse

@implementation QueryProposalsResponse

@dynamic proposalsArray, proposalsArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryProposalsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *proposalsArray;
  PageResponse *pagination;
} QueryProposalsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Proposal),
        .number = QueryProposalsResponse_FieldNumber_ProposalsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryProposalsResponse__storage_, proposalsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryProposalsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryProposalsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryProposalsResponse)
                                   messageName:@"QueryProposalsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryProposalsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryVoteRequest

@implementation QueryVoteRequest

@dynamic proposalId;
@dynamic voter;

typedef struct QueryVoteRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *voter;
  uint64_t proposalId;
} QueryVoteRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryVoteRequest_FieldNumber_ProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryVoteRequest__storage_, proposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "voter",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryVoteRequest_FieldNumber_Voter,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryVoteRequest__storage_, voter),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryVoteRequest)
                                   messageName:@"QueryVoteRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryVoteRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryVoteResponse

@implementation QueryVoteResponse

@dynamic hasVote, vote;

typedef struct QueryVoteResponse__storage_ {
  uint32_t _has_storage_[1];
  Vote *vote;
} QueryVoteResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "vote",
        .dataTypeSpecific.clazz = GPBObjCClass(Vote),
        .number = QueryVoteResponse_FieldNumber_Vote,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryVoteResponse__storage_, vote),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryVoteResponse)
                                   messageName:@"QueryVoteResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryVoteResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryVotesRequest

@implementation QueryVotesRequest

@dynamic proposalId;
@dynamic hasPagination, pagination;

typedef struct QueryVotesRequest__storage_ {
  uint32_t _has_storage_[1];
  PageRequest *pagination;
  uint64_t proposalId;
} QueryVotesRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryVotesRequest_FieldNumber_ProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryVotesRequest__storage_, proposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryVotesRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryVotesRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryVotesRequest)
                                   messageName:@"QueryVotesRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryVotesRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryVotesResponse

@implementation QueryVotesResponse

@dynamic votesArray, votesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryVotesResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *votesArray;
  PageResponse *pagination;
} QueryVotesResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "votesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Vote),
        .number = QueryVotesResponse_FieldNumber_VotesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryVotesResponse__storage_, votesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryVotesResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryVotesResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryVotesResponse)
                                   messageName:@"QueryVotesResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryVotesResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryParamsRequest

@implementation QueryParamsRequest

@dynamic paramsType;

typedef struct QueryParamsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *paramsType;
} QueryParamsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "paramsType",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryParamsRequest_FieldNumber_ParamsType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryParamsRequest__storage_, paramsType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryParamsRequest)
                                   messageName:@"QueryParamsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryParamsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryParamsResponse

@implementation QueryParamsResponse

@dynamic hasVotingParams, votingParams;
@dynamic hasDepositParams, depositParams;
@dynamic hasTallyParams, tallyParams;
@dynamic hasParams, params;

typedef struct QueryParamsResponse__storage_ {
  uint32_t _has_storage_[1];
  VotingParams *votingParams;
  DepositParams *depositParams;
  TallyParams *tallyParams;
  Params *params;
} QueryParamsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "votingParams",
        .dataTypeSpecific.clazz = GPBObjCClass(VotingParams),
        .number = QueryParamsResponse_FieldNumber_VotingParams,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryParamsResponse__storage_, votingParams),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "depositParams",
        .dataTypeSpecific.clazz = GPBObjCClass(DepositParams),
        .number = QueryParamsResponse_FieldNumber_DepositParams,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryParamsResponse__storage_, depositParams),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tallyParams",
        .dataTypeSpecific.clazz = GPBObjCClass(TallyParams),
        .number = QueryParamsResponse_FieldNumber_TallyParams,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(QueryParamsResponse__storage_, tallyParams),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "params",
        .dataTypeSpecific.clazz = GPBObjCClass(Params),
        .number = QueryParamsResponse_FieldNumber_Params,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(QueryParamsResponse__storage_, params),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryParamsResponse)
                                   messageName:@"QueryParamsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryParamsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDepositRequest

@implementation QueryDepositRequest

@dynamic proposalId;
@dynamic depositor;

typedef struct QueryDepositRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *depositor;
  uint64_t proposalId;
} QueryDepositRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDepositRequest_FieldNumber_ProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDepositRequest__storage_, proposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "depositor",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDepositRequest_FieldNumber_Depositor,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDepositRequest__storage_, depositor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDepositRequest)
                                   messageName:@"QueryDepositRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDepositRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDepositResponse

@implementation QueryDepositResponse

@dynamic hasDeposit, deposit;

typedef struct QueryDepositResponse__storage_ {
  uint32_t _has_storage_[1];
  Deposit *deposit;
} QueryDepositResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "deposit",
        .dataTypeSpecific.clazz = GPBObjCClass(Deposit),
        .number = QueryDepositResponse_FieldNumber_Deposit,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDepositResponse__storage_, deposit),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDepositResponse)
                                   messageName:@"QueryDepositResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDepositResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDepositsRequest

@implementation QueryDepositsRequest

@dynamic proposalId;
@dynamic hasPagination, pagination;

typedef struct QueryDepositsRequest__storage_ {
  uint32_t _has_storage_[1];
  PageRequest *pagination;
  uint64_t proposalId;
} QueryDepositsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDepositsRequest_FieldNumber_ProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDepositsRequest__storage_, proposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryDepositsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDepositsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDepositsRequest)
                                   messageName:@"QueryDepositsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDepositsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDepositsResponse

@implementation QueryDepositsResponse

@dynamic depositsArray, depositsArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryDepositsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *depositsArray;
  PageResponse *pagination;
} QueryDepositsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "depositsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Deposit),
        .number = QueryDepositsResponse_FieldNumber_DepositsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryDepositsResponse__storage_, depositsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryDepositsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDepositsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDepositsResponse)
                                   messageName:@"QueryDepositsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDepositsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryTallyResultRequest

@implementation QueryTallyResultRequest

@dynamic proposalId;

typedef struct QueryTallyResultRequest__storage_ {
  uint32_t _has_storage_[1];
  uint64_t proposalId;
} QueryTallyResultRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "proposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryTallyResultRequest_FieldNumber_ProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryTallyResultRequest__storage_, proposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryTallyResultRequest)
                                   messageName:@"QueryTallyResultRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryTallyResultRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryTallyResultResponse

@implementation QueryTallyResultResponse

@dynamic hasTally, tally;

typedef struct QueryTallyResultResponse__storage_ {
  uint32_t _has_storage_[1];
  TallyResult *tally;
} QueryTallyResultResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tally",
        .dataTypeSpecific.clazz = GPBObjCClass(TallyResult),
        .number = QueryTallyResultResponse_FieldNumber_Tally,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryTallyResultResponse__storage_, tally),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryTallyResultResponse)
                                   messageName:@"QueryTallyResultResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryTallyResultResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
