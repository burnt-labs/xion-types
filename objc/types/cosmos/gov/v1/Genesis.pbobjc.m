// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/gov/v1/genesis.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/gov/v1/Genesis.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Deposit);
GPBObjCClassDeclaration(DepositParams);
GPBObjCClassDeclaration(GenesisState);
GPBObjCClassDeclaration(Params);
GPBObjCClassDeclaration(Proposal);
GPBObjCClassDeclaration(TallyParams);
GPBObjCClassDeclaration(Vote);
GPBObjCClassDeclaration(VotingParams);

#pragma mark - GenesisRoot

@implementation GenesisRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription GenesisRoot_FileDescription = {
  .package = "cosmos.gov.v1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - GenesisState

@implementation GenesisState

@dynamic startingProposalId;
@dynamic depositsArray, depositsArray_Count;
@dynamic votesArray, votesArray_Count;
@dynamic proposalsArray, proposalsArray_Count;
@dynamic hasDepositParams, depositParams;
@dynamic hasVotingParams, votingParams;
@dynamic hasTallyParams, tallyParams;
@dynamic hasParams, params;
@dynamic constitution;

typedef struct GenesisState__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *depositsArray;
  NSMutableArray *votesArray;
  NSMutableArray *proposalsArray;
  DepositParams *depositParams;
  VotingParams *votingParams;
  TallyParams *tallyParams;
  Params *params;
  NSString *constitution;
  uint64_t startingProposalId;
} GenesisState__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "startingProposalId",
        .dataTypeSpecific.clazz = Nil,
        .number = GenesisState_FieldNumber_StartingProposalId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GenesisState__storage_, startingProposalId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "depositsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Deposit),
        .number = GenesisState_FieldNumber_DepositsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, depositsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "votesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Vote),
        .number = GenesisState_FieldNumber_VotesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, votesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "proposalsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Proposal),
        .number = GenesisState_FieldNumber_ProposalsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, proposalsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "depositParams",
        .dataTypeSpecific.clazz = GPBObjCClass(DepositParams),
        .number = GenesisState_FieldNumber_DepositParams,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GenesisState__storage_, depositParams),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "votingParams",
        .dataTypeSpecific.clazz = GPBObjCClass(VotingParams),
        .number = GenesisState_FieldNumber_VotingParams,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(GenesisState__storage_, votingParams),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "tallyParams",
        .dataTypeSpecific.clazz = GPBObjCClass(TallyParams),
        .number = GenesisState_FieldNumber_TallyParams,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(GenesisState__storage_, tallyParams),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "params",
        .dataTypeSpecific.clazz = GPBObjCClass(Params),
        .number = GenesisState_FieldNumber_Params,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(GenesisState__storage_, params),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "constitution",
        .dataTypeSpecific.clazz = Nil,
        .number = GenesisState_FieldNumber_Constitution,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(GenesisState__storage_, constitution),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(GenesisState)
                                   messageName:@"GenesisState"
                               fileDescription:&GenesisRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GenesisState__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
