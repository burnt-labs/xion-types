// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/params/v1beta1/query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/params/v1beta1/Params.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Subspace;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - QueryRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface QueryRoot : GPBRootObject
@end

#pragma mark - QueryParamsRequest

typedef GPB_ENUM(QueryParamsRequest_FieldNumber) {
  QueryParamsRequest_FieldNumber_Subspace = 1,
  QueryParamsRequest_FieldNumber_Key = 2,
};

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 **/
GPB_FINAL @interface QueryParamsRequest : GPBMessage

/** subspace defines the module to query the parameter for. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subspace;

/** key defines the key of the parameter in the subspace. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@end

#pragma mark - QueryParamsResponse

typedef GPB_ENUM(QueryParamsResponse_FieldNumber) {
  QueryParamsResponse_FieldNumber_Param = 1,
};

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 **/
GPB_FINAL @interface QueryParamsResponse : GPBMessage

/** param defines the queried parameter. */
@property(nonatomic, readwrite, strong, null_resettable) ParamChange *param;
/** Test to see if @c param has been set. */
@property(nonatomic, readwrite) BOOL hasParam;

@end

#pragma mark - QuerySubspacesRequest

/**
 * QuerySubspacesRequest defines a request type for querying for all registered
 * subspaces and all keys for a subspace.
 **/
GPB_FINAL @interface QuerySubspacesRequest : GPBMessage

@end

#pragma mark - QuerySubspacesResponse

typedef GPB_ENUM(QuerySubspacesResponse_FieldNumber) {
  QuerySubspacesResponse_FieldNumber_SubspacesArray = 1,
};

/**
 * QuerySubspacesResponse defines the response types for querying for all
 * registered subspaces and all keys for a subspace.
 **/
GPB_FINAL @interface QuerySubspacesResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Subspace*> *subspacesArray;
/** The number of items in @c subspacesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger subspacesArray_Count;

@end

#pragma mark - Subspace

typedef GPB_ENUM(Subspace_FieldNumber) {
  Subspace_FieldNumber_Subspace = 1,
  Subspace_FieldNumber_KeysArray = 2,
};

/**
 * Subspace defines a parameter subspace name and all the keys that exist for
 * the subspace.
 **/
GPB_FINAL @interface Subspace : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *subspace;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *keysArray;
/** The number of items in @c keysArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger keysArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
