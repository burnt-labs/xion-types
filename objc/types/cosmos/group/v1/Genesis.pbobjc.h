// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/group/v1/genesis.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/group/v1/Types.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GenesisRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface GenesisRoot : GPBRootObject
@end

#pragma mark - GenesisState

typedef GPB_ENUM(GenesisState_FieldNumber) {
  GenesisState_FieldNumber_GroupSeq = 1,
  GenesisState_FieldNumber_GroupsArray = 2,
  GenesisState_FieldNumber_GroupMembersArray = 3,
  GenesisState_FieldNumber_GroupPolicySeq = 4,
  GenesisState_FieldNumber_GroupPoliciesArray = 5,
  GenesisState_FieldNumber_ProposalSeq = 6,
  GenesisState_FieldNumber_ProposalsArray = 7,
  GenesisState_FieldNumber_VotesArray = 8,
};

/**
 * GenesisState defines the group module's genesis state.
 **/
GPB_FINAL @interface GenesisState : GPBMessage

/**
 * group_seq is the group table orm.Sequence,
 * it is used to get the next group ID.
 **/
@property(nonatomic, readwrite) uint64_t groupSeq;

/** groups is the list of groups info. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupInfo*> *groupsArray;
/** The number of items in @c groupsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger groupsArray_Count;

/** group_members is the list of groups members. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupMember*> *groupMembersArray;
/** The number of items in @c groupMembersArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger groupMembersArray_Count;

/**
 * group_policy_seq is the group policy table orm.Sequence,
 * it is used to generate the next group policy account address.
 **/
@property(nonatomic, readwrite) uint64_t groupPolicySeq;

/** group_policies is the list of group policies info. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GroupPolicyInfo*> *groupPoliciesArray;
/** The number of items in @c groupPoliciesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger groupPoliciesArray_Count;

/**
 * proposal_seq is the proposal table orm.Sequence,
 * it is used to get the next proposal ID.
 **/
@property(nonatomic, readwrite) uint64_t proposalSeq;

/** proposals is the list of proposals. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Proposal*> *proposalsArray;
/** The number of items in @c proposalsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger proposalsArray_Count;

/** votes is the list of votes. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Vote*> *votesArray;
/** The number of items in @c votesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger votesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
