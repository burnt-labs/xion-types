// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/upgrade/v1beta1/upgrade.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Plan;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - UpgradeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface UpgradeRoot : GPBRootObject
@end

#pragma mark - Plan

typedef GPB_ENUM(Plan_FieldNumber) {
  Plan_FieldNumber_Name = 1,
  Plan_FieldNumber_Time = 2,
  Plan_FieldNumber_Height = 3,
  Plan_FieldNumber_Info = 4,
  Plan_FieldNumber_UpgradedClientState = 5,
};

/**
 * Plan specifies information about a planned upgrade and when it should occur.
 **/
GPB_FINAL @interface Plan : GPBMessage

/**
 * Sets the name for the upgrade. This name will be used by the upgraded
 * version of the software to apply any special "on-upgrade" commands during
 * the first BeginBlock method after the upgrade is applied. It is also used
 * to detect whether a software version can handle a given upgrade. If no
 * upgrade handler with this name has been set in the software, it will be
 * assumed that the software is out-of-date when the upgrade Time or Height is
 * reached and the software will exit.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
 * has been removed from the SDK.
 * If this field is not empty, an error will be thrown.
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time GPB_DEPRECATED_MSG("cosmos.upgrade.v1beta1.Plan.time is deprecated (see cosmos/upgrade/v1beta1/upgrade.proto).");
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime GPB_DEPRECATED_MSG("cosmos.upgrade.v1beta1.Plan.time is deprecated (see cosmos/upgrade/v1beta1/upgrade.proto).");

/** The height at which the upgrade must be performed. */
@property(nonatomic, readwrite) int64_t height;

/**
 * Any application specific upgrade info to be included on-chain
 * such as a git commit that validators could automatically upgrade to
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *info;

/**
 * Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
 * moved to the IBC module in the sub module 02-client.
 * If this field is not empty, an error will be thrown.
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *upgradedClientState GPB_DEPRECATED_MSG("cosmos.upgrade.v1beta1.Plan.upgraded_client_state is deprecated (see cosmos/upgrade/v1beta1/upgrade.proto).");
/** Test to see if @c upgradedClientState has been set. */
@property(nonatomic, readwrite) BOOL hasUpgradedClientState GPB_DEPRECATED_MSG("cosmos.upgrade.v1beta1.Plan.upgraded_client_state is deprecated (see cosmos/upgrade/v1beta1/upgrade.proto).");

@end

#pragma mark - SoftwareUpgradeProposal

typedef GPB_ENUM(SoftwareUpgradeProposal_FieldNumber) {
  SoftwareUpgradeProposal_FieldNumber_Title = 1,
  SoftwareUpgradeProposal_FieldNumber_Description_p = 2,
  SoftwareUpgradeProposal_FieldNumber_Plan = 3,
};

/**
 * SoftwareUpgradeProposal is a gov Content type for initiating a software
 * upgrade.
 * Deprecated: This legacy proposal is deprecated in favor of Msg-based gov
 * proposals, see MsgSoftwareUpgrade.
 **/
GPB_DEPRECATED_MSG("cosmos.upgrade.v1beta1.SoftwareUpgradeProposal is deprecated (see cosmos/upgrade/v1beta1/upgrade.proto).")
GPB_FINAL @interface SoftwareUpgradeProposal : GPBMessage

/** title of the proposal */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** description of the proposal */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** plan of the proposal */
@property(nonatomic, readwrite, strong, null_resettable) Plan *plan;
/** Test to see if @c plan has been set. */
@property(nonatomic, readwrite) BOOL hasPlan;

@end

#pragma mark - CancelSoftwareUpgradeProposal

typedef GPB_ENUM(CancelSoftwareUpgradeProposal_FieldNumber) {
  CancelSoftwareUpgradeProposal_FieldNumber_Title = 1,
  CancelSoftwareUpgradeProposal_FieldNumber_Description_p = 2,
};

/**
 * CancelSoftwareUpgradeProposal is a gov Content type for cancelling a software
 * upgrade.
 * Deprecated: This legacy proposal is deprecated in favor of Msg-based gov
 * proposals, see MsgCancelUpgrade.
 **/
GPB_DEPRECATED_MSG("cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal is deprecated (see cosmos/upgrade/v1beta1/upgrade.proto).")
GPB_FINAL @interface CancelSoftwareUpgradeProposal : GPBMessage

/** title of the proposal */
@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

/** description of the proposal */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

#pragma mark - ModuleVersion

typedef GPB_ENUM(ModuleVersion_FieldNumber) {
  ModuleVersion_FieldNumber_Name = 1,
  ModuleVersion_FieldNumber_Version = 2,
};

/**
 * ModuleVersion specifies a module and its consensus version.
 **/
GPB_FINAL @interface ModuleVersion : GPBMessage

/** name of the app module */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** consensus version of the app module */
@property(nonatomic, readwrite) uint64_t version;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
