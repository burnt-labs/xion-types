// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/store/v1beta1/listening.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "tendermint/abci/Types.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ListeningRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ListeningRoot : GPBRootObject
@end

#pragma mark - StoreKVPair

typedef GPB_ENUM(StoreKVPair_FieldNumber) {
  StoreKVPair_FieldNumber_StoreKey = 1,
  StoreKVPair_FieldNumber_Delete_p = 2,
  StoreKVPair_FieldNumber_Key = 3,
  StoreKVPair_FieldNumber_Value = 4,
};

/**
 * StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
 * It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
 * Deletes
 **/
GPB_FINAL @interface StoreKVPair : GPBMessage

/** the store key for the KVStore this pair originates from */
@property(nonatomic, readwrite, copy, null_resettable) NSString *storeKey;

/** true indicates a delete operation, false indicates a set operation */
@property(nonatomic, readwrite) BOOL delete_p;

@property(nonatomic, readwrite, copy, null_resettable) NSData *key;

@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@end

#pragma mark - BlockMetadata

typedef GPB_ENUM(BlockMetadata_FieldNumber) {
  BlockMetadata_FieldNumber_ResponseCommit = 6,
  BlockMetadata_FieldNumber_RequestFinalizeBlock = 7,
  BlockMetadata_FieldNumber_ResponseFinalizeBlock = 8,
};

/**
 * BlockMetadata contains all the abci event data of a block
 * the file streamer dump them into files together with the state changes.
 **/
GPB_FINAL @interface BlockMetadata : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ResponseCommit *responseCommit;
/** Test to see if @c responseCommit has been set. */
@property(nonatomic, readwrite) BOOL hasResponseCommit;

@property(nonatomic, readwrite, strong, null_resettable) RequestFinalizeBlock *requestFinalizeBlock;
/** Test to see if @c requestFinalizeBlock has been set. */
@property(nonatomic, readwrite) BOOL hasRequestFinalizeBlock;

/** TODO: should we renumber this? */
@property(nonatomic, readwrite, strong, null_resettable) ResponseFinalizeBlock *responseFinalizeBlock;
/** Test to see if @c responseFinalizeBlock has been set. */
@property(nonatomic, readwrite) BOOL hasResponseFinalizeBlock;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
