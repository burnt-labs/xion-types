// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/distribution/v1beta1/distribution.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/v1beta1/Coin.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ValidatorSlashEvent;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DistributionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DistributionRoot : GPBRootObject
@end

#pragma mark - Params

typedef GPB_ENUM(Params_FieldNumber) {
  Params_FieldNumber_CommunityTax = 1,
  Params_FieldNumber_BaseProposerReward = 2,
  Params_FieldNumber_BonusProposerReward = 3,
  Params_FieldNumber_WithdrawAddrEnabled = 4,
};

/**
 * Params defines the set of params for the distribution module.
 **/
GPB_FINAL @interface Params : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *communityTax;

/**
 * Deprecated: The base_proposer_reward field is deprecated and is no longer used
 * in the x/distribution module's reward mechanism.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *baseProposerReward GPB_DEPRECATED_MSG("cosmos.distribution.v1beta1.Params.base_proposer_reward is deprecated (see cosmos/distribution/v1beta1/distribution.proto).");

/**
 * Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
 * in the x/distribution module's reward mechanism.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *bonusProposerReward GPB_DEPRECATED_MSG("cosmos.distribution.v1beta1.Params.bonus_proposer_reward is deprecated (see cosmos/distribution/v1beta1/distribution.proto).");

@property(nonatomic, readwrite) BOOL withdrawAddrEnabled;

@end

#pragma mark - ValidatorHistoricalRewards

typedef GPB_ENUM(ValidatorHistoricalRewards_FieldNumber) {
  ValidatorHistoricalRewards_FieldNumber_CumulativeRewardRatioArray = 1,
  ValidatorHistoricalRewards_FieldNumber_ReferenceCount = 2,
};

/**
 * ValidatorHistoricalRewards represents historical rewards for a validator.
 * Height is implicit within the store key.
 * Cumulative reward ratio is the sum from the zeroeth period
 * until this period of rewards / tokens, per the spec.
 * The reference count indicates the number of objects
 * which might need to reference this historical entry at any point.
 * ReferenceCount =
 *    number of outstanding delegations which ended the associated period (and
 *    might need to read that record)
 *  + number of slashes which ended the associated period (and might need to
 *  read that record)
 *  + one per validator for the zeroeth period, set on initialization
 **/
GPB_FINAL @interface ValidatorHistoricalRewards : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DecCoin*> *cumulativeRewardRatioArray;
/** The number of items in @c cumulativeRewardRatioArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger cumulativeRewardRatioArray_Count;

@property(nonatomic, readwrite) uint32_t referenceCount;

@end

#pragma mark - ValidatorCurrentRewards

typedef GPB_ENUM(ValidatorCurrentRewards_FieldNumber) {
  ValidatorCurrentRewards_FieldNumber_RewardsArray = 1,
  ValidatorCurrentRewards_FieldNumber_Period = 2,
};

/**
 * ValidatorCurrentRewards represents current rewards and current
 * period for a validator kept as a running counter and incremented
 * each block as long as the validator's tokens remain constant.
 **/
GPB_FINAL @interface ValidatorCurrentRewards : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DecCoin*> *rewardsArray;
/** The number of items in @c rewardsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger rewardsArray_Count;

@property(nonatomic, readwrite) uint64_t period;

@end

#pragma mark - ValidatorAccumulatedCommission

typedef GPB_ENUM(ValidatorAccumulatedCommission_FieldNumber) {
  ValidatorAccumulatedCommission_FieldNumber_CommissionArray = 1,
};

/**
 * ValidatorAccumulatedCommission represents accumulated commission
 * for a validator kept as a running counter, can be withdrawn at any time.
 **/
GPB_FINAL @interface ValidatorAccumulatedCommission : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DecCoin*> *commissionArray;
/** The number of items in @c commissionArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger commissionArray_Count;

@end

#pragma mark - ValidatorOutstandingRewards

typedef GPB_ENUM(ValidatorOutstandingRewards_FieldNumber) {
  ValidatorOutstandingRewards_FieldNumber_RewardsArray = 1,
};

/**
 * ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
 * for a validator inexpensive to track, allows simple sanity checks.
 **/
GPB_FINAL @interface ValidatorOutstandingRewards : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DecCoin*> *rewardsArray;
/** The number of items in @c rewardsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger rewardsArray_Count;

@end

#pragma mark - ValidatorSlashEvent

typedef GPB_ENUM(ValidatorSlashEvent_FieldNumber) {
  ValidatorSlashEvent_FieldNumber_ValidatorPeriod = 1,
  ValidatorSlashEvent_FieldNumber_Fraction = 2,
};

/**
 * ValidatorSlashEvent represents a validator slash event.
 * Height is implicit within the store key.
 * This is needed to calculate appropriate amount of staking tokens
 * for delegations which are withdrawn after a slash has occurred.
 **/
GPB_FINAL @interface ValidatorSlashEvent : GPBMessage

@property(nonatomic, readwrite) uint64_t validatorPeriod;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fraction;

@end

#pragma mark - ValidatorSlashEvents

typedef GPB_ENUM(ValidatorSlashEvents_FieldNumber) {
  ValidatorSlashEvents_FieldNumber_ValidatorSlashEventsArray = 1,
};

/**
 * ValidatorSlashEvents is a collection of ValidatorSlashEvent messages.
 **/
GPB_FINAL @interface ValidatorSlashEvents : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ValidatorSlashEvent*> *validatorSlashEventsArray;
/** The number of items in @c validatorSlashEventsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger validatorSlashEventsArray_Count;

@end

#pragma mark - FeePool

typedef GPB_ENUM(FeePool_FieldNumber) {
  FeePool_FieldNumber_CommunityPoolArray = 1,
};

/**
 * FeePool is the global fee pool for distribution.
 **/
GPB_FINAL @interface FeePool : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DecCoin*> *communityPoolArray;
/** The number of items in @c communityPoolArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger communityPoolArray_Count;

@end

#pragma mark - CommunityPoolSpendProposal

typedef GPB_ENUM(CommunityPoolSpendProposal_FieldNumber) {
  CommunityPoolSpendProposal_FieldNumber_Title = 1,
  CommunityPoolSpendProposal_FieldNumber_Description_p = 2,
  CommunityPoolSpendProposal_FieldNumber_Recipient = 3,
  CommunityPoolSpendProposal_FieldNumber_AmountArray = 4,
};

/**
 * CommunityPoolSpendProposal details a proposal for use of community funds,
 * together with how many coins are proposed to be spent, and to which
 * recipient account.
 *
 * Deprecated: Do not use. As of the Cosmos SDK release v0.47.x, there is no
 * longer a need for an explicit CommunityPoolSpendProposal. To spend community
 * pool funds, a simple MsgCommunityPoolSpend can be invoked from the x/gov
 * module via a v1 governance proposal.
 **/
GPB_DEPRECATED_MSG("cosmos.distribution.v1beta1.CommunityPoolSpendProposal is deprecated (see cosmos/distribution/v1beta1/distribution.proto).")
GPB_FINAL @interface CommunityPoolSpendProposal : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *recipient;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *amountArray;
/** The number of items in @c amountArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger amountArray_Count;

@end

#pragma mark - DelegatorStartingInfo

typedef GPB_ENUM(DelegatorStartingInfo_FieldNumber) {
  DelegatorStartingInfo_FieldNumber_PreviousPeriod = 1,
  DelegatorStartingInfo_FieldNumber_Stake = 2,
  DelegatorStartingInfo_FieldNumber_Height = 3,
};

/**
 * DelegatorStartingInfo represents the starting info for a delegator reward
 * period. It tracks the previous validator period, the delegation's amount of
 * staking token, and the creation height (to check later on if any slashes have
 * occurred). NOTE: Even though validators are slashed to whole staking tokens,
 * the delegators within the validator may be left with less than a full token,
 * thus sdk.Dec is used.
 **/
GPB_FINAL @interface DelegatorStartingInfo : GPBMessage

@property(nonatomic, readwrite) uint64_t previousPeriod;

@property(nonatomic, readwrite, copy, null_resettable) NSString *stake;

@property(nonatomic, readwrite) uint64_t height;

@end

#pragma mark - DelegationDelegatorReward

typedef GPB_ENUM(DelegationDelegatorReward_FieldNumber) {
  DelegationDelegatorReward_FieldNumber_ValidatorAddress = 1,
  DelegationDelegatorReward_FieldNumber_RewardArray = 2,
};

/**
 * DelegationDelegatorReward represents the properties
 * of a delegator's delegation reward.
 **/
GPB_FINAL @interface DelegationDelegatorReward : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *validatorAddress;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DecCoin*> *rewardArray;
/** The number of items in @c rewardArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger rewardArray_Count;

@end

#pragma mark - CommunityPoolSpendProposalWithDeposit

typedef GPB_ENUM(CommunityPoolSpendProposalWithDeposit_FieldNumber) {
  CommunityPoolSpendProposalWithDeposit_FieldNumber_Title = 1,
  CommunityPoolSpendProposalWithDeposit_FieldNumber_Description_p = 2,
  CommunityPoolSpendProposalWithDeposit_FieldNumber_Recipient = 3,
  CommunityPoolSpendProposalWithDeposit_FieldNumber_Amount = 4,
  CommunityPoolSpendProposalWithDeposit_FieldNumber_Deposit = 5,
};

/**
 * CommunityPoolSpendProposalWithDeposit defines a CommunityPoolSpendProposal
 * with a deposit
 **/
GPB_FINAL @interface CommunityPoolSpendProposalWithDeposit : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *recipient;

@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deposit;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
