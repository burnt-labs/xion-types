// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/vesting/v1beta1/tx.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/vesting/v1beta1/Tx.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Coin);
GPBObjCClassDeclaration(MsgCreatePeriodicVestingAccount);
GPBObjCClassDeclaration(MsgCreatePeriodicVestingAccountResponse);
GPBObjCClassDeclaration(MsgCreatePermanentLockedAccount);
GPBObjCClassDeclaration(MsgCreatePermanentLockedAccountResponse);
GPBObjCClassDeclaration(MsgCreateVestingAccount);
GPBObjCClassDeclaration(MsgCreateVestingAccountResponse);
GPBObjCClassDeclaration(Period);

#pragma mark - TxRoot

@implementation TxRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription TxRoot_FileDescription = {
  .package = "cosmos.vesting.v1beta1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - MsgCreateVestingAccount

@implementation MsgCreateVestingAccount

@dynamic fromAddress;
@dynamic toAddress;
@dynamic amountArray, amountArray_Count;
@dynamic endTime;
@dynamic delayed;

typedef struct MsgCreateVestingAccount__storage_ {
  uint32_t _has_storage_[1];
  NSString *fromAddress;
  NSString *toAddress;
  NSMutableArray *amountArray;
  int64_t endTime;
} MsgCreateVestingAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fromAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreateVestingAccount_FieldNumber_FromAddress,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgCreateVestingAccount__storage_, fromAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreateVestingAccount_FieldNumber_ToAddress,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgCreateVestingAccount__storage_, toAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amountArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = MsgCreateVestingAccount_FieldNumber_AmountArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MsgCreateVestingAccount__storage_, amountArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "endTime",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreateVestingAccount_FieldNumber_EndTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MsgCreateVestingAccount__storage_, endTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "delayed",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreateVestingAccount_FieldNumber_Delayed,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgCreateVestingAccount)
                                   messageName:@"MsgCreateVestingAccount"
                               fileDescription:&TxRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgCreateVestingAccount__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgCreateVestingAccountResponse

@implementation MsgCreateVestingAccountResponse


typedef struct MsgCreateVestingAccountResponse__storage_ {
  uint32_t _has_storage_[1];
} MsgCreateVestingAccountResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgCreateVestingAccountResponse)
                                   messageName:@"MsgCreateVestingAccountResponse"
                               fileDescription:&TxRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(MsgCreateVestingAccountResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgCreatePermanentLockedAccount

@implementation MsgCreatePermanentLockedAccount

@dynamic fromAddress;
@dynamic toAddress;
@dynamic amountArray, amountArray_Count;

typedef struct MsgCreatePermanentLockedAccount__storage_ {
  uint32_t _has_storage_[1];
  NSString *fromAddress;
  NSString *toAddress;
  NSMutableArray *amountArray;
} MsgCreatePermanentLockedAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fromAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreatePermanentLockedAccount_FieldNumber_FromAddress,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgCreatePermanentLockedAccount__storage_, fromAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreatePermanentLockedAccount_FieldNumber_ToAddress,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgCreatePermanentLockedAccount__storage_, toAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "amountArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = MsgCreatePermanentLockedAccount_FieldNumber_AmountArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MsgCreatePermanentLockedAccount__storage_, amountArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgCreatePermanentLockedAccount)
                                   messageName:@"MsgCreatePermanentLockedAccount"
                               fileDescription:&TxRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgCreatePermanentLockedAccount__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgCreatePermanentLockedAccountResponse

@implementation MsgCreatePermanentLockedAccountResponse


typedef struct MsgCreatePermanentLockedAccountResponse__storage_ {
  uint32_t _has_storage_[1];
} MsgCreatePermanentLockedAccountResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgCreatePermanentLockedAccountResponse)
                                   messageName:@"MsgCreatePermanentLockedAccountResponse"
                               fileDescription:&TxRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(MsgCreatePermanentLockedAccountResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgCreatePeriodicVestingAccount

@implementation MsgCreatePeriodicVestingAccount

@dynamic fromAddress;
@dynamic toAddress;
@dynamic startTime;
@dynamic vestingPeriodsArray, vestingPeriodsArray_Count;

typedef struct MsgCreatePeriodicVestingAccount__storage_ {
  uint32_t _has_storage_[1];
  NSString *fromAddress;
  NSString *toAddress;
  NSMutableArray *vestingPeriodsArray;
  int64_t startTime;
} MsgCreatePeriodicVestingAccount__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fromAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreatePeriodicVestingAccount_FieldNumber_FromAddress,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MsgCreatePeriodicVestingAccount__storage_, fromAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "toAddress",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreatePeriodicVestingAccount_FieldNumber_ToAddress,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MsgCreatePeriodicVestingAccount__storage_, toAddress),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "startTime",
        .dataTypeSpecific.clazz = Nil,
        .number = MsgCreatePeriodicVestingAccount_FieldNumber_StartTime,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MsgCreatePeriodicVestingAccount__storage_, startTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "vestingPeriodsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Period),
        .number = MsgCreatePeriodicVestingAccount_FieldNumber_VestingPeriodsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(MsgCreatePeriodicVestingAccount__storage_, vestingPeriodsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgCreatePeriodicVestingAccount)
                                   messageName:@"MsgCreatePeriodicVestingAccount"
                               fileDescription:&TxRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MsgCreatePeriodicVestingAccount__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - MsgCreatePeriodicVestingAccountResponse

@implementation MsgCreatePeriodicVestingAccountResponse


typedef struct MsgCreatePeriodicVestingAccountResponse__storage_ {
  uint32_t _has_storage_[1];
} MsgCreatePeriodicVestingAccountResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MsgCreatePeriodicVestingAccountResponse)
                                   messageName:@"MsgCreatePeriodicVestingAccountResponse"
                               fileDescription:&TxRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(MsgCreatePeriodicVestingAccountResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
