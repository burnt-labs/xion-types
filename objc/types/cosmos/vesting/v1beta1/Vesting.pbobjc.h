// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/vesting/v1beta1/vesting.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/v1beta1/Coin.pbobjc.h"
#import "cosmos/auth/v1beta1/Auth.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BaseVestingAccount;
@class Period;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - VestingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface VestingRoot : GPBRootObject
@end

#pragma mark - BaseVestingAccount

typedef GPB_ENUM(BaseVestingAccount_FieldNumber) {
  BaseVestingAccount_FieldNumber_BaseAccount = 1,
  BaseVestingAccount_FieldNumber_OriginalVestingArray = 2,
  BaseVestingAccount_FieldNumber_DelegatedFreeArray = 3,
  BaseVestingAccount_FieldNumber_DelegatedVestingArray = 4,
  BaseVestingAccount_FieldNumber_EndTime = 5,
};

/**
 * BaseVestingAccount implements the VestingAccount interface. It contains all
 * the necessary fields needed for any vesting account implementation.
 **/
GPB_FINAL @interface BaseVestingAccount : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseAccount *baseAccount;
/** Test to see if @c baseAccount has been set. */
@property(nonatomic, readwrite) BOOL hasBaseAccount;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *originalVestingArray;
/** The number of items in @c originalVestingArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger originalVestingArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *delegatedFreeArray;
/** The number of items in @c delegatedFreeArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger delegatedFreeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *delegatedVestingArray;
/** The number of items in @c delegatedVestingArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger delegatedVestingArray_Count;

/** Vesting end time, as unix timestamp (in seconds). */
@property(nonatomic, readwrite) int64_t endTime;

@end

#pragma mark - ContinuousVestingAccount

typedef GPB_ENUM(ContinuousVestingAccount_FieldNumber) {
  ContinuousVestingAccount_FieldNumber_BaseVestingAccount = 1,
  ContinuousVestingAccount_FieldNumber_StartTime = 2,
};

/**
 * ContinuousVestingAccount implements the VestingAccount interface. It
 * continuously vests by unlocking coins linearly with respect to time.
 **/
GPB_FINAL @interface ContinuousVestingAccount : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseVestingAccount *baseVestingAccount;
/** Test to see if @c baseVestingAccount has been set. */
@property(nonatomic, readwrite) BOOL hasBaseVestingAccount;

/** Vesting start time, as unix timestamp (in seconds). */
@property(nonatomic, readwrite) int64_t startTime;

@end

#pragma mark - DelayedVestingAccount

typedef GPB_ENUM(DelayedVestingAccount_FieldNumber) {
  DelayedVestingAccount_FieldNumber_BaseVestingAccount = 1,
};

/**
 * DelayedVestingAccount implements the VestingAccount interface. It vests all
 * coins after a specific time, but non prior. In other words, it keeps them
 * locked until a specified time.
 **/
GPB_FINAL @interface DelayedVestingAccount : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseVestingAccount *baseVestingAccount;
/** Test to see if @c baseVestingAccount has been set. */
@property(nonatomic, readwrite) BOOL hasBaseVestingAccount;

@end

#pragma mark - Period

typedef GPB_ENUM(Period_FieldNumber) {
  Period_FieldNumber_Length = 1,
  Period_FieldNumber_AmountArray = 2,
};

/**
 * Period defines a length of time and amount of coins that will vest.
 **/
GPB_FINAL @interface Period : GPBMessage

/** Period duration in seconds. */
@property(nonatomic, readwrite) int64_t length;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *amountArray;
/** The number of items in @c amountArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger amountArray_Count;

@end

#pragma mark - PeriodicVestingAccount

typedef GPB_ENUM(PeriodicVestingAccount_FieldNumber) {
  PeriodicVestingAccount_FieldNumber_BaseVestingAccount = 1,
  PeriodicVestingAccount_FieldNumber_StartTime = 2,
  PeriodicVestingAccount_FieldNumber_VestingPeriodsArray = 3,
};

/**
 * PeriodicVestingAccount implements the VestingAccount interface. It
 * periodically vests by unlocking coins during each specified period.
 **/
GPB_FINAL @interface PeriodicVestingAccount : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseVestingAccount *baseVestingAccount;
/** Test to see if @c baseVestingAccount has been set. */
@property(nonatomic, readwrite) BOOL hasBaseVestingAccount;

@property(nonatomic, readwrite) int64_t startTime;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Period*> *vestingPeriodsArray;
/** The number of items in @c vestingPeriodsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger vestingPeriodsArray_Count;

@end

#pragma mark - PermanentLockedAccount

typedef GPB_ENUM(PermanentLockedAccount_FieldNumber) {
  PermanentLockedAccount_FieldNumber_BaseVestingAccount = 1,
};

/**
 * PermanentLockedAccount implements the VestingAccount interface. It does
 * not ever release coins, locking them indefinitely. Coins in this account can
 * still be used for delegating and for governance votes even while locked.
 **/
GPB_FINAL @interface PermanentLockedAccount : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) BaseVestingAccount *baseVestingAccount;
/** Test to see if @c baseVestingAccount has been set. */
@property(nonatomic, readwrite) BOOL hasBaseVestingAccount;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
