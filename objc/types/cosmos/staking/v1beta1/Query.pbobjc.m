// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/staking/v1beta1/query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/staking/v1beta1/Query.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(DelegationResponse);
GPBObjCClassDeclaration(HistoricalInfo);
GPBObjCClassDeclaration(PageRequest);
GPBObjCClassDeclaration(PageResponse);
GPBObjCClassDeclaration(Params);
GPBObjCClassDeclaration(Pool);
GPBObjCClassDeclaration(QueryDelegationRequest);
GPBObjCClassDeclaration(QueryDelegationResponse);
GPBObjCClassDeclaration(QueryDelegatorDelegationsRequest);
GPBObjCClassDeclaration(QueryDelegatorDelegationsResponse);
GPBObjCClassDeclaration(QueryDelegatorUnbondingDelegationsRequest);
GPBObjCClassDeclaration(QueryDelegatorUnbondingDelegationsResponse);
GPBObjCClassDeclaration(QueryDelegatorValidatorRequest);
GPBObjCClassDeclaration(QueryDelegatorValidatorResponse);
GPBObjCClassDeclaration(QueryDelegatorValidatorsRequest);
GPBObjCClassDeclaration(QueryDelegatorValidatorsResponse);
GPBObjCClassDeclaration(QueryHistoricalInfoRequest);
GPBObjCClassDeclaration(QueryHistoricalInfoResponse);
GPBObjCClassDeclaration(QueryParamsRequest);
GPBObjCClassDeclaration(QueryParamsResponse);
GPBObjCClassDeclaration(QueryPoolRequest);
GPBObjCClassDeclaration(QueryPoolResponse);
GPBObjCClassDeclaration(QueryRedelegationsRequest);
GPBObjCClassDeclaration(QueryRedelegationsResponse);
GPBObjCClassDeclaration(QueryUnbondingDelegationRequest);
GPBObjCClassDeclaration(QueryUnbondingDelegationResponse);
GPBObjCClassDeclaration(QueryValidatorDelegationsRequest);
GPBObjCClassDeclaration(QueryValidatorDelegationsResponse);
GPBObjCClassDeclaration(QueryValidatorRequest);
GPBObjCClassDeclaration(QueryValidatorResponse);
GPBObjCClassDeclaration(QueryValidatorUnbondingDelegationsRequest);
GPBObjCClassDeclaration(QueryValidatorUnbondingDelegationsResponse);
GPBObjCClassDeclaration(QueryValidatorsRequest);
GPBObjCClassDeclaration(QueryValidatorsResponse);
GPBObjCClassDeclaration(RedelegationResponse);
GPBObjCClassDeclaration(UnbondingDelegation);
GPBObjCClassDeclaration(Validator);

#pragma mark - QueryRoot

@implementation QueryRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription QueryRoot_FileDescription = {
  .package = "cosmos.staking.v1beta1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - QueryValidatorsRequest

@implementation QueryValidatorsRequest

@dynamic status;
@dynamic hasPagination, pagination;

typedef struct QueryValidatorsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *status;
  PageRequest *pagination;
} QueryValidatorsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "status",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryValidatorsRequest_FieldNumber_Status,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorsRequest__storage_, status),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryValidatorsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryValidatorsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorsRequest)
                                   messageName:@"QueryValidatorsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorsResponse

@implementation QueryValidatorsResponse

@dynamic validatorsArray, validatorsArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryValidatorsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *validatorsArray;
  PageResponse *pagination;
} QueryValidatorsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validatorsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Validator),
        .number = QueryValidatorsResponse_FieldNumber_ValidatorsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryValidatorsResponse__storage_, validatorsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryValidatorsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorsResponse)
                                   messageName:@"QueryValidatorsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorRequest

@implementation QueryValidatorRequest

@dynamic validatorAddr;

typedef struct QueryValidatorRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *validatorAddr;
} QueryValidatorRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryValidatorRequest_FieldNumber_ValidatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorRequest__storage_, validatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorRequest)
                                   messageName:@"QueryValidatorRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorResponse

@implementation QueryValidatorResponse

@dynamic hasValidator, validator;

typedef struct QueryValidatorResponse__storage_ {
  uint32_t _has_storage_[1];
  Validator *validator;
} QueryValidatorResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validator",
        .dataTypeSpecific.clazz = GPBObjCClass(Validator),
        .number = QueryValidatorResponse_FieldNumber_Validator,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorResponse__storage_, validator),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorResponse)
                                   messageName:@"QueryValidatorResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorDelegationsRequest

@implementation QueryValidatorDelegationsRequest

@dynamic validatorAddr;
@dynamic hasPagination, pagination;

typedef struct QueryValidatorDelegationsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *validatorAddr;
  PageRequest *pagination;
} QueryValidatorDelegationsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryValidatorDelegationsRequest_FieldNumber_ValidatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorDelegationsRequest__storage_, validatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryValidatorDelegationsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryValidatorDelegationsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorDelegationsRequest)
                                   messageName:@"QueryValidatorDelegationsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorDelegationsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorDelegationsResponse

@implementation QueryValidatorDelegationsResponse

@dynamic delegationResponsesArray, delegationResponsesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryValidatorDelegationsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *delegationResponsesArray;
  PageResponse *pagination;
} QueryValidatorDelegationsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegationResponsesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(DelegationResponse),
        .number = QueryValidatorDelegationsResponse_FieldNumber_DelegationResponsesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryValidatorDelegationsResponse__storage_, delegationResponsesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryValidatorDelegationsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorDelegationsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorDelegationsResponse)
                                   messageName:@"QueryValidatorDelegationsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorDelegationsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorUnbondingDelegationsRequest

@implementation QueryValidatorUnbondingDelegationsRequest

@dynamic validatorAddr;
@dynamic hasPagination, pagination;

typedef struct QueryValidatorUnbondingDelegationsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *validatorAddr;
  PageRequest *pagination;
} QueryValidatorUnbondingDelegationsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryValidatorUnbondingDelegationsRequest_FieldNumber_ValidatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorUnbondingDelegationsRequest__storage_, validatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryValidatorUnbondingDelegationsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryValidatorUnbondingDelegationsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorUnbondingDelegationsRequest)
                                   messageName:@"QueryValidatorUnbondingDelegationsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorUnbondingDelegationsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryValidatorUnbondingDelegationsResponse

@implementation QueryValidatorUnbondingDelegationsResponse

@dynamic unbondingResponsesArray, unbondingResponsesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryValidatorUnbondingDelegationsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *unbondingResponsesArray;
  PageResponse *pagination;
} QueryValidatorUnbondingDelegationsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unbondingResponsesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(UnbondingDelegation),
        .number = QueryValidatorUnbondingDelegationsResponse_FieldNumber_UnbondingResponsesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryValidatorUnbondingDelegationsResponse__storage_, unbondingResponsesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryValidatorUnbondingDelegationsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryValidatorUnbondingDelegationsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryValidatorUnbondingDelegationsResponse)
                                   messageName:@"QueryValidatorUnbondingDelegationsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryValidatorUnbondingDelegationsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegationRequest

@implementation QueryDelegationRequest

@dynamic delegatorAddr;
@dynamic validatorAddr;

typedef struct QueryDelegationRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  NSString *validatorAddr;
} QueryDelegationRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegationRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegationRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "validatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegationRequest_FieldNumber_ValidatorAddr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDelegationRequest__storage_, validatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegationRequest)
                                   messageName:@"QueryDelegationRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegationRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegationResponse

@implementation QueryDelegationResponse

@dynamic hasDelegationResponse, delegationResponse;

typedef struct QueryDelegationResponse__storage_ {
  uint32_t _has_storage_[1];
  DelegationResponse *delegationResponse;
} QueryDelegationResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegationResponse",
        .dataTypeSpecific.clazz = GPBObjCClass(DelegationResponse),
        .number = QueryDelegationResponse_FieldNumber_DelegationResponse,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegationResponse__storage_, delegationResponse),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegationResponse)
                                   messageName:@"QueryDelegationResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegationResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryUnbondingDelegationRequest

@implementation QueryUnbondingDelegationRequest

@dynamic delegatorAddr;
@dynamic validatorAddr;

typedef struct QueryUnbondingDelegationRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  NSString *validatorAddr;
} QueryUnbondingDelegationRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryUnbondingDelegationRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryUnbondingDelegationRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "validatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryUnbondingDelegationRequest_FieldNumber_ValidatorAddr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryUnbondingDelegationRequest__storage_, validatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryUnbondingDelegationRequest)
                                   messageName:@"QueryUnbondingDelegationRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryUnbondingDelegationRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryUnbondingDelegationResponse

@implementation QueryUnbondingDelegationResponse

@dynamic hasUnbond, unbond;

typedef struct QueryUnbondingDelegationResponse__storage_ {
  uint32_t _has_storage_[1];
  UnbondingDelegation *unbond;
} QueryUnbondingDelegationResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unbond",
        .dataTypeSpecific.clazz = GPBObjCClass(UnbondingDelegation),
        .number = QueryUnbondingDelegationResponse_FieldNumber_Unbond,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryUnbondingDelegationResponse__storage_, unbond),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryUnbondingDelegationResponse)
                                   messageName:@"QueryUnbondingDelegationResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryUnbondingDelegationResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorDelegationsRequest

@implementation QueryDelegatorDelegationsRequest

@dynamic delegatorAddr;
@dynamic hasPagination, pagination;

typedef struct QueryDelegatorDelegationsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  PageRequest *pagination;
} QueryDelegatorDelegationsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegatorDelegationsRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorDelegationsRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryDelegatorDelegationsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDelegatorDelegationsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorDelegationsRequest)
                                   messageName:@"QueryDelegatorDelegationsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorDelegationsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorDelegationsResponse

@implementation QueryDelegatorDelegationsResponse

@dynamic delegationResponsesArray, delegationResponsesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryDelegatorDelegationsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *delegationResponsesArray;
  PageResponse *pagination;
} QueryDelegatorDelegationsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegationResponsesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(DelegationResponse),
        .number = QueryDelegatorDelegationsResponse_FieldNumber_DelegationResponsesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryDelegatorDelegationsResponse__storage_, delegationResponsesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryDelegatorDelegationsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorDelegationsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorDelegationsResponse)
                                   messageName:@"QueryDelegatorDelegationsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorDelegationsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorUnbondingDelegationsRequest

@implementation QueryDelegatorUnbondingDelegationsRequest

@dynamic delegatorAddr;
@dynamic hasPagination, pagination;

typedef struct QueryDelegatorUnbondingDelegationsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  PageRequest *pagination;
} QueryDelegatorUnbondingDelegationsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegatorUnbondingDelegationsRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorUnbondingDelegationsRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryDelegatorUnbondingDelegationsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDelegatorUnbondingDelegationsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorUnbondingDelegationsRequest)
                                   messageName:@"QueryDelegatorUnbondingDelegationsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorUnbondingDelegationsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorUnbondingDelegationsResponse

@implementation QueryDelegatorUnbondingDelegationsResponse

@dynamic unbondingResponsesArray, unbondingResponsesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryDelegatorUnbondingDelegationsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *unbondingResponsesArray;
  PageResponse *pagination;
} QueryDelegatorUnbondingDelegationsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unbondingResponsesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(UnbondingDelegation),
        .number = QueryDelegatorUnbondingDelegationsResponse_FieldNumber_UnbondingResponsesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryDelegatorUnbondingDelegationsResponse__storage_, unbondingResponsesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryDelegatorUnbondingDelegationsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorUnbondingDelegationsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorUnbondingDelegationsResponse)
                                   messageName:@"QueryDelegatorUnbondingDelegationsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorUnbondingDelegationsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryRedelegationsRequest

@implementation QueryRedelegationsRequest

@dynamic delegatorAddr;
@dynamic srcValidatorAddr;
@dynamic dstValidatorAddr;
@dynamic hasPagination, pagination;

typedef struct QueryRedelegationsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  NSString *srcValidatorAddr;
  NSString *dstValidatorAddr;
  PageRequest *pagination;
} QueryRedelegationsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryRedelegationsRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryRedelegationsRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "srcValidatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryRedelegationsRequest_FieldNumber_SrcValidatorAddr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryRedelegationsRequest__storage_, srcValidatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "dstValidatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryRedelegationsRequest_FieldNumber_DstValidatorAddr,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(QueryRedelegationsRequest__storage_, dstValidatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryRedelegationsRequest_FieldNumber_Pagination,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(QueryRedelegationsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryRedelegationsRequest)
                                   messageName:@"QueryRedelegationsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryRedelegationsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryRedelegationsResponse

@implementation QueryRedelegationsResponse

@dynamic redelegationResponsesArray, redelegationResponsesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryRedelegationsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *redelegationResponsesArray;
  PageResponse *pagination;
} QueryRedelegationsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "redelegationResponsesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(RedelegationResponse),
        .number = QueryRedelegationsResponse_FieldNumber_RedelegationResponsesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryRedelegationsResponse__storage_, redelegationResponsesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryRedelegationsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryRedelegationsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryRedelegationsResponse)
                                   messageName:@"QueryRedelegationsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryRedelegationsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorValidatorsRequest

@implementation QueryDelegatorValidatorsRequest

@dynamic delegatorAddr;
@dynamic hasPagination, pagination;

typedef struct QueryDelegatorValidatorsRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  PageRequest *pagination;
} QueryDelegatorValidatorsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegatorValidatorsRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorsRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryDelegatorValidatorsRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorsRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorValidatorsRequest)
                                   messageName:@"QueryDelegatorValidatorsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorValidatorsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorValidatorsResponse

@implementation QueryDelegatorValidatorsResponse

@dynamic validatorsArray, validatorsArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryDelegatorValidatorsResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *validatorsArray;
  PageResponse *pagination;
} QueryDelegatorValidatorsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validatorsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Validator),
        .number = QueryDelegatorValidatorsResponse_FieldNumber_ValidatorsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorsResponse__storage_, validatorsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryDelegatorValidatorsResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorsResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorValidatorsResponse)
                                   messageName:@"QueryDelegatorValidatorsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorValidatorsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorValidatorRequest

@implementation QueryDelegatorValidatorRequest

@dynamic delegatorAddr;
@dynamic validatorAddr;

typedef struct QueryDelegatorValidatorRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *delegatorAddr;
  NSString *validatorAddr;
} QueryDelegatorValidatorRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "delegatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegatorValidatorRequest_FieldNumber_DelegatorAddr,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorRequest__storage_, delegatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "validatorAddr",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryDelegatorValidatorRequest_FieldNumber_ValidatorAddr,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorRequest__storage_, validatorAddr),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorValidatorRequest)
                                   messageName:@"QueryDelegatorValidatorRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorValidatorRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryDelegatorValidatorResponse

@implementation QueryDelegatorValidatorResponse

@dynamic hasValidator, validator;

typedef struct QueryDelegatorValidatorResponse__storage_ {
  uint32_t _has_storage_[1];
  Validator *validator;
} QueryDelegatorValidatorResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "validator",
        .dataTypeSpecific.clazz = GPBObjCClass(Validator),
        .number = QueryDelegatorValidatorResponse_FieldNumber_Validator,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryDelegatorValidatorResponse__storage_, validator),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryDelegatorValidatorResponse)
                                   messageName:@"QueryDelegatorValidatorResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryDelegatorValidatorResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryHistoricalInfoRequest

@implementation QueryHistoricalInfoRequest

@dynamic height;

typedef struct QueryHistoricalInfoRequest__storage_ {
  uint32_t _has_storage_[1];
  int64_t height;
} QueryHistoricalInfoRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "height",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryHistoricalInfoRequest_FieldNumber_Height,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryHistoricalInfoRequest__storage_, height),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryHistoricalInfoRequest)
                                   messageName:@"QueryHistoricalInfoRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryHistoricalInfoRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryHistoricalInfoResponse

@implementation QueryHistoricalInfoResponse

@dynamic hasHist, hist;

typedef struct QueryHistoricalInfoResponse__storage_ {
  uint32_t _has_storage_[1];
  HistoricalInfo *hist;
} QueryHistoricalInfoResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "hist",
        .dataTypeSpecific.clazz = GPBObjCClass(HistoricalInfo),
        .number = QueryHistoricalInfoResponse_FieldNumber_Hist,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryHistoricalInfoResponse__storage_, hist),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryHistoricalInfoResponse)
                                   messageName:@"QueryHistoricalInfoResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryHistoricalInfoResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryPoolRequest

@implementation QueryPoolRequest


typedef struct QueryPoolRequest__storage_ {
  uint32_t _has_storage_[1];
} QueryPoolRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryPoolRequest)
                                   messageName:@"QueryPoolRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(QueryPoolRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryPoolResponse

@implementation QueryPoolResponse

@dynamic hasPool, pool;

typedef struct QueryPoolResponse__storage_ {
  uint32_t _has_storage_[1];
  Pool *pool;
} QueryPoolResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "pool",
        .dataTypeSpecific.clazz = GPBObjCClass(Pool),
        .number = QueryPoolResponse_FieldNumber_Pool,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryPoolResponse__storage_, pool),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryPoolResponse)
                                   messageName:@"QueryPoolResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryPoolResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryParamsRequest

@implementation QueryParamsRequest


typedef struct QueryParamsRequest__storage_ {
  uint32_t _has_storage_[1];
} QueryParamsRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryParamsRequest)
                                   messageName:@"QueryParamsRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(QueryParamsRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryParamsResponse

@implementation QueryParamsResponse

@dynamic hasParams, params;

typedef struct QueryParamsResponse__storage_ {
  uint32_t _has_storage_[1];
  Params *params;
} QueryParamsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "params",
        .dataTypeSpecific.clazz = GPBObjCClass(Params),
        .number = QueryParamsResponse_FieldNumber_Params,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryParamsResponse__storage_, params),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryParamsResponse)
                                   messageName:@"QueryParamsResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryParamsResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
