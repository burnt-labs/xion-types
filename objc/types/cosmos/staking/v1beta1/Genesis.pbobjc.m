// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/staking/v1beta1/genesis.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/staking/v1beta1/Genesis.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Delegation);
GPBObjCClassDeclaration(GenesisState);
GPBObjCClassDeclaration(LastValidatorPower);
GPBObjCClassDeclaration(Params);
GPBObjCClassDeclaration(Redelegation);
GPBObjCClassDeclaration(UnbondingDelegation);
GPBObjCClassDeclaration(Validator);

#pragma mark - GenesisRoot

@implementation GenesisRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription GenesisRoot_FileDescription = {
  .package = "cosmos.staking.v1beta1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - GenesisState

@implementation GenesisState

@dynamic hasParams, params;
@dynamic lastTotalPower;
@dynamic lastValidatorPowersArray, lastValidatorPowersArray_Count;
@dynamic validatorsArray, validatorsArray_Count;
@dynamic delegationsArray, delegationsArray_Count;
@dynamic unbondingDelegationsArray, unbondingDelegationsArray_Count;
@dynamic redelegationsArray, redelegationsArray_Count;
@dynamic exported;

typedef struct GenesisState__storage_ {
  uint32_t _has_storage_[1];
  Params *params;
  NSData *lastTotalPower;
  NSMutableArray *lastValidatorPowersArray;
  NSMutableArray *validatorsArray;
  NSMutableArray *delegationsArray;
  NSMutableArray *unbondingDelegationsArray;
  NSMutableArray *redelegationsArray;
} GenesisState__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "params",
        .dataTypeSpecific.clazz = GPBObjCClass(Params),
        .number = GenesisState_FieldNumber_Params,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(GenesisState__storage_, params),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "lastTotalPower",
        .dataTypeSpecific.clazz = Nil,
        .number = GenesisState_FieldNumber_LastTotalPower,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(GenesisState__storage_, lastTotalPower),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "lastValidatorPowersArray",
        .dataTypeSpecific.clazz = GPBObjCClass(LastValidatorPower),
        .number = GenesisState_FieldNumber_LastValidatorPowersArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, lastValidatorPowersArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "validatorsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Validator),
        .number = GenesisState_FieldNumber_ValidatorsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, validatorsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "delegationsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Delegation),
        .number = GenesisState_FieldNumber_DelegationsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, delegationsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unbondingDelegationsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(UnbondingDelegation),
        .number = GenesisState_FieldNumber_UnbondingDelegationsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, unbondingDelegationsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "redelegationsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Redelegation),
        .number = GenesisState_FieldNumber_RedelegationsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(GenesisState__storage_, redelegationsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "exported",
        .dataTypeSpecific.clazz = Nil,
        .number = GenesisState_FieldNumber_Exported,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(GenesisState)
                                   messageName:@"GenesisState"
                               fileDescription:&GenesisRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(GenesisState__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - LastValidatorPower

@implementation LastValidatorPower

@dynamic address;
@dynamic power;

typedef struct LastValidatorPower__storage_ {
  uint32_t _has_storage_[1];
  NSString *address;
  int64_t power;
} LastValidatorPower__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "address",
        .dataTypeSpecific.clazz = Nil,
        .number = LastValidatorPower_FieldNumber_Address,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(LastValidatorPower__storage_, address),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "power",
        .dataTypeSpecific.clazz = Nil,
        .number = LastValidatorPower_FieldNumber_Power,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(LastValidatorPower__storage_, power),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(LastValidatorPower)
                                   messageName:@"LastValidatorPower"
                               fileDescription:&GenesisRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(LastValidatorPower__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
