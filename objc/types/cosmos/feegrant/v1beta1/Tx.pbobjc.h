// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/feegrant/v1beta1/tx.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TxRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TxRoot : GPBRootObject
@end

#pragma mark - MsgGrantAllowance

typedef GPB_ENUM(MsgGrantAllowance_FieldNumber) {
  MsgGrantAllowance_FieldNumber_Granter = 1,
  MsgGrantAllowance_FieldNumber_Grantee = 2,
  MsgGrantAllowance_FieldNumber_Allowance = 3,
};

/**
 * MsgGrantAllowance adds permission for Grantee to spend up to Allowance
 * of fees from the account of Granter.
 **/
GPB_FINAL @interface MsgGrantAllowance : GPBMessage

/** granter is the address of the user granting an allowance of their funds. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *granter;

/** grantee is the address of the user being granted an allowance of another user's funds. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *grantee;

/** allowance can be any of basic, periodic, allowed fee allowance. */
@property(nonatomic, readwrite, strong, null_resettable) GPBAny *allowance;
/** Test to see if @c allowance has been set. */
@property(nonatomic, readwrite) BOOL hasAllowance;

@end

#pragma mark - MsgGrantAllowanceResponse

/**
 * MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response type.
 **/
GPB_FINAL @interface MsgGrantAllowanceResponse : GPBMessage

@end

#pragma mark - MsgRevokeAllowance

typedef GPB_ENUM(MsgRevokeAllowance_FieldNumber) {
  MsgRevokeAllowance_FieldNumber_Granter = 1,
  MsgRevokeAllowance_FieldNumber_Grantee = 2,
};

/**
 * MsgRevokeAllowance removes any existing Allowance from Granter to Grantee.
 **/
GPB_FINAL @interface MsgRevokeAllowance : GPBMessage

/** granter is the address of the user granting an allowance of their funds. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *granter;

/** grantee is the address of the user being granted an allowance of another user's funds. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *grantee;

@end

#pragma mark - MsgRevokeAllowanceResponse

/**
 * MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse response type.
 **/
GPB_FINAL @interface MsgRevokeAllowanceResponse : GPBMessage

@end

#pragma mark - MsgPruneAllowances

typedef GPB_ENUM(MsgPruneAllowances_FieldNumber) {
  MsgPruneAllowances_FieldNumber_Pruner = 1,
};

/**
 * MsgPruneAllowances prunes expired fee allowances.
 **/
GPB_FINAL @interface MsgPruneAllowances : GPBMessage

/** pruner is the address of the user pruning expired allowances. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *pruner;

@end

#pragma mark - MsgPruneAllowancesResponse

/**
 * MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse response type.
 **/
GPB_FINAL @interface MsgPruneAllowancesResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
