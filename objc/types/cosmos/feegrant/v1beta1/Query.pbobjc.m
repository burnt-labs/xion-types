// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/feegrant/v1beta1/query.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/feegrant/v1beta1/Query.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(Grant);
GPBObjCClassDeclaration(PageRequest);
GPBObjCClassDeclaration(PageResponse);
GPBObjCClassDeclaration(QueryAllowanceRequest);
GPBObjCClassDeclaration(QueryAllowanceResponse);
GPBObjCClassDeclaration(QueryAllowancesByGranterRequest);
GPBObjCClassDeclaration(QueryAllowancesByGranterResponse);
GPBObjCClassDeclaration(QueryAllowancesRequest);
GPBObjCClassDeclaration(QueryAllowancesResponse);

#pragma mark - QueryRoot

@implementation QueryRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription QueryRoot_FileDescription = {
  .package = "cosmos.feegrant.v1beta1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - QueryAllowanceRequest

@implementation QueryAllowanceRequest

@dynamic granter;
@dynamic grantee;

typedef struct QueryAllowanceRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *granter;
  NSString *grantee;
} QueryAllowanceRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "granter",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryAllowanceRequest_FieldNumber_Granter,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryAllowanceRequest__storage_, granter),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "grantee",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryAllowanceRequest_FieldNumber_Grantee,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryAllowanceRequest__storage_, grantee),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryAllowanceRequest)
                                   messageName:@"QueryAllowanceRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryAllowanceRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryAllowanceResponse

@implementation QueryAllowanceResponse

@dynamic hasAllowance, allowance;

typedef struct QueryAllowanceResponse__storage_ {
  uint32_t _has_storage_[1];
  Grant *allowance;
} QueryAllowanceResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "allowance",
        .dataTypeSpecific.clazz = GPBObjCClass(Grant),
        .number = QueryAllowanceResponse_FieldNumber_Allowance,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryAllowanceResponse__storage_, allowance),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryAllowanceResponse)
                                   messageName:@"QueryAllowanceResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryAllowanceResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryAllowancesRequest

@implementation QueryAllowancesRequest

@dynamic grantee;
@dynamic hasPagination, pagination;

typedef struct QueryAllowancesRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *grantee;
  PageRequest *pagination;
} QueryAllowancesRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "grantee",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryAllowancesRequest_FieldNumber_Grantee,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryAllowancesRequest__storage_, grantee),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryAllowancesRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryAllowancesRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryAllowancesRequest)
                                   messageName:@"QueryAllowancesRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryAllowancesRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryAllowancesResponse

@implementation QueryAllowancesResponse

@dynamic allowancesArray, allowancesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryAllowancesResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *allowancesArray;
  PageResponse *pagination;
} QueryAllowancesResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "allowancesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Grant),
        .number = QueryAllowancesResponse_FieldNumber_AllowancesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryAllowancesResponse__storage_, allowancesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryAllowancesResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryAllowancesResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryAllowancesResponse)
                                   messageName:@"QueryAllowancesResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryAllowancesResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryAllowancesByGranterRequest

@implementation QueryAllowancesByGranterRequest

@dynamic granter;
@dynamic hasPagination, pagination;

typedef struct QueryAllowancesByGranterRequest__storage_ {
  uint32_t _has_storage_[1];
  NSString *granter;
  PageRequest *pagination;
} QueryAllowancesByGranterRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "granter",
        .dataTypeSpecific.clazz = Nil,
        .number = QueryAllowancesByGranterRequest_FieldNumber_Granter,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryAllowancesByGranterRequest__storage_, granter),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageRequest),
        .number = QueryAllowancesByGranterRequest_FieldNumber_Pagination,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(QueryAllowancesByGranterRequest__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryAllowancesByGranterRequest)
                                   messageName:@"QueryAllowancesByGranterRequest"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryAllowancesByGranterRequest__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - QueryAllowancesByGranterResponse

@implementation QueryAllowancesByGranterResponse

@dynamic allowancesArray, allowancesArray_Count;
@dynamic hasPagination, pagination;

typedef struct QueryAllowancesByGranterResponse__storage_ {
  uint32_t _has_storage_[1];
  NSMutableArray *allowancesArray;
  PageResponse *pagination;
} QueryAllowancesByGranterResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "allowancesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Grant),
        .number = QueryAllowancesByGranterResponse_FieldNumber_AllowancesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(QueryAllowancesByGranterResponse__storage_, allowancesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pagination",
        .dataTypeSpecific.clazz = GPBObjCClass(PageResponse),
        .number = QueryAllowancesByGranterResponse_FieldNumber_Pagination,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(QueryAllowancesByGranterResponse__storage_, pagination),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(QueryAllowancesByGranterResponse)
                                   messageName:@"QueryAllowancesByGranterResponse"
                               fileDescription:&QueryRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(QueryAllowancesByGranterResponse__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
