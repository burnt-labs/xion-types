// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmos/bank/v1beta1/bank.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/v1beta1/Coin.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DenomUnit;
@class SendEnabled;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - BankRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface BankRoot : GPBRootObject
@end

#pragma mark - Params

typedef GPB_ENUM(Params_FieldNumber) {
  Params_FieldNumber_SendEnabledArray = 1,
  Params_FieldNumber_DefaultSendEnabled = 2,
};

/**
 * Params defines the parameters for the bank module.
 **/
GPB_FINAL @interface Params : GPBMessage

/**
 * Deprecated: Use of SendEnabled in params is deprecated.
 * For genesis, use the newly added send_enabled field in the genesis object.
 * Storage, lookup, and manipulation of this information is now in the keeper.
 *
 * As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SendEnabled*> *sendEnabledArray GPB_DEPRECATED_MSG("cosmos.bank.v1beta1.Params.send_enabled is deprecated (see cosmos/bank/v1beta1/bank.proto).");
/** The number of items in @c sendEnabledArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger sendEnabledArray_Count GPB_DEPRECATED_MSG("cosmos.bank.v1beta1.Params.send_enabled is deprecated (see cosmos/bank/v1beta1/bank.proto).");

@property(nonatomic, readwrite) BOOL defaultSendEnabled;

@end

#pragma mark - SendEnabled

typedef GPB_ENUM(SendEnabled_FieldNumber) {
  SendEnabled_FieldNumber_Denom = 1,
  SendEnabled_FieldNumber_Enabled = 2,
};

/**
 * SendEnabled maps coin denom to a send_enabled status (whether a denom is
 * sendable).
 **/
GPB_FINAL @interface SendEnabled : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *denom;

@property(nonatomic, readwrite) BOOL enabled;

@end

#pragma mark - Input

typedef GPB_ENUM(Input_FieldNumber) {
  Input_FieldNumber_Address = 1,
  Input_FieldNumber_CoinsArray = 2,
};

/**
 * Input models transaction input.
 **/
GPB_FINAL @interface Input : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *coinsArray;
/** The number of items in @c coinsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger coinsArray_Count;

@end

#pragma mark - Output

typedef GPB_ENUM(Output_FieldNumber) {
  Output_FieldNumber_Address = 1,
  Output_FieldNumber_CoinsArray = 2,
};

/**
 * Output models transaction outputs.
 **/
GPB_FINAL @interface Output : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *coinsArray;
/** The number of items in @c coinsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger coinsArray_Count;

@end

#pragma mark - Supply

typedef GPB_ENUM(Supply_FieldNumber) {
  Supply_FieldNumber_TotalArray = 1,
};

/**
 * Supply represents a struct that passively keeps track of the total supply
 * amounts in the network.
 * This message is deprecated now that supply is indexed by denom.
 **/
GPB_DEPRECATED_MSG("cosmos.bank.v1beta1.Supply is deprecated (see cosmos/bank/v1beta1/bank.proto).")
GPB_FINAL @interface Supply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Coin*> *totalArray;
/** The number of items in @c totalArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger totalArray_Count;

@end

#pragma mark - DenomUnit

typedef GPB_ENUM(DenomUnit_FieldNumber) {
  DenomUnit_FieldNumber_Denom = 1,
  DenomUnit_FieldNumber_Exponent = 2,
  DenomUnit_FieldNumber_AliasesArray = 3,
};

/**
 * DenomUnit represents a struct that describes a given
 * denomination unit of the basic token.
 **/
GPB_FINAL @interface DenomUnit : GPBMessage

/** denom represents the string name of the given denom unit (e.g uatom). */
@property(nonatomic, readwrite, copy, null_resettable) NSString *denom;

/**
 * exponent represents power of 10 exponent that one must
 * raise the base_denom to in order to equal the given DenomUnit's denom
 * 1 denom = 10^exponent base_denom
 * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
 * exponent = 6, thus: 1 atom = 10^6 uatom).
 **/
@property(nonatomic, readwrite) uint32_t exponent;

/** aliases is a list of string aliases for the given denom */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *aliasesArray;
/** The number of items in @c aliasesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger aliasesArray_Count;

@end

#pragma mark - Metadata

typedef GPB_ENUM(Metadata_FieldNumber) {
  Metadata_FieldNumber_Description_p = 1,
  Metadata_FieldNumber_DenomUnitsArray = 2,
  Metadata_FieldNumber_Base = 3,
  Metadata_FieldNumber_Display = 4,
  Metadata_FieldNumber_Name = 5,
  Metadata_FieldNumber_Symbol = 6,
  Metadata_FieldNumber_Uri = 7,
  Metadata_FieldNumber_UriHash = 8,
};

/**
 * Metadata represents a struct that describes
 * a basic token.
 **/
GPB_FINAL @interface Metadata : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** denom_units represents the list of DenomUnit's for a given coin */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<DenomUnit*> *denomUnitsArray;
/** The number of items in @c denomUnitsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger denomUnitsArray_Count;

/** base represents the base denom (should be the DenomUnit with exponent = 0). */
@property(nonatomic, readwrite, copy, null_resettable) NSString *base;

/**
 * display indicates the suggested denom that should be
 * displayed in clients.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *display;

/** name defines the name of the token (eg: Cosmos Atom) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
 * be the same as the display.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *symbol;

/** URI to a document (on or off-chain) that contains additional information. Optional. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;

/**
 * URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
 * the document didn't change. Optional.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *uriHash;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
