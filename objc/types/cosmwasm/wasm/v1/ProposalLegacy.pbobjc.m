// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: cosmwasm/wasm/v1/proposal_legacy.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmwasm/wasm/v1/ProposalLegacy.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective-C Class declarations
// Forward declarations of Objective-C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(AccessConfig);
GPBObjCClassDeclaration(AccessConfigUpdate);
GPBObjCClassDeclaration(ClearAdminProposal);
GPBObjCClassDeclaration(Coin);
GPBObjCClassDeclaration(ExecuteContractProposal);
GPBObjCClassDeclaration(InstantiateContract2Proposal);
GPBObjCClassDeclaration(InstantiateContractProposal);
GPBObjCClassDeclaration(MigrateContractProposal);
GPBObjCClassDeclaration(PinCodesProposal);
GPBObjCClassDeclaration(StoreAndInstantiateContractProposal);
GPBObjCClassDeclaration(StoreCodeProposal);
GPBObjCClassDeclaration(SudoContractProposal);
GPBObjCClassDeclaration(UnpinCodesProposal);
GPBObjCClassDeclaration(UpdateAdminProposal);
GPBObjCClassDeclaration(UpdateInstantiateConfigProposal);

#pragma mark - ProposalLegacyRoot

@implementation ProposalLegacyRoot

// No extensions in the file and no imports or none of the imports (direct or
// indirect) defined extensions, so no need to generate +extensionRegistry.

@end

static GPBFileDescription ProposalLegacyRoot_FileDescription = {
  .package = "cosmwasm.wasm.v1",
  .prefix = NULL,
  .syntax = GPBFileSyntaxProto3
};

#pragma mark - StoreCodeProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation StoreCodeProposal

@dynamic title;
@dynamic description_p;
@dynamic runAs;
@dynamic wasmByteCode;
@dynamic hasInstantiatePermission, instantiatePermission;
@dynamic unpinCode;
@dynamic source;
@dynamic builder;
@dynamic codeHash;

typedef struct StoreCodeProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *runAs;
  NSData *wasmByteCode;
  AccessConfig *instantiatePermission;
  NSString *source;
  NSString *builder;
  NSData *codeHash;
} StoreCodeProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "runAs",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_RunAs,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, runAs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wasmByteCode",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_WasmByteCode,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, wasmByteCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "instantiatePermission",
        .dataTypeSpecific.clazz = GPBObjCClass(AccessConfig),
        .number = StoreCodeProposal_FieldNumber_InstantiatePermission,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, instantiatePermission),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unpinCode",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_UnpinCode,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "source",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_Source,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, source),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "builder",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_Builder,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, builder),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeHash",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreCodeProposal_FieldNumber_CodeHash,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(StoreCodeProposal__storage_, codeHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(StoreCodeProposal)
                                   messageName:@"StoreCodeProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(StoreCodeProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - InstantiateContractProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation InstantiateContractProposal

@dynamic title;
@dynamic description_p;
@dynamic runAs;
@dynamic admin;
@dynamic codeId;
@dynamic label;
@dynamic msg;
@dynamic fundsArray, fundsArray_Count;

typedef struct InstantiateContractProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *runAs;
  NSString *admin;
  NSString *label;
  NSData *msg;
  NSMutableArray *fundsArray;
  uint64_t codeId;
} InstantiateContractProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "runAs",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_RunAs,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, runAs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admin",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_Admin,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, admin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeId",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_CodeId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, codeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "label",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_Label,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, label),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContractProposal_FieldNumber_Msg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "fundsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = InstantiateContractProposal_FieldNumber_FundsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InstantiateContractProposal__storage_, fundsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(InstantiateContractProposal)
                                   messageName:@"InstantiateContractProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InstantiateContractProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - InstantiateContract2Proposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation InstantiateContract2Proposal

@dynamic title;
@dynamic description_p;
@dynamic runAs;
@dynamic admin;
@dynamic codeId;
@dynamic label;
@dynamic msg;
@dynamic fundsArray, fundsArray_Count;
@dynamic salt;
@dynamic fixMsg;

typedef struct InstantiateContract2Proposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *runAs;
  NSString *admin;
  NSString *label;
  NSData *msg;
  NSMutableArray *fundsArray;
  NSData *salt;
  uint64_t codeId;
} InstantiateContract2Proposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "runAs",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_RunAs,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, runAs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "admin",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_Admin,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, admin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeId",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_CodeId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, codeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "label",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_Label,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, label),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_Msg,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "fundsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = InstantiateContract2Proposal_FieldNumber_FundsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, fundsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "salt",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_Salt,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(InstantiateContract2Proposal__storage_, salt),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "fixMsg",
        .dataTypeSpecific.clazz = Nil,
        .number = InstantiateContract2Proposal_FieldNumber_FixMsg,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(InstantiateContract2Proposal)
                                   messageName:@"InstantiateContract2Proposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(InstantiateContract2Proposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - MigrateContractProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation MigrateContractProposal

@dynamic title;
@dynamic description_p;
@dynamic contract;
@dynamic codeId;
@dynamic msg;

typedef struct MigrateContractProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *contract;
  NSData *msg;
  uint64_t codeId;
} MigrateContractProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = MigrateContractProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MigrateContractProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = MigrateContractProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MigrateContractProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contract",
        .dataTypeSpecific.clazz = Nil,
        .number = MigrateContractProposal_FieldNumber_Contract,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MigrateContractProposal__storage_, contract),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeId",
        .dataTypeSpecific.clazz = Nil,
        .number = MigrateContractProposal_FieldNumber_CodeId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MigrateContractProposal__storage_, codeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = MigrateContractProposal_FieldNumber_Msg,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MigrateContractProposal__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(MigrateContractProposal)
                                   messageName:@"MigrateContractProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MigrateContractProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - SudoContractProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation SudoContractProposal

@dynamic title;
@dynamic description_p;
@dynamic contract;
@dynamic msg;

typedef struct SudoContractProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *contract;
  NSData *msg;
} SudoContractProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = SudoContractProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(SudoContractProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = SudoContractProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(SudoContractProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contract",
        .dataTypeSpecific.clazz = Nil,
        .number = SudoContractProposal_FieldNumber_Contract,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(SudoContractProposal__storage_, contract),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = SudoContractProposal_FieldNumber_Msg,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(SudoContractProposal__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(SudoContractProposal)
                                   messageName:@"SudoContractProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(SudoContractProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - ExecuteContractProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation ExecuteContractProposal

@dynamic title;
@dynamic description_p;
@dynamic runAs;
@dynamic contract;
@dynamic msg;
@dynamic fundsArray, fundsArray_Count;

typedef struct ExecuteContractProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *runAs;
  NSString *contract;
  NSData *msg;
  NSMutableArray *fundsArray;
} ExecuteContractProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = ExecuteContractProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ExecuteContractProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = ExecuteContractProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ExecuteContractProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "runAs",
        .dataTypeSpecific.clazz = Nil,
        .number = ExecuteContractProposal_FieldNumber_RunAs,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ExecuteContractProposal__storage_, runAs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contract",
        .dataTypeSpecific.clazz = Nil,
        .number = ExecuteContractProposal_FieldNumber_Contract,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ExecuteContractProposal__storage_, contract),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = ExecuteContractProposal_FieldNumber_Msg,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ExecuteContractProposal__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "fundsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = ExecuteContractProposal_FieldNumber_FundsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(ExecuteContractProposal__storage_, fundsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ExecuteContractProposal)
                                   messageName:@"ExecuteContractProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ExecuteContractProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - UpdateAdminProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation UpdateAdminProposal

@dynamic title;
@dynamic description_p;
@dynamic newAdmin;
@dynamic contract;

typedef struct UpdateAdminProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *newAdmin;
  NSString *contract;
} UpdateAdminProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = UpdateAdminProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UpdateAdminProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = UpdateAdminProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UpdateAdminProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "newAdmin",
        .dataTypeSpecific.clazz = Nil,
        .number = UpdateAdminProposal_FieldNumber_NewAdmin,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(UpdateAdminProposal__storage_, newAdmin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contract",
        .dataTypeSpecific.clazz = Nil,
        .number = UpdateAdminProposal_FieldNumber_Contract,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(UpdateAdminProposal__storage_, contract),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(UpdateAdminProposal)
                                   messageName:@"UpdateAdminProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UpdateAdminProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - ClearAdminProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation ClearAdminProposal

@dynamic title;
@dynamic description_p;
@dynamic contract;

typedef struct ClearAdminProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *contract;
} ClearAdminProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = ClearAdminProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ClearAdminProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = ClearAdminProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ClearAdminProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contract",
        .dataTypeSpecific.clazz = Nil,
        .number = ClearAdminProposal_FieldNumber_Contract,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ClearAdminProposal__storage_, contract),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(ClearAdminProposal)
                                   messageName:@"ClearAdminProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ClearAdminProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - PinCodesProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation PinCodesProposal

@dynamic title;
@dynamic description_p;
@dynamic codeIdsArray, codeIdsArray_Count;

typedef struct PinCodesProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  GPBUInt64Array *codeIdsArray;
} PinCodesProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = PinCodesProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PinCodesProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = PinCodesProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PinCodesProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeIdsArray",
        .dataTypeSpecific.clazz = Nil,
        .number = PinCodesProposal_FieldNumber_CodeIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PinCodesProposal__storage_, codeIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(PinCodesProposal)
                                   messageName:@"PinCodesProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PinCodesProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - UnpinCodesProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation UnpinCodesProposal

@dynamic title;
@dynamic description_p;
@dynamic codeIdsArray, codeIdsArray_Count;

typedef struct UnpinCodesProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  GPBUInt64Array *codeIdsArray;
} UnpinCodesProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = UnpinCodesProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UnpinCodesProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = UnpinCodesProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UnpinCodesProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeIdsArray",
        .dataTypeSpecific.clazz = Nil,
        .number = UnpinCodesProposal_FieldNumber_CodeIdsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UnpinCodesProposal__storage_, codeIdsArray),
        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
        .dataType = GPBDataTypeUInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(UnpinCodesProposal)
                                   messageName:@"UnpinCodesProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UnpinCodesProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - AccessConfigUpdate

@implementation AccessConfigUpdate

@dynamic codeId;
@dynamic hasInstantiatePermission, instantiatePermission;

typedef struct AccessConfigUpdate__storage_ {
  uint32_t _has_storage_[1];
  AccessConfig *instantiatePermission;
  uint64_t codeId;
} AccessConfigUpdate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "codeId",
        .dataTypeSpecific.clazz = Nil,
        .number = AccessConfigUpdate_FieldNumber_CodeId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AccessConfigUpdate__storage_, codeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "instantiatePermission",
        .dataTypeSpecific.clazz = GPBObjCClass(AccessConfig),
        .number = AccessConfigUpdate_FieldNumber_InstantiatePermission,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AccessConfigUpdate__storage_, instantiatePermission),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(AccessConfigUpdate)
                                   messageName:@"AccessConfigUpdate"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AccessConfigUpdate__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - UpdateInstantiateConfigProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation UpdateInstantiateConfigProposal

@dynamic title;
@dynamic description_p;
@dynamic accessConfigUpdatesArray, accessConfigUpdatesArray_Count;

typedef struct UpdateInstantiateConfigProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSMutableArray *accessConfigUpdatesArray;
} UpdateInstantiateConfigProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = UpdateInstantiateConfigProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(UpdateInstantiateConfigProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = UpdateInstantiateConfigProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(UpdateInstantiateConfigProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "accessConfigUpdatesArray",
        .dataTypeSpecific.clazz = GPBObjCClass(AccessConfigUpdate),
        .number = UpdateInstantiateConfigProposal_FieldNumber_AccessConfigUpdatesArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(UpdateInstantiateConfigProposal__storage_, accessConfigUpdatesArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(UpdateInstantiateConfigProposal)
                                   messageName:@"UpdateInstantiateConfigProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(UpdateInstantiateConfigProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop

#pragma mark - StoreAndInstantiateContractProposal

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-implementations"

@implementation StoreAndInstantiateContractProposal

@dynamic title;
@dynamic description_p;
@dynamic runAs;
@dynamic wasmByteCode;
@dynamic hasInstantiatePermission, instantiatePermission;
@dynamic unpinCode;
@dynamic admin;
@dynamic label;
@dynamic msg;
@dynamic fundsArray, fundsArray_Count;
@dynamic source;
@dynamic builder;
@dynamic codeHash;

typedef struct StoreAndInstantiateContractProposal__storage_ {
  uint32_t _has_storage_[1];
  NSString *title;
  NSString *description_p;
  NSString *runAs;
  NSData *wasmByteCode;
  AccessConfig *instantiatePermission;
  NSString *admin;
  NSString *label;
  NSData *msg;
  NSMutableArray *fundsArray;
  NSString *source;
  NSString *builder;
  NSData *codeHash;
} StoreAndInstantiateContractProposal__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "title",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Title,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, title),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Description_p,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, description_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "runAs",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_RunAs,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, runAs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wasmByteCode",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_WasmByteCode,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, wasmByteCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "instantiatePermission",
        .dataTypeSpecific.clazz = GPBObjCClass(AccessConfig),
        .number = StoreAndInstantiateContractProposal_FieldNumber_InstantiatePermission,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, instantiatePermission),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unpinCode",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_UnpinCode,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "admin",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Admin,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, admin),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "label",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Label,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, label),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Msg,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, msg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "fundsArray",
        .dataTypeSpecific.clazz = GPBObjCClass(Coin),
        .number = StoreAndInstantiateContractProposal_FieldNumber_FundsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, fundsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "source",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Source,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, source),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "builder",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_Builder,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, builder),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "codeHash",
        .dataTypeSpecific.clazz = Nil,
        .number = StoreAndInstantiateContractProposal_FieldNumber_CodeHash,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(StoreAndInstantiateContractProposal__storage_, codeHash),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(StoreAndInstantiateContractProposal)
                                   messageName:@"StoreAndInstantiateContractProposal"
                               fileDescription:&ProposalLegacyRoot_FileDescription
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(StoreAndInstantiateContractProposal__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma clang diagnostic pop


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
