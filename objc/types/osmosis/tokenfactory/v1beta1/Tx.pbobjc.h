// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: osmosis/tokenfactory/v1beta1/tx.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "cosmos/base/v1beta1/Coin.pbobjc.h"
#import "cosmos/bank/v1beta1/Bank.pbobjc.h"
#import "osmosis/tokenfactory/v1beta1/Params.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TxRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TxRoot : GPBRootObject
@end

#pragma mark - MsgCreateDenom

typedef GPB_ENUM(MsgCreateDenom_FieldNumber) {
  MsgCreateDenom_FieldNumber_Sender = 1,
  MsgCreateDenom_FieldNumber_Subdenom = 2,
};

/**
 * MsgCreateDenom defines the message structure for the CreateDenom gRPC service
 * method. It allows an account to create a new denom. It requires a sender
 * address and a sub denomination. The (sender_address, sub_denomination) tuple
 * must be unique and cannot be re-used.
 *
 * The resulting denom created is defined as
 * <factory/{creatorAddress}/{subdenom}>. The resulting denom's admin is
 * originally set to be the creator, but this can be changed later. The token
 * denom does not indicate the current admin.
 **/
GPB_FINAL @interface MsgCreateDenom : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

/** subdenom can be up to 44 "alphanumeric" characters long. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subdenom;

@end

#pragma mark - MsgCreateDenomResponse

typedef GPB_ENUM(MsgCreateDenomResponse_FieldNumber) {
  MsgCreateDenomResponse_FieldNumber_NewTokenDenom = 1,
};

/**
 * MsgCreateDenomResponse is the return value of MsgCreateDenom
 * It returns the full string of the newly created denom
 **/
GPB_FINAL @interface MsgCreateDenomResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *newTokenDenom NS_RETURNS_NOT_RETAINED;

@end

#pragma mark - MsgMint

typedef GPB_ENUM(MsgMint_FieldNumber) {
  MsgMint_FieldNumber_Sender = 1,
  MsgMint_FieldNumber_Amount = 2,
  MsgMint_FieldNumber_MintToAddress = 3,
};

/**
 * MsgMint is the sdk.Msg type for allowing an admin account to mint
 * more of a token.  For now, we only support minting to the sender account
 **/
GPB_FINAL @interface MsgMint : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

@property(nonatomic, readwrite, strong, null_resettable) Coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mintToAddress;

@end

#pragma mark - MsgMintResponse

GPB_FINAL @interface MsgMintResponse : GPBMessage

@end

#pragma mark - MsgBurn

typedef GPB_ENUM(MsgBurn_FieldNumber) {
  MsgBurn_FieldNumber_Sender = 1,
  MsgBurn_FieldNumber_Amount = 2,
  MsgBurn_FieldNumber_BurnFromAddress = 3,
};

/**
 * MsgBurn is the sdk.Msg type for allowing an admin account to burn
 * a token.  For now, we only support burning from the sender account.
 **/
GPB_FINAL @interface MsgBurn : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

@property(nonatomic, readwrite, strong, null_resettable) Coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *burnFromAddress;

@end

#pragma mark - MsgBurnResponse

GPB_FINAL @interface MsgBurnResponse : GPBMessage

@end

#pragma mark - MsgChangeAdmin

typedef GPB_ENUM(MsgChangeAdmin_FieldNumber) {
  MsgChangeAdmin_FieldNumber_Sender = 1,
  MsgChangeAdmin_FieldNumber_Denom = 2,
  MsgChangeAdmin_FieldNumber_NewAdmin = 3,
};

/**
 * MsgChangeAdmin is the sdk.Msg type for allowing an admin account to reassign
 * adminship of a denom to a new account
 **/
GPB_FINAL @interface MsgChangeAdmin : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

@property(nonatomic, readwrite, copy, null_resettable) NSString *denom;

@property(nonatomic, readwrite, copy, null_resettable) NSString *newAdmin NS_RETURNS_NOT_RETAINED;

@end

#pragma mark - MsgChangeAdminResponse

/**
 * MsgChangeAdminResponse defines the response structure for an executed
 * MsgChangeAdmin message.
 **/
GPB_FINAL @interface MsgChangeAdminResponse : GPBMessage

@end

#pragma mark - MsgSetDenomMetadata

typedef GPB_ENUM(MsgSetDenomMetadata_FieldNumber) {
  MsgSetDenomMetadata_FieldNumber_Sender = 1,
  MsgSetDenomMetadata_FieldNumber_Metadata = 2,
};

/**
 * MsgSetDenomMetadata is the sdk.Msg type for allowing an admin account to set
 * the denom's bank metadata
 **/
GPB_FINAL @interface MsgSetDenomMetadata : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

@property(nonatomic, readwrite, strong, null_resettable) Metadata *metadata;
/** Test to see if @c metadata has been set. */
@property(nonatomic, readwrite) BOOL hasMetadata;

@end

#pragma mark - MsgSetDenomMetadataResponse

/**
 * MsgSetDenomMetadataResponse defines the response structure for an executed
 * MsgSetDenomMetadata message.
 **/
GPB_FINAL @interface MsgSetDenomMetadataResponse : GPBMessage

@end

#pragma mark - MsgForceTransfer

typedef GPB_ENUM(MsgForceTransfer_FieldNumber) {
  MsgForceTransfer_FieldNumber_Sender = 1,
  MsgForceTransfer_FieldNumber_Amount = 2,
  MsgForceTransfer_FieldNumber_TransferFromAddress = 3,
  MsgForceTransfer_FieldNumber_TransferToAddress = 4,
};

GPB_FINAL @interface MsgForceTransfer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

@property(nonatomic, readwrite, strong, null_resettable) Coin *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@property(nonatomic, readwrite, copy, null_resettable) NSString *transferFromAddress;

@property(nonatomic, readwrite, copy, null_resettable) NSString *transferToAddress;

@end

#pragma mark - MsgForceTransferResponse

GPB_FINAL @interface MsgForceTransferResponse : GPBMessage

@end

#pragma mark - MsgUpdateParams

typedef GPB_ENUM(MsgUpdateParams_FieldNumber) {
  MsgUpdateParams_FieldNumber_Authority = 1,
  MsgUpdateParams_FieldNumber_Params = 2,
};

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 **/
GPB_FINAL @interface MsgUpdateParams : GPBMessage

/** authority is the address of the governance account. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *authority;

/**
 * params defines the x/mint parameters to update.
 *
 * NOTE: All parameters must be supplied.
 **/
@property(nonatomic, readwrite, strong, null_resettable) Params *params;
/** Test to see if @c params has been set. */
@property(nonatomic, readwrite) BOOL hasParams;

@end

#pragma mark - MsgUpdateParamsResponse

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 **/
GPB_FINAL @interface MsgUpdateParamsResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
