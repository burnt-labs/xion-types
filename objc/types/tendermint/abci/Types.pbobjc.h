// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: tendermint/abci/types.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "tendermint/crypto/Proof.pbobjc.h"
#import "tendermint/crypto/Keys.pbobjc.h"
#import "tendermint/types/Params.pbobjc.h"
#import "tendermint/types/Validator.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class CommitInfo;
@class Event;
@class EventAttribute;
@class ExecTxResult;
@class ExtendedCommitInfo;
@class ExtendedVoteInfo;
@class Misbehavior;
@class RequestApplySnapshotChunk;
@class RequestCheckTx;
@class RequestCommit;
@class RequestEcho;
@class RequestExtendVote;
@class RequestFinalizeBlock;
@class RequestFlush;
@class RequestInfo;
@class RequestInitChain;
@class RequestListSnapshots;
@class RequestLoadSnapshotChunk;
@class RequestOfferSnapshot;
@class RequestPrepareProposal;
@class RequestProcessProposal;
@class RequestQuery;
@class RequestVerifyVoteExtension;
@class ResponseApplySnapshotChunk;
@class ResponseCheckTx;
@class ResponseCommit;
@class ResponseEcho;
@class ResponseException;
@class ResponseExtendVote;
@class ResponseFinalizeBlock;
@class ResponseFlush;
@class ResponseInfo;
@class ResponseInitChain;
@class ResponseListSnapshots;
@class ResponseLoadSnapshotChunk;
@class ResponseOfferSnapshot;
@class ResponsePrepareProposal;
@class ResponseProcessProposal;
@class ResponseQuery;
@class ResponseVerifyVoteExtension;
@class Snapshot;
@class Validator;
@class ValidatorUpdate;
@class VoteInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CheckTxType

typedef GPB_ENUM(CheckTxType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CheckTxType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CheckTxType_New = 0,
  CheckTxType_Recheck = 1,
};

GPBEnumDescriptor *CheckTxType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CheckTxType_IsValidValue(int32_t value);

#pragma mark - Enum MisbehaviorType

typedef GPB_ENUM(MisbehaviorType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MisbehaviorType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MisbehaviorType_Unknown = 0,
  MisbehaviorType_DuplicateVote = 1,
  MisbehaviorType_LightClientAttack = 2,
};

GPBEnumDescriptor *MisbehaviorType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MisbehaviorType_IsValidValue(int32_t value);

#pragma mark - Enum ResponseOfferSnapshot_Result

typedef GPB_ENUM(ResponseOfferSnapshot_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResponseOfferSnapshot_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Unknown result, abort all snapshot restoration */
  ResponseOfferSnapshot_Result_Unknown = 0,

  /** Snapshot accepted, apply chunks */
  ResponseOfferSnapshot_Result_Accept = 1,

  /** Abort all snapshot restoration */
  ResponseOfferSnapshot_Result_Abort = 2,

  /** Reject this specific snapshot, try others */
  ResponseOfferSnapshot_Result_Reject = 3,

  /** Reject all snapshots of this format, try others */
  ResponseOfferSnapshot_Result_RejectFormat = 4,

  /** Reject all snapshots from the sender(s), try others */
  ResponseOfferSnapshot_Result_RejectSender = 5,
};

GPBEnumDescriptor *ResponseOfferSnapshot_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResponseOfferSnapshot_Result_IsValidValue(int32_t value);

#pragma mark - Enum ResponseApplySnapshotChunk_Result

typedef GPB_ENUM(ResponseApplySnapshotChunk_Result) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResponseApplySnapshotChunk_Result_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Unknown result, abort all snapshot restoration */
  ResponseApplySnapshotChunk_Result_Unknown = 0,

  /** Chunk successfully accepted */
  ResponseApplySnapshotChunk_Result_Accept = 1,

  /** Abort all snapshot restoration */
  ResponseApplySnapshotChunk_Result_Abort = 2,

  /** Retry chunk (combine with refetch and reject) */
  ResponseApplySnapshotChunk_Result_Retry = 3,

  /** Retry snapshot (combine with refetch and reject) */
  ResponseApplySnapshotChunk_Result_RetrySnapshot = 4,

  /** Reject this snapshot, try others */
  ResponseApplySnapshotChunk_Result_RejectSnapshot = 5,
};

GPBEnumDescriptor *ResponseApplySnapshotChunk_Result_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResponseApplySnapshotChunk_Result_IsValidValue(int32_t value);

#pragma mark - Enum ResponseProcessProposal_ProposalStatus

typedef GPB_ENUM(ResponseProcessProposal_ProposalStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResponseProcessProposal_ProposalStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ResponseProcessProposal_ProposalStatus_Unknown = 0,
  ResponseProcessProposal_ProposalStatus_Accept = 1,
  ResponseProcessProposal_ProposalStatus_Reject = 2,
};

GPBEnumDescriptor *ResponseProcessProposal_ProposalStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResponseProcessProposal_ProposalStatus_IsValidValue(int32_t value);

#pragma mark - Enum ResponseVerifyVoteExtension_VerifyStatus

typedef GPB_ENUM(ResponseVerifyVoteExtension_VerifyStatus) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ResponseVerifyVoteExtension_VerifyStatus_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ResponseVerifyVoteExtension_VerifyStatus_Unknown = 0,
  ResponseVerifyVoteExtension_VerifyStatus_Accept = 1,

  /**
   * Rejecting the vote extension will reject the entire precommit by the sender.
   * Incorrectly implementing this thus has liveness implications as it may affect
   * CometBFT's ability to receive 2/3+ valid votes to finalize the block.
   * Honest nodes should never be rejected.
   **/
  ResponseVerifyVoteExtension_VerifyStatus_Reject = 2,
};

GPBEnumDescriptor *ResponseVerifyVoteExtension_VerifyStatus_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResponseVerifyVoteExtension_VerifyStatus_IsValidValue(int32_t value);

#pragma mark - TypesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TypesRoot : GPBRootObject
@end

#pragma mark - Request

typedef GPB_ENUM(Request_FieldNumber) {
  Request_FieldNumber_Echo = 1,
  Request_FieldNumber_Flush = 2,
  Request_FieldNumber_Info = 3,
  Request_FieldNumber_InitChain = 5,
  Request_FieldNumber_Query = 6,
  Request_FieldNumber_CheckTx = 8,
  Request_FieldNumber_Commit = 11,
  Request_FieldNumber_ListSnapshots = 12,
  Request_FieldNumber_OfferSnapshot = 13,
  Request_FieldNumber_LoadSnapshotChunk = 14,
  Request_FieldNumber_ApplySnapshotChunk = 15,
  Request_FieldNumber_PrepareProposal = 16,
  Request_FieldNumber_ProcessProposal = 17,
  Request_FieldNumber_ExtendVote = 18,
  Request_FieldNumber_VerifyVoteExtension = 19,
  Request_FieldNumber_FinalizeBlock = 20,
};

typedef GPB_ENUM(Request_Value_OneOfCase) {
  Request_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  Request_Value_OneOfCase_Echo = 1,
  Request_Value_OneOfCase_Flush = 2,
  Request_Value_OneOfCase_Info = 3,
  Request_Value_OneOfCase_InitChain = 5,
  Request_Value_OneOfCase_Query = 6,
  Request_Value_OneOfCase_CheckTx = 8,
  Request_Value_OneOfCase_Commit = 11,
  Request_Value_OneOfCase_ListSnapshots = 12,
  Request_Value_OneOfCase_OfferSnapshot = 13,
  Request_Value_OneOfCase_LoadSnapshotChunk = 14,
  Request_Value_OneOfCase_ApplySnapshotChunk = 15,
  Request_Value_OneOfCase_PrepareProposal = 16,
  Request_Value_OneOfCase_ProcessProposal = 17,
  Request_Value_OneOfCase_ExtendVote = 18,
  Request_Value_OneOfCase_VerifyVoteExtension = 19,
  Request_Value_OneOfCase_FinalizeBlock = 20,
};

GPB_FINAL @interface Request : GPBMessage

@property(nonatomic, readonly) Request_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) RequestEcho *echo;

@property(nonatomic, readwrite, strong, null_resettable) RequestFlush *flush;

@property(nonatomic, readwrite, strong, null_resettable) RequestInfo *info;

@property(nonatomic, readwrite, strong, null_resettable) RequestInitChain *initChain;
- (RequestInitChain *)initChain GPB_METHOD_FAMILY_NONE;

@property(nonatomic, readwrite, strong, null_resettable) RequestQuery *query;

@property(nonatomic, readwrite, strong, null_resettable) RequestCheckTx *checkTx;

@property(nonatomic, readwrite, strong, null_resettable) RequestCommit *commit;

@property(nonatomic, readwrite, strong, null_resettable) RequestListSnapshots *listSnapshots;

@property(nonatomic, readwrite, strong, null_resettable) RequestOfferSnapshot *offerSnapshot;

@property(nonatomic, readwrite, strong, null_resettable) RequestLoadSnapshotChunk *loadSnapshotChunk;

@property(nonatomic, readwrite, strong, null_resettable) RequestApplySnapshotChunk *applySnapshotChunk;

@property(nonatomic, readwrite, strong, null_resettable) RequestPrepareProposal *prepareProposal;

@property(nonatomic, readwrite, strong, null_resettable) RequestProcessProposal *processProposal;

@property(nonatomic, readwrite, strong, null_resettable) RequestExtendVote *extendVote;

@property(nonatomic, readwrite, strong, null_resettable) RequestVerifyVoteExtension *verifyVoteExtension;

@property(nonatomic, readwrite, strong, null_resettable) RequestFinalizeBlock *finalizeBlock;

@end

/**
 * Clears whatever value was set for the oneof 'value'.
 **/
void Request_ClearValueOneOfCase(Request *message);

#pragma mark - RequestEcho

typedef GPB_ENUM(RequestEcho_FieldNumber) {
  RequestEcho_FieldNumber_Message = 1,
};

GPB_FINAL @interface RequestEcho : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - RequestFlush

GPB_FINAL @interface RequestFlush : GPBMessage

@end

#pragma mark - RequestInfo

typedef GPB_ENUM(RequestInfo_FieldNumber) {
  RequestInfo_FieldNumber_Version = 1,
  RequestInfo_FieldNumber_BlockVersion = 2,
  RequestInfo_FieldNumber_P2PVersion = 3,
  RequestInfo_FieldNumber_AbciVersion = 4,
};

GPB_FINAL @interface RequestInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@property(nonatomic, readwrite) uint64_t blockVersion;

@property(nonatomic, readwrite) uint64_t p2PVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *abciVersion;

@end

#pragma mark - RequestInitChain

typedef GPB_ENUM(RequestInitChain_FieldNumber) {
  RequestInitChain_FieldNumber_Time = 1,
  RequestInitChain_FieldNumber_ChainId = 2,
  RequestInitChain_FieldNumber_ConsensusParams = 3,
  RequestInitChain_FieldNumber_ValidatorsArray = 4,
  RequestInitChain_FieldNumber_AppStateBytes = 5,
  RequestInitChain_FieldNumber_InitialHeight = 6,
};

GPB_FINAL @interface RequestInitChain : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chainId;

@property(nonatomic, readwrite, strong, null_resettable) ConsensusParams *consensusParams;
/** Test to see if @c consensusParams has been set. */
@property(nonatomic, readwrite) BOOL hasConsensusParams;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ValidatorUpdate*> *validatorsArray;
/** The number of items in @c validatorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger validatorsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *appStateBytes;

@property(nonatomic, readwrite) int64_t initialHeight;

@end

#pragma mark - RequestQuery

typedef GPB_ENUM(RequestQuery_FieldNumber) {
  RequestQuery_FieldNumber_Data_p = 1,
  RequestQuery_FieldNumber_Path = 2,
  RequestQuery_FieldNumber_Height = 3,
  RequestQuery_FieldNumber_Prove = 4,
};

GPB_FINAL @interface RequestQuery : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *path;

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite) BOOL prove;

@end

#pragma mark - RequestCheckTx

typedef GPB_ENUM(RequestCheckTx_FieldNumber) {
  RequestCheckTx_FieldNumber_Tx = 1,
  RequestCheckTx_FieldNumber_Type = 2,
};

GPB_FINAL @interface RequestCheckTx : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *tx;

@property(nonatomic, readwrite) CheckTxType type;

@end

/**
 * Fetches the raw value of a @c RequestCheckTx's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RequestCheckTx_Type_RawValue(RequestCheckTx *message);
/**
 * Sets the raw value of an @c RequestCheckTx's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRequestCheckTx_Type_RawValue(RequestCheckTx *message, int32_t value);

#pragma mark - RequestCommit

GPB_FINAL @interface RequestCommit : GPBMessage

@end

#pragma mark - RequestListSnapshots

/**
 * lists available snapshots
 **/
GPB_FINAL @interface RequestListSnapshots : GPBMessage

@end

#pragma mark - RequestOfferSnapshot

typedef GPB_ENUM(RequestOfferSnapshot_FieldNumber) {
  RequestOfferSnapshot_FieldNumber_Snapshot = 1,
  RequestOfferSnapshot_FieldNumber_AppHash = 2,
};

/**
 * offers a snapshot to the application
 **/
GPB_FINAL @interface RequestOfferSnapshot : GPBMessage

/** snapshot offered by peers */
@property(nonatomic, readwrite, strong, null_resettable) Snapshot *snapshot;
/** Test to see if @c snapshot has been set. */
@property(nonatomic, readwrite) BOOL hasSnapshot;

/** light client-verified app hash for snapshot height */
@property(nonatomic, readwrite, copy, null_resettable) NSData *appHash;

@end

#pragma mark - RequestLoadSnapshotChunk

typedef GPB_ENUM(RequestLoadSnapshotChunk_FieldNumber) {
  RequestLoadSnapshotChunk_FieldNumber_Height = 1,
  RequestLoadSnapshotChunk_FieldNumber_Format = 2,
  RequestLoadSnapshotChunk_FieldNumber_Chunk = 3,
};

/**
 * loads a snapshot chunk
 **/
GPB_FINAL @interface RequestLoadSnapshotChunk : GPBMessage

@property(nonatomic, readwrite) uint64_t height;

@property(nonatomic, readwrite) uint32_t format;

@property(nonatomic, readwrite) uint32_t chunk;

@end

#pragma mark - RequestApplySnapshotChunk

typedef GPB_ENUM(RequestApplySnapshotChunk_FieldNumber) {
  RequestApplySnapshotChunk_FieldNumber_Index = 1,
  RequestApplySnapshotChunk_FieldNumber_Chunk = 2,
  RequestApplySnapshotChunk_FieldNumber_Sender = 3,
};

/**
 * Applies a snapshot chunk
 **/
GPB_FINAL @interface RequestApplySnapshotChunk : GPBMessage

@property(nonatomic, readwrite) uint32_t index;

@property(nonatomic, readwrite, copy, null_resettable) NSData *chunk;

@property(nonatomic, readwrite, copy, null_resettable) NSString *sender;

@end

#pragma mark - RequestPrepareProposal

typedef GPB_ENUM(RequestPrepareProposal_FieldNumber) {
  RequestPrepareProposal_FieldNumber_MaxTxBytes = 1,
  RequestPrepareProposal_FieldNumber_TxsArray = 2,
  RequestPrepareProposal_FieldNumber_LocalLastCommit = 3,
  RequestPrepareProposal_FieldNumber_MisbehaviorArray = 4,
  RequestPrepareProposal_FieldNumber_Height = 5,
  RequestPrepareProposal_FieldNumber_Time = 6,
  RequestPrepareProposal_FieldNumber_NextValidatorsHash = 7,
  RequestPrepareProposal_FieldNumber_ProposerAddress = 8,
};

GPB_FINAL @interface RequestPrepareProposal : GPBMessage

/** the modified transactions cannot exceed this size. */
@property(nonatomic, readwrite) int64_t maxTxBytes;

/**
 * txs is an array of transactions that will be included in a block,
 * sent to the app for possible modifications.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *txsArray;
/** The number of items in @c txsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) ExtendedCommitInfo *localLastCommit;
/** Test to see if @c localLastCommit has been set. */
@property(nonatomic, readwrite) BOOL hasLocalLastCommit;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Misbehavior*> *misbehaviorArray;
/** The number of items in @c misbehaviorArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger misbehaviorArray_Count;

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@property(nonatomic, readwrite, copy, null_resettable) NSData *nextValidatorsHash;

/** address of the public key of the validator proposing the block. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *proposerAddress;

@end

#pragma mark - RequestProcessProposal

typedef GPB_ENUM(RequestProcessProposal_FieldNumber) {
  RequestProcessProposal_FieldNumber_TxsArray = 1,
  RequestProcessProposal_FieldNumber_ProposedLastCommit = 2,
  RequestProcessProposal_FieldNumber_MisbehaviorArray = 3,
  RequestProcessProposal_FieldNumber_Hash_p = 4,
  RequestProcessProposal_FieldNumber_Height = 5,
  RequestProcessProposal_FieldNumber_Time = 6,
  RequestProcessProposal_FieldNumber_NextValidatorsHash = 7,
  RequestProcessProposal_FieldNumber_ProposerAddress = 8,
};

GPB_FINAL @interface RequestProcessProposal : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *txsArray;
/** The number of items in @c txsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) CommitInfo *proposedLastCommit;
/** Test to see if @c proposedLastCommit has been set. */
@property(nonatomic, readwrite) BOOL hasProposedLastCommit;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Misbehavior*> *misbehaviorArray;
/** The number of items in @c misbehaviorArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger misbehaviorArray_Count;

/** hash is the merkle root hash of the fields of the proposed block. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@property(nonatomic, readwrite, copy, null_resettable) NSData *nextValidatorsHash;

/** address of the public key of the original proposer of the block. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *proposerAddress;

@end

#pragma mark - RequestExtendVote

typedef GPB_ENUM(RequestExtendVote_FieldNumber) {
  RequestExtendVote_FieldNumber_Hash_p = 1,
  RequestExtendVote_FieldNumber_Height = 2,
  RequestExtendVote_FieldNumber_Time = 3,
  RequestExtendVote_FieldNumber_TxsArray = 4,
  RequestExtendVote_FieldNumber_ProposedLastCommit = 5,
  RequestExtendVote_FieldNumber_MisbehaviorArray = 6,
  RequestExtendVote_FieldNumber_NextValidatorsHash = 7,
  RequestExtendVote_FieldNumber_ProposerAddress = 8,
};

/**
 * Extends a vote with application-injected data
 **/
GPB_FINAL @interface RequestExtendVote : GPBMessage

/** the hash of the block that this vote may be referring to */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

/** the height of the extended vote */
@property(nonatomic, readwrite) int64_t height;

/** info of the block that this vote may be referring to */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *txsArray;
/** The number of items in @c txsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) CommitInfo *proposedLastCommit;
/** Test to see if @c proposedLastCommit has been set. */
@property(nonatomic, readwrite) BOOL hasProposedLastCommit;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Misbehavior*> *misbehaviorArray;
/** The number of items in @c misbehaviorArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger misbehaviorArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *nextValidatorsHash;

/** address of the public key of the original proposer of the block. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *proposerAddress;

@end

#pragma mark - RequestVerifyVoteExtension

typedef GPB_ENUM(RequestVerifyVoteExtension_FieldNumber) {
  RequestVerifyVoteExtension_FieldNumber_Hash_p = 1,
  RequestVerifyVoteExtension_FieldNumber_ValidatorAddress = 2,
  RequestVerifyVoteExtension_FieldNumber_Height = 3,
  RequestVerifyVoteExtension_FieldNumber_VoteExtension = 4,
};

/**
 * Verify the vote extension
 **/
GPB_FINAL @interface RequestVerifyVoteExtension : GPBMessage

/** the hash of the block that this received vote corresponds to */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

/** the validator that signed the vote extension */
@property(nonatomic, readwrite, copy, null_resettable) NSData *validatorAddress;

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite, copy, null_resettable) NSData *voteExtension;

@end

#pragma mark - RequestFinalizeBlock

typedef GPB_ENUM(RequestFinalizeBlock_FieldNumber) {
  RequestFinalizeBlock_FieldNumber_TxsArray = 1,
  RequestFinalizeBlock_FieldNumber_DecidedLastCommit = 2,
  RequestFinalizeBlock_FieldNumber_MisbehaviorArray = 3,
  RequestFinalizeBlock_FieldNumber_Hash_p = 4,
  RequestFinalizeBlock_FieldNumber_Height = 5,
  RequestFinalizeBlock_FieldNumber_Time = 6,
  RequestFinalizeBlock_FieldNumber_NextValidatorsHash = 7,
  RequestFinalizeBlock_FieldNumber_ProposerAddress = 8,
};

GPB_FINAL @interface RequestFinalizeBlock : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *txsArray;
/** The number of items in @c txsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) CommitInfo *decidedLastCommit;
/** Test to see if @c decidedLastCommit has been set. */
@property(nonatomic, readwrite) BOOL hasDecidedLastCommit;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Misbehavior*> *misbehaviorArray;
/** The number of items in @c misbehaviorArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger misbehaviorArray_Count;

/** hash is the merkle root hash of the fields of the decided block. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@property(nonatomic, readwrite, copy, null_resettable) NSData *nextValidatorsHash;

/** proposer_address is the address of the public key of the original proposer of the block. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *proposerAddress;

@end

#pragma mark - Response

typedef GPB_ENUM(Response_FieldNumber) {
  Response_FieldNumber_Exception = 1,
  Response_FieldNumber_Echo = 2,
  Response_FieldNumber_Flush = 3,
  Response_FieldNumber_Info = 4,
  Response_FieldNumber_InitChain = 6,
  Response_FieldNumber_Query = 7,
  Response_FieldNumber_CheckTx = 9,
  Response_FieldNumber_Commit = 12,
  Response_FieldNumber_ListSnapshots = 13,
  Response_FieldNumber_OfferSnapshot = 14,
  Response_FieldNumber_LoadSnapshotChunk = 15,
  Response_FieldNumber_ApplySnapshotChunk = 16,
  Response_FieldNumber_PrepareProposal = 17,
  Response_FieldNumber_ProcessProposal = 18,
  Response_FieldNumber_ExtendVote = 19,
  Response_FieldNumber_VerifyVoteExtension = 20,
  Response_FieldNumber_FinalizeBlock = 21,
};

typedef GPB_ENUM(Response_Value_OneOfCase) {
  Response_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  Response_Value_OneOfCase_Exception = 1,
  Response_Value_OneOfCase_Echo = 2,
  Response_Value_OneOfCase_Flush = 3,
  Response_Value_OneOfCase_Info = 4,
  Response_Value_OneOfCase_InitChain = 6,
  Response_Value_OneOfCase_Query = 7,
  Response_Value_OneOfCase_CheckTx = 9,
  Response_Value_OneOfCase_Commit = 12,
  Response_Value_OneOfCase_ListSnapshots = 13,
  Response_Value_OneOfCase_OfferSnapshot = 14,
  Response_Value_OneOfCase_LoadSnapshotChunk = 15,
  Response_Value_OneOfCase_ApplySnapshotChunk = 16,
  Response_Value_OneOfCase_PrepareProposal = 17,
  Response_Value_OneOfCase_ProcessProposal = 18,
  Response_Value_OneOfCase_ExtendVote = 19,
  Response_Value_OneOfCase_VerifyVoteExtension = 20,
  Response_Value_OneOfCase_FinalizeBlock = 21,
};

GPB_FINAL @interface Response : GPBMessage

@property(nonatomic, readonly) Response_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ResponseException *exception;

@property(nonatomic, readwrite, strong, null_resettable) ResponseEcho *echo;

@property(nonatomic, readwrite, strong, null_resettable) ResponseFlush *flush;

@property(nonatomic, readwrite, strong, null_resettable) ResponseInfo *info;

@property(nonatomic, readwrite, strong, null_resettable) ResponseInitChain *initChain;
- (ResponseInitChain *)initChain GPB_METHOD_FAMILY_NONE;

@property(nonatomic, readwrite, strong, null_resettable) ResponseQuery *query;

@property(nonatomic, readwrite, strong, null_resettable) ResponseCheckTx *checkTx;

@property(nonatomic, readwrite, strong, null_resettable) ResponseCommit *commit;

@property(nonatomic, readwrite, strong, null_resettable) ResponseListSnapshots *listSnapshots;

@property(nonatomic, readwrite, strong, null_resettable) ResponseOfferSnapshot *offerSnapshot;

@property(nonatomic, readwrite, strong, null_resettable) ResponseLoadSnapshotChunk *loadSnapshotChunk;

@property(nonatomic, readwrite, strong, null_resettable) ResponseApplySnapshotChunk *applySnapshotChunk;

@property(nonatomic, readwrite, strong, null_resettable) ResponsePrepareProposal *prepareProposal;

@property(nonatomic, readwrite, strong, null_resettable) ResponseProcessProposal *processProposal;

@property(nonatomic, readwrite, strong, null_resettable) ResponseExtendVote *extendVote;

@property(nonatomic, readwrite, strong, null_resettable) ResponseVerifyVoteExtension *verifyVoteExtension;

@property(nonatomic, readwrite, strong, null_resettable) ResponseFinalizeBlock *finalizeBlock;

@end

/**
 * Clears whatever value was set for the oneof 'value'.
 **/
void Response_ClearValueOneOfCase(Response *message);

#pragma mark - ResponseException

typedef GPB_ENUM(ResponseException_FieldNumber) {
  ResponseException_FieldNumber_Error = 1,
};

/**
 * nondeterministic
 **/
GPB_FINAL @interface ResponseException : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *error;

@end

#pragma mark - ResponseEcho

typedef GPB_ENUM(ResponseEcho_FieldNumber) {
  ResponseEcho_FieldNumber_Message = 1,
};

GPB_FINAL @interface ResponseEcho : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - ResponseFlush

GPB_FINAL @interface ResponseFlush : GPBMessage

@end

#pragma mark - ResponseInfo

typedef GPB_ENUM(ResponseInfo_FieldNumber) {
  ResponseInfo_FieldNumber_Data_p = 1,
  ResponseInfo_FieldNumber_Version = 2,
  ResponseInfo_FieldNumber_AppVersion = 3,
  ResponseInfo_FieldNumber_LastBlockHeight = 4,
  ResponseInfo_FieldNumber_LastBlockAppHash = 5,
};

GPB_FINAL @interface ResponseInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *data_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@property(nonatomic, readwrite) uint64_t appVersion;

@property(nonatomic, readwrite) int64_t lastBlockHeight;

@property(nonatomic, readwrite, copy, null_resettable) NSData *lastBlockAppHash;

@end

#pragma mark - ResponseInitChain

typedef GPB_ENUM(ResponseInitChain_FieldNumber) {
  ResponseInitChain_FieldNumber_ConsensusParams = 1,
  ResponseInitChain_FieldNumber_ValidatorsArray = 2,
  ResponseInitChain_FieldNumber_AppHash = 3,
};

GPB_FINAL @interface ResponseInitChain : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ConsensusParams *consensusParams;
/** Test to see if @c consensusParams has been set. */
@property(nonatomic, readwrite) BOOL hasConsensusParams;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ValidatorUpdate*> *validatorsArray;
/** The number of items in @c validatorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger validatorsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *appHash;

@end

#pragma mark - ResponseQuery

typedef GPB_ENUM(ResponseQuery_FieldNumber) {
  ResponseQuery_FieldNumber_Code = 1,
  ResponseQuery_FieldNumber_Log = 3,
  ResponseQuery_FieldNumber_Info = 4,
  ResponseQuery_FieldNumber_Index = 5,
  ResponseQuery_FieldNumber_Key = 6,
  ResponseQuery_FieldNumber_Value = 7,
  ResponseQuery_FieldNumber_ProofOps = 8,
  ResponseQuery_FieldNumber_Height = 9,
  ResponseQuery_FieldNumber_Codespace = 10,
};

GPB_FINAL @interface ResponseQuery : GPBMessage

@property(nonatomic, readwrite) uint32_t code;

/** bytes data = 2; // use "value" instead. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *log;

/** nondeterministic */
@property(nonatomic, readwrite, copy, null_resettable) NSString *info;

@property(nonatomic, readwrite) int64_t index;

@property(nonatomic, readwrite, copy, null_resettable) NSData *key;

@property(nonatomic, readwrite, copy, null_resettable) NSData *value;

@property(nonatomic, readwrite, strong, null_resettable) ProofOps *proofOps;
/** Test to see if @c proofOps has been set. */
@property(nonatomic, readwrite) BOOL hasProofOps;

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite, copy, null_resettable) NSString *codespace;

@end

#pragma mark - ResponseCheckTx

typedef GPB_ENUM(ResponseCheckTx_FieldNumber) {
  ResponseCheckTx_FieldNumber_Code = 1,
  ResponseCheckTx_FieldNumber_Data_p = 2,
  ResponseCheckTx_FieldNumber_Log = 3,
  ResponseCheckTx_FieldNumber_Info = 4,
  ResponseCheckTx_FieldNumber_GasWanted = 5,
  ResponseCheckTx_FieldNumber_GasUsed = 6,
  ResponseCheckTx_FieldNumber_EventsArray = 7,
  ResponseCheckTx_FieldNumber_Codespace = 8,
};

GPB_FINAL @interface ResponseCheckTx : GPBMessage

@property(nonatomic, readwrite) uint32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

/** nondeterministic */
@property(nonatomic, readwrite, copy, null_resettable) NSString *log;

/** nondeterministic */
@property(nonatomic, readwrite, copy, null_resettable) NSString *info;

@property(nonatomic, readwrite) int64_t gasWanted;

@property(nonatomic, readwrite) int64_t gasUsed;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Event*> *eventsArray;
/** The number of items in @c eventsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *codespace;

@end

#pragma mark - ResponseCommit

typedef GPB_ENUM(ResponseCommit_FieldNumber) {
  ResponseCommit_FieldNumber_RetainHeight = 3,
};

GPB_FINAL @interface ResponseCommit : GPBMessage

@property(nonatomic, readwrite) int64_t retainHeight;

@end

#pragma mark - ResponseListSnapshots

typedef GPB_ENUM(ResponseListSnapshots_FieldNumber) {
  ResponseListSnapshots_FieldNumber_SnapshotsArray = 1,
};

GPB_FINAL @interface ResponseListSnapshots : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Snapshot*> *snapshotsArray;
/** The number of items in @c snapshotsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger snapshotsArray_Count;

@end

#pragma mark - ResponseOfferSnapshot

typedef GPB_ENUM(ResponseOfferSnapshot_FieldNumber) {
  ResponseOfferSnapshot_FieldNumber_Result = 1,
};

GPB_FINAL @interface ResponseOfferSnapshot : GPBMessage

@property(nonatomic, readwrite) ResponseOfferSnapshot_Result result;

@end

/**
 * Fetches the raw value of a @c ResponseOfferSnapshot's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResponseOfferSnapshot_Result_RawValue(ResponseOfferSnapshot *message);
/**
 * Sets the raw value of an @c ResponseOfferSnapshot's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResponseOfferSnapshot_Result_RawValue(ResponseOfferSnapshot *message, int32_t value);

#pragma mark - ResponseLoadSnapshotChunk

typedef GPB_ENUM(ResponseLoadSnapshotChunk_FieldNumber) {
  ResponseLoadSnapshotChunk_FieldNumber_Chunk = 1,
};

GPB_FINAL @interface ResponseLoadSnapshotChunk : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *chunk;

@end

#pragma mark - ResponseApplySnapshotChunk

typedef GPB_ENUM(ResponseApplySnapshotChunk_FieldNumber) {
  ResponseApplySnapshotChunk_FieldNumber_Result = 1,
  ResponseApplySnapshotChunk_FieldNumber_RefetchChunksArray = 2,
  ResponseApplySnapshotChunk_FieldNumber_RejectSendersArray = 3,
};

GPB_FINAL @interface ResponseApplySnapshotChunk : GPBMessage

@property(nonatomic, readwrite) ResponseApplySnapshotChunk_Result result;

/** Chunks to refetch and reapply */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *refetchChunksArray;
/** The number of items in @c refetchChunksArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger refetchChunksArray_Count;

/** Chunk senders to reject and ban */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *rejectSendersArray;
/** The number of items in @c rejectSendersArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger rejectSendersArray_Count;

@end

/**
 * Fetches the raw value of a @c ResponseApplySnapshotChunk's @c result property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResponseApplySnapshotChunk_Result_RawValue(ResponseApplySnapshotChunk *message);
/**
 * Sets the raw value of an @c ResponseApplySnapshotChunk's @c result property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResponseApplySnapshotChunk_Result_RawValue(ResponseApplySnapshotChunk *message, int32_t value);

#pragma mark - ResponsePrepareProposal

typedef GPB_ENUM(ResponsePrepareProposal_FieldNumber) {
  ResponsePrepareProposal_FieldNumber_TxsArray = 1,
};

GPB_FINAL @interface ResponsePrepareProposal : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *txsArray;
/** The number of items in @c txsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger txsArray_Count;

@end

#pragma mark - ResponseProcessProposal

typedef GPB_ENUM(ResponseProcessProposal_FieldNumber) {
  ResponseProcessProposal_FieldNumber_Status = 1,
};

GPB_FINAL @interface ResponseProcessProposal : GPBMessage

@property(nonatomic, readwrite) ResponseProcessProposal_ProposalStatus status;

@end

/**
 * Fetches the raw value of a @c ResponseProcessProposal's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResponseProcessProposal_Status_RawValue(ResponseProcessProposal *message);
/**
 * Sets the raw value of an @c ResponseProcessProposal's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResponseProcessProposal_Status_RawValue(ResponseProcessProposal *message, int32_t value);

#pragma mark - ResponseExtendVote

typedef GPB_ENUM(ResponseExtendVote_FieldNumber) {
  ResponseExtendVote_FieldNumber_VoteExtension = 1,
};

GPB_FINAL @interface ResponseExtendVote : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *voteExtension;

@end

#pragma mark - ResponseVerifyVoteExtension

typedef GPB_ENUM(ResponseVerifyVoteExtension_FieldNumber) {
  ResponseVerifyVoteExtension_FieldNumber_Status = 1,
};

GPB_FINAL @interface ResponseVerifyVoteExtension : GPBMessage

@property(nonatomic, readwrite) ResponseVerifyVoteExtension_VerifyStatus status;

@end

/**
 * Fetches the raw value of a @c ResponseVerifyVoteExtension's @c status property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ResponseVerifyVoteExtension_Status_RawValue(ResponseVerifyVoteExtension *message);
/**
 * Sets the raw value of an @c ResponseVerifyVoteExtension's @c status property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetResponseVerifyVoteExtension_Status_RawValue(ResponseVerifyVoteExtension *message, int32_t value);

#pragma mark - ResponseFinalizeBlock

typedef GPB_ENUM(ResponseFinalizeBlock_FieldNumber) {
  ResponseFinalizeBlock_FieldNumber_EventsArray = 1,
  ResponseFinalizeBlock_FieldNumber_TxResultsArray = 2,
  ResponseFinalizeBlock_FieldNumber_ValidatorUpdatesArray = 3,
  ResponseFinalizeBlock_FieldNumber_ConsensusParamUpdates = 4,
  ResponseFinalizeBlock_FieldNumber_AppHash = 5,
};

GPB_FINAL @interface ResponseFinalizeBlock : GPBMessage

/** set of block events emmitted as part of executing the block */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Event*> *eventsArray;
/** The number of items in @c eventsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

/**
 * the result of executing each transaction including the events
 * the particular transction emitted. This should match the order
 * of the transactions delivered in the block itself
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ExecTxResult*> *txResultsArray;
/** The number of items in @c txResultsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger txResultsArray_Count;

/** a list of updates to the validator set. These will reflect the validator set at current height + 2. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ValidatorUpdate*> *validatorUpdatesArray;
/** The number of items in @c validatorUpdatesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger validatorUpdatesArray_Count;

/** updates to the consensus params, if any. */
@property(nonatomic, readwrite, strong, null_resettable) ConsensusParams *consensusParamUpdates;
/** Test to see if @c consensusParamUpdates has been set. */
@property(nonatomic, readwrite) BOOL hasConsensusParamUpdates;

/**
 * app_hash is the hash of the applications' state which is used to confirm that execution of the transactions was
 * deterministic. It is up to the application to decide which algorithm to use.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSData *appHash;

@end

#pragma mark - CommitInfo

typedef GPB_ENUM(CommitInfo_FieldNumber) {
  CommitInfo_FieldNumber_Round = 1,
  CommitInfo_FieldNumber_VotesArray = 2,
};

GPB_FINAL @interface CommitInfo : GPBMessage

@property(nonatomic, readwrite) int32_t round;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<VoteInfo*> *votesArray;
/** The number of items in @c votesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger votesArray_Count;

@end

#pragma mark - ExtendedCommitInfo

typedef GPB_ENUM(ExtendedCommitInfo_FieldNumber) {
  ExtendedCommitInfo_FieldNumber_Round = 1,
  ExtendedCommitInfo_FieldNumber_VotesArray = 2,
};

/**
 * ExtendedCommitInfo is similar to CommitInfo except that it is only used in
 * the PrepareProposal request such that CometBFT can provide vote extensions
 * to the application.
 **/
GPB_FINAL @interface ExtendedCommitInfo : GPBMessage

/** The round at which the block proposer decided in the previous height. */
@property(nonatomic, readwrite) int32_t round;

/**
 * List of validators' addresses in the last validator set with their voting
 * information, including vote extensions.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ExtendedVoteInfo*> *votesArray;
/** The number of items in @c votesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger votesArray_Count;

@end

#pragma mark - Event

typedef GPB_ENUM(Event_FieldNumber) {
  Event_FieldNumber_Type = 1,
  Event_FieldNumber_AttributesArray = 2,
};

/**
 * Event allows application developers to attach additional information to
 * ResponseFinalizeBlock and ResponseCheckTx.
 * Later, transactions may be queried using these events.
 **/
GPB_FINAL @interface Event : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EventAttribute*> *attributesArray;
/** The number of items in @c attributesArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger attributesArray_Count;

@end

#pragma mark - EventAttribute

typedef GPB_ENUM(EventAttribute_FieldNumber) {
  EventAttribute_FieldNumber_Key = 1,
  EventAttribute_FieldNumber_Value = 2,
  EventAttribute_FieldNumber_Index = 3,
};

/**
 * EventAttribute is a single key-value pair, associated with an event.
 **/
GPB_FINAL @interface EventAttribute : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

/** nondeterministic */
@property(nonatomic, readwrite) BOOL index;

@end

#pragma mark - ExecTxResult

typedef GPB_ENUM(ExecTxResult_FieldNumber) {
  ExecTxResult_FieldNumber_Code = 1,
  ExecTxResult_FieldNumber_Data_p = 2,
  ExecTxResult_FieldNumber_Log = 3,
  ExecTxResult_FieldNumber_Info = 4,
  ExecTxResult_FieldNumber_GasWanted = 5,
  ExecTxResult_FieldNumber_GasUsed = 6,
  ExecTxResult_FieldNumber_EventsArray = 7,
  ExecTxResult_FieldNumber_Codespace = 8,
};

/**
 * ExecTxResult contains results of executing one individual transaction.
 *
 * * Its structure is equivalent to #ResponseDeliverTx which will be deprecated/deleted
 **/
GPB_FINAL @interface ExecTxResult : GPBMessage

@property(nonatomic, readwrite) uint32_t code;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

/** nondeterministic */
@property(nonatomic, readwrite, copy, null_resettable) NSString *log;

/** nondeterministic */
@property(nonatomic, readwrite, copy, null_resettable) NSString *info;

@property(nonatomic, readwrite) int64_t gasWanted;

@property(nonatomic, readwrite) int64_t gasUsed;

/** nondeterministic */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Event*> *eventsArray;
/** The number of items in @c eventsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSString *codespace;

@end

#pragma mark - TxResult

typedef GPB_ENUM(TxResult_FieldNumber) {
  TxResult_FieldNumber_Height = 1,
  TxResult_FieldNumber_Index = 2,
  TxResult_FieldNumber_Tx = 3,
  TxResult_FieldNumber_Result = 4,
};

/**
 * TxResult contains results of executing the transaction.
 *
 * One usage is indexing transaction results.
 **/
GPB_FINAL @interface TxResult : GPBMessage

@property(nonatomic, readwrite) int64_t height;

@property(nonatomic, readwrite) uint32_t index;

@property(nonatomic, readwrite, copy, null_resettable) NSData *tx;

@property(nonatomic, readwrite, strong, null_resettable) ExecTxResult *result;
/** Test to see if @c result has been set. */
@property(nonatomic, readwrite) BOOL hasResult;

@end

#pragma mark - Validator

typedef GPB_ENUM(Validator_FieldNumber) {
  Validator_FieldNumber_Address = 1,
  Validator_FieldNumber_Power = 3,
};

GPB_FINAL @interface Validator : GPBMessage

/** The first 20 bytes of SHA256(public key) */
@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

/** PubKey pub_key = 2 [(gogoproto.nullable)=false]; */
@property(nonatomic, readwrite) int64_t power;

@end

#pragma mark - ValidatorUpdate

typedef GPB_ENUM(ValidatorUpdate_FieldNumber) {
  ValidatorUpdate_FieldNumber_PubKey = 1,
  ValidatorUpdate_FieldNumber_Power = 2,
};

GPB_FINAL @interface ValidatorUpdate : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PublicKey *pubKey;
/** Test to see if @c pubKey has been set. */
@property(nonatomic, readwrite) BOOL hasPubKey;

@property(nonatomic, readwrite) int64_t power;

@end

#pragma mark - VoteInfo

typedef GPB_ENUM(VoteInfo_FieldNumber) {
  VoteInfo_FieldNumber_Validator = 1,
  VoteInfo_FieldNumber_BlockIdFlag = 3,
};

GPB_FINAL @interface VoteInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Validator *validator;
/** Test to see if @c validator has been set. */
@property(nonatomic, readwrite) BOOL hasValidator;

@property(nonatomic, readwrite) BlockIDFlag blockIdFlag;

@end

/**
 * Fetches the raw value of a @c VoteInfo's @c blockIdFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t VoteInfo_BlockIdFlag_RawValue(VoteInfo *message);
/**
 * Sets the raw value of an @c VoteInfo's @c blockIdFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetVoteInfo_BlockIdFlag_RawValue(VoteInfo *message, int32_t value);

#pragma mark - ExtendedVoteInfo

typedef GPB_ENUM(ExtendedVoteInfo_FieldNumber) {
  ExtendedVoteInfo_FieldNumber_Validator = 1,
  ExtendedVoteInfo_FieldNumber_VoteExtension = 3,
  ExtendedVoteInfo_FieldNumber_ExtensionSignature = 4,
  ExtendedVoteInfo_FieldNumber_BlockIdFlag = 5,
};

GPB_FINAL @interface ExtendedVoteInfo : GPBMessage

/** The validator that sent the vote. */
@property(nonatomic, readwrite, strong, null_resettable) Validator *validator;
/** Test to see if @c validator has been set. */
@property(nonatomic, readwrite) BOOL hasValidator;

/** Non-deterministic extension provided by the sending validator's application. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *voteExtension;

/** Vote extension signature created by CometBFT */
@property(nonatomic, readwrite, copy, null_resettable) NSData *extensionSignature;

/** block_id_flag indicates whether the validator voted for a block, nil, or did not vote at all */
@property(nonatomic, readwrite) BlockIDFlag blockIdFlag;

@end

/**
 * Fetches the raw value of a @c ExtendedVoteInfo's @c blockIdFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ExtendedVoteInfo_BlockIdFlag_RawValue(ExtendedVoteInfo *message);
/**
 * Sets the raw value of an @c ExtendedVoteInfo's @c blockIdFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetExtendedVoteInfo_BlockIdFlag_RawValue(ExtendedVoteInfo *message, int32_t value);

#pragma mark - Misbehavior

typedef GPB_ENUM(Misbehavior_FieldNumber) {
  Misbehavior_FieldNumber_Type = 1,
  Misbehavior_FieldNumber_Validator = 2,
  Misbehavior_FieldNumber_Height = 3,
  Misbehavior_FieldNumber_Time = 4,
  Misbehavior_FieldNumber_TotalVotingPower = 5,
};

GPB_FINAL @interface Misbehavior : GPBMessage

@property(nonatomic, readwrite) MisbehaviorType type;

/** The offending validator */
@property(nonatomic, readwrite, strong, null_resettable) Validator *validator;
/** Test to see if @c validator has been set. */
@property(nonatomic, readwrite) BOOL hasValidator;

/** The height when the offense occurred */
@property(nonatomic, readwrite) int64_t height;

/** The corresponding time where the offense occurred */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

/**
 * Total voting power of the validator set in case the ABCI application does
 * not store historical validators.
 * https://github.com/tendermint/tendermint/issues/4581
 **/
@property(nonatomic, readwrite) int64_t totalVotingPower;

@end

/**
 * Fetches the raw value of a @c Misbehavior's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Misbehavior_Type_RawValue(Misbehavior *message);
/**
 * Sets the raw value of an @c Misbehavior's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMisbehavior_Type_RawValue(Misbehavior *message, int32_t value);

#pragma mark - Snapshot

typedef GPB_ENUM(Snapshot_FieldNumber) {
  Snapshot_FieldNumber_Height = 1,
  Snapshot_FieldNumber_Format = 2,
  Snapshot_FieldNumber_Chunks = 3,
  Snapshot_FieldNumber_Hash_p = 4,
  Snapshot_FieldNumber_Metadata = 5,
};

GPB_FINAL @interface Snapshot : GPBMessage

/** The height at which the snapshot was taken */
@property(nonatomic, readwrite) uint64_t height;

/** The application-specific snapshot format */
@property(nonatomic, readwrite) uint32_t format;

/** Number of chunks in the snapshot */
@property(nonatomic, readwrite) uint32_t chunks;

/** Arbitrary snapshot hash, equal only if identical */
@property(nonatomic, readwrite, copy, null_resettable) NSData *hash_p;

/** Arbitrary application metadata */
@property(nonatomic, readwrite, copy, null_resettable) NSData *metadata;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
