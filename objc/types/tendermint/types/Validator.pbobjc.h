// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: tendermint/types/validator.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "tendermint/crypto/Keys.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Validator;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BlockIDFlag

/** BlockIdFlag indicates which BlockID the signature is for */
typedef GPB_ENUM(BlockIDFlag) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BlockIDFlag_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** indicates an error condition */
  BlockIDFlag_BlockIdFlagUnknown = 0,

  /** the vote was not received */
  BlockIDFlag_BlockIdFlagAbsent = 1,

  /** voted for the block that received the majority */
  BlockIDFlag_BlockIdFlagCommit = 2,

  /** voted for nil */
  BlockIDFlag_BlockIdFlagNil = 3,
};

GPBEnumDescriptor *BlockIDFlag_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BlockIDFlag_IsValidValue(int32_t value);

#pragma mark - ValidatorRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ValidatorRoot : GPBRootObject
@end

#pragma mark - ValidatorSet

typedef GPB_ENUM(ValidatorSet_FieldNumber) {
  ValidatorSet_FieldNumber_ValidatorsArray = 1,
  ValidatorSet_FieldNumber_Proposer = 2,
  ValidatorSet_FieldNumber_TotalVotingPower = 3,
};

GPB_FINAL @interface ValidatorSet : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Validator*> *validatorsArray;
/** The number of items in @c validatorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger validatorsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) Validator *proposer;
/** Test to see if @c proposer has been set. */
@property(nonatomic, readwrite) BOOL hasProposer;

@property(nonatomic, readwrite) int64_t totalVotingPower;

@end

#pragma mark - Validator

typedef GPB_ENUM(Validator_FieldNumber) {
  Validator_FieldNumber_Address = 1,
  Validator_FieldNumber_PubKey = 2,
  Validator_FieldNumber_VotingPower = 3,
  Validator_FieldNumber_ProposerPriority = 4,
};

GPB_FINAL @interface Validator : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@property(nonatomic, readwrite, strong, null_resettable) PublicKey *pubKey;
/** Test to see if @c pubKey has been set. */
@property(nonatomic, readwrite) BOOL hasPubKey;

@property(nonatomic, readwrite) int64_t votingPower;

@property(nonatomic, readwrite) int64_t proposerPriority;

@end

#pragma mark - SimpleValidator

typedef GPB_ENUM(SimpleValidator_FieldNumber) {
  SimpleValidator_FieldNumber_PubKey = 1,
  SimpleValidator_FieldNumber_VotingPower = 2,
};

GPB_FINAL @interface SimpleValidator : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) PublicKey *pubKey;
/** Test to see if @c pubKey has been set. */
@property(nonatomic, readwrite) BOOL hasPubKey;

@property(nonatomic, readwrite) int64_t votingPower;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
