// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// clang-format off
// source: tendermint/types/evidence.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

#import "tendermint/types/Types.pbobjc.h"
#import "tendermint/types/Validator.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DuplicateVoteEvidence;
@class Evidence;
@class LightClientAttackEvidence;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - EvidenceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface EvidenceRoot : GPBRootObject
@end

#pragma mark - Evidence

typedef GPB_ENUM(Evidence_FieldNumber) {
  Evidence_FieldNumber_DuplicateVoteEvidence = 1,
  Evidence_FieldNumber_LightClientAttackEvidence = 2,
};

typedef GPB_ENUM(Evidence_Sum_OneOfCase) {
  Evidence_Sum_OneOfCase_GPBUnsetOneOfCase = 0,
  Evidence_Sum_OneOfCase_DuplicateVoteEvidence = 1,
  Evidence_Sum_OneOfCase_LightClientAttackEvidence = 2,
};

GPB_FINAL @interface Evidence : GPBMessage

@property(nonatomic, readonly) Evidence_Sum_OneOfCase sumOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) DuplicateVoteEvidence *duplicateVoteEvidence;

@property(nonatomic, readwrite, strong, null_resettable) LightClientAttackEvidence *lightClientAttackEvidence;

@end

/**
 * Clears whatever value was set for the oneof 'sum'.
 **/
void Evidence_ClearSumOneOfCase(Evidence *message);

#pragma mark - DuplicateVoteEvidence

typedef GPB_ENUM(DuplicateVoteEvidence_FieldNumber) {
  DuplicateVoteEvidence_FieldNumber_VoteA = 1,
  DuplicateVoteEvidence_FieldNumber_VoteB = 2,
  DuplicateVoteEvidence_FieldNumber_TotalVotingPower = 3,
  DuplicateVoteEvidence_FieldNumber_ValidatorPower = 4,
  DuplicateVoteEvidence_FieldNumber_Timestamp = 5,
};

/**
 * DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes.
 **/
GPB_FINAL @interface DuplicateVoteEvidence : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Vote *voteA;
/** Test to see if @c voteA has been set. */
@property(nonatomic, readwrite) BOOL hasVoteA;

@property(nonatomic, readwrite, strong, null_resettable) Vote *voteB;
/** Test to see if @c voteB has been set. */
@property(nonatomic, readwrite) BOOL hasVoteB;

@property(nonatomic, readwrite) int64_t totalVotingPower;

@property(nonatomic, readwrite) int64_t validatorPower;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

@end

#pragma mark - LightClientAttackEvidence

typedef GPB_ENUM(LightClientAttackEvidence_FieldNumber) {
  LightClientAttackEvidence_FieldNumber_ConflictingBlock = 1,
  LightClientAttackEvidence_FieldNumber_CommonHeight = 2,
  LightClientAttackEvidence_FieldNumber_ByzantineValidatorsArray = 3,
  LightClientAttackEvidence_FieldNumber_TotalVotingPower = 4,
  LightClientAttackEvidence_FieldNumber_Timestamp = 5,
};

/**
 * LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
 **/
GPB_FINAL @interface LightClientAttackEvidence : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LightBlock *conflictingBlock;
/** Test to see if @c conflictingBlock has been set. */
@property(nonatomic, readwrite) BOOL hasConflictingBlock;

@property(nonatomic, readwrite) int64_t commonHeight;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Validator*> *byzantineValidatorsArray;
/** The number of items in @c byzantineValidatorsArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger byzantineValidatorsArray_Count;

@property(nonatomic, readwrite) int64_t totalVotingPower;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

@end

#pragma mark - EvidenceList

typedef GPB_ENUM(EvidenceList_FieldNumber) {
  EvidenceList_FieldNumber_EvidenceArray = 1,
};

GPB_FINAL @interface EvidenceList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Evidence*> *evidenceArray;
/** The number of items in @c evidenceArray without causing the container to be created. */
@property(nonatomic, readonly) NSUInteger evidenceArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
