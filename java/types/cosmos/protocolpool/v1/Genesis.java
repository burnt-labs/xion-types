// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/protocolpool/v1/genesis.proto
// Protobuf Java Version: 4.29.3

package cosmos.protocolpool.v1;

public final class Genesis {
  private Genesis() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Genesis.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GenesisStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.protocolpool.v1.GenesisState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    java.util.List<cosmos.protocolpool.v1.Types.ContinuousFund> 
        getContinuousFundsList();
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    cosmos.protocolpool.v1.Types.ContinuousFund getContinuousFunds(int index);
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    int getContinuousFundsCount();
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    java.util.List<? extends cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder> 
        getContinuousFundsOrBuilderList();
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder getContinuousFundsOrBuilder(
        int index);

    /**
     * <pre>
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     * </pre>
     *
     * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    boolean hasParams();
    /**
     * <pre>
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     * </pre>
     *
     * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    cosmos.protocolpool.v1.Types.Params getParams();
    /**
     * <pre>
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     * </pre>
     *
     * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    cosmos.protocolpool.v1.Types.ParamsOrBuilder getParamsOrBuilder();
  }
  /**
   * <pre>
   * GenesisState defines the protocolpool module's genesis state.
   * </pre>
   *
   * Protobuf type {@code cosmos.protocolpool.v1.GenesisState}
   */
  public static final class GenesisState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cosmos.protocolpool.v1.GenesisState)
      GenesisStateOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        GenesisState.class.getName());
    }
    // Use GenesisState.newBuilder() to construct.
    private GenesisState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GenesisState() {
      continuousFunds_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.protocolpool.v1.Genesis.internal_static_cosmos_protocolpool_v1_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.protocolpool.v1.Genesis.internal_static_cosmos_protocolpool_v1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.protocolpool.v1.Genesis.GenesisState.class, cosmos.protocolpool.v1.Genesis.GenesisState.Builder.class);
    }

    private int bitField0_;
    public static final int CONTINUOUS_FUNDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<cosmos.protocolpool.v1.Types.ContinuousFund> continuousFunds_;
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.protocolpool.v1.Types.ContinuousFund> getContinuousFundsList() {
      return continuousFunds_;
    }
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder> 
        getContinuousFundsOrBuilderList() {
      return continuousFunds_;
    }
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public int getContinuousFundsCount() {
      return continuousFunds_.size();
    }
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.protocolpool.v1.Types.ContinuousFund getContinuousFunds(int index) {
      return continuousFunds_.get(index);
    }
    /**
     * <pre>
     * ContinuousFunds defines the continuous funds at genesis.
     * </pre>
     *
     * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder getContinuousFundsOrBuilder(
        int index) {
      return continuousFunds_.get(index);
    }

    public static final int PARAMS_FIELD_NUMBER = 2;
    private cosmos.protocolpool.v1.Types.Params params_;
    /**
     * <pre>
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     * </pre>
     *
     * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return Whether the params field is set.
     */
    @java.lang.Override
    public boolean hasParams() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     * </pre>
     *
     * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return The params.
     */
    @java.lang.Override
    public cosmos.protocolpool.v1.Types.Params getParams() {
      return params_ == null ? cosmos.protocolpool.v1.Types.Params.getDefaultInstance() : params_;
    }
    /**
     * <pre>
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     * </pre>
     *
     * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.protocolpool.v1.Types.ParamsOrBuilder getParamsOrBuilder() {
      return params_ == null ? cosmos.protocolpool.v1.Types.Params.getDefaultInstance() : params_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < continuousFunds_.size(); i++) {
        output.writeMessage(1, continuousFunds_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getParams());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < continuousFunds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, continuousFunds_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParams());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.protocolpool.v1.Genesis.GenesisState)) {
        return super.equals(obj);
      }
      cosmos.protocolpool.v1.Genesis.GenesisState other = (cosmos.protocolpool.v1.Genesis.GenesisState) obj;

      if (!getContinuousFundsList()
          .equals(other.getContinuousFundsList())) return false;
      if (hasParams() != other.hasParams()) return false;
      if (hasParams()) {
        if (!getParams()
            .equals(other.getParams())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getContinuousFundsCount() > 0) {
        hash = (37 * hash) + CONTINUOUS_FUNDS_FIELD_NUMBER;
        hash = (53 * hash) + getContinuousFundsList().hashCode();
      }
      if (hasParams()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParams().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static cosmos.protocolpool.v1.Genesis.GenesisState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static cosmos.protocolpool.v1.Genesis.GenesisState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.protocolpool.v1.Genesis.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.protocolpool.v1.Genesis.GenesisState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GenesisState defines the protocolpool module's genesis state.
     * </pre>
     *
     * Protobuf type {@code cosmos.protocolpool.v1.GenesisState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.protocolpool.v1.GenesisState)
        cosmos.protocolpool.v1.Genesis.GenesisStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.protocolpool.v1.Genesis.internal_static_cosmos_protocolpool_v1_GenesisState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.protocolpool.v1.Genesis.internal_static_cosmos_protocolpool_v1_GenesisState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.protocolpool.v1.Genesis.GenesisState.class, cosmos.protocolpool.v1.Genesis.GenesisState.Builder.class);
      }

      // Construct using cosmos.protocolpool.v1.Genesis.GenesisState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getContinuousFundsFieldBuilder();
          getParamsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (continuousFundsBuilder_ == null) {
          continuousFunds_ = java.util.Collections.emptyList();
        } else {
          continuousFunds_ = null;
          continuousFundsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.protocolpool.v1.Genesis.internal_static_cosmos_protocolpool_v1_GenesisState_descriptor;
      }

      @java.lang.Override
      public cosmos.protocolpool.v1.Genesis.GenesisState getDefaultInstanceForType() {
        return cosmos.protocolpool.v1.Genesis.GenesisState.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.protocolpool.v1.Genesis.GenesisState build() {
        cosmos.protocolpool.v1.Genesis.GenesisState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.protocolpool.v1.Genesis.GenesisState buildPartial() {
        cosmos.protocolpool.v1.Genesis.GenesisState result = new cosmos.protocolpool.v1.Genesis.GenesisState(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(cosmos.protocolpool.v1.Genesis.GenesisState result) {
        if (continuousFundsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            continuousFunds_ = java.util.Collections.unmodifiableList(continuousFunds_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.continuousFunds_ = continuousFunds_;
        } else {
          result.continuousFunds_ = continuousFundsBuilder_.build();
        }
      }

      private void buildPartial0(cosmos.protocolpool.v1.Genesis.GenesisState result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.params_ = paramsBuilder_ == null
              ? params_
              : paramsBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.protocolpool.v1.Genesis.GenesisState) {
          return mergeFrom((cosmos.protocolpool.v1.Genesis.GenesisState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.protocolpool.v1.Genesis.GenesisState other) {
        if (other == cosmos.protocolpool.v1.Genesis.GenesisState.getDefaultInstance()) return this;
        if (continuousFundsBuilder_ == null) {
          if (!other.continuousFunds_.isEmpty()) {
            if (continuousFunds_.isEmpty()) {
              continuousFunds_ = other.continuousFunds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureContinuousFundsIsMutable();
              continuousFunds_.addAll(other.continuousFunds_);
            }
            onChanged();
          }
        } else {
          if (!other.continuousFunds_.isEmpty()) {
            if (continuousFundsBuilder_.isEmpty()) {
              continuousFundsBuilder_.dispose();
              continuousFundsBuilder_ = null;
              continuousFunds_ = other.continuousFunds_;
              bitField0_ = (bitField0_ & ~0x00000001);
              continuousFundsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getContinuousFundsFieldBuilder() : null;
            } else {
              continuousFundsBuilder_.addAllMessages(other.continuousFunds_);
            }
          }
        }
        if (other.hasParams()) {
          mergeParams(other.getParams());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                cosmos.protocolpool.v1.Types.ContinuousFund m =
                    input.readMessage(
                        cosmos.protocolpool.v1.Types.ContinuousFund.parser(),
                        extensionRegistry);
                if (continuousFundsBuilder_ == null) {
                  ensureContinuousFundsIsMutable();
                  continuousFunds_.add(m);
                } else {
                  continuousFundsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getParamsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.protocolpool.v1.Types.ContinuousFund> continuousFunds_ =
        java.util.Collections.emptyList();
      private void ensureContinuousFundsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          continuousFunds_ = new java.util.ArrayList<cosmos.protocolpool.v1.Types.ContinuousFund>(continuousFunds_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          cosmos.protocolpool.v1.Types.ContinuousFund, cosmos.protocolpool.v1.Types.ContinuousFund.Builder, cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder> continuousFundsBuilder_;

      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<cosmos.protocolpool.v1.Types.ContinuousFund> getContinuousFundsList() {
        if (continuousFundsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(continuousFunds_);
        } else {
          return continuousFundsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public int getContinuousFundsCount() {
        if (continuousFundsBuilder_ == null) {
          return continuousFunds_.size();
        } else {
          return continuousFundsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.ContinuousFund getContinuousFunds(int index) {
        if (continuousFundsBuilder_ == null) {
          return continuousFunds_.get(index);
        } else {
          return continuousFundsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder setContinuousFunds(
          int index, cosmos.protocolpool.v1.Types.ContinuousFund value) {
        if (continuousFundsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContinuousFundsIsMutable();
          continuousFunds_.set(index, value);
          onChanged();
        } else {
          continuousFundsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder setContinuousFunds(
          int index, cosmos.protocolpool.v1.Types.ContinuousFund.Builder builderForValue) {
        if (continuousFundsBuilder_ == null) {
          ensureContinuousFundsIsMutable();
          continuousFunds_.set(index, builderForValue.build());
          onChanged();
        } else {
          continuousFundsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder addContinuousFunds(cosmos.protocolpool.v1.Types.ContinuousFund value) {
        if (continuousFundsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContinuousFundsIsMutable();
          continuousFunds_.add(value);
          onChanged();
        } else {
          continuousFundsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder addContinuousFunds(
          int index, cosmos.protocolpool.v1.Types.ContinuousFund value) {
        if (continuousFundsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContinuousFundsIsMutable();
          continuousFunds_.add(index, value);
          onChanged();
        } else {
          continuousFundsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder addContinuousFunds(
          cosmos.protocolpool.v1.Types.ContinuousFund.Builder builderForValue) {
        if (continuousFundsBuilder_ == null) {
          ensureContinuousFundsIsMutable();
          continuousFunds_.add(builderForValue.build());
          onChanged();
        } else {
          continuousFundsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder addContinuousFunds(
          int index, cosmos.protocolpool.v1.Types.ContinuousFund.Builder builderForValue) {
        if (continuousFundsBuilder_ == null) {
          ensureContinuousFundsIsMutable();
          continuousFunds_.add(index, builderForValue.build());
          onChanged();
        } else {
          continuousFundsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder addAllContinuousFunds(
          java.lang.Iterable<? extends cosmos.protocolpool.v1.Types.ContinuousFund> values) {
        if (continuousFundsBuilder_ == null) {
          ensureContinuousFundsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, continuousFunds_);
          onChanged();
        } else {
          continuousFundsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearContinuousFunds() {
        if (continuousFundsBuilder_ == null) {
          continuousFunds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          continuousFundsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public Builder removeContinuousFunds(int index) {
        if (continuousFundsBuilder_ == null) {
          ensureContinuousFundsIsMutable();
          continuousFunds_.remove(index);
          onChanged();
        } else {
          continuousFundsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.ContinuousFund.Builder getContinuousFundsBuilder(
          int index) {
        return getContinuousFundsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder getContinuousFundsOrBuilder(
          int index) {
        if (continuousFundsBuilder_ == null) {
          return continuousFunds_.get(index);  } else {
          return continuousFundsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<? extends cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder> 
           getContinuousFundsOrBuilderList() {
        if (continuousFundsBuilder_ != null) {
          return continuousFundsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(continuousFunds_);
        }
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.ContinuousFund.Builder addContinuousFundsBuilder() {
        return getContinuousFundsFieldBuilder().addBuilder(
            cosmos.protocolpool.v1.Types.ContinuousFund.getDefaultInstance());
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.ContinuousFund.Builder addContinuousFundsBuilder(
          int index) {
        return getContinuousFundsFieldBuilder().addBuilder(
            index, cosmos.protocolpool.v1.Types.ContinuousFund.getDefaultInstance());
      }
      /**
       * <pre>
       * ContinuousFunds defines the continuous funds at genesis.
       * </pre>
       *
       * <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
       */
      public java.util.List<cosmos.protocolpool.v1.Types.ContinuousFund.Builder> 
           getContinuousFundsBuilderList() {
        return getContinuousFundsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          cosmos.protocolpool.v1.Types.ContinuousFund, cosmos.protocolpool.v1.Types.ContinuousFund.Builder, cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder> 
          getContinuousFundsFieldBuilder() {
        if (continuousFundsBuilder_ == null) {
          continuousFundsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              cosmos.protocolpool.v1.Types.ContinuousFund, cosmos.protocolpool.v1.Types.ContinuousFund.Builder, cosmos.protocolpool.v1.Types.ContinuousFundOrBuilder>(
                  continuousFunds_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          continuousFunds_ = null;
        }
        return continuousFundsBuilder_;
      }

      private cosmos.protocolpool.v1.Types.Params params_;
      private com.google.protobuf.SingleFieldBuilder<
          cosmos.protocolpool.v1.Types.Params, cosmos.protocolpool.v1.Types.Params.Builder, cosmos.protocolpool.v1.Types.ParamsOrBuilder> paramsBuilder_;
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       * @return Whether the params field is set.
       */
      public boolean hasParams() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       * @return The params.
       */
      public cosmos.protocolpool.v1.Types.Params getParams() {
        if (paramsBuilder_ == null) {
          return params_ == null ? cosmos.protocolpool.v1.Types.Params.getDefaultInstance() : params_;
        } else {
          return paramsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder setParams(cosmos.protocolpool.v1.Types.Params value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
        } else {
          paramsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder setParams(
          cosmos.protocolpool.v1.Types.Params.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          params_ = builderForValue.build();
        } else {
          paramsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder mergeParams(cosmos.protocolpool.v1.Types.Params value) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            params_ != null &&
            params_ != cosmos.protocolpool.v1.Types.Params.getDefaultInstance()) {
            getParamsBuilder().mergeFrom(value);
          } else {
            params_ = value;
          }
        } else {
          paramsBuilder_.mergeFrom(value);
        }
        if (params_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public Builder clearParams() {
        bitField0_ = (bitField0_ & ~0x00000002);
        params_ = null;
        if (paramsBuilder_ != null) {
          paramsBuilder_.dispose();
          paramsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.Params.Builder getParamsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      public cosmos.protocolpool.v1.Types.ParamsOrBuilder getParamsOrBuilder() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilder();
        } else {
          return params_ == null ?
              cosmos.protocolpool.v1.Types.Params.getDefaultInstance() : params_;
        }
      }
      /**
       * <pre>
       * Params defines the parameters of this module, currently only contains the
       * denoms that will be used for continuous fund distributions.
       * </pre>
       *
       * <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          cosmos.protocolpool.v1.Types.Params, cosmos.protocolpool.v1.Types.Params.Builder, cosmos.protocolpool.v1.Types.ParamsOrBuilder> 
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              cosmos.protocolpool.v1.Types.Params, cosmos.protocolpool.v1.Types.Params.Builder, cosmos.protocolpool.v1.Types.ParamsOrBuilder>(
                  getParams(),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:cosmos.protocolpool.v1.GenesisState)
    }

    // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.GenesisState)
    private static final cosmos.protocolpool.v1.Genesis.GenesisState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.protocolpool.v1.Genesis.GenesisState();
    }

    public static cosmos.protocolpool.v1.Genesis.GenesisState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenesisState>
        PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
      @java.lang.Override
      public GenesisState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GenesisState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenesisState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.protocolpool.v1.Genesis.GenesisState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_protocolpool_v1_GenesisState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cosmos_protocolpool_v1_GenesisState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$cosmos/protocolpool/v1/genesis.proto\022\026" +
      "cosmos.protocolpool.v1\032\"cosmos/protocolp" +
      "ool/v1/types.proto\032\024gogoproto/gogo.proto" +
      "\"\245\001\n\014GenesisState\022W\n\020continuous_funds\030\001 " +
      "\003(\0132&.cosmos.protocolpool.v1.ContinuousF" +
      "undB\004\310\336\037\000R\017continuousFunds\022<\n\006params\030\002 \001" +
      "(\0132\036.cosmos.protocolpool.v1.ParamsB\004\310\336\037\000" +
      "R\006paramsB3Z1github.com/cosmos/cosmos-sdk" +
      "/x/protocolpool/typesb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cosmos.protocolpool.v1.Types.getDescriptor(),
          com.google.protobuf.GoGoProtos.getDescriptor(),
        });
    internal_static_cosmos_protocolpool_v1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_protocolpool_v1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cosmos_protocolpool_v1_GenesisState_descriptor,
        new java.lang.String[] { "ContinuousFunds", "Params", });
    descriptor.resolveAllFeaturesImmutable();
    cosmos.protocolpool.v1.Types.getDescriptor();
    com.google.protobuf.GoGoProtos.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf.GoGoProtos.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
