// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: abstractaccount/v1/params.proto
// Protobuf Java Version: 4.29.4

package abstractaccount.v1;

public final class ParamsOuterClass {
  private ParamsOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 4,
      /* suffix= */ "",
      ParamsOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:abstractaccount.v1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     * </pre>
     *
     * <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
     * @return The allowAllCodeIds.
     */
    boolean getAllowAllCodeIds();

    /**
     * <pre>
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * </pre>
     *
     * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @return A list containing the allowedCodeIds.
     */
    java.util.List<java.lang.Long> getAllowedCodeIdsList();
    /**
     * <pre>
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * </pre>
     *
     * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @return The count of allowedCodeIds.
     */
    int getAllowedCodeIdsCount();
    /**
     * <pre>
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * </pre>
     *
     * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @param index The index of the element to return.
     * @return The allowedCodeIds at the given index.
     */
    long getAllowedCodeIds(int index);

    /**
     * <pre>
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     *
     * Must be greater than zero.
     * </pre>
     *
     * <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
     * @return The maxGasBefore.
     */
    long getMaxGasBefore();

    /**
     * <pre>
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     *
     * Must be greater than zero.
     * </pre>
     *
     * <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
     * @return The maxGasAfter.
     */
    long getMaxGasAfter();
  }
  /**
   * <pre>
   * Params defines the parameters for the abstractaccount module.
   * </pre>
   *
   * Protobuf type {@code abstractaccount.v1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:abstractaccount.v1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 4,
        /* suffix= */ "",
        Params.class.getName());
    }
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Params() {
      allowedCodeIds_ = emptyLongList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return abstractaccount.v1.ParamsOuterClass.internal_static_abstractaccount_v1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return abstractaccount.v1.ParamsOuterClass.internal_static_abstractaccount_v1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              abstractaccount.v1.ParamsOuterClass.Params.class, abstractaccount.v1.ParamsOuterClass.Params.Builder.class);
    }

    public static final int ALLOW_ALL_CODE_IDS_FIELD_NUMBER = 1;
    private boolean allowAllCodeIds_ = false;
    /**
     * <pre>
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     * </pre>
     *
     * <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
     * @return The allowAllCodeIds.
     */
    @java.lang.Override
    public boolean getAllowAllCodeIds() {
      return allowAllCodeIds_;
    }

    public static final int ALLOWED_CODE_IDS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList allowedCodeIds_ =
        emptyLongList();
    /**
     * <pre>
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * </pre>
     *
     * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @return A list containing the allowedCodeIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getAllowedCodeIdsList() {
      return allowedCodeIds_;
    }
    /**
     * <pre>
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * </pre>
     *
     * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @return The count of allowedCodeIds.
     */
    public int getAllowedCodeIdsCount() {
      return allowedCodeIds_.size();
    }
    /**
     * <pre>
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     * </pre>
     *
     * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @param index The index of the element to return.
     * @return The allowedCodeIds at the given index.
     */
    public long getAllowedCodeIds(int index) {
      return allowedCodeIds_.getLong(index);
    }
    private int allowedCodeIdsMemoizedSerializedSize = -1;

    public static final int MAX_GAS_BEFORE_FIELD_NUMBER = 3;
    private long maxGasBefore_ = 0L;
    /**
     * <pre>
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     *
     * Must be greater than zero.
     * </pre>
     *
     * <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
     * @return The maxGasBefore.
     */
    @java.lang.Override
    public long getMaxGasBefore() {
      return maxGasBefore_;
    }

    public static final int MAX_GAS_AFTER_FIELD_NUMBER = 4;
    private long maxGasAfter_ = 0L;
    /**
     * <pre>
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     *
     * Must be greater than zero.
     * </pre>
     *
     * <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
     * @return The maxGasAfter.
     */
    @java.lang.Override
    public long getMaxGasAfter() {
      return maxGasAfter_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (allowAllCodeIds_ != false) {
        output.writeBool(1, allowAllCodeIds_);
      }
      if (getAllowedCodeIdsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(allowedCodeIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < allowedCodeIds_.size(); i++) {
        output.writeUInt64NoTag(allowedCodeIds_.getLong(i));
      }
      if (maxGasBefore_ != 0L) {
        output.writeUInt64(3, maxGasBefore_);
      }
      if (maxGasAfter_ != 0L) {
        output.writeUInt64(4, maxGasAfter_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (allowAllCodeIds_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, allowAllCodeIds_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allowedCodeIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(allowedCodeIds_.getLong(i));
        }
        size += dataSize;
        if (!getAllowedCodeIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        allowedCodeIdsMemoizedSerializedSize = dataSize;
      }
      if (maxGasBefore_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, maxGasBefore_);
      }
      if (maxGasAfter_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, maxGasAfter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof abstractaccount.v1.ParamsOuterClass.Params)) {
        return super.equals(obj);
      }
      abstractaccount.v1.ParamsOuterClass.Params other = (abstractaccount.v1.ParamsOuterClass.Params) obj;

      if (getAllowAllCodeIds()
          != other.getAllowAllCodeIds()) return false;
      if (!getAllowedCodeIdsList()
          .equals(other.getAllowedCodeIdsList())) return false;
      if (getMaxGasBefore()
          != other.getMaxGasBefore()) return false;
      if (getMaxGasAfter()
          != other.getMaxGasAfter()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ALLOW_ALL_CODE_IDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAllowAllCodeIds());
      if (getAllowedCodeIdsCount() > 0) {
        hash = (37 * hash) + ALLOWED_CODE_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getAllowedCodeIdsList().hashCode();
      }
      hash = (37 * hash) + MAX_GAS_BEFORE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxGasBefore());
      hash = (37 * hash) + MAX_GAS_AFTER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxGasAfter());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static abstractaccount.v1.ParamsOuterClass.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static abstractaccount.v1.ParamsOuterClass.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static abstractaccount.v1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(abstractaccount.v1.ParamsOuterClass.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params defines the parameters for the abstractaccount module.
     * </pre>
     *
     * Protobuf type {@code abstractaccount.v1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:abstractaccount.v1.Params)
        abstractaccount.v1.ParamsOuterClass.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return abstractaccount.v1.ParamsOuterClass.internal_static_abstractaccount_v1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return abstractaccount.v1.ParamsOuterClass.internal_static_abstractaccount_v1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                abstractaccount.v1.ParamsOuterClass.Params.class, abstractaccount.v1.ParamsOuterClass.Params.Builder.class);
      }

      // Construct using abstractaccount.v1.ParamsOuterClass.Params.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        allowAllCodeIds_ = false;
        allowedCodeIds_ = emptyLongList();
        maxGasBefore_ = 0L;
        maxGasAfter_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return abstractaccount.v1.ParamsOuterClass.internal_static_abstractaccount_v1_Params_descriptor;
      }

      @java.lang.Override
      public abstractaccount.v1.ParamsOuterClass.Params getDefaultInstanceForType() {
        return abstractaccount.v1.ParamsOuterClass.Params.getDefaultInstance();
      }

      @java.lang.Override
      public abstractaccount.v1.ParamsOuterClass.Params build() {
        abstractaccount.v1.ParamsOuterClass.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public abstractaccount.v1.ParamsOuterClass.Params buildPartial() {
        abstractaccount.v1.ParamsOuterClass.Params result = new abstractaccount.v1.ParamsOuterClass.Params(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(abstractaccount.v1.ParamsOuterClass.Params result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.allowAllCodeIds_ = allowAllCodeIds_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          allowedCodeIds_.makeImmutable();
          result.allowedCodeIds_ = allowedCodeIds_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxGasBefore_ = maxGasBefore_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.maxGasAfter_ = maxGasAfter_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof abstractaccount.v1.ParamsOuterClass.Params) {
          return mergeFrom((abstractaccount.v1.ParamsOuterClass.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(abstractaccount.v1.ParamsOuterClass.Params other) {
        if (other == abstractaccount.v1.ParamsOuterClass.Params.getDefaultInstance()) return this;
        if (other.getAllowAllCodeIds() != false) {
          setAllowAllCodeIds(other.getAllowAllCodeIds());
        }
        if (!other.allowedCodeIds_.isEmpty()) {
          if (allowedCodeIds_.isEmpty()) {
            allowedCodeIds_ = other.allowedCodeIds_;
            allowedCodeIds_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureAllowedCodeIdsIsMutable();
            allowedCodeIds_.addAll(other.allowedCodeIds_);
          }
          onChanged();
        }
        if (other.getMaxGasBefore() != 0L) {
          setMaxGasBefore(other.getMaxGasBefore());
        }
        if (other.getMaxGasAfter() != 0L) {
          setMaxGasAfter(other.getMaxGasAfter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                allowAllCodeIds_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                long v = input.readUInt64();
                ensureAllowedCodeIdsIsMutable();
                allowedCodeIds_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAllowedCodeIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  allowedCodeIds_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                maxGasBefore_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                maxGasAfter_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean allowAllCodeIds_ ;
      /**
       * <pre>
       * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
       * AbstractAccounts:
       * - if set to true, any code ID can be used;
       * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
       * be used.
       * </pre>
       *
       * <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
       * @return The allowAllCodeIds.
       */
      @java.lang.Override
      public boolean getAllowAllCodeIds() {
        return allowAllCodeIds_;
      }
      /**
       * <pre>
       * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
       * AbstractAccounts:
       * - if set to true, any code ID can be used;
       * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
       * be used.
       * </pre>
       *
       * <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
       * @param value The allowAllCodeIds to set.
       * @return This builder for chaining.
       */
      public Builder setAllowAllCodeIds(boolean value) {

        allowAllCodeIds_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
       * AbstractAccounts:
       * - if set to true, any code ID can be used;
       * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
       * be used.
       * </pre>
       *
       * <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowAllCodeIds() {
        bitField0_ = (bitField0_ & ~0x00000001);
        allowAllCodeIds_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList allowedCodeIds_ = emptyLongList();
      private void ensureAllowedCodeIdsIsMutable() {
        if (!allowedCodeIds_.isModifiable()) {
          allowedCodeIds_ = makeMutableCopy(allowedCodeIds_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @return A list containing the allowedCodeIds.
       */
      public java.util.List<java.lang.Long>
          getAllowedCodeIdsList() {
        allowedCodeIds_.makeImmutable();
        return allowedCodeIds_;
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @return The count of allowedCodeIds.
       */
      public int getAllowedCodeIdsCount() {
        return allowedCodeIds_.size();
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @param index The index of the element to return.
       * @return The allowedCodeIds at the given index.
       */
      public long getAllowedCodeIds(int index) {
        return allowedCodeIds_.getLong(index);
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @param index The index to set the value at.
       * @param value The allowedCodeIds to set.
       * @return This builder for chaining.
       */
      public Builder setAllowedCodeIds(
          int index, long value) {

        ensureAllowedCodeIdsIsMutable();
        allowedCodeIds_.setLong(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @param value The allowedCodeIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedCodeIds(long value) {

        ensureAllowedCodeIdsIsMutable();
        allowedCodeIds_.addLong(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @param values The allowedCodeIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllowedCodeIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAllowedCodeIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allowedCodeIds_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
       * regiseter AbstractAccounts.
       * </pre>
       *
       * <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowedCodeIds() {
        allowedCodeIds_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private long maxGasBefore_ ;
      /**
       * <pre>
       * MaxGasBefore is the maximum amount of gas that can be consumed by the
       * contract call in the before_tx decorator.
       *
       * Must be greater than zero.
       * </pre>
       *
       * <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
       * @return The maxGasBefore.
       */
      @java.lang.Override
      public long getMaxGasBefore() {
        return maxGasBefore_;
      }
      /**
       * <pre>
       * MaxGasBefore is the maximum amount of gas that can be consumed by the
       * contract call in the before_tx decorator.
       *
       * Must be greater than zero.
       * </pre>
       *
       * <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
       * @param value The maxGasBefore to set.
       * @return This builder for chaining.
       */
      public Builder setMaxGasBefore(long value) {

        maxGasBefore_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MaxGasBefore is the maximum amount of gas that can be consumed by the
       * contract call in the before_tx decorator.
       *
       * Must be greater than zero.
       * </pre>
       *
       * <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxGasBefore() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxGasBefore_ = 0L;
        onChanged();
        return this;
      }

      private long maxGasAfter_ ;
      /**
       * <pre>
       * MaxGasAfter is the maximum amount of gas that can be consumed by the
       * contract call in the after_tx decorator.
       *
       * Must be greater than zero.
       * </pre>
       *
       * <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
       * @return The maxGasAfter.
       */
      @java.lang.Override
      public long getMaxGasAfter() {
        return maxGasAfter_;
      }
      /**
       * <pre>
       * MaxGasAfter is the maximum amount of gas that can be consumed by the
       * contract call in the after_tx decorator.
       *
       * Must be greater than zero.
       * </pre>
       *
       * <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
       * @param value The maxGasAfter to set.
       * @return This builder for chaining.
       */
      public Builder setMaxGasAfter(long value) {

        maxGasAfter_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * MaxGasAfter is the maximum amount of gas that can be consumed by the
       * contract call in the after_tx decorator.
       *
       * Must be greater than zero.
       * </pre>
       *
       * <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxGasAfter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxGasAfter_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:abstractaccount.v1.Params)
    }

    // @@protoc_insertion_point(class_scope:abstractaccount.v1.Params)
    private static final abstractaccount.v1.ParamsOuterClass.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new abstractaccount.v1.ParamsOuterClass.Params();
    }

    public static abstractaccount.v1.ParamsOuterClass.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public abstractaccount.v1.ParamsOuterClass.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_abstractaccount_v1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_abstractaccount_v1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037abstractaccount/v1/params.proto\022\022abstr" +
      "actaccount.v1\032\024gogoproto/gogo.proto\"\322\001\n\006" +
      "Params\022@\n\022allow_all_code_ids\030\001 \001(\010B\023\342\336\037\017" +
      "AllowAllCodeIDsR\017allowAllCodeIds\022<\n\020allo" +
      "wed_code_ids\030\002 \003(\004B\022\342\336\037\016AllowedCodeIDsR\016" +
      "allowedCodeIds\022$\n\016max_gas_before\030\003 \001(\004R\014" +
      "maxGasBefore\022\"\n\rmax_gas_after\030\004 \001(\004R\013max" +
      "GasAfterB@Z>github.com/burnt-labs/abstra" +
      "ct-account/x/abstractaccount/typesb\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.GoGoProtos.getDescriptor(),
        });
    internal_static_abstractaccount_v1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_abstractaccount_v1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_abstractaccount_v1_Params_descriptor,
        new java.lang.String[] { "AllowAllCodeIds", "AllowedCodeIds", "MaxGasBefore", "MaxGasAfter", });
    descriptor.resolveAllFeaturesImmutable();
    com.google.protobuf.GoGoProtos.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf.GoGoProtos.customname);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
