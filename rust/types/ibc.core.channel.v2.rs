// @generated
// This file is @generated by prost-build.
/// GenesisState defines the ibc channel/v2 submodule's genesis state.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenesisState {
    #[prost(message, repeated, tag="2")]
    pub acknowledgements: ::prost::alloc::vec::Vec<PacketState>,
    #[prost(message, repeated, tag="3")]
    pub commitments: ::prost::alloc::vec::Vec<PacketState>,
    #[prost(message, repeated, tag="4")]
    pub receipts: ::prost::alloc::vec::Vec<PacketState>,
    #[prost(message, repeated, tag="5")]
    pub async_packets: ::prost::alloc::vec::Vec<PacketState>,
    #[prost(message, repeated, tag="6")]
    pub send_sequences: ::prost::alloc::vec::Vec<PacketSequence>,
}
/// PacketState defines the generic type necessary to retrieve and store
/// packet commitments, acknowledgements, and receipts.
/// Caller is responsible for knowing the context necessary to interpret this
/// state as a commitment, acknowledgement, or a receipt.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PacketState {
    /// client unique identifier.
    #[prost(string, tag="1")]
    pub client_id: ::prost::alloc::string::String,
    /// packet sequence.
    #[prost(uint64, tag="2")]
    pub sequence: u64,
    /// embedded data that represents packet state.
    #[prost(bytes="vec", tag="3")]
    pub data: ::prost::alloc::vec::Vec<u8>,
}
/// PacketSequence defines the genesis type necessary to retrieve and store next send sequences.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PacketSequence {
    /// client unique identifier.
    #[prost(string, tag="1")]
    pub client_id: ::prost::alloc::string::String,
    /// packet sequence
    #[prost(uint64, tag="2")]
    pub sequence: u64,
}
// @@protoc_insertion_point(module)
