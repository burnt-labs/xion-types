// @generated
// This file is @generated by prost-build.
/// CounterpartyInfo defines the key that the counterparty will use to message our client
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CounterpartyInfo {
    /// merkle prefix key is the prefix that ics provable keys are stored under
    #[prost(bytes="vec", repeated, tag="1")]
    pub merkle_prefix: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
    /// client identifier is the identifier used to send packet messages to our client
    #[prost(string, tag="2")]
    pub client_id: ::prost::alloc::string::String,
}
/// GenesisCounterpartyInfo defines the state associating a client with a counterparty.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenesisCounterpartyInfo {
    /// ClientId is the ID of the given client.
    #[prost(string, tag="1")]
    pub client_id: ::prost::alloc::string::String,
    /// CounterpartyInfo is the counterparty info of the given client.
    #[prost(message, optional, tag="2")]
    pub counterparty_info: ::core::option::Option<CounterpartyInfo>,
}
/// GenesisState defines the ibc client v2 submodule's genesis state.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenesisState {
    /// counterparty info for each client
    #[prost(message, repeated, tag="1")]
    pub counterparty_infos: ::prost::alloc::vec::Vec<GenesisCounterpartyInfo>,
}
// @@protoc_insertion_point(module)
