// @generated
// This file is @generated by prost-build.
/// StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
/// It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
/// Deletes
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StoreKvPair {
    /// the store key for the KVStore this pair originates from
    #[prost(string, tag="1")]
    pub store_key: ::prost::alloc::string::String,
    /// true indicates a delete operation, false indicates a set operation
    #[prost(bool, tag="2")]
    pub delete: bool,
    #[prost(bytes="vec", tag="3")]
    pub key: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="4")]
    pub value: ::prost::alloc::vec::Vec<u8>,
}
/// BlockMetadata contains all the abci event data of a block
/// the file streamer dump them into files together with the state changes.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct BlockMetadata {
    #[prost(message, optional, tag="6")]
    pub response_commit: ::core::option::Option<super::super::super::tendermint::abci::ResponseCommit>,
    #[prost(message, optional, tag="7")]
    pub request_finalize_block: ::core::option::Option<super::super::super::tendermint::abci::RequestFinalizeBlock>,
    /// TODO: should we renumber this?
    #[prost(message, optional, tag="8")]
    pub response_finalize_block: ::core::option::Option<super::super::super::tendermint::abci::ResponseFinalizeBlock>,
}
// @@protoc_insertion_point(module)
