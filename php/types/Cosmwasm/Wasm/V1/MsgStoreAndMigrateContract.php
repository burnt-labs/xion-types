<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmwasm/wasm/v1/tx.proto

namespace Cosmwasm\Wasm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * MsgStoreAndMigrateContract is the MsgStoreAndMigrateContract
 * request type.
 * Since: 0.42
 *
 * Generated from protobuf message <code>cosmwasm.wasm.v1.MsgStoreAndMigrateContract</code>
 */
class MsgStoreAndMigrateContract extends \Google\Protobuf\Internal\Message
{
    /**
     * Authority is the address of the governance account.
     *
     * Generated from protobuf field <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $authority = '';
    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     */
    protected $wasm_byte_code = '';
    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 3 [json_name = "instantiatePermission"];</code>
     */
    protected $instantiate_permission = null;
    /**
     * Contract is the address of the smart contract
     *
     * Generated from protobuf field <code>string contract = 4 [json_name = "contract"];</code>
     */
    protected $contract = '';
    /**
     * Msg json encoded message to be passed to the contract on migration
     *
     * Generated from protobuf field <code>bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     */
    protected $msg = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $authority
     *           Authority is the address of the governance account.
     *     @type string $wasm_byte_code
     *           WASMByteCode can be raw or gzip compressed
     *     @type \Cosmwasm\Wasm\V1\AccessConfig $instantiate_permission
     *           InstantiatePermission to apply on contract creation, optional
     *     @type string $contract
     *           Contract is the address of the smart contract
     *     @type string $msg
     *           Msg json encoded message to be passed to the contract on migration
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmwasm\Wasm\V1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * Authority is the address of the governance account.
     *
     * Generated from protobuf field <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getAuthority()
    {
        return $this->authority;
    }

    /**
     * Authority is the address of the governance account.
     *
     * Generated from protobuf field <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setAuthority($var)
    {
        GPBUtil::checkString($var, True);
        $this->authority = $var;

        return $this;
    }

    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     * @return string
     */
    public function getWasmByteCode()
    {
        return $this->wasm_byte_code;
    }

    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     * @param string $var
     * @return $this
     */
    public function setWasmByteCode($var)
    {
        GPBUtil::checkString($var, False);
        $this->wasm_byte_code = $var;

        return $this;
    }

    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 3 [json_name = "instantiatePermission"];</code>
     * @return \Cosmwasm\Wasm\V1\AccessConfig|null
     */
    public function getInstantiatePermission()
    {
        return $this->instantiate_permission;
    }

    public function hasInstantiatePermission()
    {
        return isset($this->instantiate_permission);
    }

    public function clearInstantiatePermission()
    {
        unset($this->instantiate_permission);
    }

    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 3 [json_name = "instantiatePermission"];</code>
     * @param \Cosmwasm\Wasm\V1\AccessConfig $var
     * @return $this
     */
    public function setInstantiatePermission($var)
    {
        GPBUtil::checkMessage($var, \Cosmwasm\Wasm\V1\AccessConfig::class);
        $this->instantiate_permission = $var;

        return $this;
    }

    /**
     * Contract is the address of the smart contract
     *
     * Generated from protobuf field <code>string contract = 4 [json_name = "contract"];</code>
     * @return string
     */
    public function getContract()
    {
        return $this->contract;
    }

    /**
     * Contract is the address of the smart contract
     *
     * Generated from protobuf field <code>string contract = 4 [json_name = "contract"];</code>
     * @param string $var
     * @return $this
     */
    public function setContract($var)
    {
        GPBUtil::checkString($var, True);
        $this->contract = $var;

        return $this;
    }

    /**
     * Msg json encoded message to be passed to the contract on migration
     *
     * Generated from protobuf field <code>bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     * @return string
     */
    public function getMsg()
    {
        return $this->msg;
    }

    /**
     * Msg json encoded message to be passed to the contract on migration
     *
     * Generated from protobuf field <code>bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     * @param string $var
     * @return $this
     */
    public function setMsg($var)
    {
        GPBUtil::checkString($var, False);
        $this->msg = $var;

        return $this;
    }

}

