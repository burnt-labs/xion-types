<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmwasm/wasm/v1/authz.proto

namespace Cosmwasm\Wasm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * CodeGrant a granted permission for a single code
 *
 * Generated from protobuf message <code>cosmwasm.wasm.v1.CodeGrant</code>
 */
class CodeGrant extends \Google\Protobuf\Internal\Message
{
    /**
     * CodeHash is the unique identifier created by wasmvm
     * Wildcard "*" is used to specify any kind of grant.
     *
     * Generated from protobuf field <code>bytes code_hash = 1 [json_name = "codeHash"];</code>
     */
    protected $code_hash = '';
    /**
     * InstantiatePermission is the superset access control to apply
     * on contract creation.
     * Optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission"];</code>
     */
    protected $instantiate_permission = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $code_hash
     *           CodeHash is the unique identifier created by wasmvm
     *           Wildcard "*" is used to specify any kind of grant.
     *     @type \Cosmwasm\Wasm\V1\AccessConfig $instantiate_permission
     *           InstantiatePermission is the superset access control to apply
     *           on contract creation.
     *           Optional
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmwasm\Wasm\V1\Authz::initOnce();
        parent::__construct($data);
    }

    /**
     * CodeHash is the unique identifier created by wasmvm
     * Wildcard "*" is used to specify any kind of grant.
     *
     * Generated from protobuf field <code>bytes code_hash = 1 [json_name = "codeHash"];</code>
     * @return string
     */
    public function getCodeHash()
    {
        return $this->code_hash;
    }

    /**
     * CodeHash is the unique identifier created by wasmvm
     * Wildcard "*" is used to specify any kind of grant.
     *
     * Generated from protobuf field <code>bytes code_hash = 1 [json_name = "codeHash"];</code>
     * @param string $var
     * @return $this
     */
    public function setCodeHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->code_hash = $var;

        return $this;
    }

    /**
     * InstantiatePermission is the superset access control to apply
     * on contract creation.
     * Optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission"];</code>
     * @return \Cosmwasm\Wasm\V1\AccessConfig|null
     */
    public function getInstantiatePermission()
    {
        return $this->instantiate_permission;
    }

    public function hasInstantiatePermission()
    {
        return isset($this->instantiate_permission);
    }

    public function clearInstantiatePermission()
    {
        unset($this->instantiate_permission);
    }

    /**
     * InstantiatePermission is the superset access control to apply
     * on contract creation.
     * Optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission"];</code>
     * @param \Cosmwasm\Wasm\V1\AccessConfig $var
     * @return $this
     */
    public function setInstantiatePermission($var)
    {
        GPBUtil::checkMessage($var, \Cosmwasm\Wasm\V1\AccessConfig::class);
        $this->instantiate_permission = $var;

        return $this;
    }

}

