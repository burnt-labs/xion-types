<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmwasm/wasm/v1/query.proto

namespace Cosmwasm\Wasm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * QueryBuildAddressRequest is the request type for the Query/BuildAddress RPC
 * method.
 *
 * Generated from protobuf message <code>cosmwasm.wasm.v1.QueryBuildAddressRequest</code>
 */
class QueryBuildAddressRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * CodeHash is the hash of the code
     *
     * Generated from protobuf field <code>string code_hash = 1 [json_name = "codeHash"];</code>
     */
    protected $code_hash = '';
    /**
     * CreatorAddress is the address of the contract instantiator
     *
     * Generated from protobuf field <code>string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $creator_address = '';
    /**
     * Salt is a hex encoded salt
     *
     * Generated from protobuf field <code>string salt = 3 [json_name = "salt"];</code>
     */
    protected $salt = '';
    /**
     * InitArgs are optional json encoded init args to be used in contract address
     * building if provided
     *
     * Generated from protobuf field <code>bytes init_args = 4 [json_name = "initArgs"];</code>
     */
    protected $init_args = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $code_hash
     *           CodeHash is the hash of the code
     *     @type string $creator_address
     *           CreatorAddress is the address of the contract instantiator
     *     @type string $salt
     *           Salt is a hex encoded salt
     *     @type string $init_args
     *           InitArgs are optional json encoded init args to be used in contract address
     *           building if provided
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmwasm\Wasm\V1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * CodeHash is the hash of the code
     *
     * Generated from protobuf field <code>string code_hash = 1 [json_name = "codeHash"];</code>
     * @return string
     */
    public function getCodeHash()
    {
        return $this->code_hash;
    }

    /**
     * CodeHash is the hash of the code
     *
     * Generated from protobuf field <code>string code_hash = 1 [json_name = "codeHash"];</code>
     * @param string $var
     * @return $this
     */
    public function setCodeHash($var)
    {
        GPBUtil::checkString($var, True);
        $this->code_hash = $var;

        return $this;
    }

    /**
     * CreatorAddress is the address of the contract instantiator
     *
     * Generated from protobuf field <code>string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getCreatorAddress()
    {
        return $this->creator_address;
    }

    /**
     * CreatorAddress is the address of the contract instantiator
     *
     * Generated from protobuf field <code>string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setCreatorAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->creator_address = $var;

        return $this;
    }

    /**
     * Salt is a hex encoded salt
     *
     * Generated from protobuf field <code>string salt = 3 [json_name = "salt"];</code>
     * @return string
     */
    public function getSalt()
    {
        return $this->salt;
    }

    /**
     * Salt is a hex encoded salt
     *
     * Generated from protobuf field <code>string salt = 3 [json_name = "salt"];</code>
     * @param string $var
     * @return $this
     */
    public function setSalt($var)
    {
        GPBUtil::checkString($var, True);
        $this->salt = $var;

        return $this;
    }

    /**
     * InitArgs are optional json encoded init args to be used in contract address
     * building if provided
     *
     * Generated from protobuf field <code>bytes init_args = 4 [json_name = "initArgs"];</code>
     * @return string
     */
    public function getInitArgs()
    {
        return $this->init_args;
    }

    /**
     * InitArgs are optional json encoded init args to be used in contract address
     * building if provided
     *
     * Generated from protobuf field <code>bytes init_args = 4 [json_name = "initArgs"];</code>
     * @param string $var
     * @return $this
     */
    public function setInitArgs($var)
    {
        GPBUtil::checkString($var, False);
        $this->init_args = $var;

        return $this;
    }

}

