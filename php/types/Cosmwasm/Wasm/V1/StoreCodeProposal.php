<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmwasm/wasm/v1/proposal_legacy.proto

namespace Cosmwasm\Wasm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Deprecated: Do not use. Since wasmd v0.40, there is no longer a need for
 * an explicit StoreCodeProposal. To submit WASM code to the system,
 * a simple MsgStoreCode can be invoked from the x/gov module via
 * a v1 governance proposal.
 *
 * @deprecated
 * Generated from protobuf message <code>cosmwasm.wasm.v1.StoreCodeProposal</code>
 */
class StoreCodeProposal extends \Google\Protobuf\Internal\Message
{
    /**
     * Title is a short summary
     *
     * Generated from protobuf field <code>string title = 1 [json_name = "title"];</code>
     */
    protected $title = '';
    /**
     * Description is a human readable text
     *
     * Generated from protobuf field <code>string description = 2 [json_name = "description"];</code>
     */
    protected $description = '';
    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * Generated from protobuf field <code>string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $run_as = '';
    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     */
    protected $wasm_byte_code = '';
    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];</code>
     */
    protected $instantiate_permission = null;
    /**
     * UnpinCode code on upload, optional
     *
     * Generated from protobuf field <code>bool unpin_code = 8 [json_name = "unpinCode"];</code>
     */
    protected $unpin_code = false;
    /**
     * Source is the URL where the code is hosted
     *
     * Generated from protobuf field <code>string source = 9 [json_name = "source"];</code>
     */
    protected $source = '';
    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * Generated from protobuf field <code>string builder = 10 [json_name = "builder"];</code>
     */
    protected $builder = '';
    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * Generated from protobuf field <code>bytes code_hash = 11 [json_name = "codeHash"];</code>
     */
    protected $code_hash = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $title
     *           Title is a short summary
     *     @type string $description
     *           Description is a human readable text
     *     @type string $run_as
     *           RunAs is the address that is passed to the contract's environment as sender
     *     @type string $wasm_byte_code
     *           WASMByteCode can be raw or gzip compressed
     *     @type \Cosmwasm\Wasm\V1\AccessConfig $instantiate_permission
     *           InstantiatePermission to apply on contract creation, optional
     *     @type bool $unpin_code
     *           UnpinCode code on upload, optional
     *     @type string $source
     *           Source is the URL where the code is hosted
     *     @type string $builder
     *           Builder is the docker image used to build the code deterministically, used
     *           for smart contract verification
     *     @type string $code_hash
     *           CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     *           contract verification
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmwasm\Wasm\V1\ProposalLegacy::initOnce();
        parent::__construct($data);
    }

    /**
     * Title is a short summary
     *
     * Generated from protobuf field <code>string title = 1 [json_name = "title"];</code>
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Title is a short summary
     *
     * Generated from protobuf field <code>string title = 1 [json_name = "title"];</code>
     * @param string $var
     * @return $this
     */
    public function setTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->title = $var;

        return $this;
    }

    /**
     * Description is a human readable text
     *
     * Generated from protobuf field <code>string description = 2 [json_name = "description"];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Description is a human readable text
     *
     * Generated from protobuf field <code>string description = 2 [json_name = "description"];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * Generated from protobuf field <code>string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getRunAs()
    {
        return $this->run_as;
    }

    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * Generated from protobuf field <code>string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setRunAs($var)
    {
        GPBUtil::checkString($var, True);
        $this->run_as = $var;

        return $this;
    }

    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     * @return string
     */
    public function getWasmByteCode()
    {
        return $this->wasm_byte_code;
    }

    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     * @param string $var
     * @return $this
     */
    public function setWasmByteCode($var)
    {
        GPBUtil::checkString($var, False);
        $this->wasm_byte_code = $var;

        return $this;
    }

    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];</code>
     * @return \Cosmwasm\Wasm\V1\AccessConfig|null
     */
    public function getInstantiatePermission()
    {
        return $this->instantiate_permission;
    }

    public function hasInstantiatePermission()
    {
        return isset($this->instantiate_permission);
    }

    public function clearInstantiatePermission()
    {
        unset($this->instantiate_permission);
    }

    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];</code>
     * @param \Cosmwasm\Wasm\V1\AccessConfig $var
     * @return $this
     */
    public function setInstantiatePermission($var)
    {
        GPBUtil::checkMessage($var, \Cosmwasm\Wasm\V1\AccessConfig::class);
        $this->instantiate_permission = $var;

        return $this;
    }

    /**
     * UnpinCode code on upload, optional
     *
     * Generated from protobuf field <code>bool unpin_code = 8 [json_name = "unpinCode"];</code>
     * @return bool
     */
    public function getUnpinCode()
    {
        return $this->unpin_code;
    }

    /**
     * UnpinCode code on upload, optional
     *
     * Generated from protobuf field <code>bool unpin_code = 8 [json_name = "unpinCode"];</code>
     * @param bool $var
     * @return $this
     */
    public function setUnpinCode($var)
    {
        GPBUtil::checkBool($var);
        $this->unpin_code = $var;

        return $this;
    }

    /**
     * Source is the URL where the code is hosted
     *
     * Generated from protobuf field <code>string source = 9 [json_name = "source"];</code>
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Source is the URL where the code is hosted
     *
     * Generated from protobuf field <code>string source = 9 [json_name = "source"];</code>
     * @param string $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->source = $var;

        return $this;
    }

    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * Generated from protobuf field <code>string builder = 10 [json_name = "builder"];</code>
     * @return string
     */
    public function getBuilder()
    {
        return $this->builder;
    }

    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * Generated from protobuf field <code>string builder = 10 [json_name = "builder"];</code>
     * @param string $var
     * @return $this
     */
    public function setBuilder($var)
    {
        GPBUtil::checkString($var, True);
        $this->builder = $var;

        return $this;
    }

    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * Generated from protobuf field <code>bytes code_hash = 11 [json_name = "codeHash"];</code>
     * @return string
     */
    public function getCodeHash()
    {
        return $this->code_hash;
    }

    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * Generated from protobuf field <code>bytes code_hash = 11 [json_name = "codeHash"];</code>
     * @param string $var
     * @return $this
     */
    public function setCodeHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->code_hash = $var;

        return $this;
    }

}

