<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmwasm/wasm/v1/tx.proto

namespace Cosmwasm\Wasm\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * MsgStoreAndInstantiateContract is the MsgStoreAndInstantiateContract
 * request type.
 * Since: 0.40
 *
 * Generated from protobuf message <code>cosmwasm.wasm.v1.MsgStoreAndInstantiateContract</code>
 */
class MsgStoreAndInstantiateContract extends \Google\Protobuf\Internal\Message
{
    /**
     * Authority is the address of the governance account.
     *
     * Generated from protobuf field <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $authority = '';
    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     */
    protected $wasm_byte_code = '';
    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];</code>
     */
    protected $instantiate_permission = null;
    /**
     * UnpinCode code on upload, optional. As default the uploaded contract is
     * pinned to cache.
     *
     * Generated from protobuf field <code>bool unpin_code = 5 [json_name = "unpinCode"];</code>
     */
    protected $unpin_code = false;
    /**
     * Admin is an optional address that can execute migrations
     *
     * Generated from protobuf field <code>string admin = 6 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $admin = '';
    /**
     * Label is optional metadata to be stored with a contract instance.
     *
     * Generated from protobuf field <code>string label = 7 [json_name = "label"];</code>
     */
    protected $label = '';
    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * Generated from protobuf field <code>bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     */
    protected $msg = '';
    /**
     * Funds coins that are transferred from the authority account to the contract
     * on instantiation
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    private $funds;
    /**
     * Source is the URL where the code is hosted
     *
     * Generated from protobuf field <code>string source = 10 [json_name = "source"];</code>
     */
    protected $source = '';
    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * Generated from protobuf field <code>string builder = 11 [json_name = "builder"];</code>
     */
    protected $builder = '';
    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * Generated from protobuf field <code>bytes code_hash = 12 [json_name = "codeHash"];</code>
     */
    protected $code_hash = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $authority
     *           Authority is the address of the governance account.
     *     @type string $wasm_byte_code
     *           WASMByteCode can be raw or gzip compressed
     *     @type \Cosmwasm\Wasm\V1\AccessConfig $instantiate_permission
     *           InstantiatePermission to apply on contract creation, optional
     *     @type bool $unpin_code
     *           UnpinCode code on upload, optional. As default the uploaded contract is
     *           pinned to cache.
     *     @type string $admin
     *           Admin is an optional address that can execute migrations
     *     @type string $label
     *           Label is optional metadata to be stored with a contract instance.
     *     @type string $msg
     *           Msg json encoded message to be passed to the contract on instantiation
     *     @type array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $funds
     *           Funds coins that are transferred from the authority account to the contract
     *           on instantiation
     *     @type string $source
     *           Source is the URL where the code is hosted
     *     @type string $builder
     *           Builder is the docker image used to build the code deterministically, used
     *           for smart contract verification
     *     @type string $code_hash
     *           CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     *           contract verification
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmwasm\Wasm\V1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * Authority is the address of the governance account.
     *
     * Generated from protobuf field <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getAuthority()
    {
        return $this->authority;
    }

    /**
     * Authority is the address of the governance account.
     *
     * Generated from protobuf field <code>string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setAuthority($var)
    {
        GPBUtil::checkString($var, True);
        $this->authority = $var;

        return $this;
    }

    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     * @return string
     */
    public function getWasmByteCode()
    {
        return $this->wasm_byte_code;
    }

    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * Generated from protobuf field <code>bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];</code>
     * @param string $var
     * @return $this
     */
    public function setWasmByteCode($var)
    {
        GPBUtil::checkString($var, False);
        $this->wasm_byte_code = $var;

        return $this;
    }

    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];</code>
     * @return \Cosmwasm\Wasm\V1\AccessConfig|null
     */
    public function getInstantiatePermission()
    {
        return $this->instantiate_permission;
    }

    public function hasInstantiatePermission()
    {
        return isset($this->instantiate_permission);
    }

    public function clearInstantiatePermission()
    {
        unset($this->instantiate_permission);
    }

    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * Generated from protobuf field <code>.cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];</code>
     * @param \Cosmwasm\Wasm\V1\AccessConfig $var
     * @return $this
     */
    public function setInstantiatePermission($var)
    {
        GPBUtil::checkMessage($var, \Cosmwasm\Wasm\V1\AccessConfig::class);
        $this->instantiate_permission = $var;

        return $this;
    }

    /**
     * UnpinCode code on upload, optional. As default the uploaded contract is
     * pinned to cache.
     *
     * Generated from protobuf field <code>bool unpin_code = 5 [json_name = "unpinCode"];</code>
     * @return bool
     */
    public function getUnpinCode()
    {
        return $this->unpin_code;
    }

    /**
     * UnpinCode code on upload, optional. As default the uploaded contract is
     * pinned to cache.
     *
     * Generated from protobuf field <code>bool unpin_code = 5 [json_name = "unpinCode"];</code>
     * @param bool $var
     * @return $this
     */
    public function setUnpinCode($var)
    {
        GPBUtil::checkBool($var);
        $this->unpin_code = $var;

        return $this;
    }

    /**
     * Admin is an optional address that can execute migrations
     *
     * Generated from protobuf field <code>string admin = 6 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getAdmin()
    {
        return $this->admin;
    }

    /**
     * Admin is an optional address that can execute migrations
     *
     * Generated from protobuf field <code>string admin = 6 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setAdmin($var)
    {
        GPBUtil::checkString($var, True);
        $this->admin = $var;

        return $this;
    }

    /**
     * Label is optional metadata to be stored with a contract instance.
     *
     * Generated from protobuf field <code>string label = 7 [json_name = "label"];</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Label is optional metadata to be stored with a contract instance.
     *
     * Generated from protobuf field <code>string label = 7 [json_name = "label"];</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * Generated from protobuf field <code>bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     * @return string
     */
    public function getMsg()
    {
        return $this->msg;
    }

    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * Generated from protobuf field <code>bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     * @param string $var
     * @return $this
     */
    public function setMsg($var)
    {
        GPBUtil::checkString($var, False);
        $this->msg = $var;

        return $this;
    }

    /**
     * Funds coins that are transferred from the authority account to the contract
     * on instantiation
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFunds()
    {
        return $this->funds;
    }

    /**
     * Funds coins that are transferred from the authority account to the contract
     * on instantiation
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFunds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Base\V1beta1\Coin::class);
        $this->funds = $arr;

        return $this;
    }

    /**
     * Source is the URL where the code is hosted
     *
     * Generated from protobuf field <code>string source = 10 [json_name = "source"];</code>
     * @return string
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Source is the URL where the code is hosted
     *
     * Generated from protobuf field <code>string source = 10 [json_name = "source"];</code>
     * @param string $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->source = $var;

        return $this;
    }

    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * Generated from protobuf field <code>string builder = 11 [json_name = "builder"];</code>
     * @return string
     */
    public function getBuilder()
    {
        return $this->builder;
    }

    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * Generated from protobuf field <code>string builder = 11 [json_name = "builder"];</code>
     * @param string $var
     * @return $this
     */
    public function setBuilder($var)
    {
        GPBUtil::checkString($var, True);
        $this->builder = $var;

        return $this;
    }

    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * Generated from protobuf field <code>bytes code_hash = 12 [json_name = "codeHash"];</code>
     * @return string
     */
    public function getCodeHash()
    {
        return $this->code_hash;
    }

    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * Generated from protobuf field <code>bytes code_hash = 12 [json_name = "codeHash"];</code>
     * @param string $var
     * @return $this
     */
    public function setCodeHash($var)
    {
        GPBUtil::checkString($var, False);
        $this->code_hash = $var;

        return $this;
    }

}

