<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/autocli/v1/options.proto

namespace Cosmos\Autocli\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * RpcCommandOptions specifies options for commands generated from protobuf
 * rpc methods.
 *
 * Generated from protobuf message <code>cosmos.autocli.v1.RpcCommandOptions</code>
 */
class RpcCommandOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     *
     * Generated from protobuf field <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     */
    protected $rpc_method = '';
    /**
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     *
     * Generated from protobuf field <code>string use = 2 [json_name = "use"];</code>
     */
    protected $use = '';
    /**
     * long is the long message shown in the 'help <this-command>' output.
     *
     * Generated from protobuf field <code>string long = 3 [json_name = "long"];</code>
     */
    protected $long = '';
    /**
     * short is the short description shown in the 'help' output.
     *
     * Generated from protobuf field <code>string short = 4 [json_name = "short"];</code>
     */
    protected $short = '';
    /**
     * example is examples of how to use the command.
     *
     * Generated from protobuf field <code>string example = 5 [json_name = "example"];</code>
     */
    protected $example = '';
    /**
     * alias is an array of aliases that can be used instead of the first word in Use.
     *
     * Generated from protobuf field <code>repeated string alias = 6 [json_name = "alias"];</code>
     */
    private $alias;
    /**
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     *
     * Generated from protobuf field <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     */
    private $suggest_for;
    /**
     * deprecated defines, if this command is deprecated and should print this string when used.
     *
     * Generated from protobuf field <code>string deprecated = 8 [json_name = "deprecated"];</code>
     */
    protected $deprecated = '';
    /**
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     *
     * Generated from protobuf field <code>string version = 9 [json_name = "version"];</code>
     */
    protected $version = '';
    /**
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     *
     * Generated from protobuf field <code>map<string, .cosmos.autocli.v1.FlagOptions> flag_options = 10 [json_name = "flagOptions"];</code>
     */
    private $flag_options;
    /**
     * positional_args specifies positional arguments for the command.
     *
     * Generated from protobuf field <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    private $positional_args;
    /**
     * skip specifies whether to skip this rpc method when generating commands.
     *
     * Generated from protobuf field <code>bool skip = 12 [json_name = "skip"];</code>
     */
    protected $skip = false;
    /**
     * gov_proposal specifies whether autocli should generate a gov proposal transaction for this rpc method.
     * Normally autocli generates a transaction containing the message and broadcast it.
     * However, when true, autocli generates a proposal transaction containing the message and broadcast it.
     * This option is ineffective for query commands.
     *
     * Generated from protobuf field <code>bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];</code>
     */
    protected $gov_proposal = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $rpc_method
     *           rpc_method is short name of the protobuf rpc method that this command is
     *           generated from.
     *     @type string $use
     *           use is the one-line usage method. It also allows specifying an alternate
     *           name for the command as the first word of the usage text.
     *           By default the name of an rpc command is the kebab-case short name of the
     *           rpc method.
     *     @type string $long
     *           long is the long message shown in the 'help <this-command>' output.
     *     @type string $short
     *           short is the short description shown in the 'help' output.
     *     @type string $example
     *           example is examples of how to use the command.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $alias
     *           alias is an array of aliases that can be used instead of the first word in Use.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $suggest_for
     *           suggest_for is an array of command names for which this command will be suggested -
     *           similar to aliases but only suggests.
     *     @type string $deprecated
     *           deprecated defines, if this command is deprecated and should print this string when used.
     *     @type string $version
     *           version defines the version for this command. If this value is non-empty and the command does not
     *           define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     *           will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     *           command does not define one.
     *     @type array|\Google\Protobuf\Internal\MapField $flag_options
     *           flag_options are options for flags generated from rpc request fields.
     *           By default all request fields are configured as flags. They can
     *           also be configured as positional args instead using positional_args.
     *     @type array<\Cosmos\Autocli\V1\PositionalArgDescriptor>|\Google\Protobuf\Internal\RepeatedField $positional_args
     *           positional_args specifies positional arguments for the command.
     *     @type bool $skip
     *           skip specifies whether to skip this rpc method when generating commands.
     *     @type bool $gov_proposal
     *           gov_proposal specifies whether autocli should generate a gov proposal transaction for this rpc method.
     *           Normally autocli generates a transaction containing the message and broadcast it.
     *           However, when true, autocli generates a proposal transaction containing the message and broadcast it.
     *           This option is ineffective for query commands.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Autocli\V1\Options::initOnce();
        parent::__construct($data);
    }

    /**
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     *
     * Generated from protobuf field <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @return string
     */
    public function getRpcMethod()
    {
        return $this->rpc_method;
    }

    /**
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     *
     * Generated from protobuf field <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     * @param string $var
     * @return $this
     */
    public function setRpcMethod($var)
    {
        GPBUtil::checkString($var, True);
        $this->rpc_method = $var;

        return $this;
    }

    /**
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     *
     * Generated from protobuf field <code>string use = 2 [json_name = "use"];</code>
     * @return string
     */
    public function getUse()
    {
        return $this->use;
    }

    /**
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     *
     * Generated from protobuf field <code>string use = 2 [json_name = "use"];</code>
     * @param string $var
     * @return $this
     */
    public function setUse($var)
    {
        GPBUtil::checkString($var, True);
        $this->use = $var;

        return $this;
    }

    /**
     * long is the long message shown in the 'help <this-command>' output.
     *
     * Generated from protobuf field <code>string long = 3 [json_name = "long"];</code>
     * @return string
     */
    public function getLong()
    {
        return $this->long;
    }

    /**
     * long is the long message shown in the 'help <this-command>' output.
     *
     * Generated from protobuf field <code>string long = 3 [json_name = "long"];</code>
     * @param string $var
     * @return $this
     */
    public function setLong($var)
    {
        GPBUtil::checkString($var, True);
        $this->long = $var;

        return $this;
    }

    /**
     * short is the short description shown in the 'help' output.
     *
     * Generated from protobuf field <code>string short = 4 [json_name = "short"];</code>
     * @return string
     */
    public function getShort()
    {
        return $this->short;
    }

    /**
     * short is the short description shown in the 'help' output.
     *
     * Generated from protobuf field <code>string short = 4 [json_name = "short"];</code>
     * @param string $var
     * @return $this
     */
    public function setShort($var)
    {
        GPBUtil::checkString($var, True);
        $this->short = $var;

        return $this;
    }

    /**
     * example is examples of how to use the command.
     *
     * Generated from protobuf field <code>string example = 5 [json_name = "example"];</code>
     * @return string
     */
    public function getExample()
    {
        return $this->example;
    }

    /**
     * example is examples of how to use the command.
     *
     * Generated from protobuf field <code>string example = 5 [json_name = "example"];</code>
     * @param string $var
     * @return $this
     */
    public function setExample($var)
    {
        GPBUtil::checkString($var, True);
        $this->example = $var;

        return $this;
    }

    /**
     * alias is an array of aliases that can be used instead of the first word in Use.
     *
     * Generated from protobuf field <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAlias()
    {
        return $this->alias;
    }

    /**
     * alias is an array of aliases that can be used instead of the first word in Use.
     *
     * Generated from protobuf field <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAlias($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->alias = $arr;

        return $this;
    }

    /**
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     *
     * Generated from protobuf field <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSuggestFor()
    {
        return $this->suggest_for;
    }

    /**
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     *
     * Generated from protobuf field <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSuggestFor($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->suggest_for = $arr;

        return $this;
    }

    /**
     * deprecated defines, if this command is deprecated and should print this string when used.
     *
     * Generated from protobuf field <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @return string
     */
    public function getDeprecated()
    {
        return $this->deprecated;
    }

    /**
     * deprecated defines, if this command is deprecated and should print this string when used.
     *
     * Generated from protobuf field <code>string deprecated = 8 [json_name = "deprecated"];</code>
     * @param string $var
     * @return $this
     */
    public function setDeprecated($var)
    {
        GPBUtil::checkString($var, True);
        $this->deprecated = $var;

        return $this;
    }

    /**
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     *
     * Generated from protobuf field <code>string version = 9 [json_name = "version"];</code>
     * @return string
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     *
     * Generated from protobuf field <code>string version = 9 [json_name = "version"];</code>
     * @param string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;

        return $this;
    }

    /**
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     *
     * Generated from protobuf field <code>map<string, .cosmos.autocli.v1.FlagOptions> flag_options = 10 [json_name = "flagOptions"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getFlagOptions()
    {
        return $this->flag_options;
    }

    /**
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     *
     * Generated from protobuf field <code>map<string, .cosmos.autocli.v1.FlagOptions> flag_options = 10 [json_name = "flagOptions"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setFlagOptions($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Autocli\V1\FlagOptions::class);
        $this->flag_options = $arr;

        return $this;
    }

    /**
     * positional_args specifies positional arguments for the command.
     *
     * Generated from protobuf field <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPositionalArgs()
    {
        return $this->positional_args;
    }

    /**
     * positional_args specifies positional arguments for the command.
     *
     * Generated from protobuf field <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @param array<\Cosmos\Autocli\V1\PositionalArgDescriptor>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPositionalArgs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Autocli\V1\PositionalArgDescriptor::class);
        $this->positional_args = $arr;

        return $this;
    }

    /**
     * skip specifies whether to skip this rpc method when generating commands.
     *
     * Generated from protobuf field <code>bool skip = 12 [json_name = "skip"];</code>
     * @return bool
     */
    public function getSkip()
    {
        return $this->skip;
    }

    /**
     * skip specifies whether to skip this rpc method when generating commands.
     *
     * Generated from protobuf field <code>bool skip = 12 [json_name = "skip"];</code>
     * @param bool $var
     * @return $this
     */
    public function setSkip($var)
    {
        GPBUtil::checkBool($var);
        $this->skip = $var;

        return $this;
    }

    /**
     * gov_proposal specifies whether autocli should generate a gov proposal transaction for this rpc method.
     * Normally autocli generates a transaction containing the message and broadcast it.
     * However, when true, autocli generates a proposal transaction containing the message and broadcast it.
     * This option is ineffective for query commands.
     *
     * Generated from protobuf field <code>bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];</code>
     * @return bool
     */
    public function getGovProposal()
    {
        return $this->gov_proposal;
    }

    /**
     * gov_proposal specifies whether autocli should generate a gov proposal transaction for this rpc method.
     * Normally autocli generates a transaction containing the message and broadcast it.
     * However, when true, autocli generates a proposal transaction containing the message and broadcast it.
     * This option is ineffective for query commands.
     *
     * Generated from protobuf field <code>bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];</code>
     * @param bool $var
     * @return $this
     */
    public function setGovProposal($var)
    {
        GPBUtil::checkBool($var);
        $this->gov_proposal = $var;

        return $this;
    }

}

