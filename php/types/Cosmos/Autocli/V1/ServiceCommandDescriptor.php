<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/autocli/v1/options.proto

namespace Cosmos\Autocli\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ServiceCommandDescriptor describes a CLI command based on a protobuf service.
 *
 * Generated from protobuf message <code>cosmos.autocli.v1.ServiceCommandDescriptor</code>
 */
class ServiceCommandDescriptor extends \Google\Protobuf\Internal\Message
{
    /**
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     *
     * Generated from protobuf field <code>string service = 1 [json_name = "service"];</code>
     */
    protected $service = '';
    /**
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     *
     * Generated from protobuf field <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];</code>
     */
    private $rpc_command_options;
    /**
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     *
     * Generated from protobuf field <code>map<string, .cosmos.autocli.v1.ServiceCommandDescriptor> sub_commands = 3 [json_name = "subCommands"];</code>
     */
    private $sub_commands;
    /**
     * enhance_custom_commands specifies whether to skip the service when generating commands, if a custom command already
     * exists, or enhance the existing command. If set to true, the custom command will be enhanced with the services from
     * gRPC. otherwise when a custom command exists, no commands will be generated for the service.
     *
     * Generated from protobuf field <code>bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];</code>
     */
    protected $enhance_custom_command = false;
    /**
     * short is an optional parameter used to override the short description of the auto generated command.
     *
     * Generated from protobuf field <code>string short = 5 [json_name = "short"];</code>
     */
    protected $short = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $service
     *           service is the fully qualified name of the protobuf service to build
     *           the command from. It can be left empty if sub_commands are used instead
     *           which may be the case if a module provides multiple tx and/or query services.
     *     @type array<\Cosmos\Autocli\V1\RpcCommandOptions>|\Google\Protobuf\Internal\RepeatedField $rpc_command_options
     *           rpc_command_options are options for commands generated from rpc methods.
     *           If no options are specified for a given rpc method on the service, a
     *           command will be generated for that method with the default options.
     *     @type array|\Google\Protobuf\Internal\MapField $sub_commands
     *           sub_commands is a map of optional sub-commands for this command based on
     *           different protobuf services. The map key is used as the name of the
     *           sub-command.
     *     @type bool $enhance_custom_command
     *           enhance_custom_commands specifies whether to skip the service when generating commands, if a custom command already
     *           exists, or enhance the existing command. If set to true, the custom command will be enhanced with the services from
     *           gRPC. otherwise when a custom command exists, no commands will be generated for the service.
     *     @type string $short
     *           short is an optional parameter used to override the short description of the auto generated command.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Autocli\V1\Options::initOnce();
        parent::__construct($data);
    }

    /**
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     *
     * Generated from protobuf field <code>string service = 1 [json_name = "service"];</code>
     * @return string
     */
    public function getService()
    {
        return $this->service;
    }

    /**
     * service is the fully qualified name of the protobuf service to build
     * the command from. It can be left empty if sub_commands are used instead
     * which may be the case if a module provides multiple tx and/or query services.
     *
     * Generated from protobuf field <code>string service = 1 [json_name = "service"];</code>
     * @param string $var
     * @return $this
     */
    public function setService($var)
    {
        GPBUtil::checkString($var, True);
        $this->service = $var;

        return $this;
    }

    /**
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     *
     * Generated from protobuf field <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRpcCommandOptions()
    {
        return $this->rpc_command_options;
    }

    /**
     * rpc_command_options are options for commands generated from rpc methods.
     * If no options are specified for a given rpc method on the service, a
     * command will be generated for that method with the default options.
     *
     * Generated from protobuf field <code>repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];</code>
     * @param array<\Cosmos\Autocli\V1\RpcCommandOptions>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRpcCommandOptions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Autocli\V1\RpcCommandOptions::class);
        $this->rpc_command_options = $arr;

        return $this;
    }

    /**
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     *
     * Generated from protobuf field <code>map<string, .cosmos.autocli.v1.ServiceCommandDescriptor> sub_commands = 3 [json_name = "subCommands"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getSubCommands()
    {
        return $this->sub_commands;
    }

    /**
     * sub_commands is a map of optional sub-commands for this command based on
     * different protobuf services. The map key is used as the name of the
     * sub-command.
     *
     * Generated from protobuf field <code>map<string, .cosmos.autocli.v1.ServiceCommandDescriptor> sub_commands = 3 [json_name = "subCommands"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setSubCommands($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Autocli\V1\ServiceCommandDescriptor::class);
        $this->sub_commands = $arr;

        return $this;
    }

    /**
     * enhance_custom_commands specifies whether to skip the service when generating commands, if a custom command already
     * exists, or enhance the existing command. If set to true, the custom command will be enhanced with the services from
     * gRPC. otherwise when a custom command exists, no commands will be generated for the service.
     *
     * Generated from protobuf field <code>bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];</code>
     * @return bool
     */
    public function getEnhanceCustomCommand()
    {
        return $this->enhance_custom_command;
    }

    /**
     * enhance_custom_commands specifies whether to skip the service when generating commands, if a custom command already
     * exists, or enhance the existing command. If set to true, the custom command will be enhanced with the services from
     * gRPC. otherwise when a custom command exists, no commands will be generated for the service.
     *
     * Generated from protobuf field <code>bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];</code>
     * @param bool $var
     * @return $this
     */
    public function setEnhanceCustomCommand($var)
    {
        GPBUtil::checkBool($var);
        $this->enhance_custom_command = $var;

        return $this;
    }

    /**
     * short is an optional parameter used to override the short description of the auto generated command.
     *
     * Generated from protobuf field <code>string short = 5 [json_name = "short"];</code>
     * @return string
     */
    public function getShort()
    {
        return $this->short;
    }

    /**
     * short is an optional parameter used to override the short description of the auto generated command.
     *
     * Generated from protobuf field <code>string short = 5 [json_name = "short"];</code>
     * @param string $var
     * @return $this
     */
    public function setShort($var)
    {
        GPBUtil::checkString($var, True);
        $this->short = $var;

        return $this;
    }

}

