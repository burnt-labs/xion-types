<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/protocolpool/v1/genesis.proto

namespace Cosmos\Protocolpool\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * GenesisState defines the protocolpool module's genesis state.
 *
 * Generated from protobuf message <code>cosmos.protocolpool.v1.GenesisState</code>
 */
class GenesisState extends \Google\Protobuf\Internal\Message
{
    /**
     * ContinuousFunds defines the continuous funds at genesis.
     *
     * Generated from protobuf field <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     */
    private $continuous_funds;
    /**
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     *
     * Generated from protobuf field <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     */
    protected $params = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Cosmos\Protocolpool\V1\ContinuousFund>|\Google\Protobuf\Internal\RepeatedField $continuous_funds
     *           ContinuousFunds defines the continuous funds at genesis.
     *     @type \Cosmos\Protocolpool\V1\Params $params
     *           Params defines the parameters of this module, currently only contains the
     *           denoms that will be used for continuous fund distributions.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Protocolpool\V1\Genesis::initOnce();
        parent::__construct($data);
    }

    /**
     * ContinuousFunds defines the continuous funds at genesis.
     *
     * Generated from protobuf field <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getContinuousFunds()
    {
        return $this->continuous_funds;
    }

    /**
     * ContinuousFunds defines the continuous funds at genesis.
     *
     * Generated from protobuf field <code>repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];</code>
     * @param array<\Cosmos\Protocolpool\V1\ContinuousFund>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setContinuousFunds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Protocolpool\V1\ContinuousFund::class);
        $this->continuous_funds = $arr;

        return $this;
    }

    /**
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     *
     * Generated from protobuf field <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @return \Cosmos\Protocolpool\V1\Params|null
     */
    public function getParams()
    {
        return $this->params;
    }

    public function hasParams()
    {
        return isset($this->params);
    }

    public function clearParams()
    {
        unset($this->params);
    }

    /**
     * Params defines the parameters of this module, currently only contains the
     * denoms that will be used for continuous fund distributions.
     *
     * Generated from protobuf field <code>.cosmos.protocolpool.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];</code>
     * @param \Cosmos\Protocolpool\V1\Params $var
     * @return $this
     */
    public function setParams($var)
    {
        GPBUtil::checkMessage($var, \Cosmos\Protocolpool\V1\Params::class);
        $this->params = $var;

        return $this;
    }

}

