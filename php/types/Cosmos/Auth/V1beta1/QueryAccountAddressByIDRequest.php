<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/auth/v1beta1/query.proto

namespace Cosmos\Auth\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * QueryAccountAddressByIDRequest is the request type for AccountAddressByID rpc method
 *
 * Generated from protobuf message <code>cosmos.auth.v1beta1.QueryAccountAddressByIDRequest</code>
 */
class QueryAccountAddressByIDRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Deprecated, use account_id instead
     * id is the account number of the address to be queried. This field
     * should have been an uint64 (like all account numbers), and will be
     * updated to uint64 in a future version of the auth query.
     *
     * Generated from protobuf field <code>int64 id = 1 [json_name = "id", deprecated = true];</code>
     * @deprecated
     */
    protected $id = 0;
    /**
     * account_id is the account number of the address to be queried.
     *
     * Generated from protobuf field <code>uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];</code>
     */
    protected $account_id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $id
     *           Deprecated, use account_id instead
     *           id is the account number of the address to be queried. This field
     *           should have been an uint64 (like all account numbers), and will be
     *           updated to uint64 in a future version of the auth query.
     *     @type int|string $account_id
     *           account_id is the account number of the address to be queried.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Auth\V1Beta1\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Deprecated, use account_id instead
     * id is the account number of the address to be queried. This field
     * should have been an uint64 (like all account numbers), and will be
     * updated to uint64 in a future version of the auth query.
     *
     * Generated from protobuf field <code>int64 id = 1 [json_name = "id", deprecated = true];</code>
     * @return int|string
     * @deprecated
     */
    public function getId()
    {
        if ($this->id !== 0) {
            @trigger_error('id is deprecated.', E_USER_DEPRECATED);
        }
        return $this->id;
    }

    /**
     * Deprecated, use account_id instead
     * id is the account number of the address to be queried. This field
     * should have been an uint64 (like all account numbers), and will be
     * updated to uint64 in a future version of the auth query.
     *
     * Generated from protobuf field <code>int64 id = 1 [json_name = "id", deprecated = true];</code>
     * @param int|string $var
     * @return $this
     * @deprecated
     */
    public function setId($var)
    {
        @trigger_error('id is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     * account_id is the account number of the address to be queried.
     *
     * Generated from protobuf field <code>uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];</code>
     * @return int|string
     */
    public function getAccountId()
    {
        return $this->account_id;
    }

    /**
     * account_id is the account number of the address to be queried.
     *
     * Generated from protobuf field <code>uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setAccountId($var)
    {
        GPBUtil::checkUint64($var);
        $this->account_id = $var;

        return $this;
    }

}

