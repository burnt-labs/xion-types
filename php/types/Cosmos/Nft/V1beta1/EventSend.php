<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/nft/v1beta1/event.proto

namespace Cosmos\Nft\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * EventSend is emitted on Msg/Send
 *
 * Generated from protobuf message <code>cosmos.nft.v1beta1.EventSend</code>
 */
class EventSend extends \Google\Protobuf\Internal\Message
{
    /**
     * class_id associated with the nft
     *
     * Generated from protobuf field <code>string class_id = 1 [json_name = "classId"];</code>
     */
    protected $class_id = '';
    /**
     * id is a unique identifier of the nft
     *
     * Generated from protobuf field <code>string id = 2 [json_name = "id"];</code>
     */
    protected $id = '';
    /**
     * sender is the address of the owner of nft
     *
     * Generated from protobuf field <code>string sender = 3 [json_name = "sender"];</code>
     */
    protected $sender = '';
    /**
     * receiver is the receiver address of nft
     *
     * Generated from protobuf field <code>string receiver = 4 [json_name = "receiver"];</code>
     */
    protected $receiver = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $class_id
     *           class_id associated with the nft
     *     @type string $id
     *           id is a unique identifier of the nft
     *     @type string $sender
     *           sender is the address of the owner of nft
     *     @type string $receiver
     *           receiver is the receiver address of nft
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Nft\V1Beta1\Event::initOnce();
        parent::__construct($data);
    }

    /**
     * class_id associated with the nft
     *
     * Generated from protobuf field <code>string class_id = 1 [json_name = "classId"];</code>
     * @return string
     */
    public function getClassId()
    {
        return $this->class_id;
    }

    /**
     * class_id associated with the nft
     *
     * Generated from protobuf field <code>string class_id = 1 [json_name = "classId"];</code>
     * @param string $var
     * @return $this
     */
    public function setClassId($var)
    {
        GPBUtil::checkString($var, True);
        $this->class_id = $var;

        return $this;
    }

    /**
     * id is a unique identifier of the nft
     *
     * Generated from protobuf field <code>string id = 2 [json_name = "id"];</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * id is a unique identifier of the nft
     *
     * Generated from protobuf field <code>string id = 2 [json_name = "id"];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * sender is the address of the owner of nft
     *
     * Generated from protobuf field <code>string sender = 3 [json_name = "sender"];</code>
     * @return string
     */
    public function getSender()
    {
        return $this->sender;
    }

    /**
     * sender is the address of the owner of nft
     *
     * Generated from protobuf field <code>string sender = 3 [json_name = "sender"];</code>
     * @param string $var
     * @return $this
     */
    public function setSender($var)
    {
        GPBUtil::checkString($var, True);
        $this->sender = $var;

        return $this;
    }

    /**
     * receiver is the receiver address of nft
     *
     * Generated from protobuf field <code>string receiver = 4 [json_name = "receiver"];</code>
     * @return string
     */
    public function getReceiver()
    {
        return $this->receiver;
    }

    /**
     * receiver is the receiver address of nft
     *
     * Generated from protobuf field <code>string receiver = 4 [json_name = "receiver"];</code>
     * @param string $var
     * @return $this
     */
    public function setReceiver($var)
    {
        GPBUtil::checkString($var, True);
        $this->receiver = $var;

        return $this;
    }

}

