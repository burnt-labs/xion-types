<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/staking/v1beta1/staking.proto

namespace Cosmos\Staking\V1beta1;

use UnexpectedValueException;

/**
 * Infraction indicates the infraction a validator commited.
 *
 * Protobuf type <code>cosmos.staking.v1beta1.Infraction</code>
 */
class Infraction
{
    /**
     * UNSPECIFIED defines an empty infraction.
     *
     * Generated from protobuf enum <code>INFRACTION_UNSPECIFIED = 0;</code>
     */
    const INFRACTION_UNSPECIFIED = 0;
    /**
     * DOUBLE_SIGN defines a validator that double-signs a block.
     *
     * Generated from protobuf enum <code>INFRACTION_DOUBLE_SIGN = 1;</code>
     */
    const INFRACTION_DOUBLE_SIGN = 1;
    /**
     * DOWNTIME defines a validator that missed signing too many blocks.
     *
     * Generated from protobuf enum <code>INFRACTION_DOWNTIME = 2;</code>
     */
    const INFRACTION_DOWNTIME = 2;

    private static $valueToName = [
        self::INFRACTION_UNSPECIFIED => 'INFRACTION_UNSPECIFIED',
        self::INFRACTION_DOUBLE_SIGN => 'INFRACTION_DOUBLE_SIGN',
        self::INFRACTION_DOWNTIME => 'INFRACTION_DOWNTIME',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

