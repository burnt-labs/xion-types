<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/app/v1alpha1/config.proto

namespace Cosmos\App\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * GolangBinding is an explicit interface type to implementing type binding for dependency injection.
 *
 * Generated from protobuf message <code>cosmos.app.v1alpha1.GolangBinding</code>
 */
class GolangBinding extends \Google\Protobuf\Internal\Message
{
    /**
     * interface_type is the interface type which will be bound to a specific implementation type
     *
     * Generated from protobuf field <code>string interface_type = 1 [json_name = "interfaceType"];</code>
     */
    protected $interface_type = '';
    /**
     * implementation is the implementing type which will be supplied when an input of type interface is requested
     *
     * Generated from protobuf field <code>string implementation = 2 [json_name = "implementation"];</code>
     */
    protected $implementation = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $interface_type
     *           interface_type is the interface type which will be bound to a specific implementation type
     *     @type string $implementation
     *           implementation is the implementing type which will be supplied when an input of type interface is requested
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\App\V1Alpha1\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * interface_type is the interface type which will be bound to a specific implementation type
     *
     * Generated from protobuf field <code>string interface_type = 1 [json_name = "interfaceType"];</code>
     * @return string
     */
    public function getInterfaceType()
    {
        return $this->interface_type;
    }

    /**
     * interface_type is the interface type which will be bound to a specific implementation type
     *
     * Generated from protobuf field <code>string interface_type = 1 [json_name = "interfaceType"];</code>
     * @param string $var
     * @return $this
     */
    public function setInterfaceType($var)
    {
        GPBUtil::checkString($var, True);
        $this->interface_type = $var;

        return $this;
    }

    /**
     * implementation is the implementing type which will be supplied when an input of type interface is requested
     *
     * Generated from protobuf field <code>string implementation = 2 [json_name = "implementation"];</code>
     * @return string
     */
    public function getImplementation()
    {
        return $this->implementation;
    }

    /**
     * implementation is the implementing type which will be supplied when an input of type interface is requested
     *
     * Generated from protobuf field <code>string implementation = 2 [json_name = "implementation"];</code>
     * @param string $var
     * @return $this
     */
    public function setImplementation($var)
    {
        GPBUtil::checkString($var, True);
        $this->implementation = $var;

        return $this;
    }

}

