<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/app/v1alpha1/module.proto

namespace Cosmos\App\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ModuleDescriptor describes an app module.
 *
 * Generated from protobuf message <code>cosmos.app.v1alpha1.ModuleDescriptor</code>
 */
class ModuleDescriptor extends \Google\Protobuf\Internal\Message
{
    /**
     * go_import names the package that should be imported by an app to load the
     * module in the runtime module registry. It is required to make debugging
     * of configuration errors easier for users.
     *
     * Generated from protobuf field <code>string go_import = 1 [json_name = "goImport"];</code>
     */
    protected $go_import = '';
    /**
     * use_package refers to a protobuf package that this module
     * uses and exposes to the world. In an app, only one module should "use"
     * or own a single protobuf package. It is assumed that the module uses
     * all of the .proto files in a single package.
     *
     * Generated from protobuf field <code>repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];</code>
     */
    private $use_package;
    /**
     * can_migrate_from defines which module versions this module can migrate
     * state from. The framework will check that one module version is able to
     * migrate from a previous module version before attempting to update its
     * config. It is assumed that modules can transitively migrate from earlier
     * versions. For instance if v3 declares it can migrate from v2, and v2
     * declares it can migrate from v1, the framework knows how to migrate
     * from v1 to v3, assuming all 3 module versions are registered at runtime.
     *
     * Generated from protobuf field <code>repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];</code>
     */
    private $can_migrate_from;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $go_import
     *           go_import names the package that should be imported by an app to load the
     *           module in the runtime module registry. It is required to make debugging
     *           of configuration errors easier for users.
     *     @type array<\Cosmos\App\V1alpha1\PackageReference>|\Google\Protobuf\Internal\RepeatedField $use_package
     *           use_package refers to a protobuf package that this module
     *           uses and exposes to the world. In an app, only one module should "use"
     *           or own a single protobuf package. It is assumed that the module uses
     *           all of the .proto files in a single package.
     *     @type array<\Cosmos\App\V1alpha1\MigrateFromInfo>|\Google\Protobuf\Internal\RepeatedField $can_migrate_from
     *           can_migrate_from defines which module versions this module can migrate
     *           state from. The framework will check that one module version is able to
     *           migrate from a previous module version before attempting to update its
     *           config. It is assumed that modules can transitively migrate from earlier
     *           versions. For instance if v3 declares it can migrate from v2, and v2
     *           declares it can migrate from v1, the framework knows how to migrate
     *           from v1 to v3, assuming all 3 module versions are registered at runtime.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\App\V1Alpha1\Module::initOnce();
        parent::__construct($data);
    }

    /**
     * go_import names the package that should be imported by an app to load the
     * module in the runtime module registry. It is required to make debugging
     * of configuration errors easier for users.
     *
     * Generated from protobuf field <code>string go_import = 1 [json_name = "goImport"];</code>
     * @return string
     */
    public function getGoImport()
    {
        return $this->go_import;
    }

    /**
     * go_import names the package that should be imported by an app to load the
     * module in the runtime module registry. It is required to make debugging
     * of configuration errors easier for users.
     *
     * Generated from protobuf field <code>string go_import = 1 [json_name = "goImport"];</code>
     * @param string $var
     * @return $this
     */
    public function setGoImport($var)
    {
        GPBUtil::checkString($var, True);
        $this->go_import = $var;

        return $this;
    }

    /**
     * use_package refers to a protobuf package that this module
     * uses and exposes to the world. In an app, only one module should "use"
     * or own a single protobuf package. It is assumed that the module uses
     * all of the .proto files in a single package.
     *
     * Generated from protobuf field <code>repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUsePackage()
    {
        return $this->use_package;
    }

    /**
     * use_package refers to a protobuf package that this module
     * uses and exposes to the world. In an app, only one module should "use"
     * or own a single protobuf package. It is assumed that the module uses
     * all of the .proto files in a single package.
     *
     * Generated from protobuf field <code>repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];</code>
     * @param array<\Cosmos\App\V1alpha1\PackageReference>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUsePackage($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\App\V1alpha1\PackageReference::class);
        $this->use_package = $arr;

        return $this;
    }

    /**
     * can_migrate_from defines which module versions this module can migrate
     * state from. The framework will check that one module version is able to
     * migrate from a previous module version before attempting to update its
     * config. It is assumed that modules can transitively migrate from earlier
     * versions. For instance if v3 declares it can migrate from v2, and v2
     * declares it can migrate from v1, the framework knows how to migrate
     * from v1 to v3, assuming all 3 module versions are registered at runtime.
     *
     * Generated from protobuf field <code>repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCanMigrateFrom()
    {
        return $this->can_migrate_from;
    }

    /**
     * can_migrate_from defines which module versions this module can migrate
     * state from. The framework will check that one module version is able to
     * migrate from a previous module version before attempting to update its
     * config. It is assumed that modules can transitively migrate from earlier
     * versions. For instance if v3 declares it can migrate from v2, and v2
     * declares it can migrate from v1, the framework knows how to migrate
     * from v1 to v3, assuming all 3 module versions are registered at runtime.
     *
     * Generated from protobuf field <code>repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];</code>
     * @param array<\Cosmos\App\V1alpha1\MigrateFromInfo>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCanMigrateFrom($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\App\V1alpha1\MigrateFromInfo::class);
        $this->can_migrate_from = $arr;

        return $this;
    }

}

