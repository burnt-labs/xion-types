<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/crisis/v1beta1/tx.proto

namespace Cosmos\Crisis\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * MsgVerifyInvariant represents a message to verify a particular invariance.
 *
 * Generated from protobuf message <code>cosmos.crisis.v1beta1.MsgVerifyInvariant</code>
 */
class MsgVerifyInvariant extends \Google\Protobuf\Internal\Message
{
    /**
     * sender is the account address of private key to send coins to fee collector account.
     *
     * Generated from protobuf field <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    protected $sender = '';
    /**
     * name of the invariant module.
     *
     * Generated from protobuf field <code>string invariant_module_name = 2 [json_name = "invariantModuleName"];</code>
     */
    protected $invariant_module_name = '';
    /**
     * invariant_route is the msg's invariant route.
     *
     * Generated from protobuf field <code>string invariant_route = 3 [json_name = "invariantRoute"];</code>
     */
    protected $invariant_route = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sender
     *           sender is the account address of private key to send coins to fee collector account.
     *     @type string $invariant_module_name
     *           name of the invariant module.
     *     @type string $invariant_route
     *           invariant_route is the msg's invariant route.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Crisis\V1Beta1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * sender is the account address of private key to send coins to fee collector account.
     *
     * Generated from protobuf field <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return string
     */
    public function getSender()
    {
        return $this->sender;
    }

    /**
     * sender is the account address of private key to send coins to fee collector account.
     *
     * Generated from protobuf field <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param string $var
     * @return $this
     */
    public function setSender($var)
    {
        GPBUtil::checkString($var, True);
        $this->sender = $var;

        return $this;
    }

    /**
     * name of the invariant module.
     *
     * Generated from protobuf field <code>string invariant_module_name = 2 [json_name = "invariantModuleName"];</code>
     * @return string
     */
    public function getInvariantModuleName()
    {
        return $this->invariant_module_name;
    }

    /**
     * name of the invariant module.
     *
     * Generated from protobuf field <code>string invariant_module_name = 2 [json_name = "invariantModuleName"];</code>
     * @param string $var
     * @return $this
     */
    public function setInvariantModuleName($var)
    {
        GPBUtil::checkString($var, True);
        $this->invariant_module_name = $var;

        return $this;
    }

    /**
     * invariant_route is the msg's invariant route.
     *
     * Generated from protobuf field <code>string invariant_route = 3 [json_name = "invariantRoute"];</code>
     * @return string
     */
    public function getInvariantRoute()
    {
        return $this->invariant_route;
    }

    /**
     * invariant_route is the msg's invariant route.
     *
     * Generated from protobuf field <code>string invariant_route = 3 [json_name = "invariantRoute"];</code>
     * @param string $var
     * @return $this
     */
    public function setInvariantRoute($var)
    {
        GPBUtil::checkString($var, True);
        $this->invariant_route = $var;

        return $this;
    }

}

