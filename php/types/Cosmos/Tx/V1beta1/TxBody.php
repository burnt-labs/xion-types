<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: cosmos/tx/v1beta1/tx.proto

namespace Cosmos\Tx\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * TxBody is the body of a transaction that all signers sign over.
 *
 * Generated from protobuf message <code>cosmos.tx.v1beta1.TxBody</code>
 */
class TxBody extends \Google\Protobuf\Internal\Message
{
    /**
     * messages is a list of messages to be executed. The required signers of
     * those messages define the number and order of elements in AuthInfo's
     * signer_infos and Tx's signatures. Each required signer address is added to
     * the list only the first time it occurs.
     * By convention, the first required signer (usually from the first message)
     * is referred to as the primary signer and pays the fee for the whole
     * transaction.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any messages = 1 [json_name = "messages"];</code>
     */
    private $messages;
    /**
     * memo is any arbitrary note/comment to be added to the transaction.
     * WARNING: in clients, any publicly exposed text should not be called memo,
     * but should be called `note` instead (see
     * https://github.com/cosmos/cosmos-sdk/issues/9122).
     *
     * Generated from protobuf field <code>string memo = 2 [json_name = "memo"];</code>
     */
    protected $memo = '';
    /**
     * timeout_height is the block height after which this transaction will not
     * be processed by the chain.
     *
     * Generated from protobuf field <code>uint64 timeout_height = 3 [json_name = "timeoutHeight"];</code>
     */
    protected $timeout_height = 0;
    /**
     * unordered, when set to true, indicates that the transaction signer(s)
     * intend for the transaction to be evaluated and executed in an un-ordered
     * fashion. Specifically, the account's nonce will NOT be checked or
     * incremented, which allows for fire-and-forget as well as concurrent
     * transaction execution.
     * Note, when set to true, the existing 'timeout_timestamp' value must
     * be set and will be used to correspond to a timestamp in which the transaction is deemed
     * valid.
     * When true, the sequence value MUST be 0, and any transaction with unordered=true and a non-zero sequence value will
     * be rejected.
     * External services that make assumptions about sequence values may need to be updated because of this.
     *
     * Generated from protobuf field <code>bool unordered = 4 [json_name = "unordered", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.53"];</code>
     */
    protected $unordered = false;
    /**
     * timeout_timestamp is the block time after which this transaction will not
     * be processed by the chain.
     * Note, if unordered=true this value MUST be set
     * and will act as a short-lived TTL in which the transaction is deemed valid
     * and kept in memory to prevent duplicates.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timeout_timestamp = 5 [json_name = "timeoutTimestamp", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.53"];</code>
     */
    protected $timeout_timestamp = null;
    /**
     * extension_options are arbitrary options that can be added by chains
     * when the default options are not sufficient. If any of these are present
     * and can't be handled, the transaction will be rejected
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any extension_options = 1023 [json_name = "extensionOptions"];</code>
     */
    private $extension_options;
    /**
     * extension_options are arbitrary options that can be added by chains
     * when the default options are not sufficient. If any of these are present
     * and can't be handled, they will be ignored
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any non_critical_extension_options = 2047 [json_name = "nonCriticalExtensionOptions"];</code>
     */
    private $non_critical_extension_options;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $messages
     *           messages is a list of messages to be executed. The required signers of
     *           those messages define the number and order of elements in AuthInfo's
     *           signer_infos and Tx's signatures. Each required signer address is added to
     *           the list only the first time it occurs.
     *           By convention, the first required signer (usually from the first message)
     *           is referred to as the primary signer and pays the fee for the whole
     *           transaction.
     *     @type string $memo
     *           memo is any arbitrary note/comment to be added to the transaction.
     *           WARNING: in clients, any publicly exposed text should not be called memo,
     *           but should be called `note` instead (see
     *           https://github.com/cosmos/cosmos-sdk/issues/9122).
     *     @type int|string $timeout_height
     *           timeout_height is the block height after which this transaction will not
     *           be processed by the chain.
     *     @type bool $unordered
     *           unordered, when set to true, indicates that the transaction signer(s)
     *           intend for the transaction to be evaluated and executed in an un-ordered
     *           fashion. Specifically, the account's nonce will NOT be checked or
     *           incremented, which allows for fire-and-forget as well as concurrent
     *           transaction execution.
     *           Note, when set to true, the existing 'timeout_timestamp' value must
     *           be set and will be used to correspond to a timestamp in which the transaction is deemed
     *           valid.
     *           When true, the sequence value MUST be 0, and any transaction with unordered=true and a non-zero sequence value will
     *           be rejected.
     *           External services that make assumptions about sequence values may need to be updated because of this.
     *     @type \Google\Protobuf\Timestamp $timeout_timestamp
     *           timeout_timestamp is the block time after which this transaction will not
     *           be processed by the chain.
     *           Note, if unordered=true this value MUST be set
     *           and will act as a short-lived TTL in which the transaction is deemed valid
     *           and kept in memory to prevent duplicates.
     *     @type array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $extension_options
     *           extension_options are arbitrary options that can be added by chains
     *           when the default options are not sufficient. If any of these are present
     *           and can't be handled, the transaction will be rejected
     *     @type array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $non_critical_extension_options
     *           extension_options are arbitrary options that can be added by chains
     *           when the default options are not sufficient. If any of these are present
     *           and can't be handled, they will be ignored
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cosmos\Tx\V1Beta1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * messages is a list of messages to be executed. The required signers of
     * those messages define the number and order of elements in AuthInfo's
     * signer_infos and Tx's signatures. Each required signer address is added to
     * the list only the first time it occurs.
     * By convention, the first required signer (usually from the first message)
     * is referred to as the primary signer and pays the fee for the whole
     * transaction.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any messages = 1 [json_name = "messages"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMessages()
    {
        return $this->messages;
    }

    /**
     * messages is a list of messages to be executed. The required signers of
     * those messages define the number and order of elements in AuthInfo's
     * signer_infos and Tx's signatures. Each required signer address is added to
     * the list only the first time it occurs.
     * By convention, the first required signer (usually from the first message)
     * is referred to as the primary signer and pays the fee for the whole
     * transaction.
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any messages = 1 [json_name = "messages"];</code>
     * @param array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMessages($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Any::class);
        $this->messages = $arr;

        return $this;
    }

    /**
     * memo is any arbitrary note/comment to be added to the transaction.
     * WARNING: in clients, any publicly exposed text should not be called memo,
     * but should be called `note` instead (see
     * https://github.com/cosmos/cosmos-sdk/issues/9122).
     *
     * Generated from protobuf field <code>string memo = 2 [json_name = "memo"];</code>
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     * memo is any arbitrary note/comment to be added to the transaction.
     * WARNING: in clients, any publicly exposed text should not be called memo,
     * but should be called `note` instead (see
     * https://github.com/cosmos/cosmos-sdk/issues/9122).
     *
     * Generated from protobuf field <code>string memo = 2 [json_name = "memo"];</code>
     * @param string $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkString($var, True);
        $this->memo = $var;

        return $this;
    }

    /**
     * timeout_height is the block height after which this transaction will not
     * be processed by the chain.
     *
     * Generated from protobuf field <code>uint64 timeout_height = 3 [json_name = "timeoutHeight"];</code>
     * @return int|string
     */
    public function getTimeoutHeight()
    {
        return $this->timeout_height;
    }

    /**
     * timeout_height is the block height after which this transaction will not
     * be processed by the chain.
     *
     * Generated from protobuf field <code>uint64 timeout_height = 3 [json_name = "timeoutHeight"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimeoutHeight($var)
    {
        GPBUtil::checkUint64($var);
        $this->timeout_height = $var;

        return $this;
    }

    /**
     * unordered, when set to true, indicates that the transaction signer(s)
     * intend for the transaction to be evaluated and executed in an un-ordered
     * fashion. Specifically, the account's nonce will NOT be checked or
     * incremented, which allows for fire-and-forget as well as concurrent
     * transaction execution.
     * Note, when set to true, the existing 'timeout_timestamp' value must
     * be set and will be used to correspond to a timestamp in which the transaction is deemed
     * valid.
     * When true, the sequence value MUST be 0, and any transaction with unordered=true and a non-zero sequence value will
     * be rejected.
     * External services that make assumptions about sequence values may need to be updated because of this.
     *
     * Generated from protobuf field <code>bool unordered = 4 [json_name = "unordered", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.53"];</code>
     * @return bool
     */
    public function getUnordered()
    {
        return $this->unordered;
    }

    /**
     * unordered, when set to true, indicates that the transaction signer(s)
     * intend for the transaction to be evaluated and executed in an un-ordered
     * fashion. Specifically, the account's nonce will NOT be checked or
     * incremented, which allows for fire-and-forget as well as concurrent
     * transaction execution.
     * Note, when set to true, the existing 'timeout_timestamp' value must
     * be set and will be used to correspond to a timestamp in which the transaction is deemed
     * valid.
     * When true, the sequence value MUST be 0, and any transaction with unordered=true and a non-zero sequence value will
     * be rejected.
     * External services that make assumptions about sequence values may need to be updated because of this.
     *
     * Generated from protobuf field <code>bool unordered = 4 [json_name = "unordered", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.53"];</code>
     * @param bool $var
     * @return $this
     */
    public function setUnordered($var)
    {
        GPBUtil::checkBool($var);
        $this->unordered = $var;

        return $this;
    }

    /**
     * timeout_timestamp is the block time after which this transaction will not
     * be processed by the chain.
     * Note, if unordered=true this value MUST be set
     * and will act as a short-lived TTL in which the transaction is deemed valid
     * and kept in memory to prevent duplicates.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timeout_timestamp = 5 [json_name = "timeoutTimestamp", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.53"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTimeoutTimestamp()
    {
        return $this->timeout_timestamp;
    }

    public function hasTimeoutTimestamp()
    {
        return isset($this->timeout_timestamp);
    }

    public function clearTimeoutTimestamp()
    {
        unset($this->timeout_timestamp);
    }

    /**
     * timeout_timestamp is the block time after which this transaction will not
     * be processed by the chain.
     * Note, if unordered=true this value MUST be set
     * and will act as a short-lived TTL in which the transaction is deemed valid
     * and kept in memory to prevent duplicates.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timeout_timestamp = 5 [json_name = "timeoutTimestamp", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.53"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTimeoutTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timeout_timestamp = $var;

        return $this;
    }

    /**
     * extension_options are arbitrary options that can be added by chains
     * when the default options are not sufficient. If any of these are present
     * and can't be handled, the transaction will be rejected
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any extension_options = 1023 [json_name = "extensionOptions"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExtensionOptions()
    {
        return $this->extension_options;
    }

    /**
     * extension_options are arbitrary options that can be added by chains
     * when the default options are not sufficient. If any of these are present
     * and can't be handled, the transaction will be rejected
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any extension_options = 1023 [json_name = "extensionOptions"];</code>
     * @param array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExtensionOptions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Any::class);
        $this->extension_options = $arr;

        return $this;
    }

    /**
     * extension_options are arbitrary options that can be added by chains
     * when the default options are not sufficient. If any of these are present
     * and can't be handled, they will be ignored
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any non_critical_extension_options = 2047 [json_name = "nonCriticalExtensionOptions"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNonCriticalExtensionOptions()
    {
        return $this->non_critical_extension_options;
    }

    /**
     * extension_options are arbitrary options that can be added by chains
     * when the default options are not sufficient. If any of these are present
     * and can't be handled, they will be ignored
     *
     * Generated from protobuf field <code>repeated .google.protobuf.Any non_critical_extension_options = 2047 [json_name = "nonCriticalExtensionOptions"];</code>
     * @param array<\Google\Protobuf\Any>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNonCriticalExtensionOptions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Any::class);
        $this->non_critical_extension_options = $arr;

        return $this;
    }

}

