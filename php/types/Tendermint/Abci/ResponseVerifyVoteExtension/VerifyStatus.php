<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: tendermint/abci/types.proto

namespace Tendermint\Abci\ResponseVerifyVoteExtension;

use UnexpectedValueException;

/**
 * Protobuf type <code>tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus</code>
 */
class VerifyStatus
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>ACCEPT = 1;</code>
     */
    const ACCEPT = 1;
    /**
     * Rejecting the vote extension will reject the entire precommit by the sender.
     * Incorrectly implementing this thus has liveness implications as it may affect
     * CometBFT's ability to receive 2/3+ valid votes to finalize the block.
     * Honest nodes should never be rejected.
     *
     * Generated from protobuf enum <code>REJECT = 2;</code>
     */
    const REJECT = 2;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::ACCEPT => 'ACCEPT',
        self::REJECT => 'REJECT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

