<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: abstractaccount/v1/tx.proto

namespace Abstractaccount\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * MsgRegisterAccount is the message for registering a new AbstractAccount.
 *
 * Generated from protobuf message <code>abstractaccount.v1.MsgRegisterAccount</code>
 */
class MsgRegisterAccount extends \Google\Protobuf\Internal\Message
{
    /**
     * Sender is the actor who signs the message
     *
     * Generated from protobuf field <code>string sender = 1 [json_name = "sender"];</code>
     */
    protected $sender = '';
    /**
     * CodeID indicates which wasm binary code is to be used for this contract
     *
     * Generated from protobuf field <code>uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];</code>
     */
    protected $code_id = 0;
    /**
     * Msg is the JSON-encoded instantiate message for the contract
     *
     * Generated from protobuf field <code>bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "github.com/CosmWasm/wasmd/x/wasm/types.RawContractMessage"];</code>
     */
    protected $msg = '';
    /**
     * Funds are coins to be deposited to the contract on instantiattion
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin funds = 4 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    private $funds;
    /**
     * Salt is an arbinary value to be used in deriving the account address.
     * Max 64 bytes.
     *
     * Generated from protobuf field <code>bytes salt = 5 [json_name = "salt"];</code>
     */
    protected $salt = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sender
     *           Sender is the actor who signs the message
     *     @type int|string $code_id
     *           CodeID indicates which wasm binary code is to be used for this contract
     *     @type string $msg
     *           Msg is the JSON-encoded instantiate message for the contract
     *     @type array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $funds
     *           Funds are coins to be deposited to the contract on instantiattion
     *     @type string $salt
     *           Salt is an arbinary value to be used in deriving the account address.
     *           Max 64 bytes.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Abstractaccount\V1\Tx::initOnce();
        parent::__construct($data);
    }

    /**
     * Sender is the actor who signs the message
     *
     * Generated from protobuf field <code>string sender = 1 [json_name = "sender"];</code>
     * @return string
     */
    public function getSender()
    {
        return $this->sender;
    }

    /**
     * Sender is the actor who signs the message
     *
     * Generated from protobuf field <code>string sender = 1 [json_name = "sender"];</code>
     * @param string $var
     * @return $this
     */
    public function setSender($var)
    {
        GPBUtil::checkString($var, True);
        $this->sender = $var;

        return $this;
    }

    /**
     * CodeID indicates which wasm binary code is to be used for this contract
     *
     * Generated from protobuf field <code>uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];</code>
     * @return int|string
     */
    public function getCodeId()
    {
        return $this->code_id;
    }

    /**
     * CodeID indicates which wasm binary code is to be used for this contract
     *
     * Generated from protobuf field <code>uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setCodeId($var)
    {
        GPBUtil::checkUint64($var);
        $this->code_id = $var;

        return $this;
    }

    /**
     * Msg is the JSON-encoded instantiate message for the contract
     *
     * Generated from protobuf field <code>bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "github.com/CosmWasm/wasmd/x/wasm/types.RawContractMessage"];</code>
     * @return string
     */
    public function getMsg()
    {
        return $this->msg;
    }

    /**
     * Msg is the JSON-encoded instantiate message for the contract
     *
     * Generated from protobuf field <code>bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "github.com/CosmWasm/wasmd/x/wasm/types.RawContractMessage"];</code>
     * @param string $var
     * @return $this
     */
    public function setMsg($var)
    {
        GPBUtil::checkString($var, False);
        $this->msg = $var;

        return $this;
    }

    /**
     * Funds are coins to be deposited to the contract on instantiattion
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin funds = 4 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFunds()
    {
        return $this->funds;
    }

    /**
     * Funds are coins to be deposited to the contract on instantiattion
     *
     * Generated from protobuf field <code>repeated .cosmos.base.v1beta1.Coin funds = 4 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     * @param array<\Cosmos\Base\V1beta1\Coin>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFunds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cosmos\Base\V1beta1\Coin::class);
        $this->funds = $arr;

        return $this;
    }

    /**
     * Salt is an arbinary value to be used in deriving the account address.
     * Max 64 bytes.
     *
     * Generated from protobuf field <code>bytes salt = 5 [json_name = "salt"];</code>
     * @return string
     */
    public function getSalt()
    {
        return $this->salt;
    }

    /**
     * Salt is an arbinary value to be used in deriving the account address.
     * Max 64 bytes.
     *
     * Generated from protobuf field <code>bytes salt = 5 [json_name = "salt"];</code>
     * @param string $var
     * @return $this
     */
    public function setSalt($var)
    {
        GPBUtil::checkString($var, False);
        $this->salt = $var;

        return $this;
    }

}

