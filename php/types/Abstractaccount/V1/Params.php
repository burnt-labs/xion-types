<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: abstractaccount/v1/params.proto

namespace Abstractaccount\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Params defines the parameters for the abstractaccount module.
 *
 * Generated from protobuf message <code>abstractaccount.v1.Params</code>
 */
class Params extends \Google\Protobuf\Internal\Message
{
    /**
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     *
     * Generated from protobuf field <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
     */
    protected $allow_all_code_ids = false;
    /**
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     *
     * Generated from protobuf field <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     */
    private $allowed_code_ids;
    /**
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     * Must be greater than zero.
     *
     * Generated from protobuf field <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
     */
    protected $max_gas_before = 0;
    /**
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     * Must be greater than zero.
     *
     * Generated from protobuf field <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
     */
    protected $max_gas_after = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $allow_all_code_ids
     *           AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     *           AbstractAccounts:
     *           - if set to true, any code ID can be used;
     *           - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     *           be used.
     *     @type array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $allowed_code_ids
     *           AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     *           regiseter AbstractAccounts.
     *     @type int|string $max_gas_before
     *           MaxGasBefore is the maximum amount of gas that can be consumed by the
     *           contract call in the before_tx decorator.
     *           Must be greater than zero.
     *     @type int|string $max_gas_after
     *           MaxGasAfter is the maximum amount of gas that can be consumed by the
     *           contract call in the after_tx decorator.
     *           Must be greater than zero.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Abstractaccount\V1\Params::initOnce();
        parent::__construct($data);
    }

    /**
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     *
     * Generated from protobuf field <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
     * @return bool
     */
    public function getAllowAllCodeIds()
    {
        return $this->allow_all_code_ids;
    }

    /**
     * AllowAllCodeIDs determines whether a Wasm code ID can be used to register
     * AbstractAccounts:
     * - if set to true, any code ID can be used;
     * - if set to false, only code IDs whitelisted in the AllowedCodeIDs list can
     * be used.
     *
     * Generated from protobuf field <code>bool allow_all_code_ids = 1 [json_name = "allowAllCodeIds", (.gogoproto.customname) = "AllowAllCodeIDs"];</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowAllCodeIds($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_all_code_ids = $var;

        return $this;
    }

    /**
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     *
     * Generated from protobuf field <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAllowedCodeIds()
    {
        return $this->allowed_code_ids;
    }

    /**
     * AllowedCodeIDs is the whitelist of Wasm code IDs that can be used to
     * regiseter AbstractAccounts.
     *
     * Generated from protobuf field <code>repeated uint64 allowed_code_ids = 2 [json_name = "allowedCodeIds", (.gogoproto.customname) = "AllowedCodeIDs"];</code>
     * @param array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAllowedCodeIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::UINT64);
        $this->allowed_code_ids = $arr;

        return $this;
    }

    /**
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     * Must be greater than zero.
     *
     * Generated from protobuf field <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
     * @return int|string
     */
    public function getMaxGasBefore()
    {
        return $this->max_gas_before;
    }

    /**
     * MaxGasBefore is the maximum amount of gas that can be consumed by the
     * contract call in the before_tx decorator.
     * Must be greater than zero.
     *
     * Generated from protobuf field <code>uint64 max_gas_before = 3 [json_name = "maxGasBefore"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxGasBefore($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_gas_before = $var;

        return $this;
    }

    /**
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     * Must be greater than zero.
     *
     * Generated from protobuf field <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
     * @return int|string
     */
    public function getMaxGasAfter()
    {
        return $this->max_gas_after;
    }

    /**
     * MaxGasAfter is the maximum amount of gas that can be consumed by the
     * contract call in the after_tx decorator.
     * Must be greater than zero.
     *
     * Generated from protobuf field <code>uint64 max_gas_after = 4 [json_name = "maxGasAfter"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxGasAfter($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_gas_after = $var;

        return $this;
    }

}

