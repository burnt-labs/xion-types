<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: xion/feeabs/v1beta1/epoch.proto

namespace Xion\Feeabs\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ExponentialBackoff defines backoff epoch
 *
 * Generated from protobuf message <code>xion.feeabs.v1beta1.ExponentialBackoff</code>
 */
class ExponentialBackoff extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 jump = 1 [json_name = "jump"];</code>
     */
    protected $jump = 0;
    /**
     * Generated from protobuf field <code>int64 future_epoch = 2 [json_name = "futureEpoch"];</code>
     */
    protected $future_epoch = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $jump
     *     @type int|string $future_epoch
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Xion\Feeabs\V1Beta1\Epoch::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 jump = 1 [json_name = "jump"];</code>
     * @return int|string
     */
    public function getJump()
    {
        return $this->jump;
    }

    /**
     * Generated from protobuf field <code>int64 jump = 1 [json_name = "jump"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setJump($var)
    {
        GPBUtil::checkInt64($var);
        $this->jump = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 future_epoch = 2 [json_name = "futureEpoch"];</code>
     * @return int|string
     */
    public function getFutureEpoch()
    {
        return $this->future_epoch;
    }

    /**
     * Generated from protobuf field <code>int64 future_epoch = 2 [json_name = "futureEpoch"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setFutureEpoch($var)
    {
        GPBUtil::checkInt64($var);
        $this->future_epoch = $var;

        return $this;
    }

}

