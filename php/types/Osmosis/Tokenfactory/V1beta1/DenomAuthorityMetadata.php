<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: osmosis/tokenfactory/v1beta1/authorityMetadata.proto

namespace Osmosis\Tokenfactory\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DenomAuthorityMetadata specifies metadata for addresses that have specific
 * capabilities over a token factory denom. Right now there is only one Admin
 * permission, but is planned to be extended to the future.
 *
 * Generated from protobuf message <code>osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata</code>
 */
class DenomAuthorityMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Can be empty for no admin, or a valid osmosis address
     *
     * Generated from protobuf field <code>string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];</code>
     */
    protected $admin = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $admin
     *           Can be empty for no admin, or a valid osmosis address
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Osmosis\Tokenfactory\V1Beta1\AuthorityMetadata::initOnce();
        parent::__construct($data);
    }

    /**
     * Can be empty for no admin, or a valid osmosis address
     *
     * Generated from protobuf field <code>string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];</code>
     * @return string
     */
    public function getAdmin()
    {
        return $this->admin;
    }

    /**
     * Can be empty for no admin, or a valid osmosis address
     *
     * Generated from protobuf field <code>string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];</code>
     * @param string $var
     * @return $this
     */
    public function setAdmin($var)
    {
        GPBUtil::checkString($var, True);
        $this->admin = $var;

        return $this;
    }

}

