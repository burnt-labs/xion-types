/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmwasm/wasm/v1/authz.proto */

#ifndef PROTOBUF_C_cosmwasm_2fwasm_2fv1_2fauthz_2eproto__INCLUDED
#define PROTOBUF_C_cosmwasm_2fwasm_2fv1_2fauthz_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "cosmwasm/wasm/v1/types.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmwasm__Wasm__V1__StoreCodeAuthorization Cosmwasm__Wasm__V1__StoreCodeAuthorization;
typedef struct Cosmwasm__Wasm__V1__ContractExecutionAuthorization Cosmwasm__Wasm__V1__ContractExecutionAuthorization;
typedef struct Cosmwasm__Wasm__V1__ContractMigrationAuthorization Cosmwasm__Wasm__V1__ContractMigrationAuthorization;
typedef struct Cosmwasm__Wasm__V1__CodeGrant Cosmwasm__Wasm__V1__CodeGrant;
typedef struct Cosmwasm__Wasm__V1__ContractGrant Cosmwasm__Wasm__V1__ContractGrant;
typedef struct Cosmwasm__Wasm__V1__MaxCallsLimit Cosmwasm__Wasm__V1__MaxCallsLimit;
typedef struct Cosmwasm__Wasm__V1__MaxFundsLimit Cosmwasm__Wasm__V1__MaxFundsLimit;
typedef struct Cosmwasm__Wasm__V1__CombinedLimit Cosmwasm__Wasm__V1__CombinedLimit;
typedef struct Cosmwasm__Wasm__V1__AllowAllMessagesFilter Cosmwasm__Wasm__V1__AllowAllMessagesFilter;
typedef struct Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter;
typedef struct Cosmwasm__Wasm__V1__AcceptedMessagesFilter Cosmwasm__Wasm__V1__AcceptedMessagesFilter;


/* --- enums --- */


/* --- messages --- */

/*
 * StoreCodeAuthorization defines authorization for wasm code upload.
 * Since: wasmd 0.42
 */
struct  Cosmwasm__Wasm__V1__StoreCodeAuthorization
{
  ProtobufCMessage base;
  /*
   * Grants for code upload
   */
  size_t n_grants;
  Cosmwasm__Wasm__V1__CodeGrant **grants;
};
#define COSMWASM__WASM__V1__STORE_CODE_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__store_code_authorization__descriptor) \
, 0,NULL }


/*
 * ContractExecutionAuthorization defines authorization for wasm execute.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__ContractExecutionAuthorization
{
  ProtobufCMessage base;
  /*
   * Grants for contract executions
   */
  size_t n_grants;
  Cosmwasm__Wasm__V1__ContractGrant **grants;
};
#define COSMWASM__WASM__V1__CONTRACT_EXECUTION_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__contract_execution_authorization__descriptor) \
, 0,NULL }


/*
 * ContractMigrationAuthorization defines authorization for wasm contract
 * migration. Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__ContractMigrationAuthorization
{
  ProtobufCMessage base;
  /*
   * Grants for contract migrations
   */
  size_t n_grants;
  Cosmwasm__Wasm__V1__ContractGrant **grants;
};
#define COSMWASM__WASM__V1__CONTRACT_MIGRATION_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__contract_migration_authorization__descriptor) \
, 0,NULL }


/*
 * CodeGrant a granted permission for a single code
 */
struct  Cosmwasm__Wasm__V1__CodeGrant
{
  ProtobufCMessage base;
  /*
   * CodeHash is the unique identifier created by wasmvm
   * Wildcard "*" is used to specify any kind of grant.
   */
  ProtobufCBinaryData code_hash;
  /*
   * InstantiatePermission is the superset access control to apply
   * on contract creation.
   * Optional
   */
  Cosmwasm__Wasm__V1__AccessConfig *instantiate_permission;
};
#define COSMWASM__WASM__V1__CODE_GRANT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__code_grant__descriptor) \
, {0,NULL}, NULL }


/*
 * ContractGrant a granted permission for a single contract
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__ContractGrant
{
  ProtobufCMessage base;
  /*
   * Contract is the bech32 address of the smart contract
   */
  char *contract;
  /*
   * Limit defines execution limits that are enforced and updated when the grant
   * is applied. When the limit lapsed the grant is removed.
   */
  Google__Protobuf__Any *limit;
  /*
   * Filter define more fine-grained control on the message payload passed
   * to the contract in the operation. When no filter applies on execution, the
   * operation is prohibited.
   */
  Google__Protobuf__Any *filter;
};
#define COSMWASM__WASM__V1__CONTRACT_GRANT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__contract_grant__descriptor) \
, (char *)protobuf_c_empty_string, NULL, NULL }


/*
 * MaxCallsLimit limited number of calls to the contract. No funds transferable.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__MaxCallsLimit
{
  ProtobufCMessage base;
  /*
   * Remaining number that is decremented on each execution
   */
  uint64_t remaining;
};
#define COSMWASM__WASM__V1__MAX_CALLS_LIMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__max_calls_limit__descriptor) \
, 0 }


/*
 * MaxFundsLimit defines the maximal amounts that can be sent to the contract.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__MaxFundsLimit
{
  ProtobufCMessage base;
  /*
   * Amounts is the maximal amount of tokens transferable to the contract.
   */
  size_t n_amounts;
  Cosmos__Base__V1beta1__Coin **amounts;
};
#define COSMWASM__WASM__V1__MAX_FUNDS_LIMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__max_funds_limit__descriptor) \
, 0,NULL }


/*
 * CombinedLimit defines the maximal amounts that can be sent to a contract and
 * the maximal number of calls executable. Both need to remain >0 to be valid.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__CombinedLimit
{
  ProtobufCMessage base;
  /*
   * Remaining number that is decremented on each execution
   */
  uint64_t calls_remaining;
  /*
   * Amounts is the maximal amount of tokens transferable to the contract.
   */
  size_t n_amounts;
  Cosmos__Base__V1beta1__Coin **amounts;
};
#define COSMWASM__WASM__V1__COMBINED_LIMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__combined_limit__descriptor) \
, 0, 0,NULL }


/*
 * AllowAllMessagesFilter is a wildcard to allow any type of contract payload
 * message.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__AllowAllMessagesFilter
{
  ProtobufCMessage base;
};
#define COSMWASM__WASM__V1__ALLOW_ALL_MESSAGES_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__allow_all_messages_filter__descriptor) \
 }


/*
 * AcceptedMessageKeysFilter accept only the specific contract message keys in
 * the json object to be executed.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter
{
  ProtobufCMessage base;
  /*
   * Messages is the list of unique keys
   */
  size_t n_keys;
  char **keys;
};
#define COSMWASM__WASM__V1__ACCEPTED_MESSAGE_KEYS_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__accepted_message_keys_filter__descriptor) \
, 0,NULL }


/*
 * AcceptedMessagesFilter accept only the specific raw contract messages to be
 * executed.
 * Since: wasmd 0.30
 */
struct  Cosmwasm__Wasm__V1__AcceptedMessagesFilter
{
  ProtobufCMessage base;
  /*
   * Messages is the list of raw contract messages
   */
  size_t n_messages;
  ProtobufCBinaryData *messages;
};
#define COSMWASM__WASM__V1__ACCEPTED_MESSAGES_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__accepted_messages_filter__descriptor) \
, 0,NULL }


/* Cosmwasm__Wasm__V1__StoreCodeAuthorization methods */
void   cosmwasm__wasm__v1__store_code_authorization__init
                     (Cosmwasm__Wasm__V1__StoreCodeAuthorization         *message);
size_t cosmwasm__wasm__v1__store_code_authorization__get_packed_size
                     (const Cosmwasm__Wasm__V1__StoreCodeAuthorization   *message);
size_t cosmwasm__wasm__v1__store_code_authorization__pack
                     (const Cosmwasm__Wasm__V1__StoreCodeAuthorization   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__store_code_authorization__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__StoreCodeAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__StoreCodeAuthorization *
       cosmwasm__wasm__v1__store_code_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__store_code_authorization__free_unpacked
                     (Cosmwasm__Wasm__V1__StoreCodeAuthorization *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__ContractExecutionAuthorization methods */
void   cosmwasm__wasm__v1__contract_execution_authorization__init
                     (Cosmwasm__Wasm__V1__ContractExecutionAuthorization         *message);
size_t cosmwasm__wasm__v1__contract_execution_authorization__get_packed_size
                     (const Cosmwasm__Wasm__V1__ContractExecutionAuthorization   *message);
size_t cosmwasm__wasm__v1__contract_execution_authorization__pack
                     (const Cosmwasm__Wasm__V1__ContractExecutionAuthorization   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__contract_execution_authorization__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__ContractExecutionAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__ContractExecutionAuthorization *
       cosmwasm__wasm__v1__contract_execution_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__contract_execution_authorization__free_unpacked
                     (Cosmwasm__Wasm__V1__ContractExecutionAuthorization *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__ContractMigrationAuthorization methods */
void   cosmwasm__wasm__v1__contract_migration_authorization__init
                     (Cosmwasm__Wasm__V1__ContractMigrationAuthorization         *message);
size_t cosmwasm__wasm__v1__contract_migration_authorization__get_packed_size
                     (const Cosmwasm__Wasm__V1__ContractMigrationAuthorization   *message);
size_t cosmwasm__wasm__v1__contract_migration_authorization__pack
                     (const Cosmwasm__Wasm__V1__ContractMigrationAuthorization   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__contract_migration_authorization__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__ContractMigrationAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__ContractMigrationAuthorization *
       cosmwasm__wasm__v1__contract_migration_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__contract_migration_authorization__free_unpacked
                     (Cosmwasm__Wasm__V1__ContractMigrationAuthorization *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__CodeGrant methods */
void   cosmwasm__wasm__v1__code_grant__init
                     (Cosmwasm__Wasm__V1__CodeGrant         *message);
size_t cosmwasm__wasm__v1__code_grant__get_packed_size
                     (const Cosmwasm__Wasm__V1__CodeGrant   *message);
size_t cosmwasm__wasm__v1__code_grant__pack
                     (const Cosmwasm__Wasm__V1__CodeGrant   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__code_grant__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__CodeGrant   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__CodeGrant *
       cosmwasm__wasm__v1__code_grant__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__code_grant__free_unpacked
                     (Cosmwasm__Wasm__V1__CodeGrant *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__ContractGrant methods */
void   cosmwasm__wasm__v1__contract_grant__init
                     (Cosmwasm__Wasm__V1__ContractGrant         *message);
size_t cosmwasm__wasm__v1__contract_grant__get_packed_size
                     (const Cosmwasm__Wasm__V1__ContractGrant   *message);
size_t cosmwasm__wasm__v1__contract_grant__pack
                     (const Cosmwasm__Wasm__V1__ContractGrant   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__contract_grant__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__ContractGrant   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__ContractGrant *
       cosmwasm__wasm__v1__contract_grant__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__contract_grant__free_unpacked
                     (Cosmwasm__Wasm__V1__ContractGrant *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__MaxCallsLimit methods */
void   cosmwasm__wasm__v1__max_calls_limit__init
                     (Cosmwasm__Wasm__V1__MaxCallsLimit         *message);
size_t cosmwasm__wasm__v1__max_calls_limit__get_packed_size
                     (const Cosmwasm__Wasm__V1__MaxCallsLimit   *message);
size_t cosmwasm__wasm__v1__max_calls_limit__pack
                     (const Cosmwasm__Wasm__V1__MaxCallsLimit   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__max_calls_limit__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__MaxCallsLimit   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__MaxCallsLimit *
       cosmwasm__wasm__v1__max_calls_limit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__max_calls_limit__free_unpacked
                     (Cosmwasm__Wasm__V1__MaxCallsLimit *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__MaxFundsLimit methods */
void   cosmwasm__wasm__v1__max_funds_limit__init
                     (Cosmwasm__Wasm__V1__MaxFundsLimit         *message);
size_t cosmwasm__wasm__v1__max_funds_limit__get_packed_size
                     (const Cosmwasm__Wasm__V1__MaxFundsLimit   *message);
size_t cosmwasm__wasm__v1__max_funds_limit__pack
                     (const Cosmwasm__Wasm__V1__MaxFundsLimit   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__max_funds_limit__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__MaxFundsLimit   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__MaxFundsLimit *
       cosmwasm__wasm__v1__max_funds_limit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__max_funds_limit__free_unpacked
                     (Cosmwasm__Wasm__V1__MaxFundsLimit *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__CombinedLimit methods */
void   cosmwasm__wasm__v1__combined_limit__init
                     (Cosmwasm__Wasm__V1__CombinedLimit         *message);
size_t cosmwasm__wasm__v1__combined_limit__get_packed_size
                     (const Cosmwasm__Wasm__V1__CombinedLimit   *message);
size_t cosmwasm__wasm__v1__combined_limit__pack
                     (const Cosmwasm__Wasm__V1__CombinedLimit   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__combined_limit__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__CombinedLimit   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__CombinedLimit *
       cosmwasm__wasm__v1__combined_limit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__combined_limit__free_unpacked
                     (Cosmwasm__Wasm__V1__CombinedLimit *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__AllowAllMessagesFilter methods */
void   cosmwasm__wasm__v1__allow_all_messages_filter__init
                     (Cosmwasm__Wasm__V1__AllowAllMessagesFilter         *message);
size_t cosmwasm__wasm__v1__allow_all_messages_filter__get_packed_size
                     (const Cosmwasm__Wasm__V1__AllowAllMessagesFilter   *message);
size_t cosmwasm__wasm__v1__allow_all_messages_filter__pack
                     (const Cosmwasm__Wasm__V1__AllowAllMessagesFilter   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__allow_all_messages_filter__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__AllowAllMessagesFilter   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__AllowAllMessagesFilter *
       cosmwasm__wasm__v1__allow_all_messages_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__allow_all_messages_filter__free_unpacked
                     (Cosmwasm__Wasm__V1__AllowAllMessagesFilter *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter methods */
void   cosmwasm__wasm__v1__accepted_message_keys_filter__init
                     (Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter         *message);
size_t cosmwasm__wasm__v1__accepted_message_keys_filter__get_packed_size
                     (const Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter   *message);
size_t cosmwasm__wasm__v1__accepted_message_keys_filter__pack
                     (const Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__accepted_message_keys_filter__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter *
       cosmwasm__wasm__v1__accepted_message_keys_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__accepted_message_keys_filter__free_unpacked
                     (Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__AcceptedMessagesFilter methods */
void   cosmwasm__wasm__v1__accepted_messages_filter__init
                     (Cosmwasm__Wasm__V1__AcceptedMessagesFilter         *message);
size_t cosmwasm__wasm__v1__accepted_messages_filter__get_packed_size
                     (const Cosmwasm__Wasm__V1__AcceptedMessagesFilter   *message);
size_t cosmwasm__wasm__v1__accepted_messages_filter__pack
                     (const Cosmwasm__Wasm__V1__AcceptedMessagesFilter   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__accepted_messages_filter__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__AcceptedMessagesFilter   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__AcceptedMessagesFilter *
       cosmwasm__wasm__v1__accepted_messages_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__accepted_messages_filter__free_unpacked
                     (Cosmwasm__Wasm__V1__AcceptedMessagesFilter *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmwasm__Wasm__V1__StoreCodeAuthorization_Closure)
                 (const Cosmwasm__Wasm__V1__StoreCodeAuthorization *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__ContractExecutionAuthorization_Closure)
                 (const Cosmwasm__Wasm__V1__ContractExecutionAuthorization *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__ContractMigrationAuthorization_Closure)
                 (const Cosmwasm__Wasm__V1__ContractMigrationAuthorization *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__CodeGrant_Closure)
                 (const Cosmwasm__Wasm__V1__CodeGrant *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__ContractGrant_Closure)
                 (const Cosmwasm__Wasm__V1__ContractGrant *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__MaxCallsLimit_Closure)
                 (const Cosmwasm__Wasm__V1__MaxCallsLimit *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__MaxFundsLimit_Closure)
                 (const Cosmwasm__Wasm__V1__MaxFundsLimit *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__CombinedLimit_Closure)
                 (const Cosmwasm__Wasm__V1__CombinedLimit *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__AllowAllMessagesFilter_Closure)
                 (const Cosmwasm__Wasm__V1__AllowAllMessagesFilter *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter_Closure)
                 (const Cosmwasm__Wasm__V1__AcceptedMessageKeysFilter *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__AcceptedMessagesFilter_Closure)
                 (const Cosmwasm__Wasm__V1__AcceptedMessagesFilter *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__store_code_authorization__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__contract_execution_authorization__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__contract_migration_authorization__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__code_grant__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__contract_grant__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__max_calls_limit__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__max_funds_limit__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__combined_limit__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__allow_all_messages_filter__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__accepted_message_keys_filter__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__accepted_messages_filter__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmwasm_2fwasm_2fv1_2fauthz_2eproto__INCLUDED */
