/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmwasm/wasm/v1/genesis.proto */

#ifndef PROTOBUF_C_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto__INCLUDED
#define PROTOBUF_C_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmwasm/wasm/v1/types.pb-c.h"
#include "amino/amino.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"

typedef struct Cosmwasm__Wasm__V1__GenesisState Cosmwasm__Wasm__V1__GenesisState;
typedef struct Cosmwasm__Wasm__V1__Code Cosmwasm__Wasm__V1__Code;
typedef struct Cosmwasm__Wasm__V1__Contract Cosmwasm__Wasm__V1__Contract;
typedef struct Cosmwasm__Wasm__V1__Sequence Cosmwasm__Wasm__V1__Sequence;


/* --- enums --- */


/* --- messages --- */

/*
 * GenesisState - genesis state of x/wasm
 */
struct  Cosmwasm__Wasm__V1__GenesisState
{
  ProtobufCMessage base;
  Cosmwasm__Wasm__V1__Params *params;
  size_t n_codes;
  Cosmwasm__Wasm__V1__Code **codes;
  size_t n_contracts;
  Cosmwasm__Wasm__V1__Contract **contracts;
  size_t n_sequences;
  Cosmwasm__Wasm__V1__Sequence **sequences;
};
#define COSMWASM__WASM__V1__GENESIS_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__genesis_state__descriptor) \
, NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * Code struct encompasses CodeInfo and CodeBytes
 */
struct  Cosmwasm__Wasm__V1__Code
{
  ProtobufCMessage base;
  uint64_t code_id;
  Cosmwasm__Wasm__V1__CodeInfo *code_info;
  ProtobufCBinaryData code_bytes;
  /*
   * Pinned to wasmvm cache
   */
  protobuf_c_boolean pinned;
};
#define COSMWASM__WASM__V1__CODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__code__descriptor) \
, 0, NULL, {0,NULL}, 0 }


/*
 * Contract struct encompasses ContractAddress, ContractInfo, and ContractState
 */
struct  Cosmwasm__Wasm__V1__Contract
{
  ProtobufCMessage base;
  char *contract_address;
  Cosmwasm__Wasm__V1__ContractInfo *contract_info;
  size_t n_contract_state;
  Cosmwasm__Wasm__V1__Model **contract_state;
  size_t n_contract_code_history;
  Cosmwasm__Wasm__V1__ContractCodeHistoryEntry **contract_code_history;
};
#define COSMWASM__WASM__V1__CONTRACT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__contract__descriptor) \
, (char *)protobuf_c_empty_string, NULL, 0,NULL, 0,NULL }


/*
 * Sequence key and value of an id generation counter
 */
struct  Cosmwasm__Wasm__V1__Sequence
{
  ProtobufCMessage base;
  ProtobufCBinaryData id_key;
  uint64_t value;
};
#define COSMWASM__WASM__V1__SEQUENCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmwasm__wasm__v1__sequence__descriptor) \
, {0,NULL}, 0 }


/* Cosmwasm__Wasm__V1__GenesisState methods */
void   cosmwasm__wasm__v1__genesis_state__init
                     (Cosmwasm__Wasm__V1__GenesisState         *message);
size_t cosmwasm__wasm__v1__genesis_state__get_packed_size
                     (const Cosmwasm__Wasm__V1__GenesisState   *message);
size_t cosmwasm__wasm__v1__genesis_state__pack
                     (const Cosmwasm__Wasm__V1__GenesisState   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__genesis_state__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__GenesisState   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__GenesisState *
       cosmwasm__wasm__v1__genesis_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__genesis_state__free_unpacked
                     (Cosmwasm__Wasm__V1__GenesisState *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__Code methods */
void   cosmwasm__wasm__v1__code__init
                     (Cosmwasm__Wasm__V1__Code         *message);
size_t cosmwasm__wasm__v1__code__get_packed_size
                     (const Cosmwasm__Wasm__V1__Code   *message);
size_t cosmwasm__wasm__v1__code__pack
                     (const Cosmwasm__Wasm__V1__Code   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__code__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__Code   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__Code *
       cosmwasm__wasm__v1__code__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__code__free_unpacked
                     (Cosmwasm__Wasm__V1__Code *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__Contract methods */
void   cosmwasm__wasm__v1__contract__init
                     (Cosmwasm__Wasm__V1__Contract         *message);
size_t cosmwasm__wasm__v1__contract__get_packed_size
                     (const Cosmwasm__Wasm__V1__Contract   *message);
size_t cosmwasm__wasm__v1__contract__pack
                     (const Cosmwasm__Wasm__V1__Contract   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__contract__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__Contract   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__Contract *
       cosmwasm__wasm__v1__contract__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__contract__free_unpacked
                     (Cosmwasm__Wasm__V1__Contract *message,
                      ProtobufCAllocator *allocator);
/* Cosmwasm__Wasm__V1__Sequence methods */
void   cosmwasm__wasm__v1__sequence__init
                     (Cosmwasm__Wasm__V1__Sequence         *message);
size_t cosmwasm__wasm__v1__sequence__get_packed_size
                     (const Cosmwasm__Wasm__V1__Sequence   *message);
size_t cosmwasm__wasm__v1__sequence__pack
                     (const Cosmwasm__Wasm__V1__Sequence   *message,
                      uint8_t             *out);
size_t cosmwasm__wasm__v1__sequence__pack_to_buffer
                     (const Cosmwasm__Wasm__V1__Sequence   *message,
                      ProtobufCBuffer     *buffer);
Cosmwasm__Wasm__V1__Sequence *
       cosmwasm__wasm__v1__sequence__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmwasm__wasm__v1__sequence__free_unpacked
                     (Cosmwasm__Wasm__V1__Sequence *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmwasm__Wasm__V1__GenesisState_Closure)
                 (const Cosmwasm__Wasm__V1__GenesisState *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__Code_Closure)
                 (const Cosmwasm__Wasm__V1__Code *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__Contract_Closure)
                 (const Cosmwasm__Wasm__V1__Contract *message,
                  void *closure_data);
typedef void (*Cosmwasm__Wasm__V1__Sequence_Closure)
                 (const Cosmwasm__Wasm__V1__Sequence *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__genesis_state__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__code__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__contract__descriptor;
extern const ProtobufCMessageDescriptor cosmwasm__wasm__v1__sequence__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto__INCLUDED */
