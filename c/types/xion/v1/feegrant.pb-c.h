/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: xion/v1/feegrant.proto */

#ifndef PROTOBUF_C_xion_2fv1_2ffeegrant_2eproto__INCLUDED
#define PROTOBUF_C_xion_2fv1_2ffeegrant_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "amino/amino.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "google/protobuf/duration.pb-c.h"

typedef struct Xion__V1__AuthzAllowance Xion__V1__AuthzAllowance;
typedef struct Xion__V1__ContractsAllowance Xion__V1__ContractsAllowance;
typedef struct Xion__V1__MultiAnyAllowance Xion__V1__MultiAnyAllowance;


/* --- enums --- */


/* --- messages --- */

/*
 * AuthzAllowance creates allowance only authz message for a specific grantee
 */
struct  Xion__V1__AuthzAllowance
{
  ProtobufCMessage base;
  /*
   * allowance can be any of basic and periodic fee allowance.
   */
  Google__Protobuf__Any *allowance;
  char *authz_grantee;
};
#define XION__V1__AUTHZ_ALLOWANCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xion__v1__authz_allowance__descriptor) \
, NULL, (char *)protobuf_c_empty_string }


/*
 * ContractsAllowance creates allowance only for specific contracts
 */
struct  Xion__V1__ContractsAllowance
{
  ProtobufCMessage base;
  /*
   * allowance can be any allowance interface type.
   */
  Google__Protobuf__Any *allowance;
  size_t n_contract_addresses;
  char **contract_addresses;
};
#define XION__V1__CONTRACTS_ALLOWANCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xion__v1__contracts_allowance__descriptor) \
, NULL, 0,NULL }


/*
 * MultiAnyAllowance creates an allowance that pays if any of the internal
 * allowances are met
 */
struct  Xion__V1__MultiAnyAllowance
{
  ProtobufCMessage base;
  /*
   * allowance can be any allowance interface type.
   */
  size_t n_allowances;
  Google__Protobuf__Any **allowances;
};
#define XION__V1__MULTI_ANY_ALLOWANCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xion__v1__multi_any_allowance__descriptor) \
, 0,NULL }


/* Xion__V1__AuthzAllowance methods */
void   xion__v1__authz_allowance__init
                     (Xion__V1__AuthzAllowance         *message);
size_t xion__v1__authz_allowance__get_packed_size
                     (const Xion__V1__AuthzAllowance   *message);
size_t xion__v1__authz_allowance__pack
                     (const Xion__V1__AuthzAllowance   *message,
                      uint8_t             *out);
size_t xion__v1__authz_allowance__pack_to_buffer
                     (const Xion__V1__AuthzAllowance   *message,
                      ProtobufCBuffer     *buffer);
Xion__V1__AuthzAllowance *
       xion__v1__authz_allowance__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xion__v1__authz_allowance__free_unpacked
                     (Xion__V1__AuthzAllowance *message,
                      ProtobufCAllocator *allocator);
/* Xion__V1__ContractsAllowance methods */
void   xion__v1__contracts_allowance__init
                     (Xion__V1__ContractsAllowance         *message);
size_t xion__v1__contracts_allowance__get_packed_size
                     (const Xion__V1__ContractsAllowance   *message);
size_t xion__v1__contracts_allowance__pack
                     (const Xion__V1__ContractsAllowance   *message,
                      uint8_t             *out);
size_t xion__v1__contracts_allowance__pack_to_buffer
                     (const Xion__V1__ContractsAllowance   *message,
                      ProtobufCBuffer     *buffer);
Xion__V1__ContractsAllowance *
       xion__v1__contracts_allowance__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xion__v1__contracts_allowance__free_unpacked
                     (Xion__V1__ContractsAllowance *message,
                      ProtobufCAllocator *allocator);
/* Xion__V1__MultiAnyAllowance methods */
void   xion__v1__multi_any_allowance__init
                     (Xion__V1__MultiAnyAllowance         *message);
size_t xion__v1__multi_any_allowance__get_packed_size
                     (const Xion__V1__MultiAnyAllowance   *message);
size_t xion__v1__multi_any_allowance__pack
                     (const Xion__V1__MultiAnyAllowance   *message,
                      uint8_t             *out);
size_t xion__v1__multi_any_allowance__pack_to_buffer
                     (const Xion__V1__MultiAnyAllowance   *message,
                      ProtobufCBuffer     *buffer);
Xion__V1__MultiAnyAllowance *
       xion__v1__multi_any_allowance__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xion__v1__multi_any_allowance__free_unpacked
                     (Xion__V1__MultiAnyAllowance *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Xion__V1__AuthzAllowance_Closure)
                 (const Xion__V1__AuthzAllowance *message,
                  void *closure_data);
typedef void (*Xion__V1__ContractsAllowance_Closure)
                 (const Xion__V1__ContractsAllowance *message,
                  void *closure_data);
typedef void (*Xion__V1__MultiAnyAllowance_Closure)
                 (const Xion__V1__MultiAnyAllowance *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor xion__v1__authz_allowance__descriptor;
extern const ProtobufCMessageDescriptor xion__v1__contracts_allowance__descriptor;
extern const ProtobufCMessageDescriptor xion__v1__multi_any_allowance__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_xion_2fv1_2ffeegrant_2eproto__INCLUDED */
