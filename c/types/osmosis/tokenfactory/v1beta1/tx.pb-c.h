/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: osmosis/tokenfactory/v1beta1/tx.proto */

#ifndef PROTOBUF_C_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "cosmos/bank/v1beta1/bank.pb-c.h"
#include "osmosis/tokenfactory/v1beta1/params.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Osmosis__Tokenfactory__V1beta1__MsgCreateDenom Osmosis__Tokenfactory__V1beta1__MsgCreateDenom;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgMint Osmosis__Tokenfactory__V1beta1__MsgMint;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgMintResponse Osmosis__Tokenfactory__V1beta1__MsgMintResponse;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgBurn Osmosis__Tokenfactory__V1beta1__MsgBurn;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgBurnResponse Osmosis__Tokenfactory__V1beta1__MsgBurnResponse;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgForceTransfer Osmosis__Tokenfactory__V1beta1__MsgForceTransfer;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgUpdateParams Osmosis__Tokenfactory__V1beta1__MsgUpdateParams;
typedef struct Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgCreateDenom defines the message structure for the CreateDenom gRPC service
 * method. It allows an account to create a new denom. It requires a sender
 * address and a sub denomination. The (sender_address, sub_denomination) tuple
 * must be unique and cannot be re-used.
 * The resulting denom created is defined as
 * <factory/{creatorAddress}/{subdenom}>. The resulting denom's admin is
 * originally set to be the creator, but this can be changed later. The token
 * denom does not indicate the current admin.
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgCreateDenom
{
  ProtobufCMessage base;
  char *sender;
  /*
   * subdenom can be up to 44 "alphanumeric" characters long.
   */
  char *subdenom;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_CREATE_DENOM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_create_denom__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * MsgCreateDenomResponse is the return value of MsgCreateDenom
 * It returns the full string of the newly created denom
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse
{
  ProtobufCMessage base;
  char *new_token_denom;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_CREATE_DENOM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_create_denom_response__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * MsgMint is the sdk.Msg type for allowing an admin account to mint
 * more of a token.  For now, we only support minting to the sender account
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgMint
{
  ProtobufCMessage base;
  char *sender;
  Cosmos__Base__V1beta1__Coin *amount;
  char *minttoaddress;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_MINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_mint__descriptor) \
, (char *)protobuf_c_empty_string, NULL, (char *)protobuf_c_empty_string }


struct  Osmosis__Tokenfactory__V1beta1__MsgMintResponse
{
  ProtobufCMessage base;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_MINT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_mint_response__descriptor) \
 }


/*
 * MsgBurn is the sdk.Msg type for allowing an admin account to burn
 * a token.  For now, we only support burning from the sender account.
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgBurn
{
  ProtobufCMessage base;
  char *sender;
  Cosmos__Base__V1beta1__Coin *amount;
  char *burnfromaddress;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_BURN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_burn__descriptor) \
, (char *)protobuf_c_empty_string, NULL, (char *)protobuf_c_empty_string }


struct  Osmosis__Tokenfactory__V1beta1__MsgBurnResponse
{
  ProtobufCMessage base;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_BURN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_burn_response__descriptor) \
 }


/*
 * MsgChangeAdmin is the sdk.Msg type for allowing an admin account to reassign
 * adminship of a denom to a new account
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin
{
  ProtobufCMessage base;
  char *sender;
  char *denom;
  char *new_admin;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_CHANGE_ADMIN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_change_admin__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * MsgChangeAdminResponse defines the response structure for an executed
 * MsgChangeAdmin message.
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse
{
  ProtobufCMessage base;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_CHANGE_ADMIN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_change_admin_response__descriptor) \
 }


/*
 * MsgSetDenomMetadata is the sdk.Msg type for allowing an admin account to set
 * the denom's bank metadata
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata
{
  ProtobufCMessage base;
  char *sender;
  Cosmos__Bank__V1beta1__Metadata *metadata;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_SET_DENOM_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * MsgSetDenomMetadataResponse defines the response structure for an executed
 * MsgSetDenomMetadata message.
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse
{
  ProtobufCMessage base;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_SET_DENOM_METADATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__descriptor) \
 }


struct  Osmosis__Tokenfactory__V1beta1__MsgForceTransfer
{
  ProtobufCMessage base;
  char *sender;
  Cosmos__Base__V1beta1__Coin *amount;
  char *transferfromaddress;
  char *transfertoaddress;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_FORCE_TRANSFER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_force_transfer__descriptor) \
, (char *)protobuf_c_empty_string, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse
{
  ProtobufCMessage base;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_FORCE_TRANSFER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_force_transfer_response__descriptor) \
 }


/*
 * MsgUpdateParams is the Msg/UpdateParams request type.
 * Since: cosmos-sdk 0.47
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgUpdateParams
{
  ProtobufCMessage base;
  /*
   * authority is the address of the governance account.
   */
  char *authority;
  /*
   * params defines the x/mint parameters to update.
   * NOTE: All parameters must be supplied.
   */
  Osmosis__Tokenfactory__V1beta1__Params *params;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_UPDATE_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_update_params__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 * Since: cosmos-sdk 0.47
 */
struct  Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse
{
  ProtobufCMessage base;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG_UPDATE_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__msg_update_params_response__descriptor) \
 }


/* Osmosis__Tokenfactory__V1beta1__MsgCreateDenom methods */
void   osmosis__tokenfactory__v1beta1__msg_create_denom__init
                     (Osmosis__Tokenfactory__V1beta1__MsgCreateDenom         *message);
size_t osmosis__tokenfactory__v1beta1__msg_create_denom__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenom   *message);
size_t osmosis__tokenfactory__v1beta1__msg_create_denom__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenom   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_create_denom__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenom   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgCreateDenom *
       osmosis__tokenfactory__v1beta1__msg_create_denom__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_create_denom__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgCreateDenom *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_create_denom_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_create_denom_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_create_denom_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_create_denom_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse *
       osmosis__tokenfactory__v1beta1__msg_create_denom_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_create_denom_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgMint methods */
void   osmosis__tokenfactory__v1beta1__msg_mint__init
                     (Osmosis__Tokenfactory__V1beta1__MsgMint         *message);
size_t osmosis__tokenfactory__v1beta1__msg_mint__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgMint   *message);
size_t osmosis__tokenfactory__v1beta1__msg_mint__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgMint   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_mint__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgMint   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgMint *
       osmosis__tokenfactory__v1beta1__msg_mint__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_mint__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgMint *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgMintResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_mint_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgMintResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_mint_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgMintResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_mint_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgMintResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_mint_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgMintResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgMintResponse *
       osmosis__tokenfactory__v1beta1__msg_mint_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_mint_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgMintResponse *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgBurn methods */
void   osmosis__tokenfactory__v1beta1__msg_burn__init
                     (Osmosis__Tokenfactory__V1beta1__MsgBurn         *message);
size_t osmosis__tokenfactory__v1beta1__msg_burn__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgBurn   *message);
size_t osmosis__tokenfactory__v1beta1__msg_burn__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgBurn   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_burn__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgBurn   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgBurn *
       osmosis__tokenfactory__v1beta1__msg_burn__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_burn__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgBurn *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgBurnResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_burn_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgBurnResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_burn_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgBurnResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_burn_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgBurnResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_burn_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgBurnResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgBurnResponse *
       osmosis__tokenfactory__v1beta1__msg_burn_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_burn_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgBurnResponse *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin methods */
void   osmosis__tokenfactory__v1beta1__msg_change_admin__init
                     (Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin         *message);
size_t osmosis__tokenfactory__v1beta1__msg_change_admin__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin   *message);
size_t osmosis__tokenfactory__v1beta1__msg_change_admin__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_change_admin__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin *
       osmosis__tokenfactory__v1beta1__msg_change_admin__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_change_admin__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_change_admin_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_change_admin_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_change_admin_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_change_admin_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse *
       osmosis__tokenfactory__v1beta1__msg_change_admin_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_change_admin_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata methods */
void   osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__init
                     (Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata         *message);
size_t osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata   *message);
size_t osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata *
       osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse *
       osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgForceTransfer methods */
void   osmosis__tokenfactory__v1beta1__msg_force_transfer__init
                     (Osmosis__Tokenfactory__V1beta1__MsgForceTransfer         *message);
size_t osmosis__tokenfactory__v1beta1__msg_force_transfer__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgForceTransfer   *message);
size_t osmosis__tokenfactory__v1beta1__msg_force_transfer__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgForceTransfer   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_force_transfer__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgForceTransfer   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgForceTransfer *
       osmosis__tokenfactory__v1beta1__msg_force_transfer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_force_transfer__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgForceTransfer *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_force_transfer_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_force_transfer_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_force_transfer_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_force_transfer_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse *
       osmosis__tokenfactory__v1beta1__msg_force_transfer_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_force_transfer_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgUpdateParams methods */
void   osmosis__tokenfactory__v1beta1__msg_update_params__init
                     (Osmosis__Tokenfactory__V1beta1__MsgUpdateParams         *message);
size_t osmosis__tokenfactory__v1beta1__msg_update_params__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParams   *message);
size_t osmosis__tokenfactory__v1beta1__msg_update_params__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParams   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_update_params__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParams   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgUpdateParams *
       osmosis__tokenfactory__v1beta1__msg_update_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_update_params__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgUpdateParams *message,
                      ProtobufCAllocator *allocator);
/* Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse methods */
void   osmosis__tokenfactory__v1beta1__msg_update_params_response__init
                     (Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse         *message);
size_t osmosis__tokenfactory__v1beta1__msg_update_params_response__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse   *message);
size_t osmosis__tokenfactory__v1beta1__msg_update_params_response__pack
                     (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__msg_update_params_response__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse *
       osmosis__tokenfactory__v1beta1__msg_update_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__msg_update_params_response__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Osmosis__Tokenfactory__V1beta1__MsgCreateDenom_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenom *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgMint_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgMint *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgMintResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgMintResponse *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgBurn_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgBurn *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgBurnResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgBurnResponse *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgForceTransfer_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgForceTransfer *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgUpdateParams_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParams *message,
                  void *closure_data);
typedef void (*Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Osmosis__Tokenfactory__V1beta1__Msg_Service Osmosis__Tokenfactory__V1beta1__Msg_Service;
struct Osmosis__Tokenfactory__V1beta1__Msg_Service
{
  ProtobufCService base;
  void (*create_denom)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
                       const Osmosis__Tokenfactory__V1beta1__MsgCreateDenom *input,
                       Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse_Closure closure,
                       void *closure_data);
  void (*mint)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
               const Osmosis__Tokenfactory__V1beta1__MsgMint *input,
               Osmosis__Tokenfactory__V1beta1__MsgMintResponse_Closure closure,
               void *closure_data);
  void (*burn)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
               const Osmosis__Tokenfactory__V1beta1__MsgBurn *input,
               Osmosis__Tokenfactory__V1beta1__MsgBurnResponse_Closure closure,
               void *closure_data);
  void (*change_admin)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
                       const Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin *input,
                       Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse_Closure closure,
                       void *closure_data);
  void (*set_denom_metadata)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
                             const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata *input,
                             Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse_Closure closure,
                             void *closure_data);
  void (*force_transfer)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
                         const Osmosis__Tokenfactory__V1beta1__MsgForceTransfer *input,
                         Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse_Closure closure,
                         void *closure_data);
  void (*update_params)(Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
                        const Osmosis__Tokenfactory__V1beta1__MsgUpdateParams *input,
                        Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse_Closure closure,
                        void *closure_data);
};
typedef void (*Osmosis__Tokenfactory__V1beta1__Msg_ServiceDestroy)(Osmosis__Tokenfactory__V1beta1__Msg_Service *);
void osmosis__tokenfactory__v1beta1__msg__init (Osmosis__Tokenfactory__V1beta1__Msg_Service *service,
                                                Osmosis__Tokenfactory__V1beta1__Msg_ServiceDestroy destroy);
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG__BASE_INIT \
    { &osmosis__tokenfactory__v1beta1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define OSMOSIS__TOKENFACTORY__V1BETA1__MSG__INIT(function_prefix__) \
    { OSMOSIS__TOKENFACTORY__V1BETA1__MSG__BASE_INIT,\
      function_prefix__ ## create_denom,\
      function_prefix__ ## mint,\
      function_prefix__ ## burn,\
      function_prefix__ ## change_admin,\
      function_prefix__ ## set_denom_metadata,\
      function_prefix__ ## force_transfer,\
      function_prefix__ ## update_params  }
void osmosis__tokenfactory__v1beta1__msg__create_denom(ProtobufCService *service,
                                                       const Osmosis__Tokenfactory__V1beta1__MsgCreateDenom *input,
                                                       Osmosis__Tokenfactory__V1beta1__MsgCreateDenomResponse_Closure closure,
                                                       void *closure_data);
void osmosis__tokenfactory__v1beta1__msg__mint(ProtobufCService *service,
                                               const Osmosis__Tokenfactory__V1beta1__MsgMint *input,
                                               Osmosis__Tokenfactory__V1beta1__MsgMintResponse_Closure closure,
                                               void *closure_data);
void osmosis__tokenfactory__v1beta1__msg__burn(ProtobufCService *service,
                                               const Osmosis__Tokenfactory__V1beta1__MsgBurn *input,
                                               Osmosis__Tokenfactory__V1beta1__MsgBurnResponse_Closure closure,
                                               void *closure_data);
void osmosis__tokenfactory__v1beta1__msg__change_admin(ProtobufCService *service,
                                                       const Osmosis__Tokenfactory__V1beta1__MsgChangeAdmin *input,
                                                       Osmosis__Tokenfactory__V1beta1__MsgChangeAdminResponse_Closure closure,
                                                       void *closure_data);
void osmosis__tokenfactory__v1beta1__msg__set_denom_metadata(ProtobufCService *service,
                                                             const Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadata *input,
                                                             Osmosis__Tokenfactory__V1beta1__MsgSetDenomMetadataResponse_Closure closure,
                                                             void *closure_data);
void osmosis__tokenfactory__v1beta1__msg__force_transfer(ProtobufCService *service,
                                                         const Osmosis__Tokenfactory__V1beta1__MsgForceTransfer *input,
                                                         Osmosis__Tokenfactory__V1beta1__MsgForceTransferResponse_Closure closure,
                                                         void *closure_data);
void osmosis__tokenfactory__v1beta1__msg__update_params(ProtobufCService *service,
                                                        const Osmosis__Tokenfactory__V1beta1__MsgUpdateParams *input,
                                                        Osmosis__Tokenfactory__V1beta1__MsgUpdateParamsResponse_Closure closure,
                                                        void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_create_denom__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_create_denom_response__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_mint__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_mint_response__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_burn__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_burn_response__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_change_admin__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_change_admin_response__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_set_denom_metadata__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_set_denom_metadata_response__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_force_transfer__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_force_transfer_response__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_update_params__descriptor;
extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__msg_update_params_response__descriptor;
extern const ProtobufCServiceDescriptor osmosis__tokenfactory__v1beta1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto__INCLUDED */
