/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: osmosis/tokenfactory/v1beta1/authorityMetadata.proto */

#ifndef PROTOBUF_C_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto__INCLUDED
#define PROTOBUF_C_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"

typedef struct Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata;


/* --- enums --- */


/* --- messages --- */

/*
 * DenomAuthorityMetadata specifies metadata for addresses that have specific
 * capabilities over a token factory denom. Right now there is only one Admin
 * permission, but is planned to be extended to the future.
 */
struct  Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata
{
  ProtobufCMessage base;
  /*
   * Can be empty for no admin, or a valid osmosis address
   */
  char *admin;
};
#define OSMOSIS__TOKENFACTORY__V1BETA1__DENOM_AUTHORITY_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&osmosis__tokenfactory__v1beta1__denom_authority_metadata__descriptor) \
, (char *)protobuf_c_empty_string }


/* Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata methods */
void   osmosis__tokenfactory__v1beta1__denom_authority_metadata__init
                     (Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata         *message);
size_t osmosis__tokenfactory__v1beta1__denom_authority_metadata__get_packed_size
                     (const Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata   *message);
size_t osmosis__tokenfactory__v1beta1__denom_authority_metadata__pack
                     (const Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata   *message,
                      uint8_t             *out);
size_t osmosis__tokenfactory__v1beta1__denom_authority_metadata__pack_to_buffer
                     (const Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata   *message,
                      ProtobufCBuffer     *buffer);
Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata *
       osmosis__tokenfactory__v1beta1__denom_authority_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   osmosis__tokenfactory__v1beta1__denom_authority_metadata__free_unpacked
                     (Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata_Closure)
                 (const Osmosis__Tokenfactory__V1beta1__DenomAuthorityMetadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor osmosis__tokenfactory__v1beta1__denom_authority_metadata__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto__INCLUDED */
