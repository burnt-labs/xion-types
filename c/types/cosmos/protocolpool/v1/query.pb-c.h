/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/protocolpool/v1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fprotocolpool_2fv1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fprotocolpool_2fv1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/protocolpool/v1/types.pb-c.h"

typedef struct Cosmos__Protocolpool__V1__QueryCommunityPoolRequest Cosmos__Protocolpool__V1__QueryCommunityPoolRequest;
typedef struct Cosmos__Protocolpool__V1__QueryCommunityPoolResponse Cosmos__Protocolpool__V1__QueryCommunityPoolResponse;
typedef struct Cosmos__Protocolpool__V1__QueryContinuousFundRequest Cosmos__Protocolpool__V1__QueryContinuousFundRequest;
typedef struct Cosmos__Protocolpool__V1__QueryContinuousFundResponse Cosmos__Protocolpool__V1__QueryContinuousFundResponse;
typedef struct Cosmos__Protocolpool__V1__QueryContinuousFundsRequest Cosmos__Protocolpool__V1__QueryContinuousFundsRequest;
typedef struct Cosmos__Protocolpool__V1__QueryContinuousFundsResponse Cosmos__Protocolpool__V1__QueryContinuousFundsResponse;
typedef struct Cosmos__Protocolpool__V1__QueryParamsRequest Cosmos__Protocolpool__V1__QueryParamsRequest;
typedef struct Cosmos__Protocolpool__V1__QueryParamsResponse Cosmos__Protocolpool__V1__QueryParamsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC
 * method.
 */
struct  Cosmos__Protocolpool__V1__QueryCommunityPoolRequest
{
  ProtobufCMessage base;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_COMMUNITY_POOL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_community_pool_request__descriptor) \
 }


/*
 * QueryCommunityPoolResponse is the response type for the Query/CommunityPool
 * RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryCommunityPoolResponse
{
  ProtobufCMessage base;
  /*
   * pool defines community pool's coins.
   */
  size_t n_pool;
  Cosmos__Base__V1beta1__Coin **pool;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_COMMUNITY_POOL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_community_pool_response__descriptor) \
, 0,NULL }


/*
 * QueryContinuousFundRequest is the request type for the Query/ContinuousFund
 * RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryContinuousFundRequest
{
  ProtobufCMessage base;
  /*
   * recipient is the recipient address to query unclaimed budget amount for.
   */
  char *recipient;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_CONTINUOUS_FUND_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_continuous_fund_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryUnclaimedBudgetResponse is the response type for the Query/ContinuousFund
 * RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryContinuousFundResponse
{
  ProtobufCMessage base;
  /*
   * ContinuousFunds is the given continuous fund returned in the query.
   */
  Cosmos__Protocolpool__V1__ContinuousFund *continuous_fund;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_CONTINUOUS_FUND_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_continuous_fund_response__descriptor) \
, NULL }


/*
 * QueryContinuousFundRequest is the request type for the Query/ContinuousFunds
 * RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryContinuousFundsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_CONTINUOUS_FUNDS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_continuous_funds_request__descriptor) \
 }


/*
 * QueryUnclaimedBudgetResponse is the response type for the Query/ContinuousFunds
 * RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryContinuousFundsResponse
{
  ProtobufCMessage base;
  /*
   * ContinuousFunds defines all continuous funds in state.
   */
  size_t n_continuous_funds;
  Cosmos__Protocolpool__V1__ContinuousFund **continuous_funds;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_CONTINUOUS_FUNDS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_continuous_funds_response__descriptor) \
, 0,NULL }


/*
 * QueryParamsRequest is the response type for the Query/Params RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryParamsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_PARAMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_params_request__descriptor) \
 }


/*
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 */
struct  Cosmos__Protocolpool__V1__QueryParamsResponse
{
  ProtobufCMessage base;
  Cosmos__Protocolpool__V1__Params *params;
};
#define COSMOS__PROTOCOLPOOL__V1__QUERY_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__protocolpool__v1__query_params_response__descriptor) \
, NULL }


/* Cosmos__Protocolpool__V1__QueryCommunityPoolRequest methods */
void   cosmos__protocolpool__v1__query_community_pool_request__init
                     (Cosmos__Protocolpool__V1__QueryCommunityPoolRequest         *message);
size_t cosmos__protocolpool__v1__query_community_pool_request__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryCommunityPoolRequest   *message);
size_t cosmos__protocolpool__v1__query_community_pool_request__pack
                     (const Cosmos__Protocolpool__V1__QueryCommunityPoolRequest   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_community_pool_request__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryCommunityPoolRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryCommunityPoolRequest *
       cosmos__protocolpool__v1__query_community_pool_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_community_pool_request__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryCommunityPoolRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryCommunityPoolResponse methods */
void   cosmos__protocolpool__v1__query_community_pool_response__init
                     (Cosmos__Protocolpool__V1__QueryCommunityPoolResponse         *message);
size_t cosmos__protocolpool__v1__query_community_pool_response__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryCommunityPoolResponse   *message);
size_t cosmos__protocolpool__v1__query_community_pool_response__pack
                     (const Cosmos__Protocolpool__V1__QueryCommunityPoolResponse   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_community_pool_response__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryCommunityPoolResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryCommunityPoolResponse *
       cosmos__protocolpool__v1__query_community_pool_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_community_pool_response__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryCommunityPoolResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryContinuousFundRequest methods */
void   cosmos__protocolpool__v1__query_continuous_fund_request__init
                     (Cosmos__Protocolpool__V1__QueryContinuousFundRequest         *message);
size_t cosmos__protocolpool__v1__query_continuous_fund_request__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundRequest   *message);
size_t cosmos__protocolpool__v1__query_continuous_fund_request__pack
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundRequest   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_continuous_fund_request__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryContinuousFundRequest *
       cosmos__protocolpool__v1__query_continuous_fund_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_continuous_fund_request__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryContinuousFundRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryContinuousFundResponse methods */
void   cosmos__protocolpool__v1__query_continuous_fund_response__init
                     (Cosmos__Protocolpool__V1__QueryContinuousFundResponse         *message);
size_t cosmos__protocolpool__v1__query_continuous_fund_response__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundResponse   *message);
size_t cosmos__protocolpool__v1__query_continuous_fund_response__pack
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundResponse   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_continuous_fund_response__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryContinuousFundResponse *
       cosmos__protocolpool__v1__query_continuous_fund_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_continuous_fund_response__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryContinuousFundResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryContinuousFundsRequest methods */
void   cosmos__protocolpool__v1__query_continuous_funds_request__init
                     (Cosmos__Protocolpool__V1__QueryContinuousFundsRequest         *message);
size_t cosmos__protocolpool__v1__query_continuous_funds_request__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundsRequest   *message);
size_t cosmos__protocolpool__v1__query_continuous_funds_request__pack
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundsRequest   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_continuous_funds_request__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryContinuousFundsRequest *
       cosmos__protocolpool__v1__query_continuous_funds_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_continuous_funds_request__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryContinuousFundsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryContinuousFundsResponse methods */
void   cosmos__protocolpool__v1__query_continuous_funds_response__init
                     (Cosmos__Protocolpool__V1__QueryContinuousFundsResponse         *message);
size_t cosmos__protocolpool__v1__query_continuous_funds_response__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundsResponse   *message);
size_t cosmos__protocolpool__v1__query_continuous_funds_response__pack
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundsResponse   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_continuous_funds_response__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryContinuousFundsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryContinuousFundsResponse *
       cosmos__protocolpool__v1__query_continuous_funds_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_continuous_funds_response__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryContinuousFundsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryParamsRequest methods */
void   cosmos__protocolpool__v1__query_params_request__init
                     (Cosmos__Protocolpool__V1__QueryParamsRequest         *message);
size_t cosmos__protocolpool__v1__query_params_request__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryParamsRequest   *message);
size_t cosmos__protocolpool__v1__query_params_request__pack
                     (const Cosmos__Protocolpool__V1__QueryParamsRequest   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_params_request__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryParamsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryParamsRequest *
       cosmos__protocolpool__v1__query_params_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_params_request__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryParamsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Protocolpool__V1__QueryParamsResponse methods */
void   cosmos__protocolpool__v1__query_params_response__init
                     (Cosmos__Protocolpool__V1__QueryParamsResponse         *message);
size_t cosmos__protocolpool__v1__query_params_response__get_packed_size
                     (const Cosmos__Protocolpool__V1__QueryParamsResponse   *message);
size_t cosmos__protocolpool__v1__query_params_response__pack
                     (const Cosmos__Protocolpool__V1__QueryParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__protocolpool__v1__query_params_response__pack_to_buffer
                     (const Cosmos__Protocolpool__V1__QueryParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Protocolpool__V1__QueryParamsResponse *
       cosmos__protocolpool__v1__query_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__protocolpool__v1__query_params_response__free_unpacked
                     (Cosmos__Protocolpool__V1__QueryParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Protocolpool__V1__QueryCommunityPoolRequest_Closure)
                 (const Cosmos__Protocolpool__V1__QueryCommunityPoolRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryCommunityPoolResponse_Closure)
                 (const Cosmos__Protocolpool__V1__QueryCommunityPoolResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryContinuousFundRequest_Closure)
                 (const Cosmos__Protocolpool__V1__QueryContinuousFundRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryContinuousFundResponse_Closure)
                 (const Cosmos__Protocolpool__V1__QueryContinuousFundResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryContinuousFundsRequest_Closure)
                 (const Cosmos__Protocolpool__V1__QueryContinuousFundsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryContinuousFundsResponse_Closure)
                 (const Cosmos__Protocolpool__V1__QueryContinuousFundsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryParamsRequest_Closure)
                 (const Cosmos__Protocolpool__V1__QueryParamsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Protocolpool__V1__QueryParamsResponse_Closure)
                 (const Cosmos__Protocolpool__V1__QueryParamsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Protocolpool__V1__Query_Service Cosmos__Protocolpool__V1__Query_Service;
struct Cosmos__Protocolpool__V1__Query_Service
{
  ProtobufCService base;
  void (*community_pool)(Cosmos__Protocolpool__V1__Query_Service *service,
                         const Cosmos__Protocolpool__V1__QueryCommunityPoolRequest *input,
                         Cosmos__Protocolpool__V1__QueryCommunityPoolResponse_Closure closure,
                         void *closure_data);
  void (*continuous_fund)(Cosmos__Protocolpool__V1__Query_Service *service,
                          const Cosmos__Protocolpool__V1__QueryContinuousFundRequest *input,
                          Cosmos__Protocolpool__V1__QueryContinuousFundResponse_Closure closure,
                          void *closure_data);
  void (*continuous_funds)(Cosmos__Protocolpool__V1__Query_Service *service,
                           const Cosmos__Protocolpool__V1__QueryContinuousFundsRequest *input,
                           Cosmos__Protocolpool__V1__QueryContinuousFundsResponse_Closure closure,
                           void *closure_data);
  void (*params)(Cosmos__Protocolpool__V1__Query_Service *service,
                 const Cosmos__Protocolpool__V1__QueryParamsRequest *input,
                 Cosmos__Protocolpool__V1__QueryParamsResponse_Closure closure,
                 void *closure_data);
};
typedef void (*Cosmos__Protocolpool__V1__Query_ServiceDestroy)(Cosmos__Protocolpool__V1__Query_Service *);
void cosmos__protocolpool__v1__query__init (Cosmos__Protocolpool__V1__Query_Service *service,
                                            Cosmos__Protocolpool__V1__Query_ServiceDestroy destroy);
#define COSMOS__PROTOCOLPOOL__V1__QUERY__BASE_INIT \
    { &cosmos__protocolpool__v1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__PROTOCOLPOOL__V1__QUERY__INIT(function_prefix__) \
    { COSMOS__PROTOCOLPOOL__V1__QUERY__BASE_INIT,\
      function_prefix__ ## community_pool,\
      function_prefix__ ## continuous_fund,\
      function_prefix__ ## continuous_funds,\
      function_prefix__ ## params  }
void cosmos__protocolpool__v1__query__community_pool(ProtobufCService *service,
                                                     const Cosmos__Protocolpool__V1__QueryCommunityPoolRequest *input,
                                                     Cosmos__Protocolpool__V1__QueryCommunityPoolResponse_Closure closure,
                                                     void *closure_data);
void cosmos__protocolpool__v1__query__continuous_fund(ProtobufCService *service,
                                                      const Cosmos__Protocolpool__V1__QueryContinuousFundRequest *input,
                                                      Cosmos__Protocolpool__V1__QueryContinuousFundResponse_Closure closure,
                                                      void *closure_data);
void cosmos__protocolpool__v1__query__continuous_funds(ProtobufCService *service,
                                                       const Cosmos__Protocolpool__V1__QueryContinuousFundsRequest *input,
                                                       Cosmos__Protocolpool__V1__QueryContinuousFundsResponse_Closure closure,
                                                       void *closure_data);
void cosmos__protocolpool__v1__query__params(ProtobufCService *service,
                                             const Cosmos__Protocolpool__V1__QueryParamsRequest *input,
                                             Cosmos__Protocolpool__V1__QueryParamsResponse_Closure closure,
                                             void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_community_pool_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_community_pool_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_continuous_fund_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_continuous_fund_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_continuous_funds_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_continuous_funds_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_params_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__protocolpool__v1__query_params_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__protocolpool__v1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fprotocolpool_2fv1_2fquery_2eproto__INCLUDED */
