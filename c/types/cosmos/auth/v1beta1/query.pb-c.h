/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/auth/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fauth_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fauth_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/auth/v1beta1/auth.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/query/v1/query.pb-c.h"

typedef struct Cosmos__Auth__V1beta1__QueryAccountsRequest Cosmos__Auth__V1beta1__QueryAccountsRequest;
typedef struct Cosmos__Auth__V1beta1__QueryAccountsResponse Cosmos__Auth__V1beta1__QueryAccountsResponse;
typedef struct Cosmos__Auth__V1beta1__QueryAccountRequest Cosmos__Auth__V1beta1__QueryAccountRequest;
typedef struct Cosmos__Auth__V1beta1__QueryAccountResponse Cosmos__Auth__V1beta1__QueryAccountResponse;
typedef struct Cosmos__Auth__V1beta1__QueryParamsRequest Cosmos__Auth__V1beta1__QueryParamsRequest;
typedef struct Cosmos__Auth__V1beta1__QueryParamsResponse Cosmos__Auth__V1beta1__QueryParamsResponse;
typedef struct Cosmos__Auth__V1beta1__QueryModuleAccountsRequest Cosmos__Auth__V1beta1__QueryModuleAccountsRequest;
typedef struct Cosmos__Auth__V1beta1__QueryModuleAccountsResponse Cosmos__Auth__V1beta1__QueryModuleAccountsResponse;
typedef struct Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest;
typedef struct Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse;
typedef struct Cosmos__Auth__V1beta1__Bech32PrefixRequest Cosmos__Auth__V1beta1__Bech32PrefixRequest;
typedef struct Cosmos__Auth__V1beta1__Bech32PrefixResponse Cosmos__Auth__V1beta1__Bech32PrefixResponse;
typedef struct Cosmos__Auth__V1beta1__AddressBytesToStringRequest Cosmos__Auth__V1beta1__AddressBytesToStringRequest;
typedef struct Cosmos__Auth__V1beta1__AddressBytesToStringResponse Cosmos__Auth__V1beta1__AddressBytesToStringResponse;
typedef struct Cosmos__Auth__V1beta1__AddressStringToBytesRequest Cosmos__Auth__V1beta1__AddressStringToBytesRequest;
typedef struct Cosmos__Auth__V1beta1__AddressStringToBytesResponse Cosmos__Auth__V1beta1__AddressStringToBytesResponse;
typedef struct Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest;
typedef struct Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse;
typedef struct Cosmos__Auth__V1beta1__QueryAccountInfoRequest Cosmos__Auth__V1beta1__QueryAccountInfoRequest;
typedef struct Cosmos__Auth__V1beta1__QueryAccountInfoResponse Cosmos__Auth__V1beta1__QueryAccountInfoResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryAccountsRequest is the request type for the Query/Accounts RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryAccountsRequest
{
  ProtobufCMessage base;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_accounts_request__descriptor) \
, NULL }


/*
 * QueryAccountsResponse is the response type for the Query/Accounts RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryAccountsResponse
{
  ProtobufCMessage base;
  /*
   * accounts are the existing accounts
   */
  size_t n_accounts;
  Google__Protobuf__Any **accounts;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_accounts_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryAccountRequest is the request type for the Query/Account RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryAccountRequest
{
  ProtobufCMessage base;
  /*
   * address defines the address to query for.
   */
  char *address;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_account_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryAccountResponse is the response type for the Query/Account RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryAccountResponse
{
  ProtobufCMessage base;
  /*
   * account defines the account of the corresponding address.
   */
  Google__Protobuf__Any *account;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_account_response__descriptor) \
, NULL }


/*
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryParamsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__AUTH__V1BETA1__QUERY_PARAMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_params_request__descriptor) \
 }


/*
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryParamsResponse
{
  ProtobufCMessage base;
  /*
   * params defines the parameters of the module.
   */
  Cosmos__Auth__V1beta1__Params *params;
};
#define COSMOS__AUTH__V1BETA1__QUERY_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_params_response__descriptor) \
, NULL }


/*
 * QueryModuleAccountsRequest is the request type for the Query/ModuleAccounts RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryModuleAccountsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__AUTH__V1BETA1__QUERY_MODULE_ACCOUNTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_module_accounts_request__descriptor) \
 }


/*
 * QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryModuleAccountsResponse
{
  ProtobufCMessage base;
  size_t n_accounts;
  Google__Protobuf__Any **accounts;
};
#define COSMOS__AUTH__V1BETA1__QUERY_MODULE_ACCOUNTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_module_accounts_response__descriptor) \
, 0,NULL }


/*
 * QueryModuleAccountByNameRequest is the request type for the Query/ModuleAccountByName RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest
{
  ProtobufCMessage base;
  char *name;
};
#define COSMOS__AUTH__V1BETA1__QUERY_MODULE_ACCOUNT_BY_NAME_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_module_account_by_name_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method.
 */
struct  Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse
{
  ProtobufCMessage base;
  Google__Protobuf__Any *account;
};
#define COSMOS__AUTH__V1BETA1__QUERY_MODULE_ACCOUNT_BY_NAME_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_module_account_by_name_response__descriptor) \
, NULL }


/*
 * Bech32PrefixRequest is the request type for Bech32Prefix rpc method.
 */
struct  Cosmos__Auth__V1beta1__Bech32PrefixRequest
{
  ProtobufCMessage base;
};
#define COSMOS__AUTH__V1BETA1__BECH32_PREFIX_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__bech32_prefix_request__descriptor) \
 }


/*
 * Bech32PrefixResponse is the response type for Bech32Prefix rpc method.
 */
struct  Cosmos__Auth__V1beta1__Bech32PrefixResponse
{
  ProtobufCMessage base;
  char *bech32_prefix;
};
#define COSMOS__AUTH__V1BETA1__BECH32_PREFIX_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__bech32_prefix_response__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * AddressBytesToStringRequest is the request type for AddressString rpc method.
 */
struct  Cosmos__Auth__V1beta1__AddressBytesToStringRequest
{
  ProtobufCMessage base;
  ProtobufCBinaryData address_bytes;
};
#define COSMOS__AUTH__V1BETA1__ADDRESS_BYTES_TO_STRING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__address_bytes_to_string_request__descriptor) \
, {0,NULL} }


/*
 * AddressBytesToStringResponse is the response type for AddressString rpc method.
 */
struct  Cosmos__Auth__V1beta1__AddressBytesToStringResponse
{
  ProtobufCMessage base;
  char *address_string;
};
#define COSMOS__AUTH__V1BETA1__ADDRESS_BYTES_TO_STRING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__address_bytes_to_string_response__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * AddressStringToBytesRequest is the request type for AccountBytes rpc method.
 */
struct  Cosmos__Auth__V1beta1__AddressStringToBytesRequest
{
  ProtobufCMessage base;
  char *address_string;
};
#define COSMOS__AUTH__V1BETA1__ADDRESS_STRING_TO_BYTES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__address_string_to_bytes_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * AddressStringToBytesResponse is the response type for AddressBytes rpc method.
 */
struct  Cosmos__Auth__V1beta1__AddressStringToBytesResponse
{
  ProtobufCMessage base;
  ProtobufCBinaryData address_bytes;
};
#define COSMOS__AUTH__V1BETA1__ADDRESS_STRING_TO_BYTES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__address_string_to_bytes_response__descriptor) \
, {0,NULL} }


/*
 * QueryAccountAddressByIDRequest is the request type for AccountAddressByID rpc method
 */
struct  Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest
{
  ProtobufCMessage base;
  /*
   * Deprecated, use account_id instead
   * id is the account number of the address to be queried. This field
   * should have been an uint64 (like all account numbers), and will be
   * updated to uint64 in a future version of the auth query.
   */
  int64_t id PROTOBUF_C__DEPRECATED;
  /*
   * account_id is the account number of the address to be queried.
   */
  uint64_t account_id;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNT_ADDRESS_BY_IDREQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_account_address_by_idrequest__descriptor) \
, 0, 0 }


/*
 * QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method
 */
struct  Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse
{
  ProtobufCMessage base;
  char *account_address;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNT_ADDRESS_BY_IDRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_account_address_by_idresponse__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryAccountInfoRequest is the Query/AccountInfo request type.
 */
struct  Cosmos__Auth__V1beta1__QueryAccountInfoRequest
{
  ProtobufCMessage base;
  /*
   * address is the account address string.
   */
  char *address;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNT_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_account_info_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryAccountInfoResponse is the Query/AccountInfo response type.
 */
struct  Cosmos__Auth__V1beta1__QueryAccountInfoResponse
{
  ProtobufCMessage base;
  /*
   * info is the account info which is represented by BaseAccount.
   */
  Cosmos__Auth__V1beta1__BaseAccount *info;
};
#define COSMOS__AUTH__V1BETA1__QUERY_ACCOUNT_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__auth__v1beta1__query_account_info_response__descriptor) \
, NULL }


/* Cosmos__Auth__V1beta1__QueryAccountsRequest methods */
void   cosmos__auth__v1beta1__query_accounts_request__init
                     (Cosmos__Auth__V1beta1__QueryAccountsRequest         *message);
size_t cosmos__auth__v1beta1__query_accounts_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountsRequest   *message);
size_t cosmos__auth__v1beta1__query_accounts_request__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountsRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_accounts_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountsRequest *
       cosmos__auth__v1beta1__query_accounts_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_accounts_request__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountsResponse methods */
void   cosmos__auth__v1beta1__query_accounts_response__init
                     (Cosmos__Auth__V1beta1__QueryAccountsResponse         *message);
size_t cosmos__auth__v1beta1__query_accounts_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountsResponse   *message);
size_t cosmos__auth__v1beta1__query_accounts_response__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountsResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_accounts_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountsResponse *
       cosmos__auth__v1beta1__query_accounts_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_accounts_response__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountRequest methods */
void   cosmos__auth__v1beta1__query_account_request__init
                     (Cosmos__Auth__V1beta1__QueryAccountRequest         *message);
size_t cosmos__auth__v1beta1__query_account_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountRequest   *message);
size_t cosmos__auth__v1beta1__query_account_request__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_account_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountRequest *
       cosmos__auth__v1beta1__query_account_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_account_request__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountResponse methods */
void   cosmos__auth__v1beta1__query_account_response__init
                     (Cosmos__Auth__V1beta1__QueryAccountResponse         *message);
size_t cosmos__auth__v1beta1__query_account_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountResponse   *message);
size_t cosmos__auth__v1beta1__query_account_response__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_account_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountResponse *
       cosmos__auth__v1beta1__query_account_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_account_response__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryParamsRequest methods */
void   cosmos__auth__v1beta1__query_params_request__init
                     (Cosmos__Auth__V1beta1__QueryParamsRequest         *message);
size_t cosmos__auth__v1beta1__query_params_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryParamsRequest   *message);
size_t cosmos__auth__v1beta1__query_params_request__pack
                     (const Cosmos__Auth__V1beta1__QueryParamsRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_params_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryParamsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryParamsRequest *
       cosmos__auth__v1beta1__query_params_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_params_request__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryParamsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryParamsResponse methods */
void   cosmos__auth__v1beta1__query_params_response__init
                     (Cosmos__Auth__V1beta1__QueryParamsResponse         *message);
size_t cosmos__auth__v1beta1__query_params_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryParamsResponse   *message);
size_t cosmos__auth__v1beta1__query_params_response__pack
                     (const Cosmos__Auth__V1beta1__QueryParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_params_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryParamsResponse *
       cosmos__auth__v1beta1__query_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_params_response__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryModuleAccountsRequest methods */
void   cosmos__auth__v1beta1__query_module_accounts_request__init
                     (Cosmos__Auth__V1beta1__QueryModuleAccountsRequest         *message);
size_t cosmos__auth__v1beta1__query_module_accounts_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountsRequest   *message);
size_t cosmos__auth__v1beta1__query_module_accounts_request__pack
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountsRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_module_accounts_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryModuleAccountsRequest *
       cosmos__auth__v1beta1__query_module_accounts_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_module_accounts_request__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryModuleAccountsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryModuleAccountsResponse methods */
void   cosmos__auth__v1beta1__query_module_accounts_response__init
                     (Cosmos__Auth__V1beta1__QueryModuleAccountsResponse         *message);
size_t cosmos__auth__v1beta1__query_module_accounts_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountsResponse   *message);
size_t cosmos__auth__v1beta1__query_module_accounts_response__pack
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountsResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_module_accounts_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryModuleAccountsResponse *
       cosmos__auth__v1beta1__query_module_accounts_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_module_accounts_response__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryModuleAccountsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest methods */
void   cosmos__auth__v1beta1__query_module_account_by_name_request__init
                     (Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest         *message);
size_t cosmos__auth__v1beta1__query_module_account_by_name_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest   *message);
size_t cosmos__auth__v1beta1__query_module_account_by_name_request__pack
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_module_account_by_name_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest *
       cosmos__auth__v1beta1__query_module_account_by_name_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_module_account_by_name_request__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse methods */
void   cosmos__auth__v1beta1__query_module_account_by_name_response__init
                     (Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse         *message);
size_t cosmos__auth__v1beta1__query_module_account_by_name_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse   *message);
size_t cosmos__auth__v1beta1__query_module_account_by_name_response__pack
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_module_account_by_name_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse *
       cosmos__auth__v1beta1__query_module_account_by_name_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_module_account_by_name_response__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__Bech32PrefixRequest methods */
void   cosmos__auth__v1beta1__bech32_prefix_request__init
                     (Cosmos__Auth__V1beta1__Bech32PrefixRequest         *message);
size_t cosmos__auth__v1beta1__bech32_prefix_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__Bech32PrefixRequest   *message);
size_t cosmos__auth__v1beta1__bech32_prefix_request__pack
                     (const Cosmos__Auth__V1beta1__Bech32PrefixRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__bech32_prefix_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__Bech32PrefixRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__Bech32PrefixRequest *
       cosmos__auth__v1beta1__bech32_prefix_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__bech32_prefix_request__free_unpacked
                     (Cosmos__Auth__V1beta1__Bech32PrefixRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__Bech32PrefixResponse methods */
void   cosmos__auth__v1beta1__bech32_prefix_response__init
                     (Cosmos__Auth__V1beta1__Bech32PrefixResponse         *message);
size_t cosmos__auth__v1beta1__bech32_prefix_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__Bech32PrefixResponse   *message);
size_t cosmos__auth__v1beta1__bech32_prefix_response__pack
                     (const Cosmos__Auth__V1beta1__Bech32PrefixResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__bech32_prefix_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__Bech32PrefixResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__Bech32PrefixResponse *
       cosmos__auth__v1beta1__bech32_prefix_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__bech32_prefix_response__free_unpacked
                     (Cosmos__Auth__V1beta1__Bech32PrefixResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__AddressBytesToStringRequest methods */
void   cosmos__auth__v1beta1__address_bytes_to_string_request__init
                     (Cosmos__Auth__V1beta1__AddressBytesToStringRequest         *message);
size_t cosmos__auth__v1beta1__address_bytes_to_string_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__AddressBytesToStringRequest   *message);
size_t cosmos__auth__v1beta1__address_bytes_to_string_request__pack
                     (const Cosmos__Auth__V1beta1__AddressBytesToStringRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__address_bytes_to_string_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__AddressBytesToStringRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__AddressBytesToStringRequest *
       cosmos__auth__v1beta1__address_bytes_to_string_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__address_bytes_to_string_request__free_unpacked
                     (Cosmos__Auth__V1beta1__AddressBytesToStringRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__AddressBytesToStringResponse methods */
void   cosmos__auth__v1beta1__address_bytes_to_string_response__init
                     (Cosmos__Auth__V1beta1__AddressBytesToStringResponse         *message);
size_t cosmos__auth__v1beta1__address_bytes_to_string_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__AddressBytesToStringResponse   *message);
size_t cosmos__auth__v1beta1__address_bytes_to_string_response__pack
                     (const Cosmos__Auth__V1beta1__AddressBytesToStringResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__address_bytes_to_string_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__AddressBytesToStringResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__AddressBytesToStringResponse *
       cosmos__auth__v1beta1__address_bytes_to_string_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__address_bytes_to_string_response__free_unpacked
                     (Cosmos__Auth__V1beta1__AddressBytesToStringResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__AddressStringToBytesRequest methods */
void   cosmos__auth__v1beta1__address_string_to_bytes_request__init
                     (Cosmos__Auth__V1beta1__AddressStringToBytesRequest         *message);
size_t cosmos__auth__v1beta1__address_string_to_bytes_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__AddressStringToBytesRequest   *message);
size_t cosmos__auth__v1beta1__address_string_to_bytes_request__pack
                     (const Cosmos__Auth__V1beta1__AddressStringToBytesRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__address_string_to_bytes_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__AddressStringToBytesRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__AddressStringToBytesRequest *
       cosmos__auth__v1beta1__address_string_to_bytes_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__address_string_to_bytes_request__free_unpacked
                     (Cosmos__Auth__V1beta1__AddressStringToBytesRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__AddressStringToBytesResponse methods */
void   cosmos__auth__v1beta1__address_string_to_bytes_response__init
                     (Cosmos__Auth__V1beta1__AddressStringToBytesResponse         *message);
size_t cosmos__auth__v1beta1__address_string_to_bytes_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__AddressStringToBytesResponse   *message);
size_t cosmos__auth__v1beta1__address_string_to_bytes_response__pack
                     (const Cosmos__Auth__V1beta1__AddressStringToBytesResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__address_string_to_bytes_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__AddressStringToBytesResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__AddressStringToBytesResponse *
       cosmos__auth__v1beta1__address_string_to_bytes_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__address_string_to_bytes_response__free_unpacked
                     (Cosmos__Auth__V1beta1__AddressStringToBytesResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest methods */
void   cosmos__auth__v1beta1__query_account_address_by_idrequest__init
                     (Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest         *message);
size_t cosmos__auth__v1beta1__query_account_address_by_idrequest__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest   *message);
size_t cosmos__auth__v1beta1__query_account_address_by_idrequest__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_account_address_by_idrequest__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest *
       cosmos__auth__v1beta1__query_account_address_by_idrequest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_account_address_by_idrequest__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse methods */
void   cosmos__auth__v1beta1__query_account_address_by_idresponse__init
                     (Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse         *message);
size_t cosmos__auth__v1beta1__query_account_address_by_idresponse__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse   *message);
size_t cosmos__auth__v1beta1__query_account_address_by_idresponse__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_account_address_by_idresponse__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse *
       cosmos__auth__v1beta1__query_account_address_by_idresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_account_address_by_idresponse__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountInfoRequest methods */
void   cosmos__auth__v1beta1__query_account_info_request__init
                     (Cosmos__Auth__V1beta1__QueryAccountInfoRequest         *message);
size_t cosmos__auth__v1beta1__query_account_info_request__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountInfoRequest   *message);
size_t cosmos__auth__v1beta1__query_account_info_request__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountInfoRequest   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_account_info_request__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountInfoRequest *
       cosmos__auth__v1beta1__query_account_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_account_info_request__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Auth__V1beta1__QueryAccountInfoResponse methods */
void   cosmos__auth__v1beta1__query_account_info_response__init
                     (Cosmos__Auth__V1beta1__QueryAccountInfoResponse         *message);
size_t cosmos__auth__v1beta1__query_account_info_response__get_packed_size
                     (const Cosmos__Auth__V1beta1__QueryAccountInfoResponse   *message);
size_t cosmos__auth__v1beta1__query_account_info_response__pack
                     (const Cosmos__Auth__V1beta1__QueryAccountInfoResponse   *message,
                      uint8_t             *out);
size_t cosmos__auth__v1beta1__query_account_info_response__pack_to_buffer
                     (const Cosmos__Auth__V1beta1__QueryAccountInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Auth__V1beta1__QueryAccountInfoResponse *
       cosmos__auth__v1beta1__query_account_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__auth__v1beta1__query_account_info_response__free_unpacked
                     (Cosmos__Auth__V1beta1__QueryAccountInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Auth__V1beta1__QueryAccountsRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountsResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryParamsRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryParamsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryParamsResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryParamsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryModuleAccountsRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryModuleAccountsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryModuleAccountsResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryModuleAccountsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__Bech32PrefixRequest_Closure)
                 (const Cosmos__Auth__V1beta1__Bech32PrefixRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__Bech32PrefixResponse_Closure)
                 (const Cosmos__Auth__V1beta1__Bech32PrefixResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__AddressBytesToStringRequest_Closure)
                 (const Cosmos__Auth__V1beta1__AddressBytesToStringRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__AddressBytesToStringResponse_Closure)
                 (const Cosmos__Auth__V1beta1__AddressBytesToStringResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__AddressStringToBytesRequest_Closure)
                 (const Cosmos__Auth__V1beta1__AddressStringToBytesRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__AddressStringToBytesResponse_Closure)
                 (const Cosmos__Auth__V1beta1__AddressStringToBytesResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountInfoRequest_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountInfoRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Auth__V1beta1__QueryAccountInfoResponse_Closure)
                 (const Cosmos__Auth__V1beta1__QueryAccountInfoResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Auth__V1beta1__Query_Service Cosmos__Auth__V1beta1__Query_Service;
struct Cosmos__Auth__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*accounts)(Cosmos__Auth__V1beta1__Query_Service *service,
                   const Cosmos__Auth__V1beta1__QueryAccountsRequest *input,
                   Cosmos__Auth__V1beta1__QueryAccountsResponse_Closure closure,
                   void *closure_data);
  void (*account)(Cosmos__Auth__V1beta1__Query_Service *service,
                  const Cosmos__Auth__V1beta1__QueryAccountRequest *input,
                  Cosmos__Auth__V1beta1__QueryAccountResponse_Closure closure,
                  void *closure_data);
  void (*account_address_by_id)(Cosmos__Auth__V1beta1__Query_Service *service,
                                const Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest *input,
                                Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse_Closure closure,
                                void *closure_data);
  void (*params)(Cosmos__Auth__V1beta1__Query_Service *service,
                 const Cosmos__Auth__V1beta1__QueryParamsRequest *input,
                 Cosmos__Auth__V1beta1__QueryParamsResponse_Closure closure,
                 void *closure_data);
  void (*module_accounts)(Cosmos__Auth__V1beta1__Query_Service *service,
                          const Cosmos__Auth__V1beta1__QueryModuleAccountsRequest *input,
                          Cosmos__Auth__V1beta1__QueryModuleAccountsResponse_Closure closure,
                          void *closure_data);
  void (*module_account_by_name)(Cosmos__Auth__V1beta1__Query_Service *service,
                                 const Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest *input,
                                 Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse_Closure closure,
                                 void *closure_data);
  void (*bech32_prefix)(Cosmos__Auth__V1beta1__Query_Service *service,
                        const Cosmos__Auth__V1beta1__Bech32PrefixRequest *input,
                        Cosmos__Auth__V1beta1__Bech32PrefixResponse_Closure closure,
                        void *closure_data);
  void (*address_bytes_to_string)(Cosmos__Auth__V1beta1__Query_Service *service,
                                  const Cosmos__Auth__V1beta1__AddressBytesToStringRequest *input,
                                  Cosmos__Auth__V1beta1__AddressBytesToStringResponse_Closure closure,
                                  void *closure_data);
  void (*address_string_to_bytes)(Cosmos__Auth__V1beta1__Query_Service *service,
                                  const Cosmos__Auth__V1beta1__AddressStringToBytesRequest *input,
                                  Cosmos__Auth__V1beta1__AddressStringToBytesResponse_Closure closure,
                                  void *closure_data);
  void (*account_info)(Cosmos__Auth__V1beta1__Query_Service *service,
                       const Cosmos__Auth__V1beta1__QueryAccountInfoRequest *input,
                       Cosmos__Auth__V1beta1__QueryAccountInfoResponse_Closure closure,
                       void *closure_data);
};
typedef void (*Cosmos__Auth__V1beta1__Query_ServiceDestroy)(Cosmos__Auth__V1beta1__Query_Service *);
void cosmos__auth__v1beta1__query__init (Cosmos__Auth__V1beta1__Query_Service *service,
                                         Cosmos__Auth__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__AUTH__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__auth__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__AUTH__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__AUTH__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## accounts,\
      function_prefix__ ## account,\
      function_prefix__ ## account_address_by_id,\
      function_prefix__ ## params,\
      function_prefix__ ## module_accounts,\
      function_prefix__ ## module_account_by_name,\
      function_prefix__ ## bech32_prefix,\
      function_prefix__ ## address_bytes_to_string,\
      function_prefix__ ## address_string_to_bytes,\
      function_prefix__ ## account_info  }
void cosmos__auth__v1beta1__query__accounts(ProtobufCService *service,
                                            const Cosmos__Auth__V1beta1__QueryAccountsRequest *input,
                                            Cosmos__Auth__V1beta1__QueryAccountsResponse_Closure closure,
                                            void *closure_data);
void cosmos__auth__v1beta1__query__account(ProtobufCService *service,
                                           const Cosmos__Auth__V1beta1__QueryAccountRequest *input,
                                           Cosmos__Auth__V1beta1__QueryAccountResponse_Closure closure,
                                           void *closure_data);
void cosmos__auth__v1beta1__query__account_address_by_id(ProtobufCService *service,
                                                         const Cosmos__Auth__V1beta1__QueryAccountAddressByIDRequest *input,
                                                         Cosmos__Auth__V1beta1__QueryAccountAddressByIDResponse_Closure closure,
                                                         void *closure_data);
void cosmos__auth__v1beta1__query__params(ProtobufCService *service,
                                          const Cosmos__Auth__V1beta1__QueryParamsRequest *input,
                                          Cosmos__Auth__V1beta1__QueryParamsResponse_Closure closure,
                                          void *closure_data);
void cosmos__auth__v1beta1__query__module_accounts(ProtobufCService *service,
                                                   const Cosmos__Auth__V1beta1__QueryModuleAccountsRequest *input,
                                                   Cosmos__Auth__V1beta1__QueryModuleAccountsResponse_Closure closure,
                                                   void *closure_data);
void cosmos__auth__v1beta1__query__module_account_by_name(ProtobufCService *service,
                                                          const Cosmos__Auth__V1beta1__QueryModuleAccountByNameRequest *input,
                                                          Cosmos__Auth__V1beta1__QueryModuleAccountByNameResponse_Closure closure,
                                                          void *closure_data);
void cosmos__auth__v1beta1__query__bech32_prefix(ProtobufCService *service,
                                                 const Cosmos__Auth__V1beta1__Bech32PrefixRequest *input,
                                                 Cosmos__Auth__V1beta1__Bech32PrefixResponse_Closure closure,
                                                 void *closure_data);
void cosmos__auth__v1beta1__query__address_bytes_to_string(ProtobufCService *service,
                                                           const Cosmos__Auth__V1beta1__AddressBytesToStringRequest *input,
                                                           Cosmos__Auth__V1beta1__AddressBytesToStringResponse_Closure closure,
                                                           void *closure_data);
void cosmos__auth__v1beta1__query__address_string_to_bytes(ProtobufCService *service,
                                                           const Cosmos__Auth__V1beta1__AddressStringToBytesRequest *input,
                                                           Cosmos__Auth__V1beta1__AddressStringToBytesResponse_Closure closure,
                                                           void *closure_data);
void cosmos__auth__v1beta1__query__account_info(ProtobufCService *service,
                                                const Cosmos__Auth__V1beta1__QueryAccountInfoRequest *input,
                                                Cosmos__Auth__V1beta1__QueryAccountInfoResponse_Closure closure,
                                                void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_accounts_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_accounts_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_account_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_account_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_params_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_params_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_module_accounts_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_module_accounts_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_module_account_by_name_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_module_account_by_name_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__bech32_prefix_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__bech32_prefix_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__address_bytes_to_string_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__address_bytes_to_string_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__address_string_to_bytes_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__address_string_to_bytes_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_account_address_by_idrequest__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_account_address_by_idresponse__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_account_info_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__auth__v1beta1__query_account_info_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__auth__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fauth_2fv1beta1_2fquery_2eproto__INCLUDED */
