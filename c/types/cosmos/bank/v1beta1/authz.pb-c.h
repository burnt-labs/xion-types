/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/bank/v1beta1/authz.proto */

#ifndef PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fauthz_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fauthz_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "amino/amino.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"

typedef struct Cosmos__Bank__V1beta1__SendAuthorization Cosmos__Bank__V1beta1__SendAuthorization;


/* --- enums --- */


/* --- messages --- */

/*
 * SendAuthorization allows the grantee to spend up to spend_limit coins from
 * the granter's account.
 */
struct  Cosmos__Bank__V1beta1__SendAuthorization
{
  ProtobufCMessage base;
  size_t n_spend_limit;
  Cosmos__Base__V1beta1__Coin **spend_limit;
  /*
   * allow_list specifies an optional list of addresses to whom the grantee can send tokens on behalf of the
   * granter. If omitted, any recipient is allowed.
   */
  size_t n_allow_list;
  char **allow_list;
};
#define COSMOS__BANK__V1BETA1__SEND_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__send_authorization__descriptor) \
, 0,NULL, 0,NULL }


/* Cosmos__Bank__V1beta1__SendAuthorization methods */
void   cosmos__bank__v1beta1__send_authorization__init
                     (Cosmos__Bank__V1beta1__SendAuthorization         *message);
size_t cosmos__bank__v1beta1__send_authorization__get_packed_size
                     (const Cosmos__Bank__V1beta1__SendAuthorization   *message);
size_t cosmos__bank__v1beta1__send_authorization__pack
                     (const Cosmos__Bank__V1beta1__SendAuthorization   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__send_authorization__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__SendAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__SendAuthorization *
       cosmos__bank__v1beta1__send_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__send_authorization__free_unpacked
                     (Cosmos__Bank__V1beta1__SendAuthorization *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Bank__V1beta1__SendAuthorization_Closure)
                 (const Cosmos__Bank__V1beta1__SendAuthorization *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__send_authorization__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fauthz_2eproto__INCLUDED */
