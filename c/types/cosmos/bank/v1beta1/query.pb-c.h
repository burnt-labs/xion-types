/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/bank/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "cosmos/bank/v1beta1/bank.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/query/v1/query.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Bank__V1beta1__QueryBalanceRequest Cosmos__Bank__V1beta1__QueryBalanceRequest;
typedef struct Cosmos__Bank__V1beta1__QueryBalanceResponse Cosmos__Bank__V1beta1__QueryBalanceResponse;
typedef struct Cosmos__Bank__V1beta1__QueryAllBalancesRequest Cosmos__Bank__V1beta1__QueryAllBalancesRequest;
typedef struct Cosmos__Bank__V1beta1__QueryAllBalancesResponse Cosmos__Bank__V1beta1__QueryAllBalancesResponse;
typedef struct Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest;
typedef struct Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse;
typedef struct Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest;
typedef struct Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse;
typedef struct Cosmos__Bank__V1beta1__QueryTotalSupplyRequest Cosmos__Bank__V1beta1__QueryTotalSupplyRequest;
typedef struct Cosmos__Bank__V1beta1__QueryTotalSupplyResponse Cosmos__Bank__V1beta1__QueryTotalSupplyResponse;
typedef struct Cosmos__Bank__V1beta1__QuerySupplyOfRequest Cosmos__Bank__V1beta1__QuerySupplyOfRequest;
typedef struct Cosmos__Bank__V1beta1__QuerySupplyOfResponse Cosmos__Bank__V1beta1__QuerySupplyOfResponse;
typedef struct Cosmos__Bank__V1beta1__QueryParamsRequest Cosmos__Bank__V1beta1__QueryParamsRequest;
typedef struct Cosmos__Bank__V1beta1__QueryParamsResponse Cosmos__Bank__V1beta1__QueryParamsResponse;
typedef struct Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest;
typedef struct Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse;
typedef struct Cosmos__Bank__V1beta1__QueryDenomMetadataRequest Cosmos__Bank__V1beta1__QueryDenomMetadataRequest;
typedef struct Cosmos__Bank__V1beta1__QueryDenomMetadataResponse Cosmos__Bank__V1beta1__QueryDenomMetadataResponse;
typedef struct Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest;
typedef struct Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse;
typedef struct Cosmos__Bank__V1beta1__QueryDenomOwnersRequest Cosmos__Bank__V1beta1__QueryDenomOwnersRequest;
typedef struct Cosmos__Bank__V1beta1__DenomOwner Cosmos__Bank__V1beta1__DenomOwner;
typedef struct Cosmos__Bank__V1beta1__QueryDenomOwnersResponse Cosmos__Bank__V1beta1__QueryDenomOwnersResponse;
typedef struct Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest;
typedef struct Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse;
typedef struct Cosmos__Bank__V1beta1__QuerySendEnabledRequest Cosmos__Bank__V1beta1__QuerySendEnabledRequest;
typedef struct Cosmos__Bank__V1beta1__QuerySendEnabledResponse Cosmos__Bank__V1beta1__QuerySendEnabledResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryBalanceRequest is the request type for the Query/Balance RPC method.
 */
struct  Cosmos__Bank__V1beta1__QueryBalanceRequest
{
  ProtobufCMessage base;
  /*
   * address is the address to query balances for.
   */
  char *address;
  /*
   * denom is the coin denom to query balances for.
   */
  char *denom;
};
#define COSMOS__BANK__V1BETA1__QUERY_BALANCE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_balance_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryBalanceResponse is the response type for the Query/Balance RPC method.
 */
struct  Cosmos__Bank__V1beta1__QueryBalanceResponse
{
  ProtobufCMessage base;
  /*
   * balance is the balance of the coin.
   */
  Cosmos__Base__V1beta1__Coin *balance;
};
#define COSMOS__BANK__V1BETA1__QUERY_BALANCE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_balance_response__descriptor) \
, NULL }


/*
 * QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
 */
struct  Cosmos__Bank__V1beta1__QueryAllBalancesRequest
{
  ProtobufCMessage base;
  /*
   * address is the address to query balances for.
   */
  char *address;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
  /*
   * resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.
   */
  protobuf_c_boolean resolve_denom;
};
#define COSMOS__BANK__V1BETA1__QUERY_ALL_BALANCES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_all_balances_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL, 0 }


/*
 * QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
 * method.
 */
struct  Cosmos__Bank__V1beta1__QueryAllBalancesResponse
{
  ProtobufCMessage base;
  /*
   * balances is the balances of all the coins.
   */
  size_t n_balances;
  Cosmos__Base__V1beta1__Coin **balances;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_ALL_BALANCES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_all_balances_response__descriptor) \
, 0,NULL, NULL }


/*
 * QuerySpendableBalancesRequest defines the gRPC request structure for querying
 * an account's spendable balances.
 */
struct  Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest
{
  ProtobufCMessage base;
  /*
   * address is the address to query spendable balances for.
   */
  char *address;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_SPENDABLE_BALANCES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_spendable_balances_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QuerySpendableBalancesResponse defines the gRPC response structure for querying
 * an account's spendable balances.
 */
struct  Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse
{
  ProtobufCMessage base;
  /*
   * balances is the spendable balances of all the coins.
   */
  size_t n_balances;
  Cosmos__Base__V1beta1__Coin **balances;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_SPENDABLE_BALANCES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_spendable_balances_response__descriptor) \
, 0,NULL, NULL }


/*
 * QuerySpendableBalanceByDenomRequest defines the gRPC request structure for
 * querying an account's spendable balance for a specific denom.
 */
struct  Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest
{
  ProtobufCMessage base;
  /*
   * address is the address to query balances for.
   */
  char *address;
  /*
   * denom is the coin denom to query balances for.
   */
  char *denom;
};
#define COSMOS__BANK__V1BETA1__QUERY_SPENDABLE_BALANCE_BY_DENOM_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
 * querying an account's spendable balance for a specific denom.
 */
struct  Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse
{
  ProtobufCMessage base;
  /*
   * balance is the balance of the coin.
   */
  Cosmos__Base__V1beta1__Coin *balance;
};
#define COSMOS__BANK__V1BETA1__QUERY_SPENDABLE_BALANCE_BY_DENOM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__descriptor) \
, NULL }


/*
 * QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC
 * method.
 */
struct  Cosmos__Bank__V1beta1__QueryTotalSupplyRequest
{
  ProtobufCMessage base;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_TOTAL_SUPPLY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_total_supply_request__descriptor) \
, NULL }


/*
 * QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
 * method
 */
struct  Cosmos__Bank__V1beta1__QueryTotalSupplyResponse
{
  ProtobufCMessage base;
  /*
   * supply is the supply of the coins
   */
  size_t n_supply;
  Cosmos__Base__V1beta1__Coin **supply;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_TOTAL_SUPPLY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_total_supply_response__descriptor) \
, 0,NULL, NULL }


/*
 * QuerySupplyOfRequest is the request type for the Query/SupplyOf RPC method.
 */
struct  Cosmos__Bank__V1beta1__QuerySupplyOfRequest
{
  ProtobufCMessage base;
  /*
   * denom is the coin denom to query balances for.
   */
  char *denom;
};
#define COSMOS__BANK__V1BETA1__QUERY_SUPPLY_OF_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_supply_of_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
 */
struct  Cosmos__Bank__V1beta1__QuerySupplyOfResponse
{
  ProtobufCMessage base;
  /*
   * amount is the supply of the coin.
   */
  Cosmos__Base__V1beta1__Coin *amount;
};
#define COSMOS__BANK__V1BETA1__QUERY_SUPPLY_OF_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_supply_of_response__descriptor) \
, NULL }


/*
 * QueryParamsRequest defines the request type for querying x/bank parameters.
 */
struct  Cosmos__Bank__V1beta1__QueryParamsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__BANK__V1BETA1__QUERY_PARAMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_params_request__descriptor) \
 }


/*
 * QueryParamsResponse defines the response type for querying x/bank parameters.
 */
struct  Cosmos__Bank__V1beta1__QueryParamsResponse
{
  ProtobufCMessage base;
  /*
   * params provides the parameters of the bank module.
   */
  Cosmos__Bank__V1beta1__Params *params;
};
#define COSMOS__BANK__V1BETA1__QUERY_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_params_response__descriptor) \
, NULL }


/*
 * QueryDenomsMetadataRequest is the request type for the Query/DenomsMetadata RPC method.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest
{
  ProtobufCMessage base;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOMS_METADATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denoms_metadata_request__descriptor) \
, NULL }


/*
 * QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
 * method.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse
{
  ProtobufCMessage base;
  /*
   * metadata provides the client information for all the registered tokens.
   */
  size_t n_metadatas;
  Cosmos__Bank__V1beta1__Metadata **metadatas;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOMS_METADATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denoms_metadata_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomMetadataRequest
{
  ProtobufCMessage base;
  /*
   * denom is the coin denom to query the metadata for.
   */
  char *denom;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_METADATA_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_metadata_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
 * method.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomMetadataResponse
{
  ProtobufCMessage base;
  /*
   * metadata describes and provides all the client information for the requested token.
   */
  Cosmos__Bank__V1beta1__Metadata *metadata;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_METADATA_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_metadata_response__descriptor) \
, NULL }


/*
 * QueryDenomMetadataByQueryStringRequest is the request type for the Query/DenomMetadata RPC method.
 * Identical with QueryDenomMetadataRequest but receives denom as query string.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest
{
  ProtobufCMessage base;
  /*
   * denom is the coin denom to query the metadata for.
   */
  char *denom;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_METADATA_BY_QUERY_STRING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
 * method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse
{
  ProtobufCMessage base;
  /*
   * metadata describes and provides all the client information for the requested token.
   */
  Cosmos__Bank__V1beta1__Metadata *metadata;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_METADATA_BY_QUERY_STRING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__descriptor) \
, NULL }


/*
 * QueryDenomOwnersRequest defines the request type for the DenomOwners RPC query,
 * which queries for a paginated set of all account holders of a particular
 * denomination.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomOwnersRequest
{
  ProtobufCMessage base;
  /*
   * denom defines the coin denomination to query all account holders for.
   */
  char *denom;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_OWNERS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_owners_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * DenomOwner defines structure representing an account that owns or holds a
 * particular denominated token. It contains the account address and account
 * balance of the denominated token.
 */
struct  Cosmos__Bank__V1beta1__DenomOwner
{
  ProtobufCMessage base;
  /*
   * address defines the address that owns a particular denomination.
   */
  char *address;
  /*
   * balance is the balance of the denominated coin for an account.
   */
  Cosmos__Base__V1beta1__Coin *balance;
};
#define COSMOS__BANK__V1BETA1__DENOM_OWNER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__denom_owner__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomOwnersResponse
{
  ProtobufCMessage base;
  size_t n_denom_owners;
  Cosmos__Bank__V1beta1__DenomOwner **denom_owners;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_OWNERS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_owners_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryDenomOwnersByQueryRequest defines the request type for the DenomOwnersByQuery RPC query,
 * which queries for a paginated set of all account holders of a particular
 * denomination.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest
{
  ProtobufCMessage base;
  /*
   * denom defines the coin denomination to query all account holders for.
   */
  char *denom;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_OWNERS_BY_QUERY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_owners_by_query_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryDenomOwnersByQueryResponse defines the RPC response of a DenomOwnersByQuery RPC query.
 */
struct  Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse
{
  ProtobufCMessage base;
  size_t n_denom_owners;
  Cosmos__Bank__V1beta1__DenomOwner **denom_owners;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_DENOM_OWNERS_BY_QUERY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_denom_owners_by_query_response__descriptor) \
, 0,NULL, NULL }


/*
 * QuerySendEnabledRequest defines the RPC request for looking up SendEnabled entries.
 */
struct  Cosmos__Bank__V1beta1__QuerySendEnabledRequest
{
  ProtobufCMessage base;
  /*
   * denoms is the specific denoms you want look up. Leave empty to get all entries.
   */
  size_t n_denoms;
  char **denoms;
  /*
   * pagination defines an optional pagination for the request. This field is
   * only read if the denoms field is empty.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_SEND_ENABLED_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_send_enabled_request__descriptor) \
, 0,NULL, NULL }


/*
 * QuerySendEnabledResponse defines the RPC response of a SendEnable query.
 */
struct  Cosmos__Bank__V1beta1__QuerySendEnabledResponse
{
  ProtobufCMessage base;
  size_t n_send_enabled;
  Cosmos__Bank__V1beta1__SendEnabled **send_enabled;
  /*
   * pagination defines the pagination in the response. This field is only
   * populated if the denoms field in the request is empty.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__BANK__V1BETA1__QUERY_SEND_ENABLED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__query_send_enabled_response__descriptor) \
, 0,NULL, NULL }


/* Cosmos__Bank__V1beta1__QueryBalanceRequest methods */
void   cosmos__bank__v1beta1__query_balance_request__init
                     (Cosmos__Bank__V1beta1__QueryBalanceRequest         *message);
size_t cosmos__bank__v1beta1__query_balance_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryBalanceRequest   *message);
size_t cosmos__bank__v1beta1__query_balance_request__pack
                     (const Cosmos__Bank__V1beta1__QueryBalanceRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_balance_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryBalanceRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryBalanceRequest *
       cosmos__bank__v1beta1__query_balance_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_balance_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryBalanceRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryBalanceResponse methods */
void   cosmos__bank__v1beta1__query_balance_response__init
                     (Cosmos__Bank__V1beta1__QueryBalanceResponse         *message);
size_t cosmos__bank__v1beta1__query_balance_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryBalanceResponse   *message);
size_t cosmos__bank__v1beta1__query_balance_response__pack
                     (const Cosmos__Bank__V1beta1__QueryBalanceResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_balance_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryBalanceResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryBalanceResponse *
       cosmos__bank__v1beta1__query_balance_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_balance_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryBalanceResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryAllBalancesRequest methods */
void   cosmos__bank__v1beta1__query_all_balances_request__init
                     (Cosmos__Bank__V1beta1__QueryAllBalancesRequest         *message);
size_t cosmos__bank__v1beta1__query_all_balances_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryAllBalancesRequest   *message);
size_t cosmos__bank__v1beta1__query_all_balances_request__pack
                     (const Cosmos__Bank__V1beta1__QueryAllBalancesRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_all_balances_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryAllBalancesRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryAllBalancesRequest *
       cosmos__bank__v1beta1__query_all_balances_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_all_balances_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryAllBalancesRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryAllBalancesResponse methods */
void   cosmos__bank__v1beta1__query_all_balances_response__init
                     (Cosmos__Bank__V1beta1__QueryAllBalancesResponse         *message);
size_t cosmos__bank__v1beta1__query_all_balances_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryAllBalancesResponse   *message);
size_t cosmos__bank__v1beta1__query_all_balances_response__pack
                     (const Cosmos__Bank__V1beta1__QueryAllBalancesResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_all_balances_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryAllBalancesResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryAllBalancesResponse *
       cosmos__bank__v1beta1__query_all_balances_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_all_balances_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryAllBalancesResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest methods */
void   cosmos__bank__v1beta1__query_spendable_balances_request__init
                     (Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest         *message);
size_t cosmos__bank__v1beta1__query_spendable_balances_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest   *message);
size_t cosmos__bank__v1beta1__query_spendable_balances_request__pack
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_spendable_balances_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest *
       cosmos__bank__v1beta1__query_spendable_balances_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_spendable_balances_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse methods */
void   cosmos__bank__v1beta1__query_spendable_balances_response__init
                     (Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse         *message);
size_t cosmos__bank__v1beta1__query_spendable_balances_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse   *message);
size_t cosmos__bank__v1beta1__query_spendable_balances_response__pack
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_spendable_balances_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse *
       cosmos__bank__v1beta1__query_spendable_balances_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_spendable_balances_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest methods */
void   cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__init
                     (Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest         *message);
size_t cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest   *message);
size_t cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__pack
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest *
       cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse methods */
void   cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__init
                     (Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse         *message);
size_t cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse   *message);
size_t cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__pack
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse *
       cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryTotalSupplyRequest methods */
void   cosmos__bank__v1beta1__query_total_supply_request__init
                     (Cosmos__Bank__V1beta1__QueryTotalSupplyRequest         *message);
size_t cosmos__bank__v1beta1__query_total_supply_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryTotalSupplyRequest   *message);
size_t cosmos__bank__v1beta1__query_total_supply_request__pack
                     (const Cosmos__Bank__V1beta1__QueryTotalSupplyRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_total_supply_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryTotalSupplyRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryTotalSupplyRequest *
       cosmos__bank__v1beta1__query_total_supply_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_total_supply_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryTotalSupplyRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryTotalSupplyResponse methods */
void   cosmos__bank__v1beta1__query_total_supply_response__init
                     (Cosmos__Bank__V1beta1__QueryTotalSupplyResponse         *message);
size_t cosmos__bank__v1beta1__query_total_supply_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryTotalSupplyResponse   *message);
size_t cosmos__bank__v1beta1__query_total_supply_response__pack
                     (const Cosmos__Bank__V1beta1__QueryTotalSupplyResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_total_supply_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryTotalSupplyResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryTotalSupplyResponse *
       cosmos__bank__v1beta1__query_total_supply_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_total_supply_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryTotalSupplyResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySupplyOfRequest methods */
void   cosmos__bank__v1beta1__query_supply_of_request__init
                     (Cosmos__Bank__V1beta1__QuerySupplyOfRequest         *message);
size_t cosmos__bank__v1beta1__query_supply_of_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySupplyOfRequest   *message);
size_t cosmos__bank__v1beta1__query_supply_of_request__pack
                     (const Cosmos__Bank__V1beta1__QuerySupplyOfRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_supply_of_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySupplyOfRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySupplyOfRequest *
       cosmos__bank__v1beta1__query_supply_of_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_supply_of_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySupplyOfRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySupplyOfResponse methods */
void   cosmos__bank__v1beta1__query_supply_of_response__init
                     (Cosmos__Bank__V1beta1__QuerySupplyOfResponse         *message);
size_t cosmos__bank__v1beta1__query_supply_of_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySupplyOfResponse   *message);
size_t cosmos__bank__v1beta1__query_supply_of_response__pack
                     (const Cosmos__Bank__V1beta1__QuerySupplyOfResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_supply_of_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySupplyOfResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySupplyOfResponse *
       cosmos__bank__v1beta1__query_supply_of_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_supply_of_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySupplyOfResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryParamsRequest methods */
void   cosmos__bank__v1beta1__query_params_request__init
                     (Cosmos__Bank__V1beta1__QueryParamsRequest         *message);
size_t cosmos__bank__v1beta1__query_params_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryParamsRequest   *message);
size_t cosmos__bank__v1beta1__query_params_request__pack
                     (const Cosmos__Bank__V1beta1__QueryParamsRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_params_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryParamsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryParamsRequest *
       cosmos__bank__v1beta1__query_params_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_params_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryParamsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryParamsResponse methods */
void   cosmos__bank__v1beta1__query_params_response__init
                     (Cosmos__Bank__V1beta1__QueryParamsResponse         *message);
size_t cosmos__bank__v1beta1__query_params_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryParamsResponse   *message);
size_t cosmos__bank__v1beta1__query_params_response__pack
                     (const Cosmos__Bank__V1beta1__QueryParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_params_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryParamsResponse *
       cosmos__bank__v1beta1__query_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_params_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest methods */
void   cosmos__bank__v1beta1__query_denoms_metadata_request__init
                     (Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest         *message);
size_t cosmos__bank__v1beta1__query_denoms_metadata_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest   *message);
size_t cosmos__bank__v1beta1__query_denoms_metadata_request__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denoms_metadata_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest *
       cosmos__bank__v1beta1__query_denoms_metadata_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denoms_metadata_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse methods */
void   cosmos__bank__v1beta1__query_denoms_metadata_response__init
                     (Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse         *message);
size_t cosmos__bank__v1beta1__query_denoms_metadata_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse   *message);
size_t cosmos__bank__v1beta1__query_denoms_metadata_response__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denoms_metadata_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse *
       cosmos__bank__v1beta1__query_denoms_metadata_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denoms_metadata_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomMetadataRequest methods */
void   cosmos__bank__v1beta1__query_denom_metadata_request__init
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataRequest         *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataRequest   *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_request__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_metadata_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomMetadataRequest *
       cosmos__bank__v1beta1__query_denom_metadata_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_metadata_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomMetadataResponse methods */
void   cosmos__bank__v1beta1__query_denom_metadata_response__init
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataResponse         *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataResponse   *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_response__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_metadata_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomMetadataResponse *
       cosmos__bank__v1beta1__query_denom_metadata_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_metadata_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest methods */
void   cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__init
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest         *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest   *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest *
       cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse methods */
void   cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__init
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse         *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse   *message);
size_t cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse *
       cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomOwnersRequest methods */
void   cosmos__bank__v1beta1__query_denom_owners_request__init
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersRequest         *message);
size_t cosmos__bank__v1beta1__query_denom_owners_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersRequest   *message);
size_t cosmos__bank__v1beta1__query_denom_owners_request__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_owners_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomOwnersRequest *
       cosmos__bank__v1beta1__query_denom_owners_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_owners_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__DenomOwner methods */
void   cosmos__bank__v1beta1__denom_owner__init
                     (Cosmos__Bank__V1beta1__DenomOwner         *message);
size_t cosmos__bank__v1beta1__denom_owner__get_packed_size
                     (const Cosmos__Bank__V1beta1__DenomOwner   *message);
size_t cosmos__bank__v1beta1__denom_owner__pack
                     (const Cosmos__Bank__V1beta1__DenomOwner   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__denom_owner__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__DenomOwner   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__DenomOwner *
       cosmos__bank__v1beta1__denom_owner__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__denom_owner__free_unpacked
                     (Cosmos__Bank__V1beta1__DenomOwner *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomOwnersResponse methods */
void   cosmos__bank__v1beta1__query_denom_owners_response__init
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersResponse         *message);
size_t cosmos__bank__v1beta1__query_denom_owners_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersResponse   *message);
size_t cosmos__bank__v1beta1__query_denom_owners_response__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_owners_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomOwnersResponse *
       cosmos__bank__v1beta1__query_denom_owners_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_owners_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest methods */
void   cosmos__bank__v1beta1__query_denom_owners_by_query_request__init
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest         *message);
size_t cosmos__bank__v1beta1__query_denom_owners_by_query_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest   *message);
size_t cosmos__bank__v1beta1__query_denom_owners_by_query_request__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_owners_by_query_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest *
       cosmos__bank__v1beta1__query_denom_owners_by_query_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_owners_by_query_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse methods */
void   cosmos__bank__v1beta1__query_denom_owners_by_query_response__init
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse         *message);
size_t cosmos__bank__v1beta1__query_denom_owners_by_query_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse   *message);
size_t cosmos__bank__v1beta1__query_denom_owners_by_query_response__pack
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_denom_owners_by_query_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse *
       cosmos__bank__v1beta1__query_denom_owners_by_query_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_denom_owners_by_query_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySendEnabledRequest methods */
void   cosmos__bank__v1beta1__query_send_enabled_request__init
                     (Cosmos__Bank__V1beta1__QuerySendEnabledRequest         *message);
size_t cosmos__bank__v1beta1__query_send_enabled_request__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySendEnabledRequest   *message);
size_t cosmos__bank__v1beta1__query_send_enabled_request__pack
                     (const Cosmos__Bank__V1beta1__QuerySendEnabledRequest   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_send_enabled_request__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySendEnabledRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySendEnabledRequest *
       cosmos__bank__v1beta1__query_send_enabled_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_send_enabled_request__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySendEnabledRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__QuerySendEnabledResponse methods */
void   cosmos__bank__v1beta1__query_send_enabled_response__init
                     (Cosmos__Bank__V1beta1__QuerySendEnabledResponse         *message);
size_t cosmos__bank__v1beta1__query_send_enabled_response__get_packed_size
                     (const Cosmos__Bank__V1beta1__QuerySendEnabledResponse   *message);
size_t cosmos__bank__v1beta1__query_send_enabled_response__pack
                     (const Cosmos__Bank__V1beta1__QuerySendEnabledResponse   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__query_send_enabled_response__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__QuerySendEnabledResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__QuerySendEnabledResponse *
       cosmos__bank__v1beta1__query_send_enabled_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__query_send_enabled_response__free_unpacked
                     (Cosmos__Bank__V1beta1__QuerySendEnabledResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Bank__V1beta1__QueryBalanceRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryBalanceRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryBalanceResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryBalanceResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryAllBalancesRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryAllBalancesRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryAllBalancesResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryAllBalancesResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryTotalSupplyRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryTotalSupplyRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryTotalSupplyResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryTotalSupplyResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySupplyOfRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySupplyOfRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySupplyOfResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySupplyOfResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryParamsRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryParamsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryParamsResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryParamsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomMetadataRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomMetadataRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomMetadataResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomMetadataResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomOwnersRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomOwnersRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__DenomOwner_Closure)
                 (const Cosmos__Bank__V1beta1__DenomOwner *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomOwnersResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomOwnersResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySendEnabledRequest_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySendEnabledRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__QuerySendEnabledResponse_Closure)
                 (const Cosmos__Bank__V1beta1__QuerySendEnabledResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Bank__V1beta1__Query_Service Cosmos__Bank__V1beta1__Query_Service;
struct Cosmos__Bank__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*balance)(Cosmos__Bank__V1beta1__Query_Service *service,
                  const Cosmos__Bank__V1beta1__QueryBalanceRequest *input,
                  Cosmos__Bank__V1beta1__QueryBalanceResponse_Closure closure,
                  void *closure_data);
  void (*all_balances)(Cosmos__Bank__V1beta1__Query_Service *service,
                       const Cosmos__Bank__V1beta1__QueryAllBalancesRequest *input,
                       Cosmos__Bank__V1beta1__QueryAllBalancesResponse_Closure closure,
                       void *closure_data);
  void (*spendable_balances)(Cosmos__Bank__V1beta1__Query_Service *service,
                             const Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest *input,
                             Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse_Closure closure,
                             void *closure_data);
  void (*spendable_balance_by_denom)(Cosmos__Bank__V1beta1__Query_Service *service,
                                     const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest *input,
                                     Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse_Closure closure,
                                     void *closure_data);
  void (*total_supply)(Cosmos__Bank__V1beta1__Query_Service *service,
                       const Cosmos__Bank__V1beta1__QueryTotalSupplyRequest *input,
                       Cosmos__Bank__V1beta1__QueryTotalSupplyResponse_Closure closure,
                       void *closure_data);
  void (*supply_of)(Cosmos__Bank__V1beta1__Query_Service *service,
                    const Cosmos__Bank__V1beta1__QuerySupplyOfRequest *input,
                    Cosmos__Bank__V1beta1__QuerySupplyOfResponse_Closure closure,
                    void *closure_data);
  void (*params)(Cosmos__Bank__V1beta1__Query_Service *service,
                 const Cosmos__Bank__V1beta1__QueryParamsRequest *input,
                 Cosmos__Bank__V1beta1__QueryParamsResponse_Closure closure,
                 void *closure_data);
  void (*denoms_metadata)(Cosmos__Bank__V1beta1__Query_Service *service,
                          const Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest *input,
                          Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse_Closure closure,
                          void *closure_data);
  void (*denom_metadata)(Cosmos__Bank__V1beta1__Query_Service *service,
                         const Cosmos__Bank__V1beta1__QueryDenomMetadataRequest *input,
                         Cosmos__Bank__V1beta1__QueryDenomMetadataResponse_Closure closure,
                         void *closure_data);
  void (*denom_metadata_by_query_string)(Cosmos__Bank__V1beta1__Query_Service *service,
                                         const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest *input,
                                         Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse_Closure closure,
                                         void *closure_data);
  void (*denom_owners)(Cosmos__Bank__V1beta1__Query_Service *service,
                       const Cosmos__Bank__V1beta1__QueryDenomOwnersRequest *input,
                       Cosmos__Bank__V1beta1__QueryDenomOwnersResponse_Closure closure,
                       void *closure_data);
  void (*denom_owners_by_query)(Cosmos__Bank__V1beta1__Query_Service *service,
                                const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest *input,
                                Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse_Closure closure,
                                void *closure_data);
  void (*send_enabled)(Cosmos__Bank__V1beta1__Query_Service *service,
                       const Cosmos__Bank__V1beta1__QuerySendEnabledRequest *input,
                       Cosmos__Bank__V1beta1__QuerySendEnabledResponse_Closure closure,
                       void *closure_data);
};
typedef void (*Cosmos__Bank__V1beta1__Query_ServiceDestroy)(Cosmos__Bank__V1beta1__Query_Service *);
void cosmos__bank__v1beta1__query__init (Cosmos__Bank__V1beta1__Query_Service *service,
                                         Cosmos__Bank__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__BANK__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__bank__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__BANK__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__BANK__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## balance,\
      function_prefix__ ## all_balances,\
      function_prefix__ ## spendable_balances,\
      function_prefix__ ## spendable_balance_by_denom,\
      function_prefix__ ## total_supply,\
      function_prefix__ ## supply_of,\
      function_prefix__ ## params,\
      function_prefix__ ## denoms_metadata,\
      function_prefix__ ## denom_metadata,\
      function_prefix__ ## denom_metadata_by_query_string,\
      function_prefix__ ## denom_owners,\
      function_prefix__ ## denom_owners_by_query,\
      function_prefix__ ## send_enabled  }
void cosmos__bank__v1beta1__query__balance(ProtobufCService *service,
                                           const Cosmos__Bank__V1beta1__QueryBalanceRequest *input,
                                           Cosmos__Bank__V1beta1__QueryBalanceResponse_Closure closure,
                                           void *closure_data);
void cosmos__bank__v1beta1__query__all_balances(ProtobufCService *service,
                                                const Cosmos__Bank__V1beta1__QueryAllBalancesRequest *input,
                                                Cosmos__Bank__V1beta1__QueryAllBalancesResponse_Closure closure,
                                                void *closure_data);
void cosmos__bank__v1beta1__query__spendable_balances(ProtobufCService *service,
                                                      const Cosmos__Bank__V1beta1__QuerySpendableBalancesRequest *input,
                                                      Cosmos__Bank__V1beta1__QuerySpendableBalancesResponse_Closure closure,
                                                      void *closure_data);
void cosmos__bank__v1beta1__query__spendable_balance_by_denom(ProtobufCService *service,
                                                              const Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomRequest *input,
                                                              Cosmos__Bank__V1beta1__QuerySpendableBalanceByDenomResponse_Closure closure,
                                                              void *closure_data);
void cosmos__bank__v1beta1__query__total_supply(ProtobufCService *service,
                                                const Cosmos__Bank__V1beta1__QueryTotalSupplyRequest *input,
                                                Cosmos__Bank__V1beta1__QueryTotalSupplyResponse_Closure closure,
                                                void *closure_data);
void cosmos__bank__v1beta1__query__supply_of(ProtobufCService *service,
                                             const Cosmos__Bank__V1beta1__QuerySupplyOfRequest *input,
                                             Cosmos__Bank__V1beta1__QuerySupplyOfResponse_Closure closure,
                                             void *closure_data);
void cosmos__bank__v1beta1__query__params(ProtobufCService *service,
                                          const Cosmos__Bank__V1beta1__QueryParamsRequest *input,
                                          Cosmos__Bank__V1beta1__QueryParamsResponse_Closure closure,
                                          void *closure_data);
void cosmos__bank__v1beta1__query__denoms_metadata(ProtobufCService *service,
                                                   const Cosmos__Bank__V1beta1__QueryDenomsMetadataRequest *input,
                                                   Cosmos__Bank__V1beta1__QueryDenomsMetadataResponse_Closure closure,
                                                   void *closure_data);
void cosmos__bank__v1beta1__query__denom_metadata(ProtobufCService *service,
                                                  const Cosmos__Bank__V1beta1__QueryDenomMetadataRequest *input,
                                                  Cosmos__Bank__V1beta1__QueryDenomMetadataResponse_Closure closure,
                                                  void *closure_data);
void cosmos__bank__v1beta1__query__denom_metadata_by_query_string(ProtobufCService *service,
                                                                  const Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringRequest *input,
                                                                  Cosmos__Bank__V1beta1__QueryDenomMetadataByQueryStringResponse_Closure closure,
                                                                  void *closure_data);
void cosmos__bank__v1beta1__query__denom_owners(ProtobufCService *service,
                                                const Cosmos__Bank__V1beta1__QueryDenomOwnersRequest *input,
                                                Cosmos__Bank__V1beta1__QueryDenomOwnersResponse_Closure closure,
                                                void *closure_data);
void cosmos__bank__v1beta1__query__denom_owners_by_query(ProtobufCService *service,
                                                         const Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryRequest *input,
                                                         Cosmos__Bank__V1beta1__QueryDenomOwnersByQueryResponse_Closure closure,
                                                         void *closure_data);
void cosmos__bank__v1beta1__query__send_enabled(ProtobufCService *service,
                                                const Cosmos__Bank__V1beta1__QuerySendEnabledRequest *input,
                                                Cosmos__Bank__V1beta1__QuerySendEnabledResponse_Closure closure,
                                                void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_balance_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_balance_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_all_balances_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_all_balances_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_spendable_balances_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_spendable_balances_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_spendable_balance_by_denom_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_spendable_balance_by_denom_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_total_supply_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_total_supply_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_supply_of_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_supply_of_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_params_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_params_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denoms_metadata_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denoms_metadata_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_metadata_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_metadata_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_metadata_by_query_string_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_metadata_by_query_string_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_owners_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__denom_owner__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_owners_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_owners_by_query_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_denom_owners_by_query_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_send_enabled_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__query_send_enabled_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__bank__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fquery_2eproto__INCLUDED */
