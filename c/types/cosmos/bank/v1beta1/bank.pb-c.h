/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/bank/v1beta1/bank.proto */

#ifndef PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fbank_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fbank_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Bank__V1beta1__Params Cosmos__Bank__V1beta1__Params;
typedef struct Cosmos__Bank__V1beta1__SendEnabled Cosmos__Bank__V1beta1__SendEnabled;
typedef struct Cosmos__Bank__V1beta1__Input Cosmos__Bank__V1beta1__Input;
typedef struct Cosmos__Bank__V1beta1__Output Cosmos__Bank__V1beta1__Output;
typedef struct Cosmos__Bank__V1beta1__Supply Cosmos__Bank__V1beta1__Supply;
typedef struct Cosmos__Bank__V1beta1__DenomUnit Cosmos__Bank__V1beta1__DenomUnit;
typedef struct Cosmos__Bank__V1beta1__Metadata Cosmos__Bank__V1beta1__Metadata;


/* --- enums --- */


/* --- messages --- */

/*
 * Params defines the parameters for the bank module.
 */
struct  Cosmos__Bank__V1beta1__Params
{
  ProtobufCMessage base;
  /*
   * Deprecated: Use of SendEnabled in params is deprecated.
   * For genesis, use the newly added send_enabled field in the genesis object.
   * Storage, lookup, and manipulation of this information is now in the keeper.
   * As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
   */
  size_t n_send_enabled PROTOBUF_C__DEPRECATED;
  Cosmos__Bank__V1beta1__SendEnabled **send_enabled PROTOBUF_C__DEPRECATED;
  protobuf_c_boolean default_send_enabled;
};
#define COSMOS__BANK__V1BETA1__PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__params__descriptor) \
, 0,NULL, 0 }


/*
 * SendEnabled maps coin denom to a send_enabled status (whether a denom is
 * sendable).
 */
struct  Cosmos__Bank__V1beta1__SendEnabled
{
  ProtobufCMessage base;
  char *denom;
  protobuf_c_boolean enabled;
};
#define COSMOS__BANK__V1BETA1__SEND_ENABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__send_enabled__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/*
 * Input models transaction input.
 */
struct  Cosmos__Bank__V1beta1__Input
{
  ProtobufCMessage base;
  char *address;
  size_t n_coins;
  Cosmos__Base__V1beta1__Coin **coins;
};
#define COSMOS__BANK__V1BETA1__INPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__input__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * Output models transaction outputs.
 */
struct  Cosmos__Bank__V1beta1__Output
{
  ProtobufCMessage base;
  char *address;
  size_t n_coins;
  Cosmos__Base__V1beta1__Coin **coins;
};
#define COSMOS__BANK__V1BETA1__OUTPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__output__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * Supply represents a struct that passively keeps track of the total supply
 * amounts in the network.
 * This message is deprecated now that supply is indexed by denom.
 */
struct  Cosmos__Bank__V1beta1__Supply
{
  ProtobufCMessage base;
  size_t n_total;
  Cosmos__Base__V1beta1__Coin **total;
};
#define COSMOS__BANK__V1BETA1__SUPPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__supply__descriptor) \
, 0,NULL }


/*
 * DenomUnit represents a struct that describes a given
 * denomination unit of the basic token.
 */
struct  Cosmos__Bank__V1beta1__DenomUnit
{
  ProtobufCMessage base;
  /*
   * denom represents the string name of the given denom unit (e.g uatom).
   */
  char *denom;
  /*
   * exponent represents power of 10 exponent that one must
   * raise the base_denom to in order to equal the given DenomUnit's denom
   * 1 denom = 10^exponent base_denom
   * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
   * exponent = 6, thus: 1 atom = 10^6 uatom).
   */
  uint32_t exponent;
  /*
   * aliases is a list of string aliases for the given denom
   */
  size_t n_aliases;
  char **aliases;
};
#define COSMOS__BANK__V1BETA1__DENOM_UNIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__denom_unit__descriptor) \
, (char *)protobuf_c_empty_string, 0, 0,NULL }


/*
 * Metadata represents a struct that describes
 * a basic token.
 */
struct  Cosmos__Bank__V1beta1__Metadata
{
  ProtobufCMessage base;
  char *description;
  /*
   * denom_units represents the list of DenomUnit's for a given coin
   */
  size_t n_denom_units;
  Cosmos__Bank__V1beta1__DenomUnit **denom_units;
  /*
   * base represents the base denom (should be the DenomUnit with exponent = 0).
   */
  char *base;
  /*
   * display indicates the suggested denom that should be
   * displayed in clients.
   */
  char *display;
  /*
   * name defines the name of the token (eg: Cosmos Atom)
   */
  char *name;
  /*
   * symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
   * be the same as the display.
   */
  char *symbol;
  /*
   * URI to a document (on or off-chain) that contains additional information. Optional.
   */
  char *uri;
  /*
   * URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
   * the document didn't change. Optional.
   */
  char *uri_hash;
};
#define COSMOS__BANK__V1BETA1__METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__bank__v1beta1__metadata__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Cosmos__Bank__V1beta1__Params methods */
void   cosmos__bank__v1beta1__params__init
                     (Cosmos__Bank__V1beta1__Params         *message);
size_t cosmos__bank__v1beta1__params__get_packed_size
                     (const Cosmos__Bank__V1beta1__Params   *message);
size_t cosmos__bank__v1beta1__params__pack
                     (const Cosmos__Bank__V1beta1__Params   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__params__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__Params   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__Params *
       cosmos__bank__v1beta1__params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__params__free_unpacked
                     (Cosmos__Bank__V1beta1__Params *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__SendEnabled methods */
void   cosmos__bank__v1beta1__send_enabled__init
                     (Cosmos__Bank__V1beta1__SendEnabled         *message);
size_t cosmos__bank__v1beta1__send_enabled__get_packed_size
                     (const Cosmos__Bank__V1beta1__SendEnabled   *message);
size_t cosmos__bank__v1beta1__send_enabled__pack
                     (const Cosmos__Bank__V1beta1__SendEnabled   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__send_enabled__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__SendEnabled   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__SendEnabled *
       cosmos__bank__v1beta1__send_enabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__send_enabled__free_unpacked
                     (Cosmos__Bank__V1beta1__SendEnabled *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__Input methods */
void   cosmos__bank__v1beta1__input__init
                     (Cosmos__Bank__V1beta1__Input         *message);
size_t cosmos__bank__v1beta1__input__get_packed_size
                     (const Cosmos__Bank__V1beta1__Input   *message);
size_t cosmos__bank__v1beta1__input__pack
                     (const Cosmos__Bank__V1beta1__Input   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__input__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__Input   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__Input *
       cosmos__bank__v1beta1__input__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__input__free_unpacked
                     (Cosmos__Bank__V1beta1__Input *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__Output methods */
void   cosmos__bank__v1beta1__output__init
                     (Cosmos__Bank__V1beta1__Output         *message);
size_t cosmos__bank__v1beta1__output__get_packed_size
                     (const Cosmos__Bank__V1beta1__Output   *message);
size_t cosmos__bank__v1beta1__output__pack
                     (const Cosmos__Bank__V1beta1__Output   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__output__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__Output   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__Output *
       cosmos__bank__v1beta1__output__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__output__free_unpacked
                     (Cosmos__Bank__V1beta1__Output *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__Supply methods */
void   cosmos__bank__v1beta1__supply__init
                     (Cosmos__Bank__V1beta1__Supply         *message);
size_t cosmos__bank__v1beta1__supply__get_packed_size
                     (const Cosmos__Bank__V1beta1__Supply   *message);
size_t cosmos__bank__v1beta1__supply__pack
                     (const Cosmos__Bank__V1beta1__Supply   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__supply__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__Supply   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__Supply *
       cosmos__bank__v1beta1__supply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__supply__free_unpacked
                     (Cosmos__Bank__V1beta1__Supply *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__DenomUnit methods */
void   cosmos__bank__v1beta1__denom_unit__init
                     (Cosmos__Bank__V1beta1__DenomUnit         *message);
size_t cosmos__bank__v1beta1__denom_unit__get_packed_size
                     (const Cosmos__Bank__V1beta1__DenomUnit   *message);
size_t cosmos__bank__v1beta1__denom_unit__pack
                     (const Cosmos__Bank__V1beta1__DenomUnit   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__denom_unit__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__DenomUnit   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__DenomUnit *
       cosmos__bank__v1beta1__denom_unit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__denom_unit__free_unpacked
                     (Cosmos__Bank__V1beta1__DenomUnit *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Bank__V1beta1__Metadata methods */
void   cosmos__bank__v1beta1__metadata__init
                     (Cosmos__Bank__V1beta1__Metadata         *message);
size_t cosmos__bank__v1beta1__metadata__get_packed_size
                     (const Cosmos__Bank__V1beta1__Metadata   *message);
size_t cosmos__bank__v1beta1__metadata__pack
                     (const Cosmos__Bank__V1beta1__Metadata   *message,
                      uint8_t             *out);
size_t cosmos__bank__v1beta1__metadata__pack_to_buffer
                     (const Cosmos__Bank__V1beta1__Metadata   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Bank__V1beta1__Metadata *
       cosmos__bank__v1beta1__metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__bank__v1beta1__metadata__free_unpacked
                     (Cosmos__Bank__V1beta1__Metadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Bank__V1beta1__Params_Closure)
                 (const Cosmos__Bank__V1beta1__Params *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__SendEnabled_Closure)
                 (const Cosmos__Bank__V1beta1__SendEnabled *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__Input_Closure)
                 (const Cosmos__Bank__V1beta1__Input *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__Output_Closure)
                 (const Cosmos__Bank__V1beta1__Output *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__Supply_Closure)
                 (const Cosmos__Bank__V1beta1__Supply *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__DenomUnit_Closure)
                 (const Cosmos__Bank__V1beta1__DenomUnit *message,
                  void *closure_data);
typedef void (*Cosmos__Bank__V1beta1__Metadata_Closure)
                 (const Cosmos__Bank__V1beta1__Metadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__params__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__send_enabled__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__input__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__output__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__supply__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__denom_unit__descriptor;
extern const ProtobufCMessageDescriptor cosmos__bank__v1beta1__metadata__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fbank_2fv1beta1_2fbank_2eproto__INCLUDED */
