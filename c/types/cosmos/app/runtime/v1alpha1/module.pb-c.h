/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/app/runtime/v1alpha1/module.proto */

#ifndef PROTOBUF_C_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/app/v1alpha1/module.pb-c.h"

typedef struct Cosmos__App__Runtime__V1alpha1__Module Cosmos__App__Runtime__V1alpha1__Module;
typedef struct Cosmos__App__Runtime__V1alpha1__StoreKeyConfig Cosmos__App__Runtime__V1alpha1__StoreKeyConfig;


/* --- enums --- */


/* --- messages --- */

/*
 * Module is the config object for the runtime module.
 */
struct  Cosmos__App__Runtime__V1alpha1__Module
{
  ProtobufCMessage base;
  /*
   * app_name is the name of the app.
   */
  char *app_name;
  /*
   * begin_blockers specifies the module names of begin blockers
   * to call in the order in which they should be called. If this is left empty
   * no begin blocker will be registered.
   */
  size_t n_begin_blockers;
  char **begin_blockers;
  /*
   * end_blockers specifies the module names of the end blockers
   * to call in the order in which they should be called. If this is left empty
   * no end blocker will be registered.
   */
  size_t n_end_blockers;
  char **end_blockers;
  /*
   * init_genesis specifies the module names of init genesis functions
   * to call in the order in which they should be called. If this is left empty
   * no init genesis function will be registered.
   */
  size_t n_init_genesis;
  char **init_genesis;
  /*
   * export_genesis specifies the order in which to export module genesis data.
   * If this is left empty, the init_genesis order will be used for export genesis
   * if it is specified.
   */
  size_t n_export_genesis;
  char **export_genesis;
  /*
   * override_store_keys is an optional list of overrides for the module store keys
   * to be used in keeper construction.
   */
  size_t n_override_store_keys;
  Cosmos__App__Runtime__V1alpha1__StoreKeyConfig **override_store_keys;
  /*
   * skip_store_keys is an optional list of store keys to skip when constructing the
   * module's keeper. This is useful when a module does not have a store key.
   * NOTE: the provided environment variable will have a fake store service.
   */
  size_t n_skip_store_keys;
  char **skip_store_keys;
  /*
   * order_migrations defines the order in which module migrations are performed.
   * If this is left empty, it uses the default migration order.
   * https://pkg.go.dev/github.com/cosmos/cosmos-sdk/types/module#DefaultMigrationsOrder
   */
  size_t n_order_migrations;
  char **order_migrations;
  /*
   * precommiters specifies the module names of the precommiters
   * to call in the order in which they should be called. If this is left empty
   * no precommit function will be registered.
   */
  size_t n_precommiters;
  char **precommiters;
  /*
   * prepare_check_staters specifies the module names of the prepare_check_staters
   * to call in the order in which they should be called. If this is left empty
   * no preparecheckstate function will be registered.
   */
  size_t n_prepare_check_staters;
  char **prepare_check_staters;
  /*
   * pre_blockers specifies the module names of pre blockers
   * to call in the order in which they should be called. If this is left empty
   * no pre blocker will be registered.
   */
  size_t n_pre_blockers;
  char **pre_blockers;
};
#define COSMOS__APP__RUNTIME__V1ALPHA1__MODULE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__app__runtime__v1alpha1__module__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * StoreKeyConfig may be supplied to override the default module store key, which
 * is the module name.
 */
struct  Cosmos__App__Runtime__V1alpha1__StoreKeyConfig
{
  ProtobufCMessage base;
  /*
   * name of the module to override the store key of
   */
  char *module_name;
  /*
   * the kv store key to use instead of the module name.
   */
  char *kv_store_key;
};
#define COSMOS__APP__RUNTIME__V1ALPHA1__STORE_KEY_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__app__runtime__v1alpha1__store_key_config__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Cosmos__App__Runtime__V1alpha1__Module methods */
void   cosmos__app__runtime__v1alpha1__module__init
                     (Cosmos__App__Runtime__V1alpha1__Module         *message);
size_t cosmos__app__runtime__v1alpha1__module__get_packed_size
                     (const Cosmos__App__Runtime__V1alpha1__Module   *message);
size_t cosmos__app__runtime__v1alpha1__module__pack
                     (const Cosmos__App__Runtime__V1alpha1__Module   *message,
                      uint8_t             *out);
size_t cosmos__app__runtime__v1alpha1__module__pack_to_buffer
                     (const Cosmos__App__Runtime__V1alpha1__Module   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__App__Runtime__V1alpha1__Module *
       cosmos__app__runtime__v1alpha1__module__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__app__runtime__v1alpha1__module__free_unpacked
                     (Cosmos__App__Runtime__V1alpha1__Module *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__App__Runtime__V1alpha1__StoreKeyConfig methods */
void   cosmos__app__runtime__v1alpha1__store_key_config__init
                     (Cosmos__App__Runtime__V1alpha1__StoreKeyConfig         *message);
size_t cosmos__app__runtime__v1alpha1__store_key_config__get_packed_size
                     (const Cosmos__App__Runtime__V1alpha1__StoreKeyConfig   *message);
size_t cosmos__app__runtime__v1alpha1__store_key_config__pack
                     (const Cosmos__App__Runtime__V1alpha1__StoreKeyConfig   *message,
                      uint8_t             *out);
size_t cosmos__app__runtime__v1alpha1__store_key_config__pack_to_buffer
                     (const Cosmos__App__Runtime__V1alpha1__StoreKeyConfig   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__App__Runtime__V1alpha1__StoreKeyConfig *
       cosmos__app__runtime__v1alpha1__store_key_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__app__runtime__v1alpha1__store_key_config__free_unpacked
                     (Cosmos__App__Runtime__V1alpha1__StoreKeyConfig *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__App__Runtime__V1alpha1__Module_Closure)
                 (const Cosmos__App__Runtime__V1alpha1__Module *message,
                  void *closure_data);
typedef void (*Cosmos__App__Runtime__V1alpha1__StoreKeyConfig_Closure)
                 (const Cosmos__App__Runtime__V1alpha1__StoreKeyConfig *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__app__runtime__v1alpha1__module__descriptor;
extern const ProtobufCMessageDescriptor cosmos__app__runtime__v1alpha1__store_key_config__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto__INCLUDED */
