/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/authz/v1beta1/authz.proto */

#ifndef PROTOBUF_C_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "amino/amino.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/any.pb-c.h"

typedef struct Cosmos__Authz__V1beta1__GenericAuthorization Cosmos__Authz__V1beta1__GenericAuthorization;
typedef struct Cosmos__Authz__V1beta1__Grant Cosmos__Authz__V1beta1__Grant;
typedef struct Cosmos__Authz__V1beta1__GrantAuthorization Cosmos__Authz__V1beta1__GrantAuthorization;
typedef struct Cosmos__Authz__V1beta1__GrantQueueItem Cosmos__Authz__V1beta1__GrantQueueItem;


/* --- enums --- */


/* --- messages --- */

/*
 * GenericAuthorization gives the grantee unrestricted permissions to execute
 * the provided method on behalf of the granter's account.
 */
struct  Cosmos__Authz__V1beta1__GenericAuthorization
{
  ProtobufCMessage base;
  /*
   * Msg, identified by it's type URL, to grant unrestricted permissions to execute
   */
  char *msg;
};
#define COSMOS__AUTHZ__V1BETA1__GENERIC_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__authz__v1beta1__generic_authorization__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * Grant gives permissions to execute
 * the provide method with expiration time.
 */
struct  Cosmos__Authz__V1beta1__Grant
{
  ProtobufCMessage base;
  Google__Protobuf__Any *authorization;
  /*
   * time when the grant will expire and will be pruned. If null, then the grant
   * doesn't have a time expiration (other conditions  in `authorization`
   * may apply to invalidate the grant)
   */
  Google__Protobuf__Timestamp *expiration;
};
#define COSMOS__AUTHZ__V1BETA1__GRANT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__authz__v1beta1__grant__descriptor) \
, NULL, NULL }


/*
 * GrantAuthorization extends a grant with both the addresses of the grantee and granter.
 * It is used in genesis.proto and query.proto
 */
struct  Cosmos__Authz__V1beta1__GrantAuthorization
{
  ProtobufCMessage base;
  char *granter;
  char *grantee;
  Google__Protobuf__Any *authorization;
  Google__Protobuf__Timestamp *expiration;
};
#define COSMOS__AUTHZ__V1BETA1__GRANT_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__authz__v1beta1__grant_authorization__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL }


/*
 * GrantQueueItem contains the list of TypeURL of a sdk.Msg.
 */
struct  Cosmos__Authz__V1beta1__GrantQueueItem
{
  ProtobufCMessage base;
  /*
   * msg_type_urls contains the list of TypeURL of a sdk.Msg.
   */
  size_t n_msg_type_urls;
  char **msg_type_urls;
};
#define COSMOS__AUTHZ__V1BETA1__GRANT_QUEUE_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__authz__v1beta1__grant_queue_item__descriptor) \
, 0,NULL }


/* Cosmos__Authz__V1beta1__GenericAuthorization methods */
void   cosmos__authz__v1beta1__generic_authorization__init
                     (Cosmos__Authz__V1beta1__GenericAuthorization         *message);
size_t cosmos__authz__v1beta1__generic_authorization__get_packed_size
                     (const Cosmos__Authz__V1beta1__GenericAuthorization   *message);
size_t cosmos__authz__v1beta1__generic_authorization__pack
                     (const Cosmos__Authz__V1beta1__GenericAuthorization   *message,
                      uint8_t             *out);
size_t cosmos__authz__v1beta1__generic_authorization__pack_to_buffer
                     (const Cosmos__Authz__V1beta1__GenericAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Authz__V1beta1__GenericAuthorization *
       cosmos__authz__v1beta1__generic_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__authz__v1beta1__generic_authorization__free_unpacked
                     (Cosmos__Authz__V1beta1__GenericAuthorization *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Authz__V1beta1__Grant methods */
void   cosmos__authz__v1beta1__grant__init
                     (Cosmos__Authz__V1beta1__Grant         *message);
size_t cosmos__authz__v1beta1__grant__get_packed_size
                     (const Cosmos__Authz__V1beta1__Grant   *message);
size_t cosmos__authz__v1beta1__grant__pack
                     (const Cosmos__Authz__V1beta1__Grant   *message,
                      uint8_t             *out);
size_t cosmos__authz__v1beta1__grant__pack_to_buffer
                     (const Cosmos__Authz__V1beta1__Grant   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Authz__V1beta1__Grant *
       cosmos__authz__v1beta1__grant__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__authz__v1beta1__grant__free_unpacked
                     (Cosmos__Authz__V1beta1__Grant *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Authz__V1beta1__GrantAuthorization methods */
void   cosmos__authz__v1beta1__grant_authorization__init
                     (Cosmos__Authz__V1beta1__GrantAuthorization         *message);
size_t cosmos__authz__v1beta1__grant_authorization__get_packed_size
                     (const Cosmos__Authz__V1beta1__GrantAuthorization   *message);
size_t cosmos__authz__v1beta1__grant_authorization__pack
                     (const Cosmos__Authz__V1beta1__GrantAuthorization   *message,
                      uint8_t             *out);
size_t cosmos__authz__v1beta1__grant_authorization__pack_to_buffer
                     (const Cosmos__Authz__V1beta1__GrantAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Authz__V1beta1__GrantAuthorization *
       cosmos__authz__v1beta1__grant_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__authz__v1beta1__grant_authorization__free_unpacked
                     (Cosmos__Authz__V1beta1__GrantAuthorization *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Authz__V1beta1__GrantQueueItem methods */
void   cosmos__authz__v1beta1__grant_queue_item__init
                     (Cosmos__Authz__V1beta1__GrantQueueItem         *message);
size_t cosmos__authz__v1beta1__grant_queue_item__get_packed_size
                     (const Cosmos__Authz__V1beta1__GrantQueueItem   *message);
size_t cosmos__authz__v1beta1__grant_queue_item__pack
                     (const Cosmos__Authz__V1beta1__GrantQueueItem   *message,
                      uint8_t             *out);
size_t cosmos__authz__v1beta1__grant_queue_item__pack_to_buffer
                     (const Cosmos__Authz__V1beta1__GrantQueueItem   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Authz__V1beta1__GrantQueueItem *
       cosmos__authz__v1beta1__grant_queue_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__authz__v1beta1__grant_queue_item__free_unpacked
                     (Cosmos__Authz__V1beta1__GrantQueueItem *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Authz__V1beta1__GenericAuthorization_Closure)
                 (const Cosmos__Authz__V1beta1__GenericAuthorization *message,
                  void *closure_data);
typedef void (*Cosmos__Authz__V1beta1__Grant_Closure)
                 (const Cosmos__Authz__V1beta1__Grant *message,
                  void *closure_data);
typedef void (*Cosmos__Authz__V1beta1__GrantAuthorization_Closure)
                 (const Cosmos__Authz__V1beta1__GrantAuthorization *message,
                  void *closure_data);
typedef void (*Cosmos__Authz__V1beta1__GrantQueueItem_Closure)
                 (const Cosmos__Authz__V1beta1__GrantQueueItem *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__authz__v1beta1__generic_authorization__descriptor;
extern const ProtobufCMessageDescriptor cosmos__authz__v1beta1__grant__descriptor;
extern const ProtobufCMessageDescriptor cosmos__authz__v1beta1__grant_authorization__descriptor;
extern const ProtobufCMessageDescriptor cosmos__authz__v1beta1__grant_queue_item__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto__INCLUDED */
