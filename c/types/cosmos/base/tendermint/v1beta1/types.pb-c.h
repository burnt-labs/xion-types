/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/base/tendermint/v1beta1/types.proto */

#ifndef PROTOBUF_C_cosmos_2fbase_2ftendermint_2fv1beta1_2ftypes_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fbase_2ftendermint_2fv1beta1_2ftypes_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "tendermint/types/types.pb-c.h"
#include "tendermint/types/evidence.pb-c.h"
#include "tendermint/version/types.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Base__Tendermint__V1beta1__Block Cosmos__Base__Tendermint__V1beta1__Block;
typedef struct Cosmos__Base__Tendermint__V1beta1__Header Cosmos__Base__Tendermint__V1beta1__Header;


/* --- enums --- */


/* --- messages --- */

/*
 * Block is tendermint type Block, with the Header proposer address
 * field converted to bech32 string.
 */
struct  Cosmos__Base__Tendermint__V1beta1__Block
{
  ProtobufCMessage base;
  Cosmos__Base__Tendermint__V1beta1__Header *header;
  Tendermint__Types__Data *data;
  Tendermint__Types__EvidenceList *evidence;
  Tendermint__Types__Commit *last_commit;
};
#define COSMOS__BASE__TENDERMINT__V1BETA1__BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__base__tendermint__v1beta1__block__descriptor) \
, NULL, NULL, NULL, NULL }


/*
 * Header defines the structure of a Tendermint block header.
 */
struct  Cosmos__Base__Tendermint__V1beta1__Header
{
  ProtobufCMessage base;
  /*
   * basic block info
   */
  Tendermint__Version__Consensus *version;
  char *chain_id;
  int64_t height;
  Google__Protobuf__Timestamp *time;
  /*
   * prev block info
   */
  Tendermint__Types__BlockID *last_block_id;
  /*
   * hashes of block data
   */
  /*
   * commit from validators from the last block
   */
  ProtobufCBinaryData last_commit_hash;
  /*
   * transactions
   */
  ProtobufCBinaryData data_hash;
  /*
   * hashes from the app output from the prev block
   */
  /*
   * validators for the current block
   */
  ProtobufCBinaryData validators_hash;
  /*
   * validators for the next block
   */
  ProtobufCBinaryData next_validators_hash;
  /*
   * consensus params for current block
   */
  ProtobufCBinaryData consensus_hash;
  /*
   * state after txs from the previous block
   */
  ProtobufCBinaryData app_hash;
  /*
   * root hash of all results from the txs from the previous block
   */
  ProtobufCBinaryData last_results_hash;
  /*
   * consensus info
   */
  /*
   * evidence included in the block
   */
  ProtobufCBinaryData evidence_hash;
  /*
   * proposer_address is the original block proposer address, formatted as a Bech32 string.
   * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
   * for better UX.
   */
  /*
   * original proposer of the block
   */
  char *proposer_address;
};
#define COSMOS__BASE__TENDERMINT__V1BETA1__HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__base__tendermint__v1beta1__header__descriptor) \
, NULL, (char *)protobuf_c_empty_string, 0, NULL, NULL, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, (char *)protobuf_c_empty_string }


/* Cosmos__Base__Tendermint__V1beta1__Block methods */
void   cosmos__base__tendermint__v1beta1__block__init
                     (Cosmos__Base__Tendermint__V1beta1__Block         *message);
size_t cosmos__base__tendermint__v1beta1__block__get_packed_size
                     (const Cosmos__Base__Tendermint__V1beta1__Block   *message);
size_t cosmos__base__tendermint__v1beta1__block__pack
                     (const Cosmos__Base__Tendermint__V1beta1__Block   *message,
                      uint8_t             *out);
size_t cosmos__base__tendermint__v1beta1__block__pack_to_buffer
                     (const Cosmos__Base__Tendermint__V1beta1__Block   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Base__Tendermint__V1beta1__Block *
       cosmos__base__tendermint__v1beta1__block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__base__tendermint__v1beta1__block__free_unpacked
                     (Cosmos__Base__Tendermint__V1beta1__Block *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Base__Tendermint__V1beta1__Header methods */
void   cosmos__base__tendermint__v1beta1__header__init
                     (Cosmos__Base__Tendermint__V1beta1__Header         *message);
size_t cosmos__base__tendermint__v1beta1__header__get_packed_size
                     (const Cosmos__Base__Tendermint__V1beta1__Header   *message);
size_t cosmos__base__tendermint__v1beta1__header__pack
                     (const Cosmos__Base__Tendermint__V1beta1__Header   *message,
                      uint8_t             *out);
size_t cosmos__base__tendermint__v1beta1__header__pack_to_buffer
                     (const Cosmos__Base__Tendermint__V1beta1__Header   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Base__Tendermint__V1beta1__Header *
       cosmos__base__tendermint__v1beta1__header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__base__tendermint__v1beta1__header__free_unpacked
                     (Cosmos__Base__Tendermint__V1beta1__Header *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Base__Tendermint__V1beta1__Block_Closure)
                 (const Cosmos__Base__Tendermint__V1beta1__Block *message,
                  void *closure_data);
typedef void (*Cosmos__Base__Tendermint__V1beta1__Header_Closure)
                 (const Cosmos__Base__Tendermint__V1beta1__Header *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__base__tendermint__v1beta1__block__descriptor;
extern const ProtobufCMessageDescriptor cosmos__base__tendermint__v1beta1__header__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fbase_2ftendermint_2fv1beta1_2ftypes_2eproto__INCLUDED */
