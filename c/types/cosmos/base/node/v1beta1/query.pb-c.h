/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/base/node/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "gogoproto/gogo.pb-c.h"

typedef struct Cosmos__Base__Node__V1beta1__ConfigRequest Cosmos__Base__Node__V1beta1__ConfigRequest;
typedef struct Cosmos__Base__Node__V1beta1__ConfigResponse Cosmos__Base__Node__V1beta1__ConfigResponse;
typedef struct Cosmos__Base__Node__V1beta1__StatusRequest Cosmos__Base__Node__V1beta1__StatusRequest;
typedef struct Cosmos__Base__Node__V1beta1__StatusResponse Cosmos__Base__Node__V1beta1__StatusResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * ConfigRequest defines the request structure for the Config gRPC query.
 */
struct  Cosmos__Base__Node__V1beta1__ConfigRequest
{
  ProtobufCMessage base;
};
#define COSMOS__BASE__NODE__V1BETA1__CONFIG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__base__node__v1beta1__config_request__descriptor) \
 }


/*
 * ConfigResponse defines the response structure for the Config gRPC query.
 */
struct  Cosmos__Base__Node__V1beta1__ConfigResponse
{
  ProtobufCMessage base;
  char *minimum_gas_price;
  char *pruning_keep_recent;
  char *pruning_interval;
  uint64_t halt_height;
};
#define COSMOS__BASE__NODE__V1BETA1__CONFIG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__base__node__v1beta1__config_response__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * StateRequest defines the request structure for the status of a node.
 */
struct  Cosmos__Base__Node__V1beta1__StatusRequest
{
  ProtobufCMessage base;
};
#define COSMOS__BASE__NODE__V1BETA1__STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__base__node__v1beta1__status_request__descriptor) \
 }


/*
 * StateResponse defines the response structure for the status of a node.
 */
struct  Cosmos__Base__Node__V1beta1__StatusResponse
{
  ProtobufCMessage base;
  /*
   * earliest block height available in the store
   */
  uint64_t earliest_store_height;
  /*
   * current block height
   */
  uint64_t height;
  /*
   * block height timestamp
   */
  Google__Protobuf__Timestamp *timestamp;
  /*
   * app hash of the current block
   */
  ProtobufCBinaryData app_hash;
  /*
   * validator hash provided by the consensus header
   */
  ProtobufCBinaryData validator_hash;
};
#define COSMOS__BASE__NODE__V1BETA1__STATUS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__base__node__v1beta1__status_response__descriptor) \
, 0, 0, NULL, {0,NULL}, {0,NULL} }


/* Cosmos__Base__Node__V1beta1__ConfigRequest methods */
void   cosmos__base__node__v1beta1__config_request__init
                     (Cosmos__Base__Node__V1beta1__ConfigRequest         *message);
size_t cosmos__base__node__v1beta1__config_request__get_packed_size
                     (const Cosmos__Base__Node__V1beta1__ConfigRequest   *message);
size_t cosmos__base__node__v1beta1__config_request__pack
                     (const Cosmos__Base__Node__V1beta1__ConfigRequest   *message,
                      uint8_t             *out);
size_t cosmos__base__node__v1beta1__config_request__pack_to_buffer
                     (const Cosmos__Base__Node__V1beta1__ConfigRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Base__Node__V1beta1__ConfigRequest *
       cosmos__base__node__v1beta1__config_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__base__node__v1beta1__config_request__free_unpacked
                     (Cosmos__Base__Node__V1beta1__ConfigRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Base__Node__V1beta1__ConfigResponse methods */
void   cosmos__base__node__v1beta1__config_response__init
                     (Cosmos__Base__Node__V1beta1__ConfigResponse         *message);
size_t cosmos__base__node__v1beta1__config_response__get_packed_size
                     (const Cosmos__Base__Node__V1beta1__ConfigResponse   *message);
size_t cosmos__base__node__v1beta1__config_response__pack
                     (const Cosmos__Base__Node__V1beta1__ConfigResponse   *message,
                      uint8_t             *out);
size_t cosmos__base__node__v1beta1__config_response__pack_to_buffer
                     (const Cosmos__Base__Node__V1beta1__ConfigResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Base__Node__V1beta1__ConfigResponse *
       cosmos__base__node__v1beta1__config_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__base__node__v1beta1__config_response__free_unpacked
                     (Cosmos__Base__Node__V1beta1__ConfigResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Base__Node__V1beta1__StatusRequest methods */
void   cosmos__base__node__v1beta1__status_request__init
                     (Cosmos__Base__Node__V1beta1__StatusRequest         *message);
size_t cosmos__base__node__v1beta1__status_request__get_packed_size
                     (const Cosmos__Base__Node__V1beta1__StatusRequest   *message);
size_t cosmos__base__node__v1beta1__status_request__pack
                     (const Cosmos__Base__Node__V1beta1__StatusRequest   *message,
                      uint8_t             *out);
size_t cosmos__base__node__v1beta1__status_request__pack_to_buffer
                     (const Cosmos__Base__Node__V1beta1__StatusRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Base__Node__V1beta1__StatusRequest *
       cosmos__base__node__v1beta1__status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__base__node__v1beta1__status_request__free_unpacked
                     (Cosmos__Base__Node__V1beta1__StatusRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Base__Node__V1beta1__StatusResponse methods */
void   cosmos__base__node__v1beta1__status_response__init
                     (Cosmos__Base__Node__V1beta1__StatusResponse         *message);
size_t cosmos__base__node__v1beta1__status_response__get_packed_size
                     (const Cosmos__Base__Node__V1beta1__StatusResponse   *message);
size_t cosmos__base__node__v1beta1__status_response__pack
                     (const Cosmos__Base__Node__V1beta1__StatusResponse   *message,
                      uint8_t             *out);
size_t cosmos__base__node__v1beta1__status_response__pack_to_buffer
                     (const Cosmos__Base__Node__V1beta1__StatusResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Base__Node__V1beta1__StatusResponse *
       cosmos__base__node__v1beta1__status_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__base__node__v1beta1__status_response__free_unpacked
                     (Cosmos__Base__Node__V1beta1__StatusResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Base__Node__V1beta1__ConfigRequest_Closure)
                 (const Cosmos__Base__Node__V1beta1__ConfigRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Base__Node__V1beta1__ConfigResponse_Closure)
                 (const Cosmos__Base__Node__V1beta1__ConfigResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Base__Node__V1beta1__StatusRequest_Closure)
                 (const Cosmos__Base__Node__V1beta1__StatusRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Base__Node__V1beta1__StatusResponse_Closure)
                 (const Cosmos__Base__Node__V1beta1__StatusResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Base__Node__V1beta1__Service_Service Cosmos__Base__Node__V1beta1__Service_Service;
struct Cosmos__Base__Node__V1beta1__Service_Service
{
  ProtobufCService base;
  void (*config)(Cosmos__Base__Node__V1beta1__Service_Service *service,
                 const Cosmos__Base__Node__V1beta1__ConfigRequest *input,
                 Cosmos__Base__Node__V1beta1__ConfigResponse_Closure closure,
                 void *closure_data);
  void (*status)(Cosmos__Base__Node__V1beta1__Service_Service *service,
                 const Cosmos__Base__Node__V1beta1__StatusRequest *input,
                 Cosmos__Base__Node__V1beta1__StatusResponse_Closure closure,
                 void *closure_data);
};
typedef void (*Cosmos__Base__Node__V1beta1__Service_ServiceDestroy)(Cosmos__Base__Node__V1beta1__Service_Service *);
void cosmos__base__node__v1beta1__service__init (Cosmos__Base__Node__V1beta1__Service_Service *service,
                                                 Cosmos__Base__Node__V1beta1__Service_ServiceDestroy destroy);
#define COSMOS__BASE__NODE__V1BETA1__SERVICE__BASE_INIT \
    { &cosmos__base__node__v1beta1__service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__BASE__NODE__V1BETA1__SERVICE__INIT(function_prefix__) \
    { COSMOS__BASE__NODE__V1BETA1__SERVICE__BASE_INIT,\
      function_prefix__ ## config,\
      function_prefix__ ## status  }
void cosmos__base__node__v1beta1__service__config(ProtobufCService *service,
                                                  const Cosmos__Base__Node__V1beta1__ConfigRequest *input,
                                                  Cosmos__Base__Node__V1beta1__ConfigResponse_Closure closure,
                                                  void *closure_data);
void cosmos__base__node__v1beta1__service__status(ProtobufCService *service,
                                                  const Cosmos__Base__Node__V1beta1__StatusRequest *input,
                                                  Cosmos__Base__Node__V1beta1__StatusResponse_Closure closure,
                                                  void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__base__node__v1beta1__config_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__base__node__v1beta1__config_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__base__node__v1beta1__status_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__base__node__v1beta1__status_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__base__node__v1beta1__service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto__INCLUDED */
