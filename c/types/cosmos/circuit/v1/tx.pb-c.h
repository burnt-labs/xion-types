/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/circuit/v1/tx.proto */

#ifndef PROTOBUF_C_cosmos_2fcircuit_2fv1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fcircuit_2fv1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/msg/v1/msg.pb-c.h"
#include "cosmos/circuit/v1/types.pb-c.h"

typedef struct Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker;
typedef struct Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse;
typedef struct Cosmos__Circuit__V1__MsgTripCircuitBreaker Cosmos__Circuit__V1__MsgTripCircuitBreaker;
typedef struct Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse;
typedef struct Cosmos__Circuit__V1__MsgResetCircuitBreaker Cosmos__Circuit__V1__MsgResetCircuitBreaker;
typedef struct Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgAuthorizeCircuitBreaker defines the Msg/AuthorizeCircuitBreaker request type.
 */
struct  Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker
{
  ProtobufCMessage base;
  /*
   * granter is the granter of the circuit breaker permissions and must have
   * LEVEL_SUPER_ADMIN.
   */
  char *granter;
  /*
   * grantee is the account authorized with the provided permissions.
   */
  char *grantee;
  /*
   * permissions are the circuit breaker permissions that the grantee receives.
   * These will overwrite any existing permissions. LEVEL_NONE_UNSPECIFIED can
   * be specified to revoke all permissions.
   */
  Cosmos__Circuit__V1__Permissions *permissions;
};
#define COSMOS__CIRCUIT__V1__MSG_AUTHORIZE_CIRCUIT_BREAKER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__circuit__v1__msg_authorize_circuit_breaker__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


/*
 * MsgAuthorizeCircuitBreakerResponse defines the Msg/AuthorizeCircuitBreaker response type.
 */
struct  Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean success;
};
#define COSMOS__CIRCUIT__V1__MSG_AUTHORIZE_CIRCUIT_BREAKER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__circuit__v1__msg_authorize_circuit_breaker_response__descriptor) \
, 0 }


/*
 * MsgTripCircuitBreaker defines the Msg/TripCircuitBreaker request type.
 */
struct  Cosmos__Circuit__V1__MsgTripCircuitBreaker
{
  ProtobufCMessage base;
  /*
   * authority is the account authorized to trip the circuit breaker.
   */
  char *authority;
  /*
   * msg_type_urls specifies a list of type URLs to immediately stop processing.
   * IF IT IS LEFT EMPTY, ALL MSG PROCESSING WILL STOP IMMEDIATELY.
   * This value is validated against the authority's permissions and if the
   * authority does not have permissions to trip the specified msg type URLs
   * (or all URLs), the operation will fail.
   */
  size_t n_msg_type_urls;
  char **msg_type_urls;
};
#define COSMOS__CIRCUIT__V1__MSG_TRIP_CIRCUIT_BREAKER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__circuit__v1__msg_trip_circuit_breaker__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * MsgTripCircuitBreakerResponse defines the Msg/TripCircuitBreaker response type.
 */
struct  Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean success;
};
#define COSMOS__CIRCUIT__V1__MSG_TRIP_CIRCUIT_BREAKER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__circuit__v1__msg_trip_circuit_breaker_response__descriptor) \
, 0 }


/*
 * MsgResetCircuitBreaker defines the Msg/ResetCircuitBreaker request type.
 */
struct  Cosmos__Circuit__V1__MsgResetCircuitBreaker
{
  ProtobufCMessage base;
  /*
   * authority is the account authorized to trip or reset the circuit breaker.
   */
  char *authority;
  /*
   * msg_type_urls specifies a list of Msg type URLs to resume processing. If
   * it is left empty all Msg processing for type URLs that the account is
   * authorized to trip will resume.
   */
  size_t n_msg_type_urls;
  char **msg_type_urls;
};
#define COSMOS__CIRCUIT__V1__MSG_RESET_CIRCUIT_BREAKER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__circuit__v1__msg_reset_circuit_breaker__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * MsgResetCircuitBreakerResponse defines the Msg/ResetCircuitBreaker response type.
 */
struct  Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean success;
};
#define COSMOS__CIRCUIT__V1__MSG_RESET_CIRCUIT_BREAKER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__circuit__v1__msg_reset_circuit_breaker_response__descriptor) \
, 0 }


/* Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker methods */
void   cosmos__circuit__v1__msg_authorize_circuit_breaker__init
                     (Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker         *message);
size_t cosmos__circuit__v1__msg_authorize_circuit_breaker__get_packed_size
                     (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker   *message);
size_t cosmos__circuit__v1__msg_authorize_circuit_breaker__pack
                     (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker   *message,
                      uint8_t             *out);
size_t cosmos__circuit__v1__msg_authorize_circuit_breaker__pack_to_buffer
                     (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker *
       cosmos__circuit__v1__msg_authorize_circuit_breaker__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__circuit__v1__msg_authorize_circuit_breaker__free_unpacked
                     (Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse methods */
void   cosmos__circuit__v1__msg_authorize_circuit_breaker_response__init
                     (Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse         *message);
size_t cosmos__circuit__v1__msg_authorize_circuit_breaker_response__get_packed_size
                     (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse   *message);
size_t cosmos__circuit__v1__msg_authorize_circuit_breaker_response__pack
                     (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse   *message,
                      uint8_t             *out);
size_t cosmos__circuit__v1__msg_authorize_circuit_breaker_response__pack_to_buffer
                     (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse *
       cosmos__circuit__v1__msg_authorize_circuit_breaker_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__circuit__v1__msg_authorize_circuit_breaker_response__free_unpacked
                     (Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Circuit__V1__MsgTripCircuitBreaker methods */
void   cosmos__circuit__v1__msg_trip_circuit_breaker__init
                     (Cosmos__Circuit__V1__MsgTripCircuitBreaker         *message);
size_t cosmos__circuit__v1__msg_trip_circuit_breaker__get_packed_size
                     (const Cosmos__Circuit__V1__MsgTripCircuitBreaker   *message);
size_t cosmos__circuit__v1__msg_trip_circuit_breaker__pack
                     (const Cosmos__Circuit__V1__MsgTripCircuitBreaker   *message,
                      uint8_t             *out);
size_t cosmos__circuit__v1__msg_trip_circuit_breaker__pack_to_buffer
                     (const Cosmos__Circuit__V1__MsgTripCircuitBreaker   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Circuit__V1__MsgTripCircuitBreaker *
       cosmos__circuit__v1__msg_trip_circuit_breaker__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__circuit__v1__msg_trip_circuit_breaker__free_unpacked
                     (Cosmos__Circuit__V1__MsgTripCircuitBreaker *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse methods */
void   cosmos__circuit__v1__msg_trip_circuit_breaker_response__init
                     (Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse         *message);
size_t cosmos__circuit__v1__msg_trip_circuit_breaker_response__get_packed_size
                     (const Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse   *message);
size_t cosmos__circuit__v1__msg_trip_circuit_breaker_response__pack
                     (const Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse   *message,
                      uint8_t             *out);
size_t cosmos__circuit__v1__msg_trip_circuit_breaker_response__pack_to_buffer
                     (const Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse *
       cosmos__circuit__v1__msg_trip_circuit_breaker_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__circuit__v1__msg_trip_circuit_breaker_response__free_unpacked
                     (Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Circuit__V1__MsgResetCircuitBreaker methods */
void   cosmos__circuit__v1__msg_reset_circuit_breaker__init
                     (Cosmos__Circuit__V1__MsgResetCircuitBreaker         *message);
size_t cosmos__circuit__v1__msg_reset_circuit_breaker__get_packed_size
                     (const Cosmos__Circuit__V1__MsgResetCircuitBreaker   *message);
size_t cosmos__circuit__v1__msg_reset_circuit_breaker__pack
                     (const Cosmos__Circuit__V1__MsgResetCircuitBreaker   *message,
                      uint8_t             *out);
size_t cosmos__circuit__v1__msg_reset_circuit_breaker__pack_to_buffer
                     (const Cosmos__Circuit__V1__MsgResetCircuitBreaker   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Circuit__V1__MsgResetCircuitBreaker *
       cosmos__circuit__v1__msg_reset_circuit_breaker__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__circuit__v1__msg_reset_circuit_breaker__free_unpacked
                     (Cosmos__Circuit__V1__MsgResetCircuitBreaker *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse methods */
void   cosmos__circuit__v1__msg_reset_circuit_breaker_response__init
                     (Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse         *message);
size_t cosmos__circuit__v1__msg_reset_circuit_breaker_response__get_packed_size
                     (const Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse   *message);
size_t cosmos__circuit__v1__msg_reset_circuit_breaker_response__pack
                     (const Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse   *message,
                      uint8_t             *out);
size_t cosmos__circuit__v1__msg_reset_circuit_breaker_response__pack_to_buffer
                     (const Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse *
       cosmos__circuit__v1__msg_reset_circuit_breaker_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__circuit__v1__msg_reset_circuit_breaker_response__free_unpacked
                     (Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker_Closure)
                 (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker *message,
                  void *closure_data);
typedef void (*Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse_Closure)
                 (const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Circuit__V1__MsgTripCircuitBreaker_Closure)
                 (const Cosmos__Circuit__V1__MsgTripCircuitBreaker *message,
                  void *closure_data);
typedef void (*Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse_Closure)
                 (const Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Circuit__V1__MsgResetCircuitBreaker_Closure)
                 (const Cosmos__Circuit__V1__MsgResetCircuitBreaker *message,
                  void *closure_data);
typedef void (*Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse_Closure)
                 (const Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Circuit__V1__Msg_Service Cosmos__Circuit__V1__Msg_Service;
struct Cosmos__Circuit__V1__Msg_Service
{
  ProtobufCService base;
  void (*authorize_circuit_breaker)(Cosmos__Circuit__V1__Msg_Service *service,
                                    const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker *input,
                                    Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse_Closure closure,
                                    void *closure_data);
  void (*trip_circuit_breaker)(Cosmos__Circuit__V1__Msg_Service *service,
                               const Cosmos__Circuit__V1__MsgTripCircuitBreaker *input,
                               Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse_Closure closure,
                               void *closure_data);
  void (*reset_circuit_breaker)(Cosmos__Circuit__V1__Msg_Service *service,
                                const Cosmos__Circuit__V1__MsgResetCircuitBreaker *input,
                                Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse_Closure closure,
                                void *closure_data);
};
typedef void (*Cosmos__Circuit__V1__Msg_ServiceDestroy)(Cosmos__Circuit__V1__Msg_Service *);
void cosmos__circuit__v1__msg__init (Cosmos__Circuit__V1__Msg_Service *service,
                                     Cosmos__Circuit__V1__Msg_ServiceDestroy destroy);
#define COSMOS__CIRCUIT__V1__MSG__BASE_INIT \
    { &cosmos__circuit__v1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__CIRCUIT__V1__MSG__INIT(function_prefix__) \
    { COSMOS__CIRCUIT__V1__MSG__BASE_INIT,\
      function_prefix__ ## authorize_circuit_breaker,\
      function_prefix__ ## trip_circuit_breaker,\
      function_prefix__ ## reset_circuit_breaker  }
void cosmos__circuit__v1__msg__authorize_circuit_breaker(ProtobufCService *service,
                                                         const Cosmos__Circuit__V1__MsgAuthorizeCircuitBreaker *input,
                                                         Cosmos__Circuit__V1__MsgAuthorizeCircuitBreakerResponse_Closure closure,
                                                         void *closure_data);
void cosmos__circuit__v1__msg__trip_circuit_breaker(ProtobufCService *service,
                                                    const Cosmos__Circuit__V1__MsgTripCircuitBreaker *input,
                                                    Cosmos__Circuit__V1__MsgTripCircuitBreakerResponse_Closure closure,
                                                    void *closure_data);
void cosmos__circuit__v1__msg__reset_circuit_breaker(ProtobufCService *service,
                                                     const Cosmos__Circuit__V1__MsgResetCircuitBreaker *input,
                                                     Cosmos__Circuit__V1__MsgResetCircuitBreakerResponse_Closure closure,
                                                     void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__circuit__v1__msg_authorize_circuit_breaker__descriptor;
extern const ProtobufCMessageDescriptor cosmos__circuit__v1__msg_authorize_circuit_breaker_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__circuit__v1__msg_trip_circuit_breaker__descriptor;
extern const ProtobufCMessageDescriptor cosmos__circuit__v1__msg_trip_circuit_breaker_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__circuit__v1__msg_reset_circuit_breaker__descriptor;
extern const ProtobufCMessageDescriptor cosmos__circuit__v1__msg_reset_circuit_breaker_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__circuit__v1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fcircuit_2fv1_2ftx_2eproto__INCLUDED */
