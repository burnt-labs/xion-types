/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/evidence/v1beta1/evidence.proto */

#ifndef PROTOBUF_C_cosmos_2fevidence_2fv1beta1_2fevidence_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fevidence_2fv1beta1_2fevidence_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "amino/amino.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"

typedef struct Cosmos__Evidence__V1beta1__Equivocation Cosmos__Evidence__V1beta1__Equivocation;


/* --- enums --- */


/* --- messages --- */

/*
 * Equivocation implements the Evidence interface and defines evidence of double
 * signing misbehavior.
 */
struct  Cosmos__Evidence__V1beta1__Equivocation
{
  ProtobufCMessage base;
  /*
   * height is the equivocation height.
   */
  int64_t height;
  /*
   * time is the equivocation time.
   */
  Google__Protobuf__Timestamp *time;
  /*
   * power is the equivocation validator power.
   */
  int64_t power;
  /*
   * consensus_address is the equivocation validator consensus address.
   */
  char *consensus_address;
};
#define COSMOS__EVIDENCE__V1BETA1__EQUIVOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__evidence__v1beta1__equivocation__descriptor) \
, 0, NULL, 0, (char *)protobuf_c_empty_string }


/* Cosmos__Evidence__V1beta1__Equivocation methods */
void   cosmos__evidence__v1beta1__equivocation__init
                     (Cosmos__Evidence__V1beta1__Equivocation         *message);
size_t cosmos__evidence__v1beta1__equivocation__get_packed_size
                     (const Cosmos__Evidence__V1beta1__Equivocation   *message);
size_t cosmos__evidence__v1beta1__equivocation__pack
                     (const Cosmos__Evidence__V1beta1__Equivocation   *message,
                      uint8_t             *out);
size_t cosmos__evidence__v1beta1__equivocation__pack_to_buffer
                     (const Cosmos__Evidence__V1beta1__Equivocation   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Evidence__V1beta1__Equivocation *
       cosmos__evidence__v1beta1__equivocation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__evidence__v1beta1__equivocation__free_unpacked
                     (Cosmos__Evidence__V1beta1__Equivocation *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Evidence__V1beta1__Equivocation_Closure)
                 (const Cosmos__Evidence__V1beta1__Equivocation *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__evidence__v1beta1__equivocation__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fevidence_2fv1beta1_2fevidence_2eproto__INCLUDED */
