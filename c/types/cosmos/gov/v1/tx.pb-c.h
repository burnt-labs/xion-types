/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/gov/v1/tx.proto */

#ifndef PROTOBUF_C_cosmos_2fgov_2fv1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fgov_2fv1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/v1beta1/coin.pb-c.h"
#include "cosmos/gov/v1/gov.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "amino/amino.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct Cosmos__Gov__V1__MsgSubmitProposal Cosmos__Gov__V1__MsgSubmitProposal;
typedef struct Cosmos__Gov__V1__MsgSubmitProposalResponse Cosmos__Gov__V1__MsgSubmitProposalResponse;
typedef struct Cosmos__Gov__V1__MsgExecLegacyContent Cosmos__Gov__V1__MsgExecLegacyContent;
typedef struct Cosmos__Gov__V1__MsgExecLegacyContentResponse Cosmos__Gov__V1__MsgExecLegacyContentResponse;
typedef struct Cosmos__Gov__V1__MsgVote Cosmos__Gov__V1__MsgVote;
typedef struct Cosmos__Gov__V1__MsgVoteResponse Cosmos__Gov__V1__MsgVoteResponse;
typedef struct Cosmos__Gov__V1__MsgVoteWeighted Cosmos__Gov__V1__MsgVoteWeighted;
typedef struct Cosmos__Gov__V1__MsgVoteWeightedResponse Cosmos__Gov__V1__MsgVoteWeightedResponse;
typedef struct Cosmos__Gov__V1__MsgDeposit Cosmos__Gov__V1__MsgDeposit;
typedef struct Cosmos__Gov__V1__MsgDepositResponse Cosmos__Gov__V1__MsgDepositResponse;
typedef struct Cosmos__Gov__V1__MsgUpdateParams Cosmos__Gov__V1__MsgUpdateParams;
typedef struct Cosmos__Gov__V1__MsgUpdateParamsResponse Cosmos__Gov__V1__MsgUpdateParamsResponse;
typedef struct Cosmos__Gov__V1__MsgCancelProposal Cosmos__Gov__V1__MsgCancelProposal;
typedef struct Cosmos__Gov__V1__MsgCancelProposalResponse Cosmos__Gov__V1__MsgCancelProposalResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
 * proposal Content.
 */
struct  Cosmos__Gov__V1__MsgSubmitProposal
{
  ProtobufCMessage base;
  /*
   * messages are the arbitrary messages to be executed if proposal passes.
   */
  size_t n_messages;
  Google__Protobuf__Any **messages;
  /*
   * initial_deposit is the deposit value that must be paid at proposal submission.
   */
  size_t n_initial_deposit;
  Cosmos__Base__V1beta1__Coin **initial_deposit;
  /*
   * proposer is the account address of the proposer.
   */
  char *proposer;
  /*
   * metadata is any arbitrary metadata attached to the proposal.
   */
  char *metadata;
  /*
   * title is the title of the proposal.
   */
  char *title;
  /*
   * summary is the summary of the proposal
   */
  char *summary;
  /*
   * expedited defines if the proposal is expedited or not
   */
  protobuf_c_boolean expedited;
};
#define COSMOS__GOV__V1__MSG_SUBMIT_PROPOSAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_submit_proposal__descriptor) \
, 0,NULL, 0,NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
 */
struct  Cosmos__Gov__V1__MsgSubmitProposalResponse
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
};
#define COSMOS__GOV__V1__MSG_SUBMIT_PROPOSAL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_submit_proposal_response__descriptor) \
, 0 }


/*
 * MsgExecLegacyContent is used to wrap the legacy content field into a message.
 * This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
 */
struct  Cosmos__Gov__V1__MsgExecLegacyContent
{
  ProtobufCMessage base;
  /*
   * content is the proposal's content.
   */
  Google__Protobuf__Any *content;
  /*
   * authority must be the gov module address.
   */
  char *authority;
};
#define COSMOS__GOV__V1__MSG_EXEC_LEGACY_CONTENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_exec_legacy_content__descriptor) \
, NULL, (char *)protobuf_c_empty_string }


/*
 * MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response type.
 */
struct  Cosmos__Gov__V1__MsgExecLegacyContentResponse
{
  ProtobufCMessage base;
};
#define COSMOS__GOV__V1__MSG_EXEC_LEGACY_CONTENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_exec_legacy_content_response__descriptor) \
 }


/*
 * MsgVote defines a message to cast a vote.
 */
struct  Cosmos__Gov__V1__MsgVote
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * voter is the voter address for the proposal.
   */
  char *voter;
  /*
   * option defines the vote option.
   */
  Cosmos__Gov__V1__VoteOption option;
  /*
   * metadata is any arbitrary metadata attached to the Vote.
   */
  char *metadata;
};
#define COSMOS__GOV__V1__MSG_VOTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_vote__descriptor) \
, 0, (char *)protobuf_c_empty_string, COSMOS__GOV__V1__VOTE_OPTION__VOTE_OPTION_UNSPECIFIED, (char *)protobuf_c_empty_string }


/*
 * MsgVoteResponse defines the Msg/Vote response type.
 */
struct  Cosmos__Gov__V1__MsgVoteResponse
{
  ProtobufCMessage base;
};
#define COSMOS__GOV__V1__MSG_VOTE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_vote_response__descriptor) \
 }


/*
 * MsgVoteWeighted defines a message to cast a vote.
 */
struct  Cosmos__Gov__V1__MsgVoteWeighted
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * voter is the voter address for the proposal.
   */
  char *voter;
  /*
   * options defines the weighted vote options.
   */
  size_t n_options;
  Cosmos__Gov__V1__WeightedVoteOption **options;
  /*
   * metadata is any arbitrary metadata attached to the VoteWeighted.
   */
  char *metadata;
};
#define COSMOS__GOV__V1__MSG_VOTE_WEIGHTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_vote_weighted__descriptor) \
, 0, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string }


/*
 * MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
 */
struct  Cosmos__Gov__V1__MsgVoteWeightedResponse
{
  ProtobufCMessage base;
};
#define COSMOS__GOV__V1__MSG_VOTE_WEIGHTED_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_vote_weighted_response__descriptor) \
 }


/*
 * MsgDeposit defines a message to submit a deposit to an existing proposal.
 */
struct  Cosmos__Gov__V1__MsgDeposit
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * depositor defines the deposit addresses from the proposals.
   */
  char *depositor;
  /*
   * amount to be deposited by depositor.
   */
  size_t n_amount;
  Cosmos__Base__V1beta1__Coin **amount;
};
#define COSMOS__GOV__V1__MSG_DEPOSIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_deposit__descriptor) \
, 0, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * MsgDepositResponse defines the Msg/Deposit response type.
 */
struct  Cosmos__Gov__V1__MsgDepositResponse
{
  ProtobufCMessage base;
};
#define COSMOS__GOV__V1__MSG_DEPOSIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_deposit_response__descriptor) \
 }


/*
 * MsgUpdateParams is the Msg/UpdateParams request type.
 */
struct  Cosmos__Gov__V1__MsgUpdateParams
{
  ProtobufCMessage base;
  /*
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   */
  char *authority;
  /*
   * params defines the x/gov parameters to update.
   * NOTE: All parameters must be supplied.
   */
  Cosmos__Gov__V1__Params *params;
};
#define COSMOS__GOV__V1__MSG_UPDATE_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_update_params__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 */
struct  Cosmos__Gov__V1__MsgUpdateParamsResponse
{
  ProtobufCMessage base;
};
#define COSMOS__GOV__V1__MSG_UPDATE_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_update_params_response__descriptor) \
 }


/*
 * MsgCancelProposal is the Msg/CancelProposal request type.
 */
struct  Cosmos__Gov__V1__MsgCancelProposal
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * proposer is the account address of the proposer.
   */
  char *proposer;
};
#define COSMOS__GOV__V1__MSG_CANCEL_PROPOSAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_cancel_proposal__descriptor) \
, 0, (char *)protobuf_c_empty_string }


/*
 * MsgCancelProposalResponse defines the response structure for executing a
 * MsgCancelProposal message.
 */
struct  Cosmos__Gov__V1__MsgCancelProposalResponse
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * canceled_time is the time when proposal is canceled.
   */
  Google__Protobuf__Timestamp *canceled_time;
  /*
   * canceled_height defines the block height at which the proposal is canceled.
   */
  uint64_t canceled_height;
};
#define COSMOS__GOV__V1__MSG_CANCEL_PROPOSAL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1__msg_cancel_proposal_response__descriptor) \
, 0, NULL, 0 }


/* Cosmos__Gov__V1__MsgSubmitProposal methods */
void   cosmos__gov__v1__msg_submit_proposal__init
                     (Cosmos__Gov__V1__MsgSubmitProposal         *message);
size_t cosmos__gov__v1__msg_submit_proposal__get_packed_size
                     (const Cosmos__Gov__V1__MsgSubmitProposal   *message);
size_t cosmos__gov__v1__msg_submit_proposal__pack
                     (const Cosmos__Gov__V1__MsgSubmitProposal   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_submit_proposal__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgSubmitProposal   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgSubmitProposal *
       cosmos__gov__v1__msg_submit_proposal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_submit_proposal__free_unpacked
                     (Cosmos__Gov__V1__MsgSubmitProposal *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgSubmitProposalResponse methods */
void   cosmos__gov__v1__msg_submit_proposal_response__init
                     (Cosmos__Gov__V1__MsgSubmitProposalResponse         *message);
size_t cosmos__gov__v1__msg_submit_proposal_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgSubmitProposalResponse   *message);
size_t cosmos__gov__v1__msg_submit_proposal_response__pack
                     (const Cosmos__Gov__V1__MsgSubmitProposalResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_submit_proposal_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgSubmitProposalResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgSubmitProposalResponse *
       cosmos__gov__v1__msg_submit_proposal_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_submit_proposal_response__free_unpacked
                     (Cosmos__Gov__V1__MsgSubmitProposalResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgExecLegacyContent methods */
void   cosmos__gov__v1__msg_exec_legacy_content__init
                     (Cosmos__Gov__V1__MsgExecLegacyContent         *message);
size_t cosmos__gov__v1__msg_exec_legacy_content__get_packed_size
                     (const Cosmos__Gov__V1__MsgExecLegacyContent   *message);
size_t cosmos__gov__v1__msg_exec_legacy_content__pack
                     (const Cosmos__Gov__V1__MsgExecLegacyContent   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_exec_legacy_content__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgExecLegacyContent   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgExecLegacyContent *
       cosmos__gov__v1__msg_exec_legacy_content__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_exec_legacy_content__free_unpacked
                     (Cosmos__Gov__V1__MsgExecLegacyContent *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgExecLegacyContentResponse methods */
void   cosmos__gov__v1__msg_exec_legacy_content_response__init
                     (Cosmos__Gov__V1__MsgExecLegacyContentResponse         *message);
size_t cosmos__gov__v1__msg_exec_legacy_content_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgExecLegacyContentResponse   *message);
size_t cosmos__gov__v1__msg_exec_legacy_content_response__pack
                     (const Cosmos__Gov__V1__MsgExecLegacyContentResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_exec_legacy_content_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgExecLegacyContentResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgExecLegacyContentResponse *
       cosmos__gov__v1__msg_exec_legacy_content_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_exec_legacy_content_response__free_unpacked
                     (Cosmos__Gov__V1__MsgExecLegacyContentResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgVote methods */
void   cosmos__gov__v1__msg_vote__init
                     (Cosmos__Gov__V1__MsgVote         *message);
size_t cosmos__gov__v1__msg_vote__get_packed_size
                     (const Cosmos__Gov__V1__MsgVote   *message);
size_t cosmos__gov__v1__msg_vote__pack
                     (const Cosmos__Gov__V1__MsgVote   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_vote__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgVote   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgVote *
       cosmos__gov__v1__msg_vote__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_vote__free_unpacked
                     (Cosmos__Gov__V1__MsgVote *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgVoteResponse methods */
void   cosmos__gov__v1__msg_vote_response__init
                     (Cosmos__Gov__V1__MsgVoteResponse         *message);
size_t cosmos__gov__v1__msg_vote_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgVoteResponse   *message);
size_t cosmos__gov__v1__msg_vote_response__pack
                     (const Cosmos__Gov__V1__MsgVoteResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_vote_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgVoteResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgVoteResponse *
       cosmos__gov__v1__msg_vote_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_vote_response__free_unpacked
                     (Cosmos__Gov__V1__MsgVoteResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgVoteWeighted methods */
void   cosmos__gov__v1__msg_vote_weighted__init
                     (Cosmos__Gov__V1__MsgVoteWeighted         *message);
size_t cosmos__gov__v1__msg_vote_weighted__get_packed_size
                     (const Cosmos__Gov__V1__MsgVoteWeighted   *message);
size_t cosmos__gov__v1__msg_vote_weighted__pack
                     (const Cosmos__Gov__V1__MsgVoteWeighted   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_vote_weighted__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgVoteWeighted   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgVoteWeighted *
       cosmos__gov__v1__msg_vote_weighted__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_vote_weighted__free_unpacked
                     (Cosmos__Gov__V1__MsgVoteWeighted *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgVoteWeightedResponse methods */
void   cosmos__gov__v1__msg_vote_weighted_response__init
                     (Cosmos__Gov__V1__MsgVoteWeightedResponse         *message);
size_t cosmos__gov__v1__msg_vote_weighted_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgVoteWeightedResponse   *message);
size_t cosmos__gov__v1__msg_vote_weighted_response__pack
                     (const Cosmos__Gov__V1__MsgVoteWeightedResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_vote_weighted_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgVoteWeightedResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgVoteWeightedResponse *
       cosmos__gov__v1__msg_vote_weighted_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_vote_weighted_response__free_unpacked
                     (Cosmos__Gov__V1__MsgVoteWeightedResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgDeposit methods */
void   cosmos__gov__v1__msg_deposit__init
                     (Cosmos__Gov__V1__MsgDeposit         *message);
size_t cosmos__gov__v1__msg_deposit__get_packed_size
                     (const Cosmos__Gov__V1__MsgDeposit   *message);
size_t cosmos__gov__v1__msg_deposit__pack
                     (const Cosmos__Gov__V1__MsgDeposit   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_deposit__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgDeposit   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgDeposit *
       cosmos__gov__v1__msg_deposit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_deposit__free_unpacked
                     (Cosmos__Gov__V1__MsgDeposit *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgDepositResponse methods */
void   cosmos__gov__v1__msg_deposit_response__init
                     (Cosmos__Gov__V1__MsgDepositResponse         *message);
size_t cosmos__gov__v1__msg_deposit_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgDepositResponse   *message);
size_t cosmos__gov__v1__msg_deposit_response__pack
                     (const Cosmos__Gov__V1__MsgDepositResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_deposit_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgDepositResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgDepositResponse *
       cosmos__gov__v1__msg_deposit_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_deposit_response__free_unpacked
                     (Cosmos__Gov__V1__MsgDepositResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgUpdateParams methods */
void   cosmos__gov__v1__msg_update_params__init
                     (Cosmos__Gov__V1__MsgUpdateParams         *message);
size_t cosmos__gov__v1__msg_update_params__get_packed_size
                     (const Cosmos__Gov__V1__MsgUpdateParams   *message);
size_t cosmos__gov__v1__msg_update_params__pack
                     (const Cosmos__Gov__V1__MsgUpdateParams   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_update_params__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgUpdateParams   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgUpdateParams *
       cosmos__gov__v1__msg_update_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_update_params__free_unpacked
                     (Cosmos__Gov__V1__MsgUpdateParams *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgUpdateParamsResponse methods */
void   cosmos__gov__v1__msg_update_params_response__init
                     (Cosmos__Gov__V1__MsgUpdateParamsResponse         *message);
size_t cosmos__gov__v1__msg_update_params_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgUpdateParamsResponse   *message);
size_t cosmos__gov__v1__msg_update_params_response__pack
                     (const Cosmos__Gov__V1__MsgUpdateParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_update_params_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgUpdateParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgUpdateParamsResponse *
       cosmos__gov__v1__msg_update_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_update_params_response__free_unpacked
                     (Cosmos__Gov__V1__MsgUpdateParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgCancelProposal methods */
void   cosmos__gov__v1__msg_cancel_proposal__init
                     (Cosmos__Gov__V1__MsgCancelProposal         *message);
size_t cosmos__gov__v1__msg_cancel_proposal__get_packed_size
                     (const Cosmos__Gov__V1__MsgCancelProposal   *message);
size_t cosmos__gov__v1__msg_cancel_proposal__pack
                     (const Cosmos__Gov__V1__MsgCancelProposal   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_cancel_proposal__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgCancelProposal   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgCancelProposal *
       cosmos__gov__v1__msg_cancel_proposal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_cancel_proposal__free_unpacked
                     (Cosmos__Gov__V1__MsgCancelProposal *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1__MsgCancelProposalResponse methods */
void   cosmos__gov__v1__msg_cancel_proposal_response__init
                     (Cosmos__Gov__V1__MsgCancelProposalResponse         *message);
size_t cosmos__gov__v1__msg_cancel_proposal_response__get_packed_size
                     (const Cosmos__Gov__V1__MsgCancelProposalResponse   *message);
size_t cosmos__gov__v1__msg_cancel_proposal_response__pack
                     (const Cosmos__Gov__V1__MsgCancelProposalResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1__msg_cancel_proposal_response__pack_to_buffer
                     (const Cosmos__Gov__V1__MsgCancelProposalResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1__MsgCancelProposalResponse *
       cosmos__gov__v1__msg_cancel_proposal_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1__msg_cancel_proposal_response__free_unpacked
                     (Cosmos__Gov__V1__MsgCancelProposalResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Gov__V1__MsgSubmitProposal_Closure)
                 (const Cosmos__Gov__V1__MsgSubmitProposal *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgSubmitProposalResponse_Closure)
                 (const Cosmos__Gov__V1__MsgSubmitProposalResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgExecLegacyContent_Closure)
                 (const Cosmos__Gov__V1__MsgExecLegacyContent *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgExecLegacyContentResponse_Closure)
                 (const Cosmos__Gov__V1__MsgExecLegacyContentResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgVote_Closure)
                 (const Cosmos__Gov__V1__MsgVote *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgVoteResponse_Closure)
                 (const Cosmos__Gov__V1__MsgVoteResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgVoteWeighted_Closure)
                 (const Cosmos__Gov__V1__MsgVoteWeighted *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgVoteWeightedResponse_Closure)
                 (const Cosmos__Gov__V1__MsgVoteWeightedResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgDeposit_Closure)
                 (const Cosmos__Gov__V1__MsgDeposit *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgDepositResponse_Closure)
                 (const Cosmos__Gov__V1__MsgDepositResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgUpdateParams_Closure)
                 (const Cosmos__Gov__V1__MsgUpdateParams *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgUpdateParamsResponse_Closure)
                 (const Cosmos__Gov__V1__MsgUpdateParamsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgCancelProposal_Closure)
                 (const Cosmos__Gov__V1__MsgCancelProposal *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1__MsgCancelProposalResponse_Closure)
                 (const Cosmos__Gov__V1__MsgCancelProposalResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Gov__V1__Msg_Service Cosmos__Gov__V1__Msg_Service;
struct Cosmos__Gov__V1__Msg_Service
{
  ProtobufCService base;
  void (*submit_proposal)(Cosmos__Gov__V1__Msg_Service *service,
                          const Cosmos__Gov__V1__MsgSubmitProposal *input,
                          Cosmos__Gov__V1__MsgSubmitProposalResponse_Closure closure,
                          void *closure_data);
  void (*exec_legacy_content)(Cosmos__Gov__V1__Msg_Service *service,
                              const Cosmos__Gov__V1__MsgExecLegacyContent *input,
                              Cosmos__Gov__V1__MsgExecLegacyContentResponse_Closure closure,
                              void *closure_data);
  void (*vote)(Cosmos__Gov__V1__Msg_Service *service,
               const Cosmos__Gov__V1__MsgVote *input,
               Cosmos__Gov__V1__MsgVoteResponse_Closure closure,
               void *closure_data);
  void (*vote_weighted)(Cosmos__Gov__V1__Msg_Service *service,
                        const Cosmos__Gov__V1__MsgVoteWeighted *input,
                        Cosmos__Gov__V1__MsgVoteWeightedResponse_Closure closure,
                        void *closure_data);
  void (*deposit)(Cosmos__Gov__V1__Msg_Service *service,
                  const Cosmos__Gov__V1__MsgDeposit *input,
                  Cosmos__Gov__V1__MsgDepositResponse_Closure closure,
                  void *closure_data);
  void (*update_params)(Cosmos__Gov__V1__Msg_Service *service,
                        const Cosmos__Gov__V1__MsgUpdateParams *input,
                        Cosmos__Gov__V1__MsgUpdateParamsResponse_Closure closure,
                        void *closure_data);
  void (*cancel_proposal)(Cosmos__Gov__V1__Msg_Service *service,
                          const Cosmos__Gov__V1__MsgCancelProposal *input,
                          Cosmos__Gov__V1__MsgCancelProposalResponse_Closure closure,
                          void *closure_data);
};
typedef void (*Cosmos__Gov__V1__Msg_ServiceDestroy)(Cosmos__Gov__V1__Msg_Service *);
void cosmos__gov__v1__msg__init (Cosmos__Gov__V1__Msg_Service *service,
                                 Cosmos__Gov__V1__Msg_ServiceDestroy destroy);
#define COSMOS__GOV__V1__MSG__BASE_INIT \
    { &cosmos__gov__v1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__GOV__V1__MSG__INIT(function_prefix__) \
    { COSMOS__GOV__V1__MSG__BASE_INIT,\
      function_prefix__ ## submit_proposal,\
      function_prefix__ ## exec_legacy_content,\
      function_prefix__ ## vote,\
      function_prefix__ ## vote_weighted,\
      function_prefix__ ## deposit,\
      function_prefix__ ## update_params,\
      function_prefix__ ## cancel_proposal  }
void cosmos__gov__v1__msg__submit_proposal(ProtobufCService *service,
                                           const Cosmos__Gov__V1__MsgSubmitProposal *input,
                                           Cosmos__Gov__V1__MsgSubmitProposalResponse_Closure closure,
                                           void *closure_data);
void cosmos__gov__v1__msg__exec_legacy_content(ProtobufCService *service,
                                               const Cosmos__Gov__V1__MsgExecLegacyContent *input,
                                               Cosmos__Gov__V1__MsgExecLegacyContentResponse_Closure closure,
                                               void *closure_data);
void cosmos__gov__v1__msg__vote(ProtobufCService *service,
                                const Cosmos__Gov__V1__MsgVote *input,
                                Cosmos__Gov__V1__MsgVoteResponse_Closure closure,
                                void *closure_data);
void cosmos__gov__v1__msg__vote_weighted(ProtobufCService *service,
                                         const Cosmos__Gov__V1__MsgVoteWeighted *input,
                                         Cosmos__Gov__V1__MsgVoteWeightedResponse_Closure closure,
                                         void *closure_data);
void cosmos__gov__v1__msg__deposit(ProtobufCService *service,
                                   const Cosmos__Gov__V1__MsgDeposit *input,
                                   Cosmos__Gov__V1__MsgDepositResponse_Closure closure,
                                   void *closure_data);
void cosmos__gov__v1__msg__update_params(ProtobufCService *service,
                                         const Cosmos__Gov__V1__MsgUpdateParams *input,
                                         Cosmos__Gov__V1__MsgUpdateParamsResponse_Closure closure,
                                         void *closure_data);
void cosmos__gov__v1__msg__cancel_proposal(ProtobufCService *service,
                                           const Cosmos__Gov__V1__MsgCancelProposal *input,
                                           Cosmos__Gov__V1__MsgCancelProposalResponse_Closure closure,
                                           void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_submit_proposal__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_submit_proposal_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_exec_legacy_content__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_exec_legacy_content_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_vote__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_vote_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_vote_weighted__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_vote_weighted_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_deposit__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_deposit_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_update_params__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_update_params_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_cancel_proposal__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1__msg_cancel_proposal_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__gov__v1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fgov_2fv1_2ftx_2eproto__INCLUDED */
