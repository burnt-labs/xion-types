/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/gov/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fgov_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fgov_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/gov/v1beta1/gov.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Gov__V1beta1__QueryProposalRequest Cosmos__Gov__V1beta1__QueryProposalRequest;
typedef struct Cosmos__Gov__V1beta1__QueryProposalResponse Cosmos__Gov__V1beta1__QueryProposalResponse;
typedef struct Cosmos__Gov__V1beta1__QueryProposalsRequest Cosmos__Gov__V1beta1__QueryProposalsRequest;
typedef struct Cosmos__Gov__V1beta1__QueryProposalsResponse Cosmos__Gov__V1beta1__QueryProposalsResponse;
typedef struct Cosmos__Gov__V1beta1__QueryVoteRequest Cosmos__Gov__V1beta1__QueryVoteRequest;
typedef struct Cosmos__Gov__V1beta1__QueryVoteResponse Cosmos__Gov__V1beta1__QueryVoteResponse;
typedef struct Cosmos__Gov__V1beta1__QueryVotesRequest Cosmos__Gov__V1beta1__QueryVotesRequest;
typedef struct Cosmos__Gov__V1beta1__QueryVotesResponse Cosmos__Gov__V1beta1__QueryVotesResponse;
typedef struct Cosmos__Gov__V1beta1__QueryParamsRequest Cosmos__Gov__V1beta1__QueryParamsRequest;
typedef struct Cosmos__Gov__V1beta1__QueryParamsResponse Cosmos__Gov__V1beta1__QueryParamsResponse;
typedef struct Cosmos__Gov__V1beta1__QueryDepositRequest Cosmos__Gov__V1beta1__QueryDepositRequest;
typedef struct Cosmos__Gov__V1beta1__QueryDepositResponse Cosmos__Gov__V1beta1__QueryDepositResponse;
typedef struct Cosmos__Gov__V1beta1__QueryDepositsRequest Cosmos__Gov__V1beta1__QueryDepositsRequest;
typedef struct Cosmos__Gov__V1beta1__QueryDepositsResponse Cosmos__Gov__V1beta1__QueryDepositsResponse;
typedef struct Cosmos__Gov__V1beta1__QueryTallyResultRequest Cosmos__Gov__V1beta1__QueryTallyResultRequest;
typedef struct Cosmos__Gov__V1beta1__QueryTallyResultResponse Cosmos__Gov__V1beta1__QueryTallyResultResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryProposalRequest is the request type for the Query/Proposal RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryProposalRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
};
#define COSMOS__GOV__V1BETA1__QUERY_PROPOSAL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_proposal_request__descriptor) \
, 0 }


/*
 * QueryProposalResponse is the response type for the Query/Proposal RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryProposalResponse
{
  ProtobufCMessage base;
  Cosmos__Gov__V1beta1__Proposal *proposal;
};
#define COSMOS__GOV__V1BETA1__QUERY_PROPOSAL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_proposal_response__descriptor) \
, NULL }


/*
 * QueryProposalsRequest is the request type for the Query/Proposals RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryProposalsRequest
{
  ProtobufCMessage base;
  /*
   * proposal_status defines the status of the proposals.
   */
  Cosmos__Gov__V1beta1__ProposalStatus proposal_status;
  /*
   * voter defines the voter address for the proposals.
   */
  char *voter;
  /*
   * depositor defines the deposit addresses from the proposals.
   */
  char *depositor;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GOV__V1BETA1__QUERY_PROPOSALS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_proposals_request__descriptor) \
, COSMOS__GOV__V1BETA1__PROPOSAL_STATUS__PROPOSAL_STATUS_UNSPECIFIED, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryProposalsResponse is the response type for the Query/Proposals RPC
 * method.
 */
struct  Cosmos__Gov__V1beta1__QueryProposalsResponse
{
  ProtobufCMessage base;
  /*
   * proposals defines all the requested governance proposals.
   */
  size_t n_proposals;
  Cosmos__Gov__V1beta1__Proposal **proposals;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GOV__V1BETA1__QUERY_PROPOSALS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_proposals_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryVoteRequest is the request type for the Query/Vote RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryVoteRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * voter defines the voter address for the proposals.
   */
  char *voter;
};
#define COSMOS__GOV__V1BETA1__QUERY_VOTE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_vote_request__descriptor) \
, 0, (char *)protobuf_c_empty_string }


/*
 * QueryVoteResponse is the response type for the Query/Vote RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryVoteResponse
{
  ProtobufCMessage base;
  /*
   * vote defines the queried vote.
   */
  Cosmos__Gov__V1beta1__Vote *vote;
};
#define COSMOS__GOV__V1BETA1__QUERY_VOTE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_vote_response__descriptor) \
, NULL }


/*
 * QueryVotesRequest is the request type for the Query/Votes RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryVotesRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GOV__V1BETA1__QUERY_VOTES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_votes_request__descriptor) \
, 0, NULL }


/*
 * QueryVotesResponse is the response type for the Query/Votes RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryVotesResponse
{
  ProtobufCMessage base;
  /*
   * votes defines the queried votes.
   */
  size_t n_votes;
  Cosmos__Gov__V1beta1__Vote **votes;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GOV__V1BETA1__QUERY_VOTES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_votes_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryParamsRequest
{
  ProtobufCMessage base;
  /*
   * params_type defines which parameters to query for, can be one of "voting",
   * "tallying" or "deposit".
   */
  char *params_type;
};
#define COSMOS__GOV__V1BETA1__QUERY_PARAMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_params_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryParamsResponse
{
  ProtobufCMessage base;
  /*
   * voting_params defines the parameters related to voting.
   */
  Cosmos__Gov__V1beta1__VotingParams *voting_params;
  /*
   * deposit_params defines the parameters related to deposit.
   */
  Cosmos__Gov__V1beta1__DepositParams *deposit_params;
  /*
   * tally_params defines the parameters related to tally.
   */
  Cosmos__Gov__V1beta1__TallyParams *tally_params;
};
#define COSMOS__GOV__V1BETA1__QUERY_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_params_response__descriptor) \
, NULL, NULL, NULL }


/*
 * QueryDepositRequest is the request type for the Query/Deposit RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryDepositRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * depositor defines the deposit addresses from the proposals.
   */
  char *depositor;
};
#define COSMOS__GOV__V1BETA1__QUERY_DEPOSIT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_deposit_request__descriptor) \
, 0, (char *)protobuf_c_empty_string }


/*
 * QueryDepositResponse is the response type for the Query/Deposit RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryDepositResponse
{
  ProtobufCMessage base;
  /*
   * deposit defines the requested deposit.
   */
  Cosmos__Gov__V1beta1__Deposit *deposit;
};
#define COSMOS__GOV__V1BETA1__QUERY_DEPOSIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_deposit_response__descriptor) \
, NULL }


/*
 * QueryDepositsRequest is the request type for the Query/Deposits RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryDepositsRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GOV__V1BETA1__QUERY_DEPOSITS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_deposits_request__descriptor) \
, 0, NULL }


/*
 * QueryDepositsResponse is the response type for the Query/Deposits RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryDepositsResponse
{
  ProtobufCMessage base;
  /*
   * deposits defines the requested deposits.
   */
  size_t n_deposits;
  Cosmos__Gov__V1beta1__Deposit **deposits;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GOV__V1BETA1__QUERY_DEPOSITS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_deposits_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryTallyResultRequest is the request type for the Query/Tally RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryTallyResultRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id defines the unique id of the proposal.
   */
  uint64_t proposal_id;
};
#define COSMOS__GOV__V1BETA1__QUERY_TALLY_RESULT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_tally_result_request__descriptor) \
, 0 }


/*
 * QueryTallyResultResponse is the response type for the Query/Tally RPC method.
 */
struct  Cosmos__Gov__V1beta1__QueryTallyResultResponse
{
  ProtobufCMessage base;
  /*
   * tally defines the requested tally.
   */
  Cosmos__Gov__V1beta1__TallyResult *tally;
};
#define COSMOS__GOV__V1BETA1__QUERY_TALLY_RESULT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__gov__v1beta1__query_tally_result_response__descriptor) \
, NULL }


/* Cosmos__Gov__V1beta1__QueryProposalRequest methods */
void   cosmos__gov__v1beta1__query_proposal_request__init
                     (Cosmos__Gov__V1beta1__QueryProposalRequest         *message);
size_t cosmos__gov__v1beta1__query_proposal_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryProposalRequest   *message);
size_t cosmos__gov__v1beta1__query_proposal_request__pack
                     (const Cosmos__Gov__V1beta1__QueryProposalRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_proposal_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryProposalRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryProposalRequest *
       cosmos__gov__v1beta1__query_proposal_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_proposal_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryProposalRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryProposalResponse methods */
void   cosmos__gov__v1beta1__query_proposal_response__init
                     (Cosmos__Gov__V1beta1__QueryProposalResponse         *message);
size_t cosmos__gov__v1beta1__query_proposal_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryProposalResponse   *message);
size_t cosmos__gov__v1beta1__query_proposal_response__pack
                     (const Cosmos__Gov__V1beta1__QueryProposalResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_proposal_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryProposalResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryProposalResponse *
       cosmos__gov__v1beta1__query_proposal_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_proposal_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryProposalResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryProposalsRequest methods */
void   cosmos__gov__v1beta1__query_proposals_request__init
                     (Cosmos__Gov__V1beta1__QueryProposalsRequest         *message);
size_t cosmos__gov__v1beta1__query_proposals_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryProposalsRequest   *message);
size_t cosmos__gov__v1beta1__query_proposals_request__pack
                     (const Cosmos__Gov__V1beta1__QueryProposalsRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_proposals_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryProposalsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryProposalsRequest *
       cosmos__gov__v1beta1__query_proposals_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_proposals_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryProposalsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryProposalsResponse methods */
void   cosmos__gov__v1beta1__query_proposals_response__init
                     (Cosmos__Gov__V1beta1__QueryProposalsResponse         *message);
size_t cosmos__gov__v1beta1__query_proposals_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryProposalsResponse   *message);
size_t cosmos__gov__v1beta1__query_proposals_response__pack
                     (const Cosmos__Gov__V1beta1__QueryProposalsResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_proposals_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryProposalsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryProposalsResponse *
       cosmos__gov__v1beta1__query_proposals_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_proposals_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryProposalsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryVoteRequest methods */
void   cosmos__gov__v1beta1__query_vote_request__init
                     (Cosmos__Gov__V1beta1__QueryVoteRequest         *message);
size_t cosmos__gov__v1beta1__query_vote_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryVoteRequest   *message);
size_t cosmos__gov__v1beta1__query_vote_request__pack
                     (const Cosmos__Gov__V1beta1__QueryVoteRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_vote_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryVoteRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryVoteRequest *
       cosmos__gov__v1beta1__query_vote_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_vote_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryVoteRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryVoteResponse methods */
void   cosmos__gov__v1beta1__query_vote_response__init
                     (Cosmos__Gov__V1beta1__QueryVoteResponse         *message);
size_t cosmos__gov__v1beta1__query_vote_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryVoteResponse   *message);
size_t cosmos__gov__v1beta1__query_vote_response__pack
                     (const Cosmos__Gov__V1beta1__QueryVoteResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_vote_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryVoteResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryVoteResponse *
       cosmos__gov__v1beta1__query_vote_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_vote_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryVoteResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryVotesRequest methods */
void   cosmos__gov__v1beta1__query_votes_request__init
                     (Cosmos__Gov__V1beta1__QueryVotesRequest         *message);
size_t cosmos__gov__v1beta1__query_votes_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryVotesRequest   *message);
size_t cosmos__gov__v1beta1__query_votes_request__pack
                     (const Cosmos__Gov__V1beta1__QueryVotesRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_votes_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryVotesRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryVotesRequest *
       cosmos__gov__v1beta1__query_votes_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_votes_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryVotesRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryVotesResponse methods */
void   cosmos__gov__v1beta1__query_votes_response__init
                     (Cosmos__Gov__V1beta1__QueryVotesResponse         *message);
size_t cosmos__gov__v1beta1__query_votes_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryVotesResponse   *message);
size_t cosmos__gov__v1beta1__query_votes_response__pack
                     (const Cosmos__Gov__V1beta1__QueryVotesResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_votes_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryVotesResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryVotesResponse *
       cosmos__gov__v1beta1__query_votes_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_votes_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryVotesResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryParamsRequest methods */
void   cosmos__gov__v1beta1__query_params_request__init
                     (Cosmos__Gov__V1beta1__QueryParamsRequest         *message);
size_t cosmos__gov__v1beta1__query_params_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryParamsRequest   *message);
size_t cosmos__gov__v1beta1__query_params_request__pack
                     (const Cosmos__Gov__V1beta1__QueryParamsRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_params_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryParamsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryParamsRequest *
       cosmos__gov__v1beta1__query_params_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_params_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryParamsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryParamsResponse methods */
void   cosmos__gov__v1beta1__query_params_response__init
                     (Cosmos__Gov__V1beta1__QueryParamsResponse         *message);
size_t cosmos__gov__v1beta1__query_params_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryParamsResponse   *message);
size_t cosmos__gov__v1beta1__query_params_response__pack
                     (const Cosmos__Gov__V1beta1__QueryParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_params_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryParamsResponse *
       cosmos__gov__v1beta1__query_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_params_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryDepositRequest methods */
void   cosmos__gov__v1beta1__query_deposit_request__init
                     (Cosmos__Gov__V1beta1__QueryDepositRequest         *message);
size_t cosmos__gov__v1beta1__query_deposit_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryDepositRequest   *message);
size_t cosmos__gov__v1beta1__query_deposit_request__pack
                     (const Cosmos__Gov__V1beta1__QueryDepositRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_deposit_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryDepositRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryDepositRequest *
       cosmos__gov__v1beta1__query_deposit_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_deposit_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryDepositRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryDepositResponse methods */
void   cosmos__gov__v1beta1__query_deposit_response__init
                     (Cosmos__Gov__V1beta1__QueryDepositResponse         *message);
size_t cosmos__gov__v1beta1__query_deposit_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryDepositResponse   *message);
size_t cosmos__gov__v1beta1__query_deposit_response__pack
                     (const Cosmos__Gov__V1beta1__QueryDepositResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_deposit_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryDepositResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryDepositResponse *
       cosmos__gov__v1beta1__query_deposit_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_deposit_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryDepositResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryDepositsRequest methods */
void   cosmos__gov__v1beta1__query_deposits_request__init
                     (Cosmos__Gov__V1beta1__QueryDepositsRequest         *message);
size_t cosmos__gov__v1beta1__query_deposits_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryDepositsRequest   *message);
size_t cosmos__gov__v1beta1__query_deposits_request__pack
                     (const Cosmos__Gov__V1beta1__QueryDepositsRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_deposits_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryDepositsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryDepositsRequest *
       cosmos__gov__v1beta1__query_deposits_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_deposits_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryDepositsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryDepositsResponse methods */
void   cosmos__gov__v1beta1__query_deposits_response__init
                     (Cosmos__Gov__V1beta1__QueryDepositsResponse         *message);
size_t cosmos__gov__v1beta1__query_deposits_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryDepositsResponse   *message);
size_t cosmos__gov__v1beta1__query_deposits_response__pack
                     (const Cosmos__Gov__V1beta1__QueryDepositsResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_deposits_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryDepositsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryDepositsResponse *
       cosmos__gov__v1beta1__query_deposits_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_deposits_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryDepositsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryTallyResultRequest methods */
void   cosmos__gov__v1beta1__query_tally_result_request__init
                     (Cosmos__Gov__V1beta1__QueryTallyResultRequest         *message);
size_t cosmos__gov__v1beta1__query_tally_result_request__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryTallyResultRequest   *message);
size_t cosmos__gov__v1beta1__query_tally_result_request__pack
                     (const Cosmos__Gov__V1beta1__QueryTallyResultRequest   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_tally_result_request__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryTallyResultRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryTallyResultRequest *
       cosmos__gov__v1beta1__query_tally_result_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_tally_result_request__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryTallyResultRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Gov__V1beta1__QueryTallyResultResponse methods */
void   cosmos__gov__v1beta1__query_tally_result_response__init
                     (Cosmos__Gov__V1beta1__QueryTallyResultResponse         *message);
size_t cosmos__gov__v1beta1__query_tally_result_response__get_packed_size
                     (const Cosmos__Gov__V1beta1__QueryTallyResultResponse   *message);
size_t cosmos__gov__v1beta1__query_tally_result_response__pack
                     (const Cosmos__Gov__V1beta1__QueryTallyResultResponse   *message,
                      uint8_t             *out);
size_t cosmos__gov__v1beta1__query_tally_result_response__pack_to_buffer
                     (const Cosmos__Gov__V1beta1__QueryTallyResultResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Gov__V1beta1__QueryTallyResultResponse *
       cosmos__gov__v1beta1__query_tally_result_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__gov__v1beta1__query_tally_result_response__free_unpacked
                     (Cosmos__Gov__V1beta1__QueryTallyResultResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Gov__V1beta1__QueryProposalRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryProposalRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryProposalResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryProposalResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryProposalsRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryProposalsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryProposalsResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryProposalsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryVoteRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryVoteRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryVoteResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryVoteResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryVotesRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryVotesRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryVotesResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryVotesResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryParamsRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryParamsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryParamsResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryParamsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryDepositRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryDepositRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryDepositResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryDepositResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryDepositsRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryDepositsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryDepositsResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryDepositsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryTallyResultRequest_Closure)
                 (const Cosmos__Gov__V1beta1__QueryTallyResultRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Gov__V1beta1__QueryTallyResultResponse_Closure)
                 (const Cosmos__Gov__V1beta1__QueryTallyResultResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Gov__V1beta1__Query_Service Cosmos__Gov__V1beta1__Query_Service;
struct Cosmos__Gov__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*proposal)(Cosmos__Gov__V1beta1__Query_Service *service,
                   const Cosmos__Gov__V1beta1__QueryProposalRequest *input,
                   Cosmos__Gov__V1beta1__QueryProposalResponse_Closure closure,
                   void *closure_data);
  void (*proposals)(Cosmos__Gov__V1beta1__Query_Service *service,
                    const Cosmos__Gov__V1beta1__QueryProposalsRequest *input,
                    Cosmos__Gov__V1beta1__QueryProposalsResponse_Closure closure,
                    void *closure_data);
  void (*vote)(Cosmos__Gov__V1beta1__Query_Service *service,
               const Cosmos__Gov__V1beta1__QueryVoteRequest *input,
               Cosmos__Gov__V1beta1__QueryVoteResponse_Closure closure,
               void *closure_data);
  void (*votes)(Cosmos__Gov__V1beta1__Query_Service *service,
                const Cosmos__Gov__V1beta1__QueryVotesRequest *input,
                Cosmos__Gov__V1beta1__QueryVotesResponse_Closure closure,
                void *closure_data);
  void (*params)(Cosmos__Gov__V1beta1__Query_Service *service,
                 const Cosmos__Gov__V1beta1__QueryParamsRequest *input,
                 Cosmos__Gov__V1beta1__QueryParamsResponse_Closure closure,
                 void *closure_data);
  void (*deposit)(Cosmos__Gov__V1beta1__Query_Service *service,
                  const Cosmos__Gov__V1beta1__QueryDepositRequest *input,
                  Cosmos__Gov__V1beta1__QueryDepositResponse_Closure closure,
                  void *closure_data);
  void (*deposits)(Cosmos__Gov__V1beta1__Query_Service *service,
                   const Cosmos__Gov__V1beta1__QueryDepositsRequest *input,
                   Cosmos__Gov__V1beta1__QueryDepositsResponse_Closure closure,
                   void *closure_data);
  void (*tally_result)(Cosmos__Gov__V1beta1__Query_Service *service,
                       const Cosmos__Gov__V1beta1__QueryTallyResultRequest *input,
                       Cosmos__Gov__V1beta1__QueryTallyResultResponse_Closure closure,
                       void *closure_data);
};
typedef void (*Cosmos__Gov__V1beta1__Query_ServiceDestroy)(Cosmos__Gov__V1beta1__Query_Service *);
void cosmos__gov__v1beta1__query__init (Cosmos__Gov__V1beta1__Query_Service *service,
                                        Cosmos__Gov__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__GOV__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__gov__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__GOV__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__GOV__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## proposal,\
      function_prefix__ ## proposals,\
      function_prefix__ ## vote,\
      function_prefix__ ## votes,\
      function_prefix__ ## params,\
      function_prefix__ ## deposit,\
      function_prefix__ ## deposits,\
      function_prefix__ ## tally_result  }
void cosmos__gov__v1beta1__query__proposal(ProtobufCService *service,
                                           const Cosmos__Gov__V1beta1__QueryProposalRequest *input,
                                           Cosmos__Gov__V1beta1__QueryProposalResponse_Closure closure,
                                           void *closure_data);
void cosmos__gov__v1beta1__query__proposals(ProtobufCService *service,
                                            const Cosmos__Gov__V1beta1__QueryProposalsRequest *input,
                                            Cosmos__Gov__V1beta1__QueryProposalsResponse_Closure closure,
                                            void *closure_data);
void cosmos__gov__v1beta1__query__vote(ProtobufCService *service,
                                       const Cosmos__Gov__V1beta1__QueryVoteRequest *input,
                                       Cosmos__Gov__V1beta1__QueryVoteResponse_Closure closure,
                                       void *closure_data);
void cosmos__gov__v1beta1__query__votes(ProtobufCService *service,
                                        const Cosmos__Gov__V1beta1__QueryVotesRequest *input,
                                        Cosmos__Gov__V1beta1__QueryVotesResponse_Closure closure,
                                        void *closure_data);
void cosmos__gov__v1beta1__query__params(ProtobufCService *service,
                                         const Cosmos__Gov__V1beta1__QueryParamsRequest *input,
                                         Cosmos__Gov__V1beta1__QueryParamsResponse_Closure closure,
                                         void *closure_data);
void cosmos__gov__v1beta1__query__deposit(ProtobufCService *service,
                                          const Cosmos__Gov__V1beta1__QueryDepositRequest *input,
                                          Cosmos__Gov__V1beta1__QueryDepositResponse_Closure closure,
                                          void *closure_data);
void cosmos__gov__v1beta1__query__deposits(ProtobufCService *service,
                                           const Cosmos__Gov__V1beta1__QueryDepositsRequest *input,
                                           Cosmos__Gov__V1beta1__QueryDepositsResponse_Closure closure,
                                           void *closure_data);
void cosmos__gov__v1beta1__query__tally_result(ProtobufCService *service,
                                               const Cosmos__Gov__V1beta1__QueryTallyResultRequest *input,
                                               Cosmos__Gov__V1beta1__QueryTallyResultResponse_Closure closure,
                                               void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_proposal_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_proposal_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_proposals_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_proposals_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_vote_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_vote_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_votes_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_votes_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_params_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_params_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_deposit_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_deposit_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_deposits_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_deposits_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_tally_result_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__gov__v1beta1__query_tally_result_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__gov__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fgov_2fv1beta1_2fquery_2eproto__INCLUDED */
