/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/nft/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fnft_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fnft_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/nft/v1beta1/nft.pb-c.h"

typedef struct Cosmos__Nft__V1beta1__QueryBalanceRequest Cosmos__Nft__V1beta1__QueryBalanceRequest;
typedef struct Cosmos__Nft__V1beta1__QueryBalanceResponse Cosmos__Nft__V1beta1__QueryBalanceResponse;
typedef struct Cosmos__Nft__V1beta1__QueryOwnerRequest Cosmos__Nft__V1beta1__QueryOwnerRequest;
typedef struct Cosmos__Nft__V1beta1__QueryOwnerResponse Cosmos__Nft__V1beta1__QueryOwnerResponse;
typedef struct Cosmos__Nft__V1beta1__QuerySupplyRequest Cosmos__Nft__V1beta1__QuerySupplyRequest;
typedef struct Cosmos__Nft__V1beta1__QuerySupplyResponse Cosmos__Nft__V1beta1__QuerySupplyResponse;
typedef struct Cosmos__Nft__V1beta1__QueryNFTsRequest Cosmos__Nft__V1beta1__QueryNFTsRequest;
typedef struct Cosmos__Nft__V1beta1__QueryNFTsResponse Cosmos__Nft__V1beta1__QueryNFTsResponse;
typedef struct Cosmos__Nft__V1beta1__QueryNFTRequest Cosmos__Nft__V1beta1__QueryNFTRequest;
typedef struct Cosmos__Nft__V1beta1__QueryNFTResponse Cosmos__Nft__V1beta1__QueryNFTResponse;
typedef struct Cosmos__Nft__V1beta1__QueryClassRequest Cosmos__Nft__V1beta1__QueryClassRequest;
typedef struct Cosmos__Nft__V1beta1__QueryClassResponse Cosmos__Nft__V1beta1__QueryClassResponse;
typedef struct Cosmos__Nft__V1beta1__QueryClassesRequest Cosmos__Nft__V1beta1__QueryClassesRequest;
typedef struct Cosmos__Nft__V1beta1__QueryClassesResponse Cosmos__Nft__V1beta1__QueryClassesResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryBalanceRequest is the request type for the Query/Balance RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryBalanceRequest
{
  ProtobufCMessage base;
  /*
   * class_id associated with the nft
   */
  char *class_id;
  /*
   * owner is the owner address of the nft
   */
  char *owner;
};
#define COSMOS__NFT__V1BETA1__QUERY_BALANCE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_balance_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryBalanceResponse is the response type for the Query/Balance RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryBalanceResponse
{
  ProtobufCMessage base;
  /*
   * amount is the number of all NFTs of a given class owned by the owner
   */
  uint64_t amount;
};
#define COSMOS__NFT__V1BETA1__QUERY_BALANCE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_balance_response__descriptor) \
, 0 }


/*
 * QueryOwnerRequest is the request type for the Query/Owner RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryOwnerRequest
{
  ProtobufCMessage base;
  /*
   * class_id associated with the nft
   */
  char *class_id;
  /*
   * id is a unique identifier of the NFT
   */
  char *id;
};
#define COSMOS__NFT__V1BETA1__QUERY_OWNER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_owner_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryOwnerResponse is the response type for the Query/Owner RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryOwnerResponse
{
  ProtobufCMessage base;
  /*
   * owner is the owner address of the nft
   */
  char *owner;
};
#define COSMOS__NFT__V1BETA1__QUERY_OWNER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_owner_response__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QuerySupplyRequest is the request type for the Query/Supply RPC method
 */
struct  Cosmos__Nft__V1beta1__QuerySupplyRequest
{
  ProtobufCMessage base;
  /*
   * class_id associated with the nft
   */
  char *class_id;
};
#define COSMOS__NFT__V1BETA1__QUERY_SUPPLY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_supply_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QuerySupplyResponse is the response type for the Query/Supply RPC method
 */
struct  Cosmos__Nft__V1beta1__QuerySupplyResponse
{
  ProtobufCMessage base;
  /*
   * amount is the number of all NFTs from the given class
   */
  uint64_t amount;
};
#define COSMOS__NFT__V1BETA1__QUERY_SUPPLY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_supply_response__descriptor) \
, 0 }


/*
 * QueryNFTstRequest is the request type for the Query/NFTs RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryNFTsRequest
{
  ProtobufCMessage base;
  /*
   * class_id associated with the nft
   */
  char *class_id;
  /*
   * owner is the owner address of the nft
   */
  char *owner;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__NFT__V1BETA1__QUERY_NFTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_nfts_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryNFTsResponse is the response type for the Query/NFTs RPC methods
 */
struct  Cosmos__Nft__V1beta1__QueryNFTsResponse
{
  ProtobufCMessage base;
  /*
   * NFT defines the NFT
   */
  size_t n_nfts;
  Cosmos__Nft__V1beta1__NFT **nfts;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__NFT__V1BETA1__QUERY_NFTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_nfts_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryNFTRequest is the request type for the Query/NFT RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryNFTRequest
{
  ProtobufCMessage base;
  /*
   * class_id associated with the nft
   */
  char *class_id;
  /*
   * id is a unique identifier of the NFT
   */
  char *id;
};
#define COSMOS__NFT__V1BETA1__QUERY_NFTREQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_nftrequest__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryNFTResponse is the response type for the Query/NFT RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryNFTResponse
{
  ProtobufCMessage base;
  /*
   * owner is the owner address of the nft
   */
  Cosmos__Nft__V1beta1__NFT *nft;
};
#define COSMOS__NFT__V1BETA1__QUERY_NFTRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_nftresponse__descriptor) \
, NULL }


/*
 * QueryClassRequest is the request type for the Query/Class RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryClassRequest
{
  ProtobufCMessage base;
  /*
   * class_id associated with the nft
   */
  char *class_id;
};
#define COSMOS__NFT__V1BETA1__QUERY_CLASS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_class_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryClassResponse is the response type for the Query/Class RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryClassResponse
{
  ProtobufCMessage base;
  /*
   * class defines the class of the nft type.
   */
  Cosmos__Nft__V1beta1__Class *class_;
};
#define COSMOS__NFT__V1BETA1__QUERY_CLASS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_class_response__descriptor) \
, NULL }


/*
 * QueryClassesRequest is the request type for the Query/Classes RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryClassesRequest
{
  ProtobufCMessage base;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__NFT__V1BETA1__QUERY_CLASSES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_classes_request__descriptor) \
, NULL }


/*
 * QueryClassesResponse is the response type for the Query/Classes RPC method
 */
struct  Cosmos__Nft__V1beta1__QueryClassesResponse
{
  ProtobufCMessage base;
  /*
   * class defines the class of the nft type.
   */
  size_t n_classes;
  Cosmos__Nft__V1beta1__Class **classes;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__NFT__V1BETA1__QUERY_CLASSES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__query_classes_response__descriptor) \
, 0,NULL, NULL }


/* Cosmos__Nft__V1beta1__QueryBalanceRequest methods */
void   cosmos__nft__v1beta1__query_balance_request__init
                     (Cosmos__Nft__V1beta1__QueryBalanceRequest         *message);
size_t cosmos__nft__v1beta1__query_balance_request__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryBalanceRequest   *message);
size_t cosmos__nft__v1beta1__query_balance_request__pack
                     (const Cosmos__Nft__V1beta1__QueryBalanceRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_balance_request__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryBalanceRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryBalanceRequest *
       cosmos__nft__v1beta1__query_balance_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_balance_request__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryBalanceRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryBalanceResponse methods */
void   cosmos__nft__v1beta1__query_balance_response__init
                     (Cosmos__Nft__V1beta1__QueryBalanceResponse         *message);
size_t cosmos__nft__v1beta1__query_balance_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryBalanceResponse   *message);
size_t cosmos__nft__v1beta1__query_balance_response__pack
                     (const Cosmos__Nft__V1beta1__QueryBalanceResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_balance_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryBalanceResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryBalanceResponse *
       cosmos__nft__v1beta1__query_balance_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_balance_response__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryBalanceResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryOwnerRequest methods */
void   cosmos__nft__v1beta1__query_owner_request__init
                     (Cosmos__Nft__V1beta1__QueryOwnerRequest         *message);
size_t cosmos__nft__v1beta1__query_owner_request__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryOwnerRequest   *message);
size_t cosmos__nft__v1beta1__query_owner_request__pack
                     (const Cosmos__Nft__V1beta1__QueryOwnerRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_owner_request__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryOwnerRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryOwnerRequest *
       cosmos__nft__v1beta1__query_owner_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_owner_request__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryOwnerRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryOwnerResponse methods */
void   cosmos__nft__v1beta1__query_owner_response__init
                     (Cosmos__Nft__V1beta1__QueryOwnerResponse         *message);
size_t cosmos__nft__v1beta1__query_owner_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryOwnerResponse   *message);
size_t cosmos__nft__v1beta1__query_owner_response__pack
                     (const Cosmos__Nft__V1beta1__QueryOwnerResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_owner_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryOwnerResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryOwnerResponse *
       cosmos__nft__v1beta1__query_owner_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_owner_response__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryOwnerResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QuerySupplyRequest methods */
void   cosmos__nft__v1beta1__query_supply_request__init
                     (Cosmos__Nft__V1beta1__QuerySupplyRequest         *message);
size_t cosmos__nft__v1beta1__query_supply_request__get_packed_size
                     (const Cosmos__Nft__V1beta1__QuerySupplyRequest   *message);
size_t cosmos__nft__v1beta1__query_supply_request__pack
                     (const Cosmos__Nft__V1beta1__QuerySupplyRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_supply_request__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QuerySupplyRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QuerySupplyRequest *
       cosmos__nft__v1beta1__query_supply_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_supply_request__free_unpacked
                     (Cosmos__Nft__V1beta1__QuerySupplyRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QuerySupplyResponse methods */
void   cosmos__nft__v1beta1__query_supply_response__init
                     (Cosmos__Nft__V1beta1__QuerySupplyResponse         *message);
size_t cosmos__nft__v1beta1__query_supply_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__QuerySupplyResponse   *message);
size_t cosmos__nft__v1beta1__query_supply_response__pack
                     (const Cosmos__Nft__V1beta1__QuerySupplyResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_supply_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QuerySupplyResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QuerySupplyResponse *
       cosmos__nft__v1beta1__query_supply_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_supply_response__free_unpacked
                     (Cosmos__Nft__V1beta1__QuerySupplyResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryNFTsRequest methods */
void   cosmos__nft__v1beta1__query_nfts_request__init
                     (Cosmos__Nft__V1beta1__QueryNFTsRequest         *message);
size_t cosmos__nft__v1beta1__query_nfts_request__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryNFTsRequest   *message);
size_t cosmos__nft__v1beta1__query_nfts_request__pack
                     (const Cosmos__Nft__V1beta1__QueryNFTsRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_nfts_request__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryNFTsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryNFTsRequest *
       cosmos__nft__v1beta1__query_nfts_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_nfts_request__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryNFTsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryNFTsResponse methods */
void   cosmos__nft__v1beta1__query_nfts_response__init
                     (Cosmos__Nft__V1beta1__QueryNFTsResponse         *message);
size_t cosmos__nft__v1beta1__query_nfts_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryNFTsResponse   *message);
size_t cosmos__nft__v1beta1__query_nfts_response__pack
                     (const Cosmos__Nft__V1beta1__QueryNFTsResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_nfts_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryNFTsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryNFTsResponse *
       cosmos__nft__v1beta1__query_nfts_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_nfts_response__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryNFTsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryNFTRequest methods */
void   cosmos__nft__v1beta1__query_nftrequest__init
                     (Cosmos__Nft__V1beta1__QueryNFTRequest         *message);
size_t cosmos__nft__v1beta1__query_nftrequest__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryNFTRequest   *message);
size_t cosmos__nft__v1beta1__query_nftrequest__pack
                     (const Cosmos__Nft__V1beta1__QueryNFTRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_nftrequest__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryNFTRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryNFTRequest *
       cosmos__nft__v1beta1__query_nftrequest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_nftrequest__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryNFTRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryNFTResponse methods */
void   cosmos__nft__v1beta1__query_nftresponse__init
                     (Cosmos__Nft__V1beta1__QueryNFTResponse         *message);
size_t cosmos__nft__v1beta1__query_nftresponse__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryNFTResponse   *message);
size_t cosmos__nft__v1beta1__query_nftresponse__pack
                     (const Cosmos__Nft__V1beta1__QueryNFTResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_nftresponse__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryNFTResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryNFTResponse *
       cosmos__nft__v1beta1__query_nftresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_nftresponse__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryNFTResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryClassRequest methods */
void   cosmos__nft__v1beta1__query_class_request__init
                     (Cosmos__Nft__V1beta1__QueryClassRequest         *message);
size_t cosmos__nft__v1beta1__query_class_request__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryClassRequest   *message);
size_t cosmos__nft__v1beta1__query_class_request__pack
                     (const Cosmos__Nft__V1beta1__QueryClassRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_class_request__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryClassRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryClassRequest *
       cosmos__nft__v1beta1__query_class_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_class_request__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryClassRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryClassResponse methods */
void   cosmos__nft__v1beta1__query_class_response__init
                     (Cosmos__Nft__V1beta1__QueryClassResponse         *message);
size_t cosmos__nft__v1beta1__query_class_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryClassResponse   *message);
size_t cosmos__nft__v1beta1__query_class_response__pack
                     (const Cosmos__Nft__V1beta1__QueryClassResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_class_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryClassResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryClassResponse *
       cosmos__nft__v1beta1__query_class_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_class_response__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryClassResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryClassesRequest methods */
void   cosmos__nft__v1beta1__query_classes_request__init
                     (Cosmos__Nft__V1beta1__QueryClassesRequest         *message);
size_t cosmos__nft__v1beta1__query_classes_request__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryClassesRequest   *message);
size_t cosmos__nft__v1beta1__query_classes_request__pack
                     (const Cosmos__Nft__V1beta1__QueryClassesRequest   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_classes_request__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryClassesRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryClassesRequest *
       cosmos__nft__v1beta1__query_classes_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_classes_request__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryClassesRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__QueryClassesResponse methods */
void   cosmos__nft__v1beta1__query_classes_response__init
                     (Cosmos__Nft__V1beta1__QueryClassesResponse         *message);
size_t cosmos__nft__v1beta1__query_classes_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__QueryClassesResponse   *message);
size_t cosmos__nft__v1beta1__query_classes_response__pack
                     (const Cosmos__Nft__V1beta1__QueryClassesResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__query_classes_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__QueryClassesResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__QueryClassesResponse *
       cosmos__nft__v1beta1__query_classes_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__query_classes_response__free_unpacked
                     (Cosmos__Nft__V1beta1__QueryClassesResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Nft__V1beta1__QueryBalanceRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QueryBalanceRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryBalanceResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QueryBalanceResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryOwnerRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QueryOwnerRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryOwnerResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QueryOwnerResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QuerySupplyRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QuerySupplyRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QuerySupplyResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QuerySupplyResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryNFTsRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QueryNFTsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryNFTsResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QueryNFTsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryNFTRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QueryNFTRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryNFTResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QueryNFTResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryClassRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QueryClassRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryClassResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QueryClassResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryClassesRequest_Closure)
                 (const Cosmos__Nft__V1beta1__QueryClassesRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__QueryClassesResponse_Closure)
                 (const Cosmos__Nft__V1beta1__QueryClassesResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Nft__V1beta1__Query_Service Cosmos__Nft__V1beta1__Query_Service;
struct Cosmos__Nft__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*balance)(Cosmos__Nft__V1beta1__Query_Service *service,
                  const Cosmos__Nft__V1beta1__QueryBalanceRequest *input,
                  Cosmos__Nft__V1beta1__QueryBalanceResponse_Closure closure,
                  void *closure_data);
  void (*owner)(Cosmos__Nft__V1beta1__Query_Service *service,
                const Cosmos__Nft__V1beta1__QueryOwnerRequest *input,
                Cosmos__Nft__V1beta1__QueryOwnerResponse_Closure closure,
                void *closure_data);
  void (*supply)(Cosmos__Nft__V1beta1__Query_Service *service,
                 const Cosmos__Nft__V1beta1__QuerySupplyRequest *input,
                 Cosmos__Nft__V1beta1__QuerySupplyResponse_Closure closure,
                 void *closure_data);
  void (*nfts)(Cosmos__Nft__V1beta1__Query_Service *service,
               const Cosmos__Nft__V1beta1__QueryNFTsRequest *input,
               Cosmos__Nft__V1beta1__QueryNFTsResponse_Closure closure,
               void *closure_data);
  void (*nft)(Cosmos__Nft__V1beta1__Query_Service *service,
              const Cosmos__Nft__V1beta1__QueryNFTRequest *input,
              Cosmos__Nft__V1beta1__QueryNFTResponse_Closure closure,
              void *closure_data);
  void (*class)(Cosmos__Nft__V1beta1__Query_Service *service,
                const Cosmos__Nft__V1beta1__QueryClassRequest *input,
                Cosmos__Nft__V1beta1__QueryClassResponse_Closure closure,
                void *closure_data);
  void (*classes)(Cosmos__Nft__V1beta1__Query_Service *service,
                  const Cosmos__Nft__V1beta1__QueryClassesRequest *input,
                  Cosmos__Nft__V1beta1__QueryClassesResponse_Closure closure,
                  void *closure_data);
};
typedef void (*Cosmos__Nft__V1beta1__Query_ServiceDestroy)(Cosmos__Nft__V1beta1__Query_Service *);
void cosmos__nft__v1beta1__query__init (Cosmos__Nft__V1beta1__Query_Service *service,
                                        Cosmos__Nft__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__NFT__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__nft__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__NFT__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__NFT__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## balance,\
      function_prefix__ ## owner,\
      function_prefix__ ## supply,\
      function_prefix__ ## nfts,\
      function_prefix__ ## nft,\
      function_prefix__ ## class,\
      function_prefix__ ## classes  }
void cosmos__nft__v1beta1__query__balance(ProtobufCService *service,
                                          const Cosmos__Nft__V1beta1__QueryBalanceRequest *input,
                                          Cosmos__Nft__V1beta1__QueryBalanceResponse_Closure closure,
                                          void *closure_data);
void cosmos__nft__v1beta1__query__owner(ProtobufCService *service,
                                        const Cosmos__Nft__V1beta1__QueryOwnerRequest *input,
                                        Cosmos__Nft__V1beta1__QueryOwnerResponse_Closure closure,
                                        void *closure_data);
void cosmos__nft__v1beta1__query__supply(ProtobufCService *service,
                                         const Cosmos__Nft__V1beta1__QuerySupplyRequest *input,
                                         Cosmos__Nft__V1beta1__QuerySupplyResponse_Closure closure,
                                         void *closure_data);
void cosmos__nft__v1beta1__query__nfts(ProtobufCService *service,
                                       const Cosmos__Nft__V1beta1__QueryNFTsRequest *input,
                                       Cosmos__Nft__V1beta1__QueryNFTsResponse_Closure closure,
                                       void *closure_data);
void cosmos__nft__v1beta1__query__nft(ProtobufCService *service,
                                      const Cosmos__Nft__V1beta1__QueryNFTRequest *input,
                                      Cosmos__Nft__V1beta1__QueryNFTResponse_Closure closure,
                                      void *closure_data);
void cosmos__nft__v1beta1__query__class(ProtobufCService *service,
                                        const Cosmos__Nft__V1beta1__QueryClassRequest *input,
                                        Cosmos__Nft__V1beta1__QueryClassResponse_Closure closure,
                                        void *closure_data);
void cosmos__nft__v1beta1__query__classes(ProtobufCService *service,
                                          const Cosmos__Nft__V1beta1__QueryClassesRequest *input,
                                          Cosmos__Nft__V1beta1__QueryClassesResponse_Closure closure,
                                          void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_balance_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_balance_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_owner_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_owner_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_supply_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_supply_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_nfts_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_nfts_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_nftrequest__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_nftresponse__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_class_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_class_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_classes_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__query_classes_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__nft__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fnft_2fv1beta1_2fquery_2eproto__INCLUDED */
