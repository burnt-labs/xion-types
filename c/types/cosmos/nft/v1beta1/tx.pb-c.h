/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/nft/v1beta1/tx.proto */

#ifndef PROTOBUF_C_cosmos_2fnft_2fv1beta1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fnft_2fv1beta1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"

typedef struct Cosmos__Nft__V1beta1__MsgSend Cosmos__Nft__V1beta1__MsgSend;
typedef struct Cosmos__Nft__V1beta1__MsgSendResponse Cosmos__Nft__V1beta1__MsgSendResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgSend represents a message to send a nft from one account to another account.
 */
struct  Cosmos__Nft__V1beta1__MsgSend
{
  ProtobufCMessage base;
  /*
   * class_id defines the unique identifier of the nft classification, similar to the contract address of ERC721
   */
  char *class_id;
  /*
   * id defines the unique identification of nft
   */
  char *id;
  /*
   * sender is the address of the owner of nft
   */
  char *sender;
  /*
   * receiver is the receiver address of nft
   */
  char *receiver;
};
#define COSMOS__NFT__V1BETA1__MSG_SEND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__msg_send__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * MsgSendResponse defines the Msg/Send response type.
 */
struct  Cosmos__Nft__V1beta1__MsgSendResponse
{
  ProtobufCMessage base;
};
#define COSMOS__NFT__V1BETA1__MSG_SEND_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__nft__v1beta1__msg_send_response__descriptor) \
 }


/* Cosmos__Nft__V1beta1__MsgSend methods */
void   cosmos__nft__v1beta1__msg_send__init
                     (Cosmos__Nft__V1beta1__MsgSend         *message);
size_t cosmos__nft__v1beta1__msg_send__get_packed_size
                     (const Cosmos__Nft__V1beta1__MsgSend   *message);
size_t cosmos__nft__v1beta1__msg_send__pack
                     (const Cosmos__Nft__V1beta1__MsgSend   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__msg_send__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__MsgSend   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__MsgSend *
       cosmos__nft__v1beta1__msg_send__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__msg_send__free_unpacked
                     (Cosmos__Nft__V1beta1__MsgSend *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Nft__V1beta1__MsgSendResponse methods */
void   cosmos__nft__v1beta1__msg_send_response__init
                     (Cosmos__Nft__V1beta1__MsgSendResponse         *message);
size_t cosmos__nft__v1beta1__msg_send_response__get_packed_size
                     (const Cosmos__Nft__V1beta1__MsgSendResponse   *message);
size_t cosmos__nft__v1beta1__msg_send_response__pack
                     (const Cosmos__Nft__V1beta1__MsgSendResponse   *message,
                      uint8_t             *out);
size_t cosmos__nft__v1beta1__msg_send_response__pack_to_buffer
                     (const Cosmos__Nft__V1beta1__MsgSendResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Nft__V1beta1__MsgSendResponse *
       cosmos__nft__v1beta1__msg_send_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__nft__v1beta1__msg_send_response__free_unpacked
                     (Cosmos__Nft__V1beta1__MsgSendResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Nft__V1beta1__MsgSend_Closure)
                 (const Cosmos__Nft__V1beta1__MsgSend *message,
                  void *closure_data);
typedef void (*Cosmos__Nft__V1beta1__MsgSendResponse_Closure)
                 (const Cosmos__Nft__V1beta1__MsgSendResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Nft__V1beta1__Msg_Service Cosmos__Nft__V1beta1__Msg_Service;
struct Cosmos__Nft__V1beta1__Msg_Service
{
  ProtobufCService base;
  void (*send)(Cosmos__Nft__V1beta1__Msg_Service *service,
               const Cosmos__Nft__V1beta1__MsgSend *input,
               Cosmos__Nft__V1beta1__MsgSendResponse_Closure closure,
               void *closure_data);
};
typedef void (*Cosmos__Nft__V1beta1__Msg_ServiceDestroy)(Cosmos__Nft__V1beta1__Msg_Service *);
void cosmos__nft__v1beta1__msg__init (Cosmos__Nft__V1beta1__Msg_Service *service,
                                      Cosmos__Nft__V1beta1__Msg_ServiceDestroy destroy);
#define COSMOS__NFT__V1BETA1__MSG__BASE_INIT \
    { &cosmos__nft__v1beta1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__NFT__V1BETA1__MSG__INIT(function_prefix__) \
    { COSMOS__NFT__V1BETA1__MSG__BASE_INIT,\
      function_prefix__ ## send  }
void cosmos__nft__v1beta1__msg__send(ProtobufCService *service,
                                     const Cosmos__Nft__V1beta1__MsgSend *input,
                                     Cosmos__Nft__V1beta1__MsgSendResponse_Closure closure,
                                     void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__msg_send__descriptor;
extern const ProtobufCMessageDescriptor cosmos__nft__v1beta1__msg_send_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__nft__v1beta1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fnft_2fv1beta1_2ftx_2eproto__INCLUDED */
