/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/store/snapshots/v1/snapshot.proto */

#ifndef PROTOBUF_C_cosmos_2fstore_2fsnapshots_2fv1_2fsnapshot_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fstore_2fsnapshots_2fv1_2fsnapshot_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"

typedef struct Cosmos__Store__Snapshots__V1__Snapshot Cosmos__Store__Snapshots__V1__Snapshot;
typedef struct Cosmos__Store__Snapshots__V1__Metadata Cosmos__Store__Snapshots__V1__Metadata;
typedef struct Cosmos__Store__Snapshots__V1__SnapshotItem Cosmos__Store__Snapshots__V1__SnapshotItem;
typedef struct Cosmos__Store__Snapshots__V1__SnapshotStoreItem Cosmos__Store__Snapshots__V1__SnapshotStoreItem;
typedef struct Cosmos__Store__Snapshots__V1__SnapshotIAVLItem Cosmos__Store__Snapshots__V1__SnapshotIAVLItem;
typedef struct Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta;
typedef struct Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload;


/* --- enums --- */


/* --- messages --- */

/*
 * Snapshot contains Tendermint state sync snapshot info.
 */
struct  Cosmos__Store__Snapshots__V1__Snapshot
{
  ProtobufCMessage base;
  uint64_t height;
  uint32_t format;
  uint32_t chunks;
  ProtobufCBinaryData hash;
  Cosmos__Store__Snapshots__V1__Metadata *metadata;
};
#define COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__snapshot__descriptor) \
, 0, 0, 0, {0,NULL}, NULL }


/*
 * Metadata contains SDK-specific snapshot metadata.
 */
struct  Cosmos__Store__Snapshots__V1__Metadata
{
  ProtobufCMessage base;
  /*
   * SHA-256 chunk hashes
   */
  size_t n_chunk_hashes;
  ProtobufCBinaryData *chunk_hashes;
};
#define COSMOS__STORE__SNAPSHOTS__V1__METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__metadata__descriptor) \
, 0,NULL }


typedef enum {
  COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM__NOT_SET = 0,
  COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM_STORE = 1,
  COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM_IAVL = 2,
  COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM_EXTENSION = 3,
  COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM_EXTENSION_PAYLOAD = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM__CASE)
} Cosmos__Store__Snapshots__V1__SnapshotItem__ItemCase;

/*
 * SnapshotItem is an item contained in a rootmulti.Store snapshot.
 */
struct  Cosmos__Store__Snapshots__V1__SnapshotItem
{
  ProtobufCMessage base;
  Cosmos__Store__Snapshots__V1__SnapshotItem__ItemCase item_case;
  union {
    Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta *extension;
    Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload *extension_payload;
    Cosmos__Store__Snapshots__V1__SnapshotIAVLItem *iavl;
    Cosmos__Store__Snapshots__V1__SnapshotStoreItem *store;
  };
};
#define COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__snapshot_item__descriptor) \
, COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_ITEM__ITEM__NOT_SET, {0} }


/*
 * SnapshotStoreItem contains metadata about a snapshotted store.
 */
struct  Cosmos__Store__Snapshots__V1__SnapshotStoreItem
{
  ProtobufCMessage base;
  char *name;
};
#define COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_STORE_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__snapshot_store_item__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * SnapshotIAVLItem is an exported IAVL node.
 */
struct  Cosmos__Store__Snapshots__V1__SnapshotIAVLItem
{
  ProtobufCMessage base;
  ProtobufCBinaryData key;
  ProtobufCBinaryData value;
  /*
   * version is block height
   */
  int64_t version;
  /*
   * height is depth of the tree.
   */
  int32_t height;
};
#define COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_IAVLITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__snapshot_iavlitem__descriptor) \
, {0,NULL}, {0,NULL}, 0, 0 }


/*
 * SnapshotExtensionMeta contains metadata about an external snapshotter.
 */
struct  Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta
{
  ProtobufCMessage base;
  char *name;
  uint32_t format;
};
#define COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_EXTENSION_META__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__snapshot_extension_meta__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/*
 * SnapshotExtensionPayload contains payloads of an external snapshotter.
 */
struct  Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload
{
  ProtobufCMessage base;
  ProtobufCBinaryData payload;
};
#define COSMOS__STORE__SNAPSHOTS__V1__SNAPSHOT_EXTENSION_PAYLOAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__snapshots__v1__snapshot_extension_payload__descriptor) \
, {0,NULL} }


/* Cosmos__Store__Snapshots__V1__Snapshot methods */
void   cosmos__store__snapshots__v1__snapshot__init
                     (Cosmos__Store__Snapshots__V1__Snapshot         *message);
size_t cosmos__store__snapshots__v1__snapshot__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__Snapshot   *message);
size_t cosmos__store__snapshots__v1__snapshot__pack
                     (const Cosmos__Store__Snapshots__V1__Snapshot   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__snapshot__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__Snapshot   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__Snapshot *
       cosmos__store__snapshots__v1__snapshot__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__snapshot__free_unpacked
                     (Cosmos__Store__Snapshots__V1__Snapshot *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Snapshots__V1__Metadata methods */
void   cosmos__store__snapshots__v1__metadata__init
                     (Cosmos__Store__Snapshots__V1__Metadata         *message);
size_t cosmos__store__snapshots__v1__metadata__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__Metadata   *message);
size_t cosmos__store__snapshots__v1__metadata__pack
                     (const Cosmos__Store__Snapshots__V1__Metadata   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__metadata__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__Metadata   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__Metadata *
       cosmos__store__snapshots__v1__metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__metadata__free_unpacked
                     (Cosmos__Store__Snapshots__V1__Metadata *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Snapshots__V1__SnapshotItem methods */
void   cosmos__store__snapshots__v1__snapshot_item__init
                     (Cosmos__Store__Snapshots__V1__SnapshotItem         *message);
size_t cosmos__store__snapshots__v1__snapshot_item__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__SnapshotItem   *message);
size_t cosmos__store__snapshots__v1__snapshot_item__pack
                     (const Cosmos__Store__Snapshots__V1__SnapshotItem   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__snapshot_item__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__SnapshotItem   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__SnapshotItem *
       cosmos__store__snapshots__v1__snapshot_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__snapshot_item__free_unpacked
                     (Cosmos__Store__Snapshots__V1__SnapshotItem *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Snapshots__V1__SnapshotStoreItem methods */
void   cosmos__store__snapshots__v1__snapshot_store_item__init
                     (Cosmos__Store__Snapshots__V1__SnapshotStoreItem         *message);
size_t cosmos__store__snapshots__v1__snapshot_store_item__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__SnapshotStoreItem   *message);
size_t cosmos__store__snapshots__v1__snapshot_store_item__pack
                     (const Cosmos__Store__Snapshots__V1__SnapshotStoreItem   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__snapshot_store_item__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__SnapshotStoreItem   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__SnapshotStoreItem *
       cosmos__store__snapshots__v1__snapshot_store_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__snapshot_store_item__free_unpacked
                     (Cosmos__Store__Snapshots__V1__SnapshotStoreItem *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Snapshots__V1__SnapshotIAVLItem methods */
void   cosmos__store__snapshots__v1__snapshot_iavlitem__init
                     (Cosmos__Store__Snapshots__V1__SnapshotIAVLItem         *message);
size_t cosmos__store__snapshots__v1__snapshot_iavlitem__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__SnapshotIAVLItem   *message);
size_t cosmos__store__snapshots__v1__snapshot_iavlitem__pack
                     (const Cosmos__Store__Snapshots__V1__SnapshotIAVLItem   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__snapshot_iavlitem__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__SnapshotIAVLItem   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__SnapshotIAVLItem *
       cosmos__store__snapshots__v1__snapshot_iavlitem__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__snapshot_iavlitem__free_unpacked
                     (Cosmos__Store__Snapshots__V1__SnapshotIAVLItem *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta methods */
void   cosmos__store__snapshots__v1__snapshot_extension_meta__init
                     (Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta         *message);
size_t cosmos__store__snapshots__v1__snapshot_extension_meta__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta   *message);
size_t cosmos__store__snapshots__v1__snapshot_extension_meta__pack
                     (const Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__snapshot_extension_meta__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta *
       cosmos__store__snapshots__v1__snapshot_extension_meta__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__snapshot_extension_meta__free_unpacked
                     (Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload methods */
void   cosmos__store__snapshots__v1__snapshot_extension_payload__init
                     (Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload         *message);
size_t cosmos__store__snapshots__v1__snapshot_extension_payload__get_packed_size
                     (const Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload   *message);
size_t cosmos__store__snapshots__v1__snapshot_extension_payload__pack
                     (const Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload   *message,
                      uint8_t             *out);
size_t cosmos__store__snapshots__v1__snapshot_extension_payload__pack_to_buffer
                     (const Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload *
       cosmos__store__snapshots__v1__snapshot_extension_payload__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__snapshots__v1__snapshot_extension_payload__free_unpacked
                     (Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Store__Snapshots__V1__Snapshot_Closure)
                 (const Cosmos__Store__Snapshots__V1__Snapshot *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Snapshots__V1__Metadata_Closure)
                 (const Cosmos__Store__Snapshots__V1__Metadata *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Snapshots__V1__SnapshotItem_Closure)
                 (const Cosmos__Store__Snapshots__V1__SnapshotItem *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Snapshots__V1__SnapshotStoreItem_Closure)
                 (const Cosmos__Store__Snapshots__V1__SnapshotStoreItem *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Snapshots__V1__SnapshotIAVLItem_Closure)
                 (const Cosmos__Store__Snapshots__V1__SnapshotIAVLItem *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta_Closure)
                 (const Cosmos__Store__Snapshots__V1__SnapshotExtensionMeta *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload_Closure)
                 (const Cosmos__Store__Snapshots__V1__SnapshotExtensionPayload *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__snapshot__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__metadata__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__snapshot_item__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__snapshot_store_item__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__snapshot_iavlitem__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__snapshot_extension_meta__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__snapshots__v1__snapshot_extension_payload__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fstore_2fsnapshots_2fv1_2fsnapshot_2eproto__INCLUDED */
