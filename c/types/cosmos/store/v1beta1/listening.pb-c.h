/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/store/v1beta1/listening.proto */

#ifndef PROTOBUF_C_cosmos_2fstore_2fv1beta1_2flistening_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fstore_2fv1beta1_2flistening_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "tendermint/abci/types.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"

typedef struct Cosmos__Store__V1beta1__StoreKVPair Cosmos__Store__V1beta1__StoreKVPair;
typedef struct Cosmos__Store__V1beta1__BlockMetadata Cosmos__Store__V1beta1__BlockMetadata;


/* --- enums --- */


/* --- messages --- */

/*
 * StoreKVPair is a KVStore KVPair used for listening to state changes (Sets and Deletes)
 * It optionally includes the StoreKey for the originating KVStore and a Boolean flag to distinguish between Sets and
 * Deletes
 */
struct  Cosmos__Store__V1beta1__StoreKVPair
{
  ProtobufCMessage base;
  /*
   * the store key for the KVStore this pair originates from
   */
  char *store_key;
  /*
   * true indicates a delete operation, false indicates a set operation
   */
  protobuf_c_boolean delete_;
  ProtobufCBinaryData key;
  ProtobufCBinaryData value;
};
#define COSMOS__STORE__V1BETA1__STORE_KVPAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__v1beta1__store_kvpair__descriptor) \
, (char *)protobuf_c_empty_string, 0, {0,NULL}, {0,NULL} }


/*
 * BlockMetadata contains all the abci event data of a block
 * the file streamer dump them into files together with the state changes.
 */
struct  Cosmos__Store__V1beta1__BlockMetadata
{
  ProtobufCMessage base;
  Tendermint__Abci__ResponseCommit *response_commit;
  Tendermint__Abci__RequestFinalizeBlock *request_finalize_block;
  /*
   * TODO: should we renumber this?
   */
  Tendermint__Abci__ResponseFinalizeBlock *response_finalize_block;
};
#define COSMOS__STORE__V1BETA1__BLOCK_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__v1beta1__block_metadata__descriptor) \
, NULL, NULL, NULL }


/* Cosmos__Store__V1beta1__StoreKVPair methods */
void   cosmos__store__v1beta1__store_kvpair__init
                     (Cosmos__Store__V1beta1__StoreKVPair         *message);
size_t cosmos__store__v1beta1__store_kvpair__get_packed_size
                     (const Cosmos__Store__V1beta1__StoreKVPair   *message);
size_t cosmos__store__v1beta1__store_kvpair__pack
                     (const Cosmos__Store__V1beta1__StoreKVPair   *message,
                      uint8_t             *out);
size_t cosmos__store__v1beta1__store_kvpair__pack_to_buffer
                     (const Cosmos__Store__V1beta1__StoreKVPair   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__V1beta1__StoreKVPair *
       cosmos__store__v1beta1__store_kvpair__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__v1beta1__store_kvpair__free_unpacked
                     (Cosmos__Store__V1beta1__StoreKVPair *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__V1beta1__BlockMetadata methods */
void   cosmos__store__v1beta1__block_metadata__init
                     (Cosmos__Store__V1beta1__BlockMetadata         *message);
size_t cosmos__store__v1beta1__block_metadata__get_packed_size
                     (const Cosmos__Store__V1beta1__BlockMetadata   *message);
size_t cosmos__store__v1beta1__block_metadata__pack
                     (const Cosmos__Store__V1beta1__BlockMetadata   *message,
                      uint8_t             *out);
size_t cosmos__store__v1beta1__block_metadata__pack_to_buffer
                     (const Cosmos__Store__V1beta1__BlockMetadata   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__V1beta1__BlockMetadata *
       cosmos__store__v1beta1__block_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__v1beta1__block_metadata__free_unpacked
                     (Cosmos__Store__V1beta1__BlockMetadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Store__V1beta1__StoreKVPair_Closure)
                 (const Cosmos__Store__V1beta1__StoreKVPair *message,
                  void *closure_data);
typedef void (*Cosmos__Store__V1beta1__BlockMetadata_Closure)
                 (const Cosmos__Store__V1beta1__BlockMetadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__store__v1beta1__store_kvpair__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__v1beta1__block_metadata__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fstore_2fv1beta1_2flistening_2eproto__INCLUDED */
