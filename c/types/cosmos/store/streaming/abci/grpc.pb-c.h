/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/store/streaming/abci/grpc.proto */

#ifndef PROTOBUF_C_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "tendermint/abci/types.pb-c.h"
#include "cosmos/store/v1beta1/listening.pb-c.h"

typedef struct Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest;
typedef struct Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse;
typedef struct Cosmos__Store__Streaming__Abci__ListenCommitRequest Cosmos__Store__Streaming__Abci__ListenCommitRequest;
typedef struct Cosmos__Store__Streaming__Abci__ListenCommitResponse Cosmos__Store__Streaming__Abci__ListenCommitResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 */
struct  Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest
{
  ProtobufCMessage base;
  Tendermint__Abci__RequestFinalizeBlock *req;
  Tendermint__Abci__ResponseFinalizeBlock *res;
};
#define COSMOS__STORE__STREAMING__ABCI__LISTEN_FINALIZE_BLOCK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__streaming__abci__listen_finalize_block_request__descriptor) \
, NULL, NULL }


/*
 * ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 */
struct  Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse
{
  ProtobufCMessage base;
};
#define COSMOS__STORE__STREAMING__ABCI__LISTEN_FINALIZE_BLOCK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__streaming__abci__listen_finalize_block_response__descriptor) \
 }


/*
 * ListenCommitRequest is the request type for the ListenCommit RPC method
 */
struct  Cosmos__Store__Streaming__Abci__ListenCommitRequest
{
  ProtobufCMessage base;
  /*
   * explicitly pass in block height as ResponseCommit does not contain this info
   */
  int64_t block_height;
  Tendermint__Abci__ResponseCommit *res;
  size_t n_change_set;
  Cosmos__Store__V1beta1__StoreKVPair **change_set;
};
#define COSMOS__STORE__STREAMING__ABCI__LISTEN_COMMIT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__streaming__abci__listen_commit_request__descriptor) \
, 0, NULL, 0,NULL }


/*
 * ListenCommitResponse is the response type for the ListenCommit RPC method
 */
struct  Cosmos__Store__Streaming__Abci__ListenCommitResponse
{
  ProtobufCMessage base;
};
#define COSMOS__STORE__STREAMING__ABCI__LISTEN_COMMIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__store__streaming__abci__listen_commit_response__descriptor) \
 }


/* Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest methods */
void   cosmos__store__streaming__abci__listen_finalize_block_request__init
                     (Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest         *message);
size_t cosmos__store__streaming__abci__listen_finalize_block_request__get_packed_size
                     (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest   *message);
size_t cosmos__store__streaming__abci__listen_finalize_block_request__pack
                     (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest   *message,
                      uint8_t             *out);
size_t cosmos__store__streaming__abci__listen_finalize_block_request__pack_to_buffer
                     (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest *
       cosmos__store__streaming__abci__listen_finalize_block_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__streaming__abci__listen_finalize_block_request__free_unpacked
                     (Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse methods */
void   cosmos__store__streaming__abci__listen_finalize_block_response__init
                     (Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse         *message);
size_t cosmos__store__streaming__abci__listen_finalize_block_response__get_packed_size
                     (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse   *message);
size_t cosmos__store__streaming__abci__listen_finalize_block_response__pack
                     (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse   *message,
                      uint8_t             *out);
size_t cosmos__store__streaming__abci__listen_finalize_block_response__pack_to_buffer
                     (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse *
       cosmos__store__streaming__abci__listen_finalize_block_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__streaming__abci__listen_finalize_block_response__free_unpacked
                     (Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Streaming__Abci__ListenCommitRequest methods */
void   cosmos__store__streaming__abci__listen_commit_request__init
                     (Cosmos__Store__Streaming__Abci__ListenCommitRequest         *message);
size_t cosmos__store__streaming__abci__listen_commit_request__get_packed_size
                     (const Cosmos__Store__Streaming__Abci__ListenCommitRequest   *message);
size_t cosmos__store__streaming__abci__listen_commit_request__pack
                     (const Cosmos__Store__Streaming__Abci__ListenCommitRequest   *message,
                      uint8_t             *out);
size_t cosmos__store__streaming__abci__listen_commit_request__pack_to_buffer
                     (const Cosmos__Store__Streaming__Abci__ListenCommitRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Streaming__Abci__ListenCommitRequest *
       cosmos__store__streaming__abci__listen_commit_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__streaming__abci__listen_commit_request__free_unpacked
                     (Cosmos__Store__Streaming__Abci__ListenCommitRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Store__Streaming__Abci__ListenCommitResponse methods */
void   cosmos__store__streaming__abci__listen_commit_response__init
                     (Cosmos__Store__Streaming__Abci__ListenCommitResponse         *message);
size_t cosmos__store__streaming__abci__listen_commit_response__get_packed_size
                     (const Cosmos__Store__Streaming__Abci__ListenCommitResponse   *message);
size_t cosmos__store__streaming__abci__listen_commit_response__pack
                     (const Cosmos__Store__Streaming__Abci__ListenCommitResponse   *message,
                      uint8_t             *out);
size_t cosmos__store__streaming__abci__listen_commit_response__pack_to_buffer
                     (const Cosmos__Store__Streaming__Abci__ListenCommitResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Store__Streaming__Abci__ListenCommitResponse *
       cosmos__store__streaming__abci__listen_commit_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__store__streaming__abci__listen_commit_response__free_unpacked
                     (Cosmos__Store__Streaming__Abci__ListenCommitResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest_Closure)
                 (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse_Closure)
                 (const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Streaming__Abci__ListenCommitRequest_Closure)
                 (const Cosmos__Store__Streaming__Abci__ListenCommitRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Store__Streaming__Abci__ListenCommitResponse_Closure)
                 (const Cosmos__Store__Streaming__Abci__ListenCommitResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Store__Streaming__Abci__ABCIListenerService_Service Cosmos__Store__Streaming__Abci__ABCIListenerService_Service;
struct Cosmos__Store__Streaming__Abci__ABCIListenerService_Service
{
  ProtobufCService base;
  void (*listen_finalize_block)(Cosmos__Store__Streaming__Abci__ABCIListenerService_Service *service,
                                const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest *input,
                                Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse_Closure closure,
                                void *closure_data);
  void (*listen_commit)(Cosmos__Store__Streaming__Abci__ABCIListenerService_Service *service,
                        const Cosmos__Store__Streaming__Abci__ListenCommitRequest *input,
                        Cosmos__Store__Streaming__Abci__ListenCommitResponse_Closure closure,
                        void *closure_data);
};
typedef void (*Cosmos__Store__Streaming__Abci__ABCIListenerService_ServiceDestroy)(Cosmos__Store__Streaming__Abci__ABCIListenerService_Service *);
void cosmos__store__streaming__abci__abcilistener_service__init (Cosmos__Store__Streaming__Abci__ABCIListenerService_Service *service,
                                                                 Cosmos__Store__Streaming__Abci__ABCIListenerService_ServiceDestroy destroy);
#define COSMOS__STORE__STREAMING__ABCI__ABCILISTENER_SERVICE__BASE_INIT \
    { &cosmos__store__streaming__abci__abcilistener_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__STORE__STREAMING__ABCI__ABCILISTENER_SERVICE__INIT(function_prefix__) \
    { COSMOS__STORE__STREAMING__ABCI__ABCILISTENER_SERVICE__BASE_INIT,\
      function_prefix__ ## listen_finalize_block,\
      function_prefix__ ## listen_commit  }
void cosmos__store__streaming__abci__abcilistener_service__listen_finalize_block(ProtobufCService *service,
                                                                                 const Cosmos__Store__Streaming__Abci__ListenFinalizeBlockRequest *input,
                                                                                 Cosmos__Store__Streaming__Abci__ListenFinalizeBlockResponse_Closure closure,
                                                                                 void *closure_data);
void cosmos__store__streaming__abci__abcilistener_service__listen_commit(ProtobufCService *service,
                                                                         const Cosmos__Store__Streaming__Abci__ListenCommitRequest *input,
                                                                         Cosmos__Store__Streaming__Abci__ListenCommitResponse_Closure closure,
                                                                         void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__store__streaming__abci__listen_finalize_block_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__streaming__abci__listen_finalize_block_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__streaming__abci__listen_commit_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__store__streaming__abci__listen_commit_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__store__streaming__abci__abcilistener_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto__INCLUDED */
