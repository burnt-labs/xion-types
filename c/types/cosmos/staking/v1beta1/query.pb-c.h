/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/staking/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fstaking_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fstaking_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/staking/v1beta1/staking.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/query/v1/query.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Staking__V1beta1__QueryValidatorsRequest Cosmos__Staking__V1beta1__QueryValidatorsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorsResponse Cosmos__Staking__V1beta1__QueryValidatorsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorRequest Cosmos__Staking__V1beta1__QueryValidatorRequest;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorResponse Cosmos__Staking__V1beta1__QueryValidatorResponse;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryDelegationRequest Cosmos__Staking__V1beta1__QueryDelegationRequest;
typedef struct Cosmos__Staking__V1beta1__QueryDelegationResponse Cosmos__Staking__V1beta1__QueryDelegationResponse;
typedef struct Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest;
typedef struct Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryRedelegationsRequest Cosmos__Staking__V1beta1__QueryRedelegationsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryRedelegationsResponse Cosmos__Staking__V1beta1__QueryRedelegationsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest;
typedef struct Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse;
typedef struct Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest;
typedef struct Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse;
typedef struct Cosmos__Staking__V1beta1__QueryPoolRequest Cosmos__Staking__V1beta1__QueryPoolRequest;
typedef struct Cosmos__Staking__V1beta1__QueryPoolResponse Cosmos__Staking__V1beta1__QueryPoolResponse;
typedef struct Cosmos__Staking__V1beta1__QueryParamsRequest Cosmos__Staking__V1beta1__QueryParamsRequest;
typedef struct Cosmos__Staking__V1beta1__QueryParamsResponse Cosmos__Staking__V1beta1__QueryParamsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryValidatorsRequest is request type for Query/Validators RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorsRequest
{
  ProtobufCMessage base;
  /*
   * status enables to query for validators matching a given status.
   */
  char *status;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATORS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validators_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryValidatorsResponse is response type for the Query/Validators RPC method
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorsResponse
{
  ProtobufCMessage base;
  /*
   * validators contains all the queried validators.
   */
  size_t n_validators;
  Cosmos__Staking__V1beta1__Validator **validators;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATORS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validators_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryValidatorRequest is response type for the Query/Validator RPC method
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorRequest
{
  ProtobufCMessage base;
  /*
   * validator_addr defines the validator address to query for.
   */
  char *validator_addr;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATOR_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validator_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryValidatorResponse is response type for the Query/Validator RPC method
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorResponse
{
  ProtobufCMessage base;
  /*
   * validator defines the validator info.
   */
  Cosmos__Staking__V1beta1__Validator *validator;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATOR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validator_response__descriptor) \
, NULL }


/*
 * QueryValidatorDelegationsRequest is request type for the
 * Query/ValidatorDelegations RPC method
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest
{
  ProtobufCMessage base;
  /*
   * validator_addr defines the validator address to query for.
   */
  char *validator_addr;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATOR_DELEGATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validator_delegations_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryValidatorDelegationsResponse is response type for the
 * Query/ValidatorDelegations RPC method
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse
{
  ProtobufCMessage base;
  size_t n_delegation_responses;
  Cosmos__Staking__V1beta1__DelegationResponse **delegation_responses;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATOR_DELEGATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validator_delegations_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryValidatorUnbondingDelegationsRequest is required type for the
 * Query/ValidatorUnbondingDelegations RPC method
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest
{
  ProtobufCMessage base;
  /*
   * validator_addr defines the validator address to query for.
   */
  char *validator_addr;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATOR_UNBONDING_DELEGATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryValidatorUnbondingDelegationsResponse is response type for the
 * Query/ValidatorUnbondingDelegations RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse
{
  ProtobufCMessage base;
  size_t n_unbonding_responses;
  Cosmos__Staking__V1beta1__UnbondingDelegation **unbonding_responses;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_VALIDATOR_UNBONDING_DELEGATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryDelegationRequest is request type for the Query/Delegation RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegationRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * validator_addr defines the validator address to query for.
   */
  char *validator_addr;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegation_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryDelegationResponse is response type for the Query/Delegation RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegationResponse
{
  ProtobufCMessage base;
  /*
   * delegation_responses defines the delegation info of a delegation.
   */
  Cosmos__Staking__V1beta1__DelegationResponse *delegation_response;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegation_response__descriptor) \
, NULL }


/*
 * QueryUnbondingDelegationRequest is request type for the
 * Query/UnbondingDelegation RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * validator_addr defines the validator address to query for.
   */
  char *validator_addr;
};
#define COSMOS__STAKING__V1BETA1__QUERY_UNBONDING_DELEGATION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_unbonding_delegation_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryDelegationResponse is response type for the Query/UnbondingDelegation
 * RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse
{
  ProtobufCMessage base;
  /*
   * unbond defines the unbonding information of a delegation.
   */
  Cosmos__Staking__V1beta1__UnbondingDelegation *unbond;
};
#define COSMOS__STAKING__V1BETA1__QUERY_UNBONDING_DELEGATION_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_unbonding_delegation_response__descriptor) \
, NULL }


/*
 * QueryDelegatorDelegationsRequest is request type for the
 * Query/DelegatorDelegations RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_DELEGATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_delegations_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryDelegatorDelegationsResponse is response type for the
 * Query/DelegatorDelegations RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse
{
  ProtobufCMessage base;
  /*
   * delegation_responses defines all the delegations' info of a delegator.
   */
  size_t n_delegation_responses;
  Cosmos__Staking__V1beta1__DelegationResponse **delegation_responses;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_DELEGATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_delegations_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryDelegatorUnbondingDelegationsRequest is request type for the
 * Query/DelegatorUnbondingDelegations RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_UNBONDING_DELEGATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryUnbondingDelegatorDelegationsResponse is response type for the
 * Query/UnbondingDelegatorDelegations RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse
{
  ProtobufCMessage base;
  size_t n_unbonding_responses;
  Cosmos__Staking__V1beta1__UnbondingDelegation **unbonding_responses;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_UNBONDING_DELEGATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryRedelegationsRequest is request type for the Query/Redelegations RPC
 * method.
 */
struct  Cosmos__Staking__V1beta1__QueryRedelegationsRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * src_validator_addr defines the validator address to redelegate from.
   */
  char *src_validator_addr;
  /*
   * dst_validator_addr defines the validator address to redelegate to.
   */
  char *dst_validator_addr;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_REDELEGATIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_redelegations_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryRedelegationsResponse is response type for the Query/Redelegations RPC
 * method.
 */
struct  Cosmos__Staking__V1beta1__QueryRedelegationsResponse
{
  ProtobufCMessage base;
  size_t n_redelegation_responses;
  Cosmos__Staking__V1beta1__RedelegationResponse **redelegation_responses;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_REDELEGATIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_redelegations_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryDelegatorValidatorsRequest is request type for the
 * Query/DelegatorValidators RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_VALIDATORS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_validators_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryDelegatorValidatorsResponse is response type for the
 * Query/DelegatorValidators RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse
{
  ProtobufCMessage base;
  /*
   * validators defines the validators' info of a delegator.
   */
  size_t n_validators;
  Cosmos__Staking__V1beta1__Validator **validators;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_VALIDATORS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_validators_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryDelegatorValidatorRequest is request type for the
 * Query/DelegatorValidator RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest
{
  ProtobufCMessage base;
  /*
   * delegator_addr defines the delegator address to query for.
   */
  char *delegator_addr;
  /*
   * validator_addr defines the validator address to query for.
   */
  char *validator_addr;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_VALIDATOR_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_validator_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryDelegatorValidatorResponse response type for the
 * Query/DelegatorValidator RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse
{
  ProtobufCMessage base;
  /*
   * validator defines the validator info.
   */
  Cosmos__Staking__V1beta1__Validator *validator;
};
#define COSMOS__STAKING__V1BETA1__QUERY_DELEGATOR_VALIDATOR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_delegator_validator_response__descriptor) \
, NULL }


/*
 * QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC
 * method.
 */
struct  Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest
{
  ProtobufCMessage base;
  /*
   * height defines at which height to query the historical info.
   */
  int64_t height;
};
#define COSMOS__STAKING__V1BETA1__QUERY_HISTORICAL_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_historical_info_request__descriptor) \
, 0 }


/*
 * QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
 * method.
 */
struct  Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse
{
  ProtobufCMessage base;
  /*
   * hist defines the historical info at the given height.
   */
  Cosmos__Staking__V1beta1__HistoricalInfo *hist;
};
#define COSMOS__STAKING__V1BETA1__QUERY_HISTORICAL_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_historical_info_response__descriptor) \
, NULL }


/*
 * QueryPoolRequest is request type for the Query/Pool RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryPoolRequest
{
  ProtobufCMessage base;
};
#define COSMOS__STAKING__V1BETA1__QUERY_POOL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_pool_request__descriptor) \
 }


/*
 * QueryPoolResponse is response type for the Query/Pool RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryPoolResponse
{
  ProtobufCMessage base;
  /*
   * pool defines the pool info.
   */
  Cosmos__Staking__V1beta1__Pool *pool;
};
#define COSMOS__STAKING__V1BETA1__QUERY_POOL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_pool_response__descriptor) \
, NULL }


/*
 * QueryParamsRequest is request type for the Query/Params RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryParamsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__STAKING__V1BETA1__QUERY_PARAMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_params_request__descriptor) \
 }


/*
 * QueryParamsResponse is response type for the Query/Params RPC method.
 */
struct  Cosmos__Staking__V1beta1__QueryParamsResponse
{
  ProtobufCMessage base;
  /*
   * params holds all the parameters of this module.
   */
  Cosmos__Staking__V1beta1__Params *params;
};
#define COSMOS__STAKING__V1BETA1__QUERY_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__staking__v1beta1__query_params_response__descriptor) \
, NULL }


/* Cosmos__Staking__V1beta1__QueryValidatorsRequest methods */
void   cosmos__staking__v1beta1__query_validators_request__init
                     (Cosmos__Staking__V1beta1__QueryValidatorsRequest         *message);
size_t cosmos__staking__v1beta1__query_validators_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorsRequest   *message);
size_t cosmos__staking__v1beta1__query_validators_request__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validators_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorsRequest *
       cosmos__staking__v1beta1__query_validators_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validators_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorsResponse methods */
void   cosmos__staking__v1beta1__query_validators_response__init
                     (Cosmos__Staking__V1beta1__QueryValidatorsResponse         *message);
size_t cosmos__staking__v1beta1__query_validators_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorsResponse   *message);
size_t cosmos__staking__v1beta1__query_validators_response__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validators_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorsResponse *
       cosmos__staking__v1beta1__query_validators_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validators_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorRequest methods */
void   cosmos__staking__v1beta1__query_validator_request__init
                     (Cosmos__Staking__V1beta1__QueryValidatorRequest         *message);
size_t cosmos__staking__v1beta1__query_validator_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorRequest   *message);
size_t cosmos__staking__v1beta1__query_validator_request__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validator_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorRequest *
       cosmos__staking__v1beta1__query_validator_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validator_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorResponse methods */
void   cosmos__staking__v1beta1__query_validator_response__init
                     (Cosmos__Staking__V1beta1__QueryValidatorResponse         *message);
size_t cosmos__staking__v1beta1__query_validator_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorResponse   *message);
size_t cosmos__staking__v1beta1__query_validator_response__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validator_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorResponse *
       cosmos__staking__v1beta1__query_validator_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validator_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest methods */
void   cosmos__staking__v1beta1__query_validator_delegations_request__init
                     (Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest         *message);
size_t cosmos__staking__v1beta1__query_validator_delegations_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest   *message);
size_t cosmos__staking__v1beta1__query_validator_delegations_request__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validator_delegations_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest *
       cosmos__staking__v1beta1__query_validator_delegations_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validator_delegations_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse methods */
void   cosmos__staking__v1beta1__query_validator_delegations_response__init
                     (Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse         *message);
size_t cosmos__staking__v1beta1__query_validator_delegations_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse   *message);
size_t cosmos__staking__v1beta1__query_validator_delegations_response__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validator_delegations_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse *
       cosmos__staking__v1beta1__query_validator_delegations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validator_delegations_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest methods */
void   cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__init
                     (Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest         *message);
size_t cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest   *message);
size_t cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest *
       cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse methods */
void   cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__init
                     (Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse         *message);
size_t cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse   *message);
size_t cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__pack
                     (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse *
       cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegationRequest methods */
void   cosmos__staking__v1beta1__query_delegation_request__init
                     (Cosmos__Staking__V1beta1__QueryDelegationRequest         *message);
size_t cosmos__staking__v1beta1__query_delegation_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegationRequest   *message);
size_t cosmos__staking__v1beta1__query_delegation_request__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegationRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegation_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegationRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegationRequest *
       cosmos__staking__v1beta1__query_delegation_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegation_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegationRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegationResponse methods */
void   cosmos__staking__v1beta1__query_delegation_response__init
                     (Cosmos__Staking__V1beta1__QueryDelegationResponse         *message);
size_t cosmos__staking__v1beta1__query_delegation_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegationResponse   *message);
size_t cosmos__staking__v1beta1__query_delegation_response__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegationResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegation_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegationResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegationResponse *
       cosmos__staking__v1beta1__query_delegation_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegation_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegationResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest methods */
void   cosmos__staking__v1beta1__query_unbonding_delegation_request__init
                     (Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest         *message);
size_t cosmos__staking__v1beta1__query_unbonding_delegation_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest   *message);
size_t cosmos__staking__v1beta1__query_unbonding_delegation_request__pack
                     (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_unbonding_delegation_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest *
       cosmos__staking__v1beta1__query_unbonding_delegation_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_unbonding_delegation_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse methods */
void   cosmos__staking__v1beta1__query_unbonding_delegation_response__init
                     (Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse         *message);
size_t cosmos__staking__v1beta1__query_unbonding_delegation_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse   *message);
size_t cosmos__staking__v1beta1__query_unbonding_delegation_response__pack
                     (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_unbonding_delegation_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse *
       cosmos__staking__v1beta1__query_unbonding_delegation_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_unbonding_delegation_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest methods */
void   cosmos__staking__v1beta1__query_delegator_delegations_request__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest         *message);
size_t cosmos__staking__v1beta1__query_delegator_delegations_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest   *message);
size_t cosmos__staking__v1beta1__query_delegator_delegations_request__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_delegations_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest *
       cosmos__staking__v1beta1__query_delegator_delegations_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_delegations_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse methods */
void   cosmos__staking__v1beta1__query_delegator_delegations_response__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse         *message);
size_t cosmos__staking__v1beta1__query_delegator_delegations_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse   *message);
size_t cosmos__staking__v1beta1__query_delegator_delegations_response__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_delegations_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse *
       cosmos__staking__v1beta1__query_delegator_delegations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_delegations_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest methods */
void   cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest         *message);
size_t cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest   *message);
size_t cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest *
       cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse methods */
void   cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse         *message);
size_t cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse   *message);
size_t cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse *
       cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryRedelegationsRequest methods */
void   cosmos__staking__v1beta1__query_redelegations_request__init
                     (Cosmos__Staking__V1beta1__QueryRedelegationsRequest         *message);
size_t cosmos__staking__v1beta1__query_redelegations_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryRedelegationsRequest   *message);
size_t cosmos__staking__v1beta1__query_redelegations_request__pack
                     (const Cosmos__Staking__V1beta1__QueryRedelegationsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_redelegations_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryRedelegationsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryRedelegationsRequest *
       cosmos__staking__v1beta1__query_redelegations_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_redelegations_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryRedelegationsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryRedelegationsResponse methods */
void   cosmos__staking__v1beta1__query_redelegations_response__init
                     (Cosmos__Staking__V1beta1__QueryRedelegationsResponse         *message);
size_t cosmos__staking__v1beta1__query_redelegations_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryRedelegationsResponse   *message);
size_t cosmos__staking__v1beta1__query_redelegations_response__pack
                     (const Cosmos__Staking__V1beta1__QueryRedelegationsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_redelegations_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryRedelegationsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryRedelegationsResponse *
       cosmos__staking__v1beta1__query_redelegations_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_redelegations_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryRedelegationsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest methods */
void   cosmos__staking__v1beta1__query_delegator_validators_request__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest         *message);
size_t cosmos__staking__v1beta1__query_delegator_validators_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest   *message);
size_t cosmos__staking__v1beta1__query_delegator_validators_request__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_validators_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest *
       cosmos__staking__v1beta1__query_delegator_validators_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_validators_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse methods */
void   cosmos__staking__v1beta1__query_delegator_validators_response__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse         *message);
size_t cosmos__staking__v1beta1__query_delegator_validators_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse   *message);
size_t cosmos__staking__v1beta1__query_delegator_validators_response__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_validators_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse *
       cosmos__staking__v1beta1__query_delegator_validators_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_validators_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest methods */
void   cosmos__staking__v1beta1__query_delegator_validator_request__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest         *message);
size_t cosmos__staking__v1beta1__query_delegator_validator_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest   *message);
size_t cosmos__staking__v1beta1__query_delegator_validator_request__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_validator_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest *
       cosmos__staking__v1beta1__query_delegator_validator_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_validator_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse methods */
void   cosmos__staking__v1beta1__query_delegator_validator_response__init
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse         *message);
size_t cosmos__staking__v1beta1__query_delegator_validator_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse   *message);
size_t cosmos__staking__v1beta1__query_delegator_validator_response__pack
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_delegator_validator_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse *
       cosmos__staking__v1beta1__query_delegator_validator_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_delegator_validator_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest methods */
void   cosmos__staking__v1beta1__query_historical_info_request__init
                     (Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest         *message);
size_t cosmos__staking__v1beta1__query_historical_info_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest   *message);
size_t cosmos__staking__v1beta1__query_historical_info_request__pack
                     (const Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_historical_info_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest *
       cosmos__staking__v1beta1__query_historical_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_historical_info_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse methods */
void   cosmos__staking__v1beta1__query_historical_info_response__init
                     (Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse         *message);
size_t cosmos__staking__v1beta1__query_historical_info_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse   *message);
size_t cosmos__staking__v1beta1__query_historical_info_response__pack
                     (const Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_historical_info_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse *
       cosmos__staking__v1beta1__query_historical_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_historical_info_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryPoolRequest methods */
void   cosmos__staking__v1beta1__query_pool_request__init
                     (Cosmos__Staking__V1beta1__QueryPoolRequest         *message);
size_t cosmos__staking__v1beta1__query_pool_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryPoolRequest   *message);
size_t cosmos__staking__v1beta1__query_pool_request__pack
                     (const Cosmos__Staking__V1beta1__QueryPoolRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_pool_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryPoolRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryPoolRequest *
       cosmos__staking__v1beta1__query_pool_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_pool_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryPoolRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryPoolResponse methods */
void   cosmos__staking__v1beta1__query_pool_response__init
                     (Cosmos__Staking__V1beta1__QueryPoolResponse         *message);
size_t cosmos__staking__v1beta1__query_pool_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryPoolResponse   *message);
size_t cosmos__staking__v1beta1__query_pool_response__pack
                     (const Cosmos__Staking__V1beta1__QueryPoolResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_pool_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryPoolResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryPoolResponse *
       cosmos__staking__v1beta1__query_pool_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_pool_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryPoolResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryParamsRequest methods */
void   cosmos__staking__v1beta1__query_params_request__init
                     (Cosmos__Staking__V1beta1__QueryParamsRequest         *message);
size_t cosmos__staking__v1beta1__query_params_request__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryParamsRequest   *message);
size_t cosmos__staking__v1beta1__query_params_request__pack
                     (const Cosmos__Staking__V1beta1__QueryParamsRequest   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_params_request__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryParamsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryParamsRequest *
       cosmos__staking__v1beta1__query_params_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_params_request__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryParamsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Staking__V1beta1__QueryParamsResponse methods */
void   cosmos__staking__v1beta1__query_params_response__init
                     (Cosmos__Staking__V1beta1__QueryParamsResponse         *message);
size_t cosmos__staking__v1beta1__query_params_response__get_packed_size
                     (const Cosmos__Staking__V1beta1__QueryParamsResponse   *message);
size_t cosmos__staking__v1beta1__query_params_response__pack
                     (const Cosmos__Staking__V1beta1__QueryParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__staking__v1beta1__query_params_response__pack_to_buffer
                     (const Cosmos__Staking__V1beta1__QueryParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Staking__V1beta1__QueryParamsResponse *
       cosmos__staking__v1beta1__query_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__staking__v1beta1__query_params_response__free_unpacked
                     (Cosmos__Staking__V1beta1__QueryParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Staking__V1beta1__QueryValidatorsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegationRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegationRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegationResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegationResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryRedelegationsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryRedelegationsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryRedelegationsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryRedelegationsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryPoolRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryPoolRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryPoolResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryPoolResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryParamsRequest_Closure)
                 (const Cosmos__Staking__V1beta1__QueryParamsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Staking__V1beta1__QueryParamsResponse_Closure)
                 (const Cosmos__Staking__V1beta1__QueryParamsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Staking__V1beta1__Query_Service Cosmos__Staking__V1beta1__Query_Service;
struct Cosmos__Staking__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*validators)(Cosmos__Staking__V1beta1__Query_Service *service,
                     const Cosmos__Staking__V1beta1__QueryValidatorsRequest *input,
                     Cosmos__Staking__V1beta1__QueryValidatorsResponse_Closure closure,
                     void *closure_data);
  void (*validator)(Cosmos__Staking__V1beta1__Query_Service *service,
                    const Cosmos__Staking__V1beta1__QueryValidatorRequest *input,
                    Cosmos__Staking__V1beta1__QueryValidatorResponse_Closure closure,
                    void *closure_data);
  void (*validator_delegations)(Cosmos__Staking__V1beta1__Query_Service *service,
                                const Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest *input,
                                Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse_Closure closure,
                                void *closure_data);
  void (*validator_unbonding_delegations)(Cosmos__Staking__V1beta1__Query_Service *service,
                                          const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest *input,
                                          Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse_Closure closure,
                                          void *closure_data);
  void (*delegation)(Cosmos__Staking__V1beta1__Query_Service *service,
                     const Cosmos__Staking__V1beta1__QueryDelegationRequest *input,
                     Cosmos__Staking__V1beta1__QueryDelegationResponse_Closure closure,
                     void *closure_data);
  void (*unbonding_delegation)(Cosmos__Staking__V1beta1__Query_Service *service,
                               const Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest *input,
                               Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse_Closure closure,
                               void *closure_data);
  void (*delegator_delegations)(Cosmos__Staking__V1beta1__Query_Service *service,
                                const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest *input,
                                Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse_Closure closure,
                                void *closure_data);
  void (*delegator_unbonding_delegations)(Cosmos__Staking__V1beta1__Query_Service *service,
                                          const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest *input,
                                          Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse_Closure closure,
                                          void *closure_data);
  void (*redelegations)(Cosmos__Staking__V1beta1__Query_Service *service,
                        const Cosmos__Staking__V1beta1__QueryRedelegationsRequest *input,
                        Cosmos__Staking__V1beta1__QueryRedelegationsResponse_Closure closure,
                        void *closure_data);
  void (*delegator_validators)(Cosmos__Staking__V1beta1__Query_Service *service,
                               const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest *input,
                               Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse_Closure closure,
                               void *closure_data);
  void (*delegator_validator)(Cosmos__Staking__V1beta1__Query_Service *service,
                              const Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest *input,
                              Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse_Closure closure,
                              void *closure_data);
  void (*historical_info)(Cosmos__Staking__V1beta1__Query_Service *service,
                          const Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest *input,
                          Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse_Closure closure,
                          void *closure_data);
  void (*pool)(Cosmos__Staking__V1beta1__Query_Service *service,
               const Cosmos__Staking__V1beta1__QueryPoolRequest *input,
               Cosmos__Staking__V1beta1__QueryPoolResponse_Closure closure,
               void *closure_data);
  void (*params)(Cosmos__Staking__V1beta1__Query_Service *service,
                 const Cosmos__Staking__V1beta1__QueryParamsRequest *input,
                 Cosmos__Staking__V1beta1__QueryParamsResponse_Closure closure,
                 void *closure_data);
};
typedef void (*Cosmos__Staking__V1beta1__Query_ServiceDestroy)(Cosmos__Staking__V1beta1__Query_Service *);
void cosmos__staking__v1beta1__query__init (Cosmos__Staking__V1beta1__Query_Service *service,
                                            Cosmos__Staking__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__STAKING__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__staking__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__STAKING__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__STAKING__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## validators,\
      function_prefix__ ## validator,\
      function_prefix__ ## validator_delegations,\
      function_prefix__ ## validator_unbonding_delegations,\
      function_prefix__ ## delegation,\
      function_prefix__ ## unbonding_delegation,\
      function_prefix__ ## delegator_delegations,\
      function_prefix__ ## delegator_unbonding_delegations,\
      function_prefix__ ## redelegations,\
      function_prefix__ ## delegator_validators,\
      function_prefix__ ## delegator_validator,\
      function_prefix__ ## historical_info,\
      function_prefix__ ## pool,\
      function_prefix__ ## params  }
void cosmos__staking__v1beta1__query__validators(ProtobufCService *service,
                                                 const Cosmos__Staking__V1beta1__QueryValidatorsRequest *input,
                                                 Cosmos__Staking__V1beta1__QueryValidatorsResponse_Closure closure,
                                                 void *closure_data);
void cosmos__staking__v1beta1__query__validator(ProtobufCService *service,
                                                const Cosmos__Staking__V1beta1__QueryValidatorRequest *input,
                                                Cosmos__Staking__V1beta1__QueryValidatorResponse_Closure closure,
                                                void *closure_data);
void cosmos__staking__v1beta1__query__validator_delegations(ProtobufCService *service,
                                                            const Cosmos__Staking__V1beta1__QueryValidatorDelegationsRequest *input,
                                                            Cosmos__Staking__V1beta1__QueryValidatorDelegationsResponse_Closure closure,
                                                            void *closure_data);
void cosmos__staking__v1beta1__query__validator_unbonding_delegations(ProtobufCService *service,
                                                                      const Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsRequest *input,
                                                                      Cosmos__Staking__V1beta1__QueryValidatorUnbondingDelegationsResponse_Closure closure,
                                                                      void *closure_data);
void cosmos__staking__v1beta1__query__delegation(ProtobufCService *service,
                                                 const Cosmos__Staking__V1beta1__QueryDelegationRequest *input,
                                                 Cosmos__Staking__V1beta1__QueryDelegationResponse_Closure closure,
                                                 void *closure_data);
void cosmos__staking__v1beta1__query__unbonding_delegation(ProtobufCService *service,
                                                           const Cosmos__Staking__V1beta1__QueryUnbondingDelegationRequest *input,
                                                           Cosmos__Staking__V1beta1__QueryUnbondingDelegationResponse_Closure closure,
                                                           void *closure_data);
void cosmos__staking__v1beta1__query__delegator_delegations(ProtobufCService *service,
                                                            const Cosmos__Staking__V1beta1__QueryDelegatorDelegationsRequest *input,
                                                            Cosmos__Staking__V1beta1__QueryDelegatorDelegationsResponse_Closure closure,
                                                            void *closure_data);
void cosmos__staking__v1beta1__query__delegator_unbonding_delegations(ProtobufCService *service,
                                                                      const Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsRequest *input,
                                                                      Cosmos__Staking__V1beta1__QueryDelegatorUnbondingDelegationsResponse_Closure closure,
                                                                      void *closure_data);
void cosmos__staking__v1beta1__query__redelegations(ProtobufCService *service,
                                                    const Cosmos__Staking__V1beta1__QueryRedelegationsRequest *input,
                                                    Cosmos__Staking__V1beta1__QueryRedelegationsResponse_Closure closure,
                                                    void *closure_data);
void cosmos__staking__v1beta1__query__delegator_validators(ProtobufCService *service,
                                                           const Cosmos__Staking__V1beta1__QueryDelegatorValidatorsRequest *input,
                                                           Cosmos__Staking__V1beta1__QueryDelegatorValidatorsResponse_Closure closure,
                                                           void *closure_data);
void cosmos__staking__v1beta1__query__delegator_validator(ProtobufCService *service,
                                                          const Cosmos__Staking__V1beta1__QueryDelegatorValidatorRequest *input,
                                                          Cosmos__Staking__V1beta1__QueryDelegatorValidatorResponse_Closure closure,
                                                          void *closure_data);
void cosmos__staking__v1beta1__query__historical_info(ProtobufCService *service,
                                                      const Cosmos__Staking__V1beta1__QueryHistoricalInfoRequest *input,
                                                      Cosmos__Staking__V1beta1__QueryHistoricalInfoResponse_Closure closure,
                                                      void *closure_data);
void cosmos__staking__v1beta1__query__pool(ProtobufCService *service,
                                           const Cosmos__Staking__V1beta1__QueryPoolRequest *input,
                                           Cosmos__Staking__V1beta1__QueryPoolResponse_Closure closure,
                                           void *closure_data);
void cosmos__staking__v1beta1__query__params(ProtobufCService *service,
                                             const Cosmos__Staking__V1beta1__QueryParamsRequest *input,
                                             Cosmos__Staking__V1beta1__QueryParamsResponse_Closure closure,
                                             void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validators_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validators_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validator_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validator_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validator_delegations_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validator_delegations_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validator_unbonding_delegations_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_validator_unbonding_delegations_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegation_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegation_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_unbonding_delegation_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_unbonding_delegation_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_delegations_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_delegations_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_unbonding_delegations_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_unbonding_delegations_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_redelegations_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_redelegations_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_validators_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_validators_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_validator_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_delegator_validator_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_historical_info_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_historical_info_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_pool_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_pool_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_params_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__staking__v1beta1__query_params_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__staking__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fstaking_2fv1beta1_2fquery_2eproto__INCLUDED */
