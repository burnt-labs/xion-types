/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/group/v1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fgroup_2fv1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fgroup_2fv1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/group/v1/types.pb-c.h"
#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Group__V1__QueryGroupInfoRequest Cosmos__Group__V1__QueryGroupInfoRequest;
typedef struct Cosmos__Group__V1__QueryGroupInfoResponse Cosmos__Group__V1__QueryGroupInfoResponse;
typedef struct Cosmos__Group__V1__QueryGroupPolicyInfoRequest Cosmos__Group__V1__QueryGroupPolicyInfoRequest;
typedef struct Cosmos__Group__V1__QueryGroupPolicyInfoResponse Cosmos__Group__V1__QueryGroupPolicyInfoResponse;
typedef struct Cosmos__Group__V1__QueryGroupMembersRequest Cosmos__Group__V1__QueryGroupMembersRequest;
typedef struct Cosmos__Group__V1__QueryGroupMembersResponse Cosmos__Group__V1__QueryGroupMembersResponse;
typedef struct Cosmos__Group__V1__QueryGroupsByAdminRequest Cosmos__Group__V1__QueryGroupsByAdminRequest;
typedef struct Cosmos__Group__V1__QueryGroupsByAdminResponse Cosmos__Group__V1__QueryGroupsByAdminResponse;
typedef struct Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest;
typedef struct Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse;
typedef struct Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest;
typedef struct Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse;
typedef struct Cosmos__Group__V1__QueryProposalRequest Cosmos__Group__V1__QueryProposalRequest;
typedef struct Cosmos__Group__V1__QueryProposalResponse Cosmos__Group__V1__QueryProposalResponse;
typedef struct Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest;
typedef struct Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse;
typedef struct Cosmos__Group__V1__QueryVoteByProposalVoterRequest Cosmos__Group__V1__QueryVoteByProposalVoterRequest;
typedef struct Cosmos__Group__V1__QueryVoteByProposalVoterResponse Cosmos__Group__V1__QueryVoteByProposalVoterResponse;
typedef struct Cosmos__Group__V1__QueryVotesByProposalRequest Cosmos__Group__V1__QueryVotesByProposalRequest;
typedef struct Cosmos__Group__V1__QueryVotesByProposalResponse Cosmos__Group__V1__QueryVotesByProposalResponse;
typedef struct Cosmos__Group__V1__QueryVotesByVoterRequest Cosmos__Group__V1__QueryVotesByVoterRequest;
typedef struct Cosmos__Group__V1__QueryVotesByVoterResponse Cosmos__Group__V1__QueryVotesByVoterResponse;
typedef struct Cosmos__Group__V1__QueryGroupsByMemberRequest Cosmos__Group__V1__QueryGroupsByMemberRequest;
typedef struct Cosmos__Group__V1__QueryGroupsByMemberResponse Cosmos__Group__V1__QueryGroupsByMemberResponse;
typedef struct Cosmos__Group__V1__QueryTallyResultRequest Cosmos__Group__V1__QueryTallyResultRequest;
typedef struct Cosmos__Group__V1__QueryTallyResultResponse Cosmos__Group__V1__QueryTallyResultResponse;
typedef struct Cosmos__Group__V1__QueryGroupsRequest Cosmos__Group__V1__QueryGroupsRequest;
typedef struct Cosmos__Group__V1__QueryGroupsResponse Cosmos__Group__V1__QueryGroupsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryGroupInfoRequest is the Query/GroupInfo request type.
 */
struct  Cosmos__Group__V1__QueryGroupInfoRequest
{
  ProtobufCMessage base;
  /*
   * group_id is the unique ID of the group.
   */
  uint64_t group_id;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_info_request__descriptor) \
, 0 }


/*
 * QueryGroupInfoResponse is the Query/GroupInfo response type.
 */
struct  Cosmos__Group__V1__QueryGroupInfoResponse
{
  ProtobufCMessage base;
  /*
   * info is the GroupInfo of the group.
   */
  Cosmos__Group__V1__GroupInfo *info;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_info_response__descriptor) \
, NULL }


/*
 * QueryGroupPolicyInfoRequest is the Query/GroupPolicyInfo request type.
 */
struct  Cosmos__Group__V1__QueryGroupPolicyInfoRequest
{
  ProtobufCMessage base;
  /*
   * address is the account address of the group policy.
   */
  char *address;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_POLICY_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_policy_info_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type.
 */
struct  Cosmos__Group__V1__QueryGroupPolicyInfoResponse
{
  ProtobufCMessage base;
  /*
   * info is the GroupPolicyInfo of the group policy.
   */
  Cosmos__Group__V1__GroupPolicyInfo *info;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_POLICY_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_policy_info_response__descriptor) \
, NULL }


/*
 * QueryGroupMembersRequest is the Query/GroupMembers request type.
 */
struct  Cosmos__Group__V1__QueryGroupMembersRequest
{
  ProtobufCMessage base;
  /*
   * group_id is the unique ID of the group.
   */
  uint64_t group_id;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_MEMBERS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_members_request__descriptor) \
, 0, NULL }


/*
 * QueryGroupMembersResponse is the Query/GroupMembersResponse response type.
 */
struct  Cosmos__Group__V1__QueryGroupMembersResponse
{
  ProtobufCMessage base;
  /*
   * members are the members of the group with given group_id.
   */
  size_t n_members;
  Cosmos__Group__V1__GroupMember **members;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_MEMBERS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_members_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryGroupsByAdminRequest is the Query/GroupsByAdmin request type.
 */
struct  Cosmos__Group__V1__QueryGroupsByAdminRequest
{
  ProtobufCMessage base;
  /*
   * admin is the account address of a group's admin.
   */
  char *admin;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUPS_BY_ADMIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_groups_by_admin_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type.
 */
struct  Cosmos__Group__V1__QueryGroupsByAdminResponse
{
  ProtobufCMessage base;
  /*
   * groups are the groups info with the provided admin.
   */
  size_t n_groups;
  Cosmos__Group__V1__GroupInfo **groups;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUPS_BY_ADMIN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_groups_by_admin_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryGroupPoliciesByGroupRequest is the Query/GroupPoliciesByGroup request type.
 */
struct  Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest
{
  ProtobufCMessage base;
  /*
   * group_id is the unique ID of the group policy's group.
   */
  uint64_t group_id;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_POLICIES_BY_GROUP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_policies_by_group_request__descriptor) \
, 0, NULL }


/*
 * QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type.
 */
struct  Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse
{
  ProtobufCMessage base;
  /*
   * group_policies are the group policies info associated with the provided group.
   */
  size_t n_group_policies;
  Cosmos__Group__V1__GroupPolicyInfo **group_policies;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_POLICIES_BY_GROUP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_policies_by_group_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryGroupPoliciesByAdminRequest is the Query/GroupPoliciesByAdmin request type.
 */
struct  Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest
{
  ProtobufCMessage base;
  /*
   * admin is the admin address of the group policy.
   */
  char *admin;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_POLICIES_BY_ADMIN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_policies_by_admin_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type.
 */
struct  Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse
{
  ProtobufCMessage base;
  /*
   * group_policies are the group policies info with provided admin.
   */
  size_t n_group_policies;
  Cosmos__Group__V1__GroupPolicyInfo **group_policies;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUP_POLICIES_BY_ADMIN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_group_policies_by_admin_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryProposalRequest is the Query/Proposal request type.
 */
struct  Cosmos__Group__V1__QueryProposalRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id is the unique ID of a proposal.
   */
  uint64_t proposal_id;
};
#define COSMOS__GROUP__V1__QUERY_PROPOSAL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_proposal_request__descriptor) \
, 0 }


/*
 * QueryProposalResponse is the Query/Proposal response type.
 */
struct  Cosmos__Group__V1__QueryProposalResponse
{
  ProtobufCMessage base;
  /*
   * proposal is the proposal info.
   */
  Cosmos__Group__V1__Proposal *proposal;
};
#define COSMOS__GROUP__V1__QUERY_PROPOSAL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_proposal_response__descriptor) \
, NULL }


/*
 * QueryProposalsByGroupPolicyRequest is the Query/ProposalByGroupPolicy request type.
 */
struct  Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest
{
  ProtobufCMessage base;
  /*
   * address is the account address of the group policy related to proposals.
   */
  char *address;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_PROPOSALS_BY_GROUP_POLICY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_proposals_by_group_policy_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type.
 */
struct  Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse
{
  ProtobufCMessage base;
  /*
   * proposals are the proposals with given group policy.
   */
  size_t n_proposals;
  Cosmos__Group__V1__Proposal **proposals;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_PROPOSALS_BY_GROUP_POLICY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_proposals_by_group_policy_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryVoteByProposalVoterRequest is the Query/VoteByProposalVoter request type.
 */
struct  Cosmos__Group__V1__QueryVoteByProposalVoterRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id is the unique ID of a proposal.
   */
  uint64_t proposal_id;
  /*
   * voter is a proposal voter account address.
   */
  char *voter;
};
#define COSMOS__GROUP__V1__QUERY_VOTE_BY_PROPOSAL_VOTER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_vote_by_proposal_voter_request__descriptor) \
, 0, (char *)protobuf_c_empty_string }


/*
 * QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type.
 */
struct  Cosmos__Group__V1__QueryVoteByProposalVoterResponse
{
  ProtobufCMessage base;
  /*
   * vote is the vote with given proposal_id and voter.
   */
  Cosmos__Group__V1__Vote *vote;
};
#define COSMOS__GROUP__V1__QUERY_VOTE_BY_PROPOSAL_VOTER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_vote_by_proposal_voter_response__descriptor) \
, NULL }


/*
 * QueryVotesByProposalRequest is the Query/VotesByProposal request type.
 */
struct  Cosmos__Group__V1__QueryVotesByProposalRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id is the unique ID of a proposal.
   */
  uint64_t proposal_id;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_VOTES_BY_PROPOSAL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_votes_by_proposal_request__descriptor) \
, 0, NULL }


/*
 * QueryVotesByProposalResponse is the Query/VotesByProposal response type.
 */
struct  Cosmos__Group__V1__QueryVotesByProposalResponse
{
  ProtobufCMessage base;
  /*
   * votes are the list of votes for given proposal_id.
   */
  size_t n_votes;
  Cosmos__Group__V1__Vote **votes;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_VOTES_BY_PROPOSAL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_votes_by_proposal_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryVotesByVoterRequest is the Query/VotesByVoter request type.
 */
struct  Cosmos__Group__V1__QueryVotesByVoterRequest
{
  ProtobufCMessage base;
  /*
   * voter is a proposal voter account address.
   */
  char *voter;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_VOTES_BY_VOTER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_votes_by_voter_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryVotesByVoterResponse is the Query/VotesByVoter response type.
 */
struct  Cosmos__Group__V1__QueryVotesByVoterResponse
{
  ProtobufCMessage base;
  /*
   * votes are the list of votes by given voter.
   */
  size_t n_votes;
  Cosmos__Group__V1__Vote **votes;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_VOTES_BY_VOTER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_votes_by_voter_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryGroupsByMemberRequest is the Query/GroupsByMember request type.
 */
struct  Cosmos__Group__V1__QueryGroupsByMemberRequest
{
  ProtobufCMessage base;
  /*
   * address is the group member address.
   */
  char *address;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUPS_BY_MEMBER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_groups_by_member_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryGroupsByMemberResponse is the Query/GroupsByMember response type.
 */
struct  Cosmos__Group__V1__QueryGroupsByMemberResponse
{
  ProtobufCMessage base;
  /*
   * groups are the groups info with the provided group member.
   */
  size_t n_groups;
  Cosmos__Group__V1__GroupInfo **groups;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUPS_BY_MEMBER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_groups_by_member_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryTallyResultRequest is the Query/TallyResult request type.
 */
struct  Cosmos__Group__V1__QueryTallyResultRequest
{
  ProtobufCMessage base;
  /*
   * proposal_id is the unique id of a proposal.
   */
  uint64_t proposal_id;
};
#define COSMOS__GROUP__V1__QUERY_TALLY_RESULT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_tally_result_request__descriptor) \
, 0 }


/*
 * QueryTallyResultResponse is the Query/TallyResult response type.
 */
struct  Cosmos__Group__V1__QueryTallyResultResponse
{
  ProtobufCMessage base;
  /*
   * tally defines the requested tally.
   */
  Cosmos__Group__V1__TallyResult *tally;
};
#define COSMOS__GROUP__V1__QUERY_TALLY_RESULT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_tally_result_response__descriptor) \
, NULL }


/*
 * QueryGroupsRequest is the Query/Groups request type.
 */
struct  Cosmos__Group__V1__QueryGroupsRequest
{
  ProtobufCMessage base;
  /*
   * pagination defines an optional pagination for the request.
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUPS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_groups_request__descriptor) \
, NULL }


/*
 * QueryGroupsResponse is the Query/Groups response type.
 */
struct  Cosmos__Group__V1__QueryGroupsResponse
{
  ProtobufCMessage base;
  /*
   * `groups` is all the groups present in state.
   */
  size_t n_groups;
  Cosmos__Group__V1__GroupInfo **groups;
  /*
   * pagination defines the pagination in the response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
};
#define COSMOS__GROUP__V1__QUERY_GROUPS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__group__v1__query_groups_response__descriptor) \
, 0,NULL, NULL }


/* Cosmos__Group__V1__QueryGroupInfoRequest methods */
void   cosmos__group__v1__query_group_info_request__init
                     (Cosmos__Group__V1__QueryGroupInfoRequest         *message);
size_t cosmos__group__v1__query_group_info_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupInfoRequest   *message);
size_t cosmos__group__v1__query_group_info_request__pack
                     (const Cosmos__Group__V1__QueryGroupInfoRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_info_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupInfoRequest *
       cosmos__group__v1__query_group_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_info_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupInfoResponse methods */
void   cosmos__group__v1__query_group_info_response__init
                     (Cosmos__Group__V1__QueryGroupInfoResponse         *message);
size_t cosmos__group__v1__query_group_info_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupInfoResponse   *message);
size_t cosmos__group__v1__query_group_info_response__pack
                     (const Cosmos__Group__V1__QueryGroupInfoResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_info_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupInfoResponse *
       cosmos__group__v1__query_group_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_info_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupPolicyInfoRequest methods */
void   cosmos__group__v1__query_group_policy_info_request__init
                     (Cosmos__Group__V1__QueryGroupPolicyInfoRequest         *message);
size_t cosmos__group__v1__query_group_policy_info_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupPolicyInfoRequest   *message);
size_t cosmos__group__v1__query_group_policy_info_request__pack
                     (const Cosmos__Group__V1__QueryGroupPolicyInfoRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_policy_info_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupPolicyInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupPolicyInfoRequest *
       cosmos__group__v1__query_group_policy_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_policy_info_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupPolicyInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupPolicyInfoResponse methods */
void   cosmos__group__v1__query_group_policy_info_response__init
                     (Cosmos__Group__V1__QueryGroupPolicyInfoResponse         *message);
size_t cosmos__group__v1__query_group_policy_info_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupPolicyInfoResponse   *message);
size_t cosmos__group__v1__query_group_policy_info_response__pack
                     (const Cosmos__Group__V1__QueryGroupPolicyInfoResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_policy_info_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupPolicyInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupPolicyInfoResponse *
       cosmos__group__v1__query_group_policy_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_policy_info_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupPolicyInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupMembersRequest methods */
void   cosmos__group__v1__query_group_members_request__init
                     (Cosmos__Group__V1__QueryGroupMembersRequest         *message);
size_t cosmos__group__v1__query_group_members_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupMembersRequest   *message);
size_t cosmos__group__v1__query_group_members_request__pack
                     (const Cosmos__Group__V1__QueryGroupMembersRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_members_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupMembersRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupMembersRequest *
       cosmos__group__v1__query_group_members_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_members_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupMembersRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupMembersResponse methods */
void   cosmos__group__v1__query_group_members_response__init
                     (Cosmos__Group__V1__QueryGroupMembersResponse         *message);
size_t cosmos__group__v1__query_group_members_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupMembersResponse   *message);
size_t cosmos__group__v1__query_group_members_response__pack
                     (const Cosmos__Group__V1__QueryGroupMembersResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_members_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupMembersResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupMembersResponse *
       cosmos__group__v1__query_group_members_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_members_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupMembersResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupsByAdminRequest methods */
void   cosmos__group__v1__query_groups_by_admin_request__init
                     (Cosmos__Group__V1__QueryGroupsByAdminRequest         *message);
size_t cosmos__group__v1__query_groups_by_admin_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupsByAdminRequest   *message);
size_t cosmos__group__v1__query_groups_by_admin_request__pack
                     (const Cosmos__Group__V1__QueryGroupsByAdminRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_groups_by_admin_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupsByAdminRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupsByAdminRequest *
       cosmos__group__v1__query_groups_by_admin_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_groups_by_admin_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupsByAdminRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupsByAdminResponse methods */
void   cosmos__group__v1__query_groups_by_admin_response__init
                     (Cosmos__Group__V1__QueryGroupsByAdminResponse         *message);
size_t cosmos__group__v1__query_groups_by_admin_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupsByAdminResponse   *message);
size_t cosmos__group__v1__query_groups_by_admin_response__pack
                     (const Cosmos__Group__V1__QueryGroupsByAdminResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_groups_by_admin_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupsByAdminResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupsByAdminResponse *
       cosmos__group__v1__query_groups_by_admin_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_groups_by_admin_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupsByAdminResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest methods */
void   cosmos__group__v1__query_group_policies_by_group_request__init
                     (Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest         *message);
size_t cosmos__group__v1__query_group_policies_by_group_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest   *message);
size_t cosmos__group__v1__query_group_policies_by_group_request__pack
                     (const Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_policies_by_group_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest *
       cosmos__group__v1__query_group_policies_by_group_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_policies_by_group_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse methods */
void   cosmos__group__v1__query_group_policies_by_group_response__init
                     (Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse         *message);
size_t cosmos__group__v1__query_group_policies_by_group_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse   *message);
size_t cosmos__group__v1__query_group_policies_by_group_response__pack
                     (const Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_policies_by_group_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse *
       cosmos__group__v1__query_group_policies_by_group_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_policies_by_group_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest methods */
void   cosmos__group__v1__query_group_policies_by_admin_request__init
                     (Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest         *message);
size_t cosmos__group__v1__query_group_policies_by_admin_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest   *message);
size_t cosmos__group__v1__query_group_policies_by_admin_request__pack
                     (const Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_policies_by_admin_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest *
       cosmos__group__v1__query_group_policies_by_admin_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_policies_by_admin_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse methods */
void   cosmos__group__v1__query_group_policies_by_admin_response__init
                     (Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse         *message);
size_t cosmos__group__v1__query_group_policies_by_admin_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse   *message);
size_t cosmos__group__v1__query_group_policies_by_admin_response__pack
                     (const Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_group_policies_by_admin_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse *
       cosmos__group__v1__query_group_policies_by_admin_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_group_policies_by_admin_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryProposalRequest methods */
void   cosmos__group__v1__query_proposal_request__init
                     (Cosmos__Group__V1__QueryProposalRequest         *message);
size_t cosmos__group__v1__query_proposal_request__get_packed_size
                     (const Cosmos__Group__V1__QueryProposalRequest   *message);
size_t cosmos__group__v1__query_proposal_request__pack
                     (const Cosmos__Group__V1__QueryProposalRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_proposal_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryProposalRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryProposalRequest *
       cosmos__group__v1__query_proposal_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_proposal_request__free_unpacked
                     (Cosmos__Group__V1__QueryProposalRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryProposalResponse methods */
void   cosmos__group__v1__query_proposal_response__init
                     (Cosmos__Group__V1__QueryProposalResponse         *message);
size_t cosmos__group__v1__query_proposal_response__get_packed_size
                     (const Cosmos__Group__V1__QueryProposalResponse   *message);
size_t cosmos__group__v1__query_proposal_response__pack
                     (const Cosmos__Group__V1__QueryProposalResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_proposal_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryProposalResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryProposalResponse *
       cosmos__group__v1__query_proposal_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_proposal_response__free_unpacked
                     (Cosmos__Group__V1__QueryProposalResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest methods */
void   cosmos__group__v1__query_proposals_by_group_policy_request__init
                     (Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest         *message);
size_t cosmos__group__v1__query_proposals_by_group_policy_request__get_packed_size
                     (const Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest   *message);
size_t cosmos__group__v1__query_proposals_by_group_policy_request__pack
                     (const Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_proposals_by_group_policy_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest *
       cosmos__group__v1__query_proposals_by_group_policy_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_proposals_by_group_policy_request__free_unpacked
                     (Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse methods */
void   cosmos__group__v1__query_proposals_by_group_policy_response__init
                     (Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse         *message);
size_t cosmos__group__v1__query_proposals_by_group_policy_response__get_packed_size
                     (const Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse   *message);
size_t cosmos__group__v1__query_proposals_by_group_policy_response__pack
                     (const Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_proposals_by_group_policy_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse *
       cosmos__group__v1__query_proposals_by_group_policy_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_proposals_by_group_policy_response__free_unpacked
                     (Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryVoteByProposalVoterRequest methods */
void   cosmos__group__v1__query_vote_by_proposal_voter_request__init
                     (Cosmos__Group__V1__QueryVoteByProposalVoterRequest         *message);
size_t cosmos__group__v1__query_vote_by_proposal_voter_request__get_packed_size
                     (const Cosmos__Group__V1__QueryVoteByProposalVoterRequest   *message);
size_t cosmos__group__v1__query_vote_by_proposal_voter_request__pack
                     (const Cosmos__Group__V1__QueryVoteByProposalVoterRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_vote_by_proposal_voter_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryVoteByProposalVoterRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryVoteByProposalVoterRequest *
       cosmos__group__v1__query_vote_by_proposal_voter_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_vote_by_proposal_voter_request__free_unpacked
                     (Cosmos__Group__V1__QueryVoteByProposalVoterRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryVoteByProposalVoterResponse methods */
void   cosmos__group__v1__query_vote_by_proposal_voter_response__init
                     (Cosmos__Group__V1__QueryVoteByProposalVoterResponse         *message);
size_t cosmos__group__v1__query_vote_by_proposal_voter_response__get_packed_size
                     (const Cosmos__Group__V1__QueryVoteByProposalVoterResponse   *message);
size_t cosmos__group__v1__query_vote_by_proposal_voter_response__pack
                     (const Cosmos__Group__V1__QueryVoteByProposalVoterResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_vote_by_proposal_voter_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryVoteByProposalVoterResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryVoteByProposalVoterResponse *
       cosmos__group__v1__query_vote_by_proposal_voter_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_vote_by_proposal_voter_response__free_unpacked
                     (Cosmos__Group__V1__QueryVoteByProposalVoterResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryVotesByProposalRequest methods */
void   cosmos__group__v1__query_votes_by_proposal_request__init
                     (Cosmos__Group__V1__QueryVotesByProposalRequest         *message);
size_t cosmos__group__v1__query_votes_by_proposal_request__get_packed_size
                     (const Cosmos__Group__V1__QueryVotesByProposalRequest   *message);
size_t cosmos__group__v1__query_votes_by_proposal_request__pack
                     (const Cosmos__Group__V1__QueryVotesByProposalRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_votes_by_proposal_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryVotesByProposalRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryVotesByProposalRequest *
       cosmos__group__v1__query_votes_by_proposal_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_votes_by_proposal_request__free_unpacked
                     (Cosmos__Group__V1__QueryVotesByProposalRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryVotesByProposalResponse methods */
void   cosmos__group__v1__query_votes_by_proposal_response__init
                     (Cosmos__Group__V1__QueryVotesByProposalResponse         *message);
size_t cosmos__group__v1__query_votes_by_proposal_response__get_packed_size
                     (const Cosmos__Group__V1__QueryVotesByProposalResponse   *message);
size_t cosmos__group__v1__query_votes_by_proposal_response__pack
                     (const Cosmos__Group__V1__QueryVotesByProposalResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_votes_by_proposal_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryVotesByProposalResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryVotesByProposalResponse *
       cosmos__group__v1__query_votes_by_proposal_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_votes_by_proposal_response__free_unpacked
                     (Cosmos__Group__V1__QueryVotesByProposalResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryVotesByVoterRequest methods */
void   cosmos__group__v1__query_votes_by_voter_request__init
                     (Cosmos__Group__V1__QueryVotesByVoterRequest         *message);
size_t cosmos__group__v1__query_votes_by_voter_request__get_packed_size
                     (const Cosmos__Group__V1__QueryVotesByVoterRequest   *message);
size_t cosmos__group__v1__query_votes_by_voter_request__pack
                     (const Cosmos__Group__V1__QueryVotesByVoterRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_votes_by_voter_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryVotesByVoterRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryVotesByVoterRequest *
       cosmos__group__v1__query_votes_by_voter_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_votes_by_voter_request__free_unpacked
                     (Cosmos__Group__V1__QueryVotesByVoterRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryVotesByVoterResponse methods */
void   cosmos__group__v1__query_votes_by_voter_response__init
                     (Cosmos__Group__V1__QueryVotesByVoterResponse         *message);
size_t cosmos__group__v1__query_votes_by_voter_response__get_packed_size
                     (const Cosmos__Group__V1__QueryVotesByVoterResponse   *message);
size_t cosmos__group__v1__query_votes_by_voter_response__pack
                     (const Cosmos__Group__V1__QueryVotesByVoterResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_votes_by_voter_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryVotesByVoterResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryVotesByVoterResponse *
       cosmos__group__v1__query_votes_by_voter_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_votes_by_voter_response__free_unpacked
                     (Cosmos__Group__V1__QueryVotesByVoterResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupsByMemberRequest methods */
void   cosmos__group__v1__query_groups_by_member_request__init
                     (Cosmos__Group__V1__QueryGroupsByMemberRequest         *message);
size_t cosmos__group__v1__query_groups_by_member_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupsByMemberRequest   *message);
size_t cosmos__group__v1__query_groups_by_member_request__pack
                     (const Cosmos__Group__V1__QueryGroupsByMemberRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_groups_by_member_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupsByMemberRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupsByMemberRequest *
       cosmos__group__v1__query_groups_by_member_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_groups_by_member_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupsByMemberRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupsByMemberResponse methods */
void   cosmos__group__v1__query_groups_by_member_response__init
                     (Cosmos__Group__V1__QueryGroupsByMemberResponse         *message);
size_t cosmos__group__v1__query_groups_by_member_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupsByMemberResponse   *message);
size_t cosmos__group__v1__query_groups_by_member_response__pack
                     (const Cosmos__Group__V1__QueryGroupsByMemberResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_groups_by_member_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupsByMemberResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupsByMemberResponse *
       cosmos__group__v1__query_groups_by_member_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_groups_by_member_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupsByMemberResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryTallyResultRequest methods */
void   cosmos__group__v1__query_tally_result_request__init
                     (Cosmos__Group__V1__QueryTallyResultRequest         *message);
size_t cosmos__group__v1__query_tally_result_request__get_packed_size
                     (const Cosmos__Group__V1__QueryTallyResultRequest   *message);
size_t cosmos__group__v1__query_tally_result_request__pack
                     (const Cosmos__Group__V1__QueryTallyResultRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_tally_result_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryTallyResultRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryTallyResultRequest *
       cosmos__group__v1__query_tally_result_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_tally_result_request__free_unpacked
                     (Cosmos__Group__V1__QueryTallyResultRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryTallyResultResponse methods */
void   cosmos__group__v1__query_tally_result_response__init
                     (Cosmos__Group__V1__QueryTallyResultResponse         *message);
size_t cosmos__group__v1__query_tally_result_response__get_packed_size
                     (const Cosmos__Group__V1__QueryTallyResultResponse   *message);
size_t cosmos__group__v1__query_tally_result_response__pack
                     (const Cosmos__Group__V1__QueryTallyResultResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_tally_result_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryTallyResultResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryTallyResultResponse *
       cosmos__group__v1__query_tally_result_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_tally_result_response__free_unpacked
                     (Cosmos__Group__V1__QueryTallyResultResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupsRequest methods */
void   cosmos__group__v1__query_groups_request__init
                     (Cosmos__Group__V1__QueryGroupsRequest         *message);
size_t cosmos__group__v1__query_groups_request__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupsRequest   *message);
size_t cosmos__group__v1__query_groups_request__pack
                     (const Cosmos__Group__V1__QueryGroupsRequest   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_groups_request__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupsRequest *
       cosmos__group__v1__query_groups_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_groups_request__free_unpacked
                     (Cosmos__Group__V1__QueryGroupsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Group__V1__QueryGroupsResponse methods */
void   cosmos__group__v1__query_groups_response__init
                     (Cosmos__Group__V1__QueryGroupsResponse         *message);
size_t cosmos__group__v1__query_groups_response__get_packed_size
                     (const Cosmos__Group__V1__QueryGroupsResponse   *message);
size_t cosmos__group__v1__query_groups_response__pack
                     (const Cosmos__Group__V1__QueryGroupsResponse   *message,
                      uint8_t             *out);
size_t cosmos__group__v1__query_groups_response__pack_to_buffer
                     (const Cosmos__Group__V1__QueryGroupsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Group__V1__QueryGroupsResponse *
       cosmos__group__v1__query_groups_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__group__v1__query_groups_response__free_unpacked
                     (Cosmos__Group__V1__QueryGroupsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Group__V1__QueryGroupInfoRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupInfoRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupInfoResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupInfoResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupPolicyInfoRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupPolicyInfoRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupPolicyInfoResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupPolicyInfoResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupMembersRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupMembersRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupMembersResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupMembersResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupsByAdminRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupsByAdminRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupsByAdminResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupsByAdminResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryProposalRequest_Closure)
                 (const Cosmos__Group__V1__QueryProposalRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryProposalResponse_Closure)
                 (const Cosmos__Group__V1__QueryProposalResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest_Closure)
                 (const Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse_Closure)
                 (const Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryVoteByProposalVoterRequest_Closure)
                 (const Cosmos__Group__V1__QueryVoteByProposalVoterRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryVoteByProposalVoterResponse_Closure)
                 (const Cosmos__Group__V1__QueryVoteByProposalVoterResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryVotesByProposalRequest_Closure)
                 (const Cosmos__Group__V1__QueryVotesByProposalRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryVotesByProposalResponse_Closure)
                 (const Cosmos__Group__V1__QueryVotesByProposalResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryVotesByVoterRequest_Closure)
                 (const Cosmos__Group__V1__QueryVotesByVoterRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryVotesByVoterResponse_Closure)
                 (const Cosmos__Group__V1__QueryVotesByVoterResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupsByMemberRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupsByMemberRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupsByMemberResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupsByMemberResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryTallyResultRequest_Closure)
                 (const Cosmos__Group__V1__QueryTallyResultRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryTallyResultResponse_Closure)
                 (const Cosmos__Group__V1__QueryTallyResultResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupsRequest_Closure)
                 (const Cosmos__Group__V1__QueryGroupsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Group__V1__QueryGroupsResponse_Closure)
                 (const Cosmos__Group__V1__QueryGroupsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Group__V1__Query_Service Cosmos__Group__V1__Query_Service;
struct Cosmos__Group__V1__Query_Service
{
  ProtobufCService base;
  void (*group_info)(Cosmos__Group__V1__Query_Service *service,
                     const Cosmos__Group__V1__QueryGroupInfoRequest *input,
                     Cosmos__Group__V1__QueryGroupInfoResponse_Closure closure,
                     void *closure_data);
  void (*group_policy_info)(Cosmos__Group__V1__Query_Service *service,
                            const Cosmos__Group__V1__QueryGroupPolicyInfoRequest *input,
                            Cosmos__Group__V1__QueryGroupPolicyInfoResponse_Closure closure,
                            void *closure_data);
  void (*group_members)(Cosmos__Group__V1__Query_Service *service,
                        const Cosmos__Group__V1__QueryGroupMembersRequest *input,
                        Cosmos__Group__V1__QueryGroupMembersResponse_Closure closure,
                        void *closure_data);
  void (*groups_by_admin)(Cosmos__Group__V1__Query_Service *service,
                          const Cosmos__Group__V1__QueryGroupsByAdminRequest *input,
                          Cosmos__Group__V1__QueryGroupsByAdminResponse_Closure closure,
                          void *closure_data);
  void (*group_policies_by_group)(Cosmos__Group__V1__Query_Service *service,
                                  const Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest *input,
                                  Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse_Closure closure,
                                  void *closure_data);
  void (*group_policies_by_admin)(Cosmos__Group__V1__Query_Service *service,
                                  const Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest *input,
                                  Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse_Closure closure,
                                  void *closure_data);
  void (*proposal)(Cosmos__Group__V1__Query_Service *service,
                   const Cosmos__Group__V1__QueryProposalRequest *input,
                   Cosmos__Group__V1__QueryProposalResponse_Closure closure,
                   void *closure_data);
  void (*proposals_by_group_policy)(Cosmos__Group__V1__Query_Service *service,
                                    const Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest *input,
                                    Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse_Closure closure,
                                    void *closure_data);
  void (*vote_by_proposal_voter)(Cosmos__Group__V1__Query_Service *service,
                                 const Cosmos__Group__V1__QueryVoteByProposalVoterRequest *input,
                                 Cosmos__Group__V1__QueryVoteByProposalVoterResponse_Closure closure,
                                 void *closure_data);
  void (*votes_by_proposal)(Cosmos__Group__V1__Query_Service *service,
                            const Cosmos__Group__V1__QueryVotesByProposalRequest *input,
                            Cosmos__Group__V1__QueryVotesByProposalResponse_Closure closure,
                            void *closure_data);
  void (*votes_by_voter)(Cosmos__Group__V1__Query_Service *service,
                         const Cosmos__Group__V1__QueryVotesByVoterRequest *input,
                         Cosmos__Group__V1__QueryVotesByVoterResponse_Closure closure,
                         void *closure_data);
  void (*groups_by_member)(Cosmos__Group__V1__Query_Service *service,
                           const Cosmos__Group__V1__QueryGroupsByMemberRequest *input,
                           Cosmos__Group__V1__QueryGroupsByMemberResponse_Closure closure,
                           void *closure_data);
  void (*tally_result)(Cosmos__Group__V1__Query_Service *service,
                       const Cosmos__Group__V1__QueryTallyResultRequest *input,
                       Cosmos__Group__V1__QueryTallyResultResponse_Closure closure,
                       void *closure_data);
  void (*groups)(Cosmos__Group__V1__Query_Service *service,
                 const Cosmos__Group__V1__QueryGroupsRequest *input,
                 Cosmos__Group__V1__QueryGroupsResponse_Closure closure,
                 void *closure_data);
};
typedef void (*Cosmos__Group__V1__Query_ServiceDestroy)(Cosmos__Group__V1__Query_Service *);
void cosmos__group__v1__query__init (Cosmos__Group__V1__Query_Service *service,
                                     Cosmos__Group__V1__Query_ServiceDestroy destroy);
#define COSMOS__GROUP__V1__QUERY__BASE_INIT \
    { &cosmos__group__v1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__GROUP__V1__QUERY__INIT(function_prefix__) \
    { COSMOS__GROUP__V1__QUERY__BASE_INIT,\
      function_prefix__ ## group_info,\
      function_prefix__ ## group_policy_info,\
      function_prefix__ ## group_members,\
      function_prefix__ ## groups_by_admin,\
      function_prefix__ ## group_policies_by_group,\
      function_prefix__ ## group_policies_by_admin,\
      function_prefix__ ## proposal,\
      function_prefix__ ## proposals_by_group_policy,\
      function_prefix__ ## vote_by_proposal_voter,\
      function_prefix__ ## votes_by_proposal,\
      function_prefix__ ## votes_by_voter,\
      function_prefix__ ## groups_by_member,\
      function_prefix__ ## tally_result,\
      function_prefix__ ## groups  }
void cosmos__group__v1__query__group_info(ProtobufCService *service,
                                          const Cosmos__Group__V1__QueryGroupInfoRequest *input,
                                          Cosmos__Group__V1__QueryGroupInfoResponse_Closure closure,
                                          void *closure_data);
void cosmos__group__v1__query__group_policy_info(ProtobufCService *service,
                                                 const Cosmos__Group__V1__QueryGroupPolicyInfoRequest *input,
                                                 Cosmos__Group__V1__QueryGroupPolicyInfoResponse_Closure closure,
                                                 void *closure_data);
void cosmos__group__v1__query__group_members(ProtobufCService *service,
                                             const Cosmos__Group__V1__QueryGroupMembersRequest *input,
                                             Cosmos__Group__V1__QueryGroupMembersResponse_Closure closure,
                                             void *closure_data);
void cosmos__group__v1__query__groups_by_admin(ProtobufCService *service,
                                               const Cosmos__Group__V1__QueryGroupsByAdminRequest *input,
                                               Cosmos__Group__V1__QueryGroupsByAdminResponse_Closure closure,
                                               void *closure_data);
void cosmos__group__v1__query__group_policies_by_group(ProtobufCService *service,
                                                       const Cosmos__Group__V1__QueryGroupPoliciesByGroupRequest *input,
                                                       Cosmos__Group__V1__QueryGroupPoliciesByGroupResponse_Closure closure,
                                                       void *closure_data);
void cosmos__group__v1__query__group_policies_by_admin(ProtobufCService *service,
                                                       const Cosmos__Group__V1__QueryGroupPoliciesByAdminRequest *input,
                                                       Cosmos__Group__V1__QueryGroupPoliciesByAdminResponse_Closure closure,
                                                       void *closure_data);
void cosmos__group__v1__query__proposal(ProtobufCService *service,
                                        const Cosmos__Group__V1__QueryProposalRequest *input,
                                        Cosmos__Group__V1__QueryProposalResponse_Closure closure,
                                        void *closure_data);
void cosmos__group__v1__query__proposals_by_group_policy(ProtobufCService *service,
                                                         const Cosmos__Group__V1__QueryProposalsByGroupPolicyRequest *input,
                                                         Cosmos__Group__V1__QueryProposalsByGroupPolicyResponse_Closure closure,
                                                         void *closure_data);
void cosmos__group__v1__query__vote_by_proposal_voter(ProtobufCService *service,
                                                      const Cosmos__Group__V1__QueryVoteByProposalVoterRequest *input,
                                                      Cosmos__Group__V1__QueryVoteByProposalVoterResponse_Closure closure,
                                                      void *closure_data);
void cosmos__group__v1__query__votes_by_proposal(ProtobufCService *service,
                                                 const Cosmos__Group__V1__QueryVotesByProposalRequest *input,
                                                 Cosmos__Group__V1__QueryVotesByProposalResponse_Closure closure,
                                                 void *closure_data);
void cosmos__group__v1__query__votes_by_voter(ProtobufCService *service,
                                              const Cosmos__Group__V1__QueryVotesByVoterRequest *input,
                                              Cosmos__Group__V1__QueryVotesByVoterResponse_Closure closure,
                                              void *closure_data);
void cosmos__group__v1__query__groups_by_member(ProtobufCService *service,
                                                const Cosmos__Group__V1__QueryGroupsByMemberRequest *input,
                                                Cosmos__Group__V1__QueryGroupsByMemberResponse_Closure closure,
                                                void *closure_data);
void cosmos__group__v1__query__tally_result(ProtobufCService *service,
                                            const Cosmos__Group__V1__QueryTallyResultRequest *input,
                                            Cosmos__Group__V1__QueryTallyResultResponse_Closure closure,
                                            void *closure_data);
void cosmos__group__v1__query__groups(ProtobufCService *service,
                                      const Cosmos__Group__V1__QueryGroupsRequest *input,
                                      Cosmos__Group__V1__QueryGroupsResponse_Closure closure,
                                      void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_info_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_info_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_policy_info_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_policy_info_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_members_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_members_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_groups_by_admin_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_groups_by_admin_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_policies_by_group_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_policies_by_group_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_policies_by_admin_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_group_policies_by_admin_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_proposal_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_proposal_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_proposals_by_group_policy_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_proposals_by_group_policy_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_vote_by_proposal_voter_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_vote_by_proposal_voter_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_votes_by_proposal_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_votes_by_proposal_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_votes_by_voter_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_votes_by_voter_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_groups_by_member_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_groups_by_member_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_tally_result_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_tally_result_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_groups_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__group__v1__query_groups_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__group__v1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fgroup_2fv1_2fquery_2eproto__INCLUDED */
