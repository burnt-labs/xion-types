/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/upgrade/v1beta1/upgrade.proto */

#ifndef PROTOBUF_C_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/protobuf/any.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Upgrade__V1beta1__Plan Cosmos__Upgrade__V1beta1__Plan;
typedef struct Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal;
typedef struct Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal;
typedef struct Cosmos__Upgrade__V1beta1__ModuleVersion Cosmos__Upgrade__V1beta1__ModuleVersion;


/* --- enums --- */


/* --- messages --- */

/*
 * Plan specifies information about a planned upgrade and when it should occur.
 */
struct  Cosmos__Upgrade__V1beta1__Plan
{
  ProtobufCMessage base;
  /*
   * Sets the name for the upgrade. This name will be used by the upgraded
   * version of the software to apply any special "on-upgrade" commands during
   * the first BeginBlock method after the upgrade is applied. It is also used
   * to detect whether a software version can handle a given upgrade. If no
   * upgrade handler with this name has been set in the software, it will be
   * assumed that the software is out-of-date when the upgrade Time or Height is
   * reached and the software will exit.
   */
  char *name;
  /*
   * Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
   * has been removed from the SDK.
   * If this field is not empty, an error will be thrown.
   */
  Google__Protobuf__Timestamp *time PROTOBUF_C__DEPRECATED;
  /*
   * The height at which the upgrade must be performed.
   */
  int64_t height;
  /*
   * Any application specific upgrade info to be included on-chain
   * such as a git commit that validators could automatically upgrade to
   */
  char *info;
  /*
   * Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
   * moved to the IBC module in the sub module 02-client.
   * If this field is not empty, an error will be thrown.
   */
  Google__Protobuf__Any *upgraded_client_state PROTOBUF_C__DEPRECATED;
};
#define COSMOS__UPGRADE__V1BETA1__PLAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__plan__descriptor) \
, (char *)protobuf_c_empty_string, NULL, 0, (char *)protobuf_c_empty_string, NULL }


/*
 * SoftwareUpgradeProposal is a gov Content type for initiating a software
 * upgrade.
 * Deprecated: This legacy proposal is deprecated in favor of Msg-based gov
 * proposals, see MsgSoftwareUpgrade.
 */
struct  Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal
{
  ProtobufCMessage base;
  /*
   * title of the proposal
   */
  char *title;
  /*
   * description of the proposal
   */
  char *description;
  /*
   * plan of the proposal
   */
  Cosmos__Upgrade__V1beta1__Plan *plan;
};
#define COSMOS__UPGRADE__V1BETA1__SOFTWARE_UPGRADE_PROPOSAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__software_upgrade_proposal__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


/*
 * CancelSoftwareUpgradeProposal is a gov Content type for cancelling a software
 * upgrade.
 * Deprecated: This legacy proposal is deprecated in favor of Msg-based gov
 * proposals, see MsgCancelUpgrade.
 */
struct  Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal
{
  ProtobufCMessage base;
  /*
   * title of the proposal
   */
  char *title;
  /*
   * description of the proposal
   */
  char *description;
};
#define COSMOS__UPGRADE__V1BETA1__CANCEL_SOFTWARE_UPGRADE_PROPOSAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * ModuleVersion specifies a module and its consensus version.
 * Since: cosmos-sdk 0.43
 */
struct  Cosmos__Upgrade__V1beta1__ModuleVersion
{
  ProtobufCMessage base;
  /*
   * name of the app module
   */
  char *name;
  /*
   * consensus version of the app module
   */
  uint64_t version;
};
#define COSMOS__UPGRADE__V1BETA1__MODULE_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__module_version__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/* Cosmos__Upgrade__V1beta1__Plan methods */
void   cosmos__upgrade__v1beta1__plan__init
                     (Cosmos__Upgrade__V1beta1__Plan         *message);
size_t cosmos__upgrade__v1beta1__plan__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__Plan   *message);
size_t cosmos__upgrade__v1beta1__plan__pack
                     (const Cosmos__Upgrade__V1beta1__Plan   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__plan__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__Plan   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__Plan *
       cosmos__upgrade__v1beta1__plan__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__plan__free_unpacked
                     (Cosmos__Upgrade__V1beta1__Plan *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal methods */
void   cosmos__upgrade__v1beta1__software_upgrade_proposal__init
                     (Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal         *message);
size_t cosmos__upgrade__v1beta1__software_upgrade_proposal__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal   *message);
size_t cosmos__upgrade__v1beta1__software_upgrade_proposal__pack
                     (const Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__software_upgrade_proposal__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal *
       cosmos__upgrade__v1beta1__software_upgrade_proposal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__software_upgrade_proposal__free_unpacked
                     (Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal methods */
void   cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__init
                     (Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal         *message);
size_t cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal   *message);
size_t cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__pack
                     (const Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal *
       cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__free_unpacked
                     (Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__ModuleVersion methods */
void   cosmos__upgrade__v1beta1__module_version__init
                     (Cosmos__Upgrade__V1beta1__ModuleVersion         *message);
size_t cosmos__upgrade__v1beta1__module_version__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__ModuleVersion   *message);
size_t cosmos__upgrade__v1beta1__module_version__pack
                     (const Cosmos__Upgrade__V1beta1__ModuleVersion   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__module_version__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__ModuleVersion   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__ModuleVersion *
       cosmos__upgrade__v1beta1__module_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__module_version__free_unpacked
                     (Cosmos__Upgrade__V1beta1__ModuleVersion *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Upgrade__V1beta1__Plan_Closure)
                 (const Cosmos__Upgrade__V1beta1__Plan *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal_Closure)
                 (const Cosmos__Upgrade__V1beta1__SoftwareUpgradeProposal *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal_Closure)
                 (const Cosmos__Upgrade__V1beta1__CancelSoftwareUpgradeProposal *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__ModuleVersion_Closure)
                 (const Cosmos__Upgrade__V1beta1__ModuleVersion *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__plan__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__software_upgrade_proposal__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__cancel_software_upgrade_proposal__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__module_version__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto__INCLUDED */
