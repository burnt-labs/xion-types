/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/upgrade/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "cosmos/upgrade/v1beta1/upgrade.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"

typedef struct Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest;
typedef struct Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse;
typedef struct Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest;
typedef struct Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse;
typedef struct Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest;
typedef struct Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse;
typedef struct Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest;
typedef struct Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse;
typedef struct Cosmos__Upgrade__V1beta1__QueryAuthorityRequest Cosmos__Upgrade__V1beta1__QueryAuthorityRequest;
typedef struct Cosmos__Upgrade__V1beta1__QueryAuthorityResponse Cosmos__Upgrade__V1beta1__QueryAuthorityResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryCurrentPlanRequest is the request type for the Query/CurrentPlan RPC
 * method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest
{
  ProtobufCMessage base;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_CURRENT_PLAN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_current_plan_request__descriptor) \
 }


/*
 * QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
 * method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse
{
  ProtobufCMessage base;
  /*
   * plan is the current upgrade plan.
   */
  Cosmos__Upgrade__V1beta1__Plan *plan;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_CURRENT_PLAN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_current_plan_response__descriptor) \
, NULL }


/*
 * QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC
 * method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest
{
  ProtobufCMessage base;
  /*
   * name is the name of the applied plan to query for.
   */
  char *name;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_APPLIED_PLAN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_applied_plan_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
 * method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse
{
  ProtobufCMessage base;
  /*
   * height is the block height at which the plan was applied.
   */
  int64_t height;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_APPLIED_PLAN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_applied_plan_response__descriptor) \
, 0 }


/*
 * QueryUpgradedConsensusStateRequest is the request type for the Query/UpgradedConsensusState
 * RPC method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest
{
  ProtobufCMessage base;
  /*
   * last height of the current chain must be sent in request
   * as this is the height under which next consensus state is stored
   */
  int64_t last_height;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_UPGRADED_CONSENSUS_STATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__descriptor) \
, 0 }


/*
 * QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
 * RPC method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse
{
  ProtobufCMessage base;
  ProtobufCBinaryData upgraded_consensus_state;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_UPGRADED_CONSENSUS_STATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__descriptor) \
, {0,NULL} }


/*
 * QueryModuleVersionsRequest is the request type for the Query/ModuleVersions
 * RPC method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest
{
  ProtobufCMessage base;
  /*
   * module_name is a field to query a specific module
   * consensus version from state. Leaving this empty will
   * fetch the full list of module versions from state
   */
  char *module_name;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_MODULE_VERSIONS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_module_versions_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
 * RPC method.
 */
struct  Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse
{
  ProtobufCMessage base;
  /*
   * module_versions is a list of module names with their consensus versions.
   */
  size_t n_module_versions;
  Cosmos__Upgrade__V1beta1__ModuleVersion **module_versions;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_MODULE_VERSIONS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_module_versions_response__descriptor) \
, 0,NULL }


/*
 * QueryAuthorityRequest is the request type for Query/Authority
 */
struct  Cosmos__Upgrade__V1beta1__QueryAuthorityRequest
{
  ProtobufCMessage base;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_AUTHORITY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_authority_request__descriptor) \
 }


/*
 * QueryAuthorityResponse is the response type for Query/Authority
 */
struct  Cosmos__Upgrade__V1beta1__QueryAuthorityResponse
{
  ProtobufCMessage base;
  char *address;
};
#define COSMOS__UPGRADE__V1BETA1__QUERY_AUTHORITY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__upgrade__v1beta1__query_authority_response__descriptor) \
, (char *)protobuf_c_empty_string }


/* Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest methods */
void   cosmos__upgrade__v1beta1__query_current_plan_request__init
                     (Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest         *message);
size_t cosmos__upgrade__v1beta1__query_current_plan_request__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest   *message);
size_t cosmos__upgrade__v1beta1__query_current_plan_request__pack
                     (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_current_plan_request__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest *
       cosmos__upgrade__v1beta1__query_current_plan_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_current_plan_request__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse methods */
void   cosmos__upgrade__v1beta1__query_current_plan_response__init
                     (Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse         *message);
size_t cosmos__upgrade__v1beta1__query_current_plan_response__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse   *message);
size_t cosmos__upgrade__v1beta1__query_current_plan_response__pack
                     (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_current_plan_response__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse *
       cosmos__upgrade__v1beta1__query_current_plan_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_current_plan_response__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest methods */
void   cosmos__upgrade__v1beta1__query_applied_plan_request__init
                     (Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest         *message);
size_t cosmos__upgrade__v1beta1__query_applied_plan_request__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest   *message);
size_t cosmos__upgrade__v1beta1__query_applied_plan_request__pack
                     (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_applied_plan_request__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest *
       cosmos__upgrade__v1beta1__query_applied_plan_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_applied_plan_request__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse methods */
void   cosmos__upgrade__v1beta1__query_applied_plan_response__init
                     (Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse         *message);
size_t cosmos__upgrade__v1beta1__query_applied_plan_response__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse   *message);
size_t cosmos__upgrade__v1beta1__query_applied_plan_response__pack
                     (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_applied_plan_response__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse *
       cosmos__upgrade__v1beta1__query_applied_plan_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_applied_plan_response__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest methods */
void   cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__init
                     (Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest         *message);
size_t cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest   *message);
size_t cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__pack
                     (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest *
       cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse methods */
void   cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__init
                     (Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse         *message);
size_t cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse   *message);
size_t cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__pack
                     (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse *
       cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest methods */
void   cosmos__upgrade__v1beta1__query_module_versions_request__init
                     (Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest         *message);
size_t cosmos__upgrade__v1beta1__query_module_versions_request__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest   *message);
size_t cosmos__upgrade__v1beta1__query_module_versions_request__pack
                     (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_module_versions_request__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest *
       cosmos__upgrade__v1beta1__query_module_versions_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_module_versions_request__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse methods */
void   cosmos__upgrade__v1beta1__query_module_versions_response__init
                     (Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse         *message);
size_t cosmos__upgrade__v1beta1__query_module_versions_response__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse   *message);
size_t cosmos__upgrade__v1beta1__query_module_versions_response__pack
                     (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_module_versions_response__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse *
       cosmos__upgrade__v1beta1__query_module_versions_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_module_versions_response__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryAuthorityRequest methods */
void   cosmos__upgrade__v1beta1__query_authority_request__init
                     (Cosmos__Upgrade__V1beta1__QueryAuthorityRequest         *message);
size_t cosmos__upgrade__v1beta1__query_authority_request__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryAuthorityRequest   *message);
size_t cosmos__upgrade__v1beta1__query_authority_request__pack
                     (const Cosmos__Upgrade__V1beta1__QueryAuthorityRequest   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_authority_request__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryAuthorityRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryAuthorityRequest *
       cosmos__upgrade__v1beta1__query_authority_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_authority_request__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryAuthorityRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Upgrade__V1beta1__QueryAuthorityResponse methods */
void   cosmos__upgrade__v1beta1__query_authority_response__init
                     (Cosmos__Upgrade__V1beta1__QueryAuthorityResponse         *message);
size_t cosmos__upgrade__v1beta1__query_authority_response__get_packed_size
                     (const Cosmos__Upgrade__V1beta1__QueryAuthorityResponse   *message);
size_t cosmos__upgrade__v1beta1__query_authority_response__pack
                     (const Cosmos__Upgrade__V1beta1__QueryAuthorityResponse   *message,
                      uint8_t             *out);
size_t cosmos__upgrade__v1beta1__query_authority_response__pack_to_buffer
                     (const Cosmos__Upgrade__V1beta1__QueryAuthorityResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Upgrade__V1beta1__QueryAuthorityResponse *
       cosmos__upgrade__v1beta1__query_authority_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__upgrade__v1beta1__query_authority_response__free_unpacked
                     (Cosmos__Upgrade__V1beta1__QueryAuthorityResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryAuthorityRequest_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryAuthorityRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Upgrade__V1beta1__QueryAuthorityResponse_Closure)
                 (const Cosmos__Upgrade__V1beta1__QueryAuthorityResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Upgrade__V1beta1__Query_Service Cosmos__Upgrade__V1beta1__Query_Service;
struct Cosmos__Upgrade__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*current_plan)(Cosmos__Upgrade__V1beta1__Query_Service *service,
                       const Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest *input,
                       Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse_Closure closure,
                       void *closure_data);
  void (*applied_plan)(Cosmos__Upgrade__V1beta1__Query_Service *service,
                       const Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest *input,
                       Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse_Closure closure,
                       void *closure_data);
  void (*upgraded_consensus_state)(Cosmos__Upgrade__V1beta1__Query_Service *service,
                                   const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest *input,
                                   Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse_Closure closure,
                                   void *closure_data);
  void (*module_versions)(Cosmos__Upgrade__V1beta1__Query_Service *service,
                          const Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest *input,
                          Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse_Closure closure,
                          void *closure_data);
  void (*authority)(Cosmos__Upgrade__V1beta1__Query_Service *service,
                    const Cosmos__Upgrade__V1beta1__QueryAuthorityRequest *input,
                    Cosmos__Upgrade__V1beta1__QueryAuthorityResponse_Closure closure,
                    void *closure_data);
};
typedef void (*Cosmos__Upgrade__V1beta1__Query_ServiceDestroy)(Cosmos__Upgrade__V1beta1__Query_Service *);
void cosmos__upgrade__v1beta1__query__init (Cosmos__Upgrade__V1beta1__Query_Service *service,
                                            Cosmos__Upgrade__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__UPGRADE__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__upgrade__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__UPGRADE__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__UPGRADE__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## current_plan,\
      function_prefix__ ## applied_plan,\
      function_prefix__ ## upgraded_consensus_state,\
      function_prefix__ ## module_versions,\
      function_prefix__ ## authority  }
void cosmos__upgrade__v1beta1__query__current_plan(ProtobufCService *service,
                                                   const Cosmos__Upgrade__V1beta1__QueryCurrentPlanRequest *input,
                                                   Cosmos__Upgrade__V1beta1__QueryCurrentPlanResponse_Closure closure,
                                                   void *closure_data);
void cosmos__upgrade__v1beta1__query__applied_plan(ProtobufCService *service,
                                                   const Cosmos__Upgrade__V1beta1__QueryAppliedPlanRequest *input,
                                                   Cosmos__Upgrade__V1beta1__QueryAppliedPlanResponse_Closure closure,
                                                   void *closure_data);
void cosmos__upgrade__v1beta1__query__upgraded_consensus_state(ProtobufCService *service,
                                                               const Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateRequest *input,
                                                               Cosmos__Upgrade__V1beta1__QueryUpgradedConsensusStateResponse_Closure closure,
                                                               void *closure_data);
void cosmos__upgrade__v1beta1__query__module_versions(ProtobufCService *service,
                                                      const Cosmos__Upgrade__V1beta1__QueryModuleVersionsRequest *input,
                                                      Cosmos__Upgrade__V1beta1__QueryModuleVersionsResponse_Closure closure,
                                                      void *closure_data);
void cosmos__upgrade__v1beta1__query__authority(ProtobufCService *service,
                                                const Cosmos__Upgrade__V1beta1__QueryAuthorityRequest *input,
                                                Cosmos__Upgrade__V1beta1__QueryAuthorityResponse_Closure closure,
                                                void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_current_plan_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_current_plan_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_applied_plan_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_applied_plan_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_upgraded_consensus_state_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_upgraded_consensus_state_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_module_versions_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_module_versions_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_authority_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__upgrade__v1beta1__query_authority_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__upgrade__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto__INCLUDED */
