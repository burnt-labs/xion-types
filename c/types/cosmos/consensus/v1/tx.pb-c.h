/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/consensus/v1/tx.proto */

#ifndef PROTOBUF_C_cosmos_2fconsensus_2fv1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fconsensus_2fv1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "amino/amino.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "tendermint/types/params.pb-c.h"

typedef struct Cosmos__Consensus__V1__MsgUpdateParams Cosmos__Consensus__V1__MsgUpdateParams;
typedef struct Cosmos__Consensus__V1__MsgUpdateParamsResponse Cosmos__Consensus__V1__MsgUpdateParamsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgUpdateParams is the Msg/UpdateParams request type.
 */
struct  Cosmos__Consensus__V1__MsgUpdateParams
{
  ProtobufCMessage base;
  /*
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   */
  char *authority;
  /*
   * params defines the x/consensus parameters to update.
   * VersionsParams is not included in this Msg because it is tracked
   * separarately in x/upgrade.
   * NOTE: All parameters must be supplied.
   */
  Tendermint__Types__BlockParams *block;
  Tendermint__Types__EvidenceParams *evidence;
  Tendermint__Types__ValidatorParams *validator;
  Tendermint__Types__ABCIParams *abci;
};
#define COSMOS__CONSENSUS__V1__MSG_UPDATE_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__consensus__v1__msg_update_params__descriptor) \
, (char *)protobuf_c_empty_string, NULL, NULL, NULL, NULL }


/*
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 */
struct  Cosmos__Consensus__V1__MsgUpdateParamsResponse
{
  ProtobufCMessage base;
};
#define COSMOS__CONSENSUS__V1__MSG_UPDATE_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__consensus__v1__msg_update_params_response__descriptor) \
 }


/* Cosmos__Consensus__V1__MsgUpdateParams methods */
void   cosmos__consensus__v1__msg_update_params__init
                     (Cosmos__Consensus__V1__MsgUpdateParams         *message);
size_t cosmos__consensus__v1__msg_update_params__get_packed_size
                     (const Cosmos__Consensus__V1__MsgUpdateParams   *message);
size_t cosmos__consensus__v1__msg_update_params__pack
                     (const Cosmos__Consensus__V1__MsgUpdateParams   *message,
                      uint8_t             *out);
size_t cosmos__consensus__v1__msg_update_params__pack_to_buffer
                     (const Cosmos__Consensus__V1__MsgUpdateParams   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Consensus__V1__MsgUpdateParams *
       cosmos__consensus__v1__msg_update_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__consensus__v1__msg_update_params__free_unpacked
                     (Cosmos__Consensus__V1__MsgUpdateParams *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Consensus__V1__MsgUpdateParamsResponse methods */
void   cosmos__consensus__v1__msg_update_params_response__init
                     (Cosmos__Consensus__V1__MsgUpdateParamsResponse         *message);
size_t cosmos__consensus__v1__msg_update_params_response__get_packed_size
                     (const Cosmos__Consensus__V1__MsgUpdateParamsResponse   *message);
size_t cosmos__consensus__v1__msg_update_params_response__pack
                     (const Cosmos__Consensus__V1__MsgUpdateParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__consensus__v1__msg_update_params_response__pack_to_buffer
                     (const Cosmos__Consensus__V1__MsgUpdateParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Consensus__V1__MsgUpdateParamsResponse *
       cosmos__consensus__v1__msg_update_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__consensus__v1__msg_update_params_response__free_unpacked
                     (Cosmos__Consensus__V1__MsgUpdateParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Consensus__V1__MsgUpdateParams_Closure)
                 (const Cosmos__Consensus__V1__MsgUpdateParams *message,
                  void *closure_data);
typedef void (*Cosmos__Consensus__V1__MsgUpdateParamsResponse_Closure)
                 (const Cosmos__Consensus__V1__MsgUpdateParamsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Consensus__V1__Msg_Service Cosmos__Consensus__V1__Msg_Service;
struct Cosmos__Consensus__V1__Msg_Service
{
  ProtobufCService base;
  void (*update_params)(Cosmos__Consensus__V1__Msg_Service *service,
                        const Cosmos__Consensus__V1__MsgUpdateParams *input,
                        Cosmos__Consensus__V1__MsgUpdateParamsResponse_Closure closure,
                        void *closure_data);
};
typedef void (*Cosmos__Consensus__V1__Msg_ServiceDestroy)(Cosmos__Consensus__V1__Msg_Service *);
void cosmos__consensus__v1__msg__init (Cosmos__Consensus__V1__Msg_Service *service,
                                       Cosmos__Consensus__V1__Msg_ServiceDestroy destroy);
#define COSMOS__CONSENSUS__V1__MSG__BASE_INIT \
    { &cosmos__consensus__v1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__CONSENSUS__V1__MSG__INIT(function_prefix__) \
    { COSMOS__CONSENSUS__V1__MSG__BASE_INIT,\
      function_prefix__ ## update_params  }
void cosmos__consensus__v1__msg__update_params(ProtobufCService *service,
                                               const Cosmos__Consensus__V1__MsgUpdateParams *input,
                                               Cosmos__Consensus__V1__MsgUpdateParamsResponse_Closure closure,
                                               void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__consensus__v1__msg_update_params__descriptor;
extern const ProtobufCMessageDescriptor cosmos__consensus__v1__msg_update_params_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__consensus__v1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fconsensus_2fv1_2ftx_2eproto__INCLUDED */
