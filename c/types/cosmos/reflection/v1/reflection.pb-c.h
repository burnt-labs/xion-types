/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/reflection/v1/reflection.proto */

#ifndef PROTOBUF_C_cosmos_2freflection_2fv1_2freflection_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2freflection_2fv1_2freflection_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/protobuf/descriptor.pb-c.h"
#include "cosmos/query/v1/query.pb-c.h"

typedef struct Cosmos__Reflection__V1__FileDescriptorsRequest Cosmos__Reflection__V1__FileDescriptorsRequest;
typedef struct Cosmos__Reflection__V1__FileDescriptorsResponse Cosmos__Reflection__V1__FileDescriptorsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * FileDescriptorsRequest is the Query/FileDescriptors request type.
 */
struct  Cosmos__Reflection__V1__FileDescriptorsRequest
{
  ProtobufCMessage base;
};
#define COSMOS__REFLECTION__V1__FILE_DESCRIPTORS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__reflection__v1__file_descriptors_request__descriptor) \
 }


/*
 * FileDescriptorsResponse is the Query/FileDescriptors response type.
 */
struct  Cosmos__Reflection__V1__FileDescriptorsResponse
{
  ProtobufCMessage base;
  /*
   * files is the file descriptors.
   */
  size_t n_files;
  Google__Protobuf__FileDescriptorProto **files;
};
#define COSMOS__REFLECTION__V1__FILE_DESCRIPTORS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__reflection__v1__file_descriptors_response__descriptor) \
, 0,NULL }


/* Cosmos__Reflection__V1__FileDescriptorsRequest methods */
void   cosmos__reflection__v1__file_descriptors_request__init
                     (Cosmos__Reflection__V1__FileDescriptorsRequest         *message);
size_t cosmos__reflection__v1__file_descriptors_request__get_packed_size
                     (const Cosmos__Reflection__V1__FileDescriptorsRequest   *message);
size_t cosmos__reflection__v1__file_descriptors_request__pack
                     (const Cosmos__Reflection__V1__FileDescriptorsRequest   *message,
                      uint8_t             *out);
size_t cosmos__reflection__v1__file_descriptors_request__pack_to_buffer
                     (const Cosmos__Reflection__V1__FileDescriptorsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Reflection__V1__FileDescriptorsRequest *
       cosmos__reflection__v1__file_descriptors_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__reflection__v1__file_descriptors_request__free_unpacked
                     (Cosmos__Reflection__V1__FileDescriptorsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Reflection__V1__FileDescriptorsResponse methods */
void   cosmos__reflection__v1__file_descriptors_response__init
                     (Cosmos__Reflection__V1__FileDescriptorsResponse         *message);
size_t cosmos__reflection__v1__file_descriptors_response__get_packed_size
                     (const Cosmos__Reflection__V1__FileDescriptorsResponse   *message);
size_t cosmos__reflection__v1__file_descriptors_response__pack
                     (const Cosmos__Reflection__V1__FileDescriptorsResponse   *message,
                      uint8_t             *out);
size_t cosmos__reflection__v1__file_descriptors_response__pack_to_buffer
                     (const Cosmos__Reflection__V1__FileDescriptorsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Reflection__V1__FileDescriptorsResponse *
       cosmos__reflection__v1__file_descriptors_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__reflection__v1__file_descriptors_response__free_unpacked
                     (Cosmos__Reflection__V1__FileDescriptorsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Reflection__V1__FileDescriptorsRequest_Closure)
                 (const Cosmos__Reflection__V1__FileDescriptorsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Reflection__V1__FileDescriptorsResponse_Closure)
                 (const Cosmos__Reflection__V1__FileDescriptorsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Reflection__V1__ReflectionService_Service Cosmos__Reflection__V1__ReflectionService_Service;
struct Cosmos__Reflection__V1__ReflectionService_Service
{
  ProtobufCService base;
  void (*file_descriptors)(Cosmos__Reflection__V1__ReflectionService_Service *service,
                           const Cosmos__Reflection__V1__FileDescriptorsRequest *input,
                           Cosmos__Reflection__V1__FileDescriptorsResponse_Closure closure,
                           void *closure_data);
};
typedef void (*Cosmos__Reflection__V1__ReflectionService_ServiceDestroy)(Cosmos__Reflection__V1__ReflectionService_Service *);
void cosmos__reflection__v1__reflection_service__init (Cosmos__Reflection__V1__ReflectionService_Service *service,
                                                       Cosmos__Reflection__V1__ReflectionService_ServiceDestroy destroy);
#define COSMOS__REFLECTION__V1__REFLECTION_SERVICE__BASE_INIT \
    { &cosmos__reflection__v1__reflection_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__REFLECTION__V1__REFLECTION_SERVICE__INIT(function_prefix__) \
    { COSMOS__REFLECTION__V1__REFLECTION_SERVICE__BASE_INIT,\
      function_prefix__ ## file_descriptors  }
void cosmos__reflection__v1__reflection_service__file_descriptors(ProtobufCService *service,
                                                                  const Cosmos__Reflection__V1__FileDescriptorsRequest *input,
                                                                  Cosmos__Reflection__V1__FileDescriptorsResponse_Closure closure,
                                                                  void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__reflection__v1__file_descriptors_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__reflection__v1__file_descriptors_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__reflection__v1__reflection_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2freflection_2fv1_2freflection_2eproto__INCLUDED */
