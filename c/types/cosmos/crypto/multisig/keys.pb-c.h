/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/crypto/multisig/keys.proto */

#ifndef PROTOBUF_C_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Crypto__Multisig__LegacyAminoPubKey Cosmos__Crypto__Multisig__LegacyAminoPubKey;


/* --- enums --- */


/* --- messages --- */

/*
 * LegacyAminoPubKey specifies a public key type
 * which nests multiple public keys and a threshold,
 * it uses legacy amino address rules.
 */
struct  Cosmos__Crypto__Multisig__LegacyAminoPubKey
{
  ProtobufCMessage base;
  uint32_t threshold;
  size_t n_public_keys;
  Google__Protobuf__Any **public_keys;
};
#define COSMOS__CRYPTO__MULTISIG__LEGACY_AMINO_PUB_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__crypto__multisig__legacy_amino_pub_key__descriptor) \
, 0, 0,NULL }


/* Cosmos__Crypto__Multisig__LegacyAminoPubKey methods */
void   cosmos__crypto__multisig__legacy_amino_pub_key__init
                     (Cosmos__Crypto__Multisig__LegacyAminoPubKey         *message);
size_t cosmos__crypto__multisig__legacy_amino_pub_key__get_packed_size
                     (const Cosmos__Crypto__Multisig__LegacyAminoPubKey   *message);
size_t cosmos__crypto__multisig__legacy_amino_pub_key__pack
                     (const Cosmos__Crypto__Multisig__LegacyAminoPubKey   *message,
                      uint8_t             *out);
size_t cosmos__crypto__multisig__legacy_amino_pub_key__pack_to_buffer
                     (const Cosmos__Crypto__Multisig__LegacyAminoPubKey   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Crypto__Multisig__LegacyAminoPubKey *
       cosmos__crypto__multisig__legacy_amino_pub_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__crypto__multisig__legacy_amino_pub_key__free_unpacked
                     (Cosmos__Crypto__Multisig__LegacyAminoPubKey *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Crypto__Multisig__LegacyAminoPubKey_Closure)
                 (const Cosmos__Crypto__Multisig__LegacyAminoPubKey *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__crypto__multisig__legacy_amino_pub_key__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto__INCLUDED */
