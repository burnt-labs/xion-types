/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/crypto/hd/v1/hd.proto */

#ifndef PROTOBUF_C_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "amino/amino.pb-c.h"
#include "gogoproto/gogo.pb-c.h"

typedef struct Cosmos__Crypto__Hd__V1__BIP44Params Cosmos__Crypto__Hd__V1__BIP44Params;


/* --- enums --- */


/* --- messages --- */

/*
 * BIP44Params is used as path field in ledger item in Record.
 */
struct  Cosmos__Crypto__Hd__V1__BIP44Params
{
  ProtobufCMessage base;
  /*
   * purpose is a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
   */
  uint32_t purpose;
  /*
   * coin_type is a constant that improves privacy
   */
  uint32_t coin_type;
  /*
   * account splits the key space into independent user identities
   */
  uint32_t account;
  /*
   * change is a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal
   * chain.
   */
  protobuf_c_boolean change;
  /*
   * address_index is used as child index in BIP32 derivation
   */
  uint32_t address_index;
};
#define COSMOS__CRYPTO__HD__V1__BIP44_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__crypto__hd__v1__bip44_params__descriptor) \
, 0, 0, 0, 0, 0 }


/* Cosmos__Crypto__Hd__V1__BIP44Params methods */
void   cosmos__crypto__hd__v1__bip44_params__init
                     (Cosmos__Crypto__Hd__V1__BIP44Params         *message);
size_t cosmos__crypto__hd__v1__bip44_params__get_packed_size
                     (const Cosmos__Crypto__Hd__V1__BIP44Params   *message);
size_t cosmos__crypto__hd__v1__bip44_params__pack
                     (const Cosmos__Crypto__Hd__V1__BIP44Params   *message,
                      uint8_t             *out);
size_t cosmos__crypto__hd__v1__bip44_params__pack_to_buffer
                     (const Cosmos__Crypto__Hd__V1__BIP44Params   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Crypto__Hd__V1__BIP44Params *
       cosmos__crypto__hd__v1__bip44_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__crypto__hd__v1__bip44_params__free_unpacked
                     (Cosmos__Crypto__Hd__V1__BIP44Params *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Crypto__Hd__V1__BIP44Params_Closure)
                 (const Cosmos__Crypto__Hd__V1__BIP44Params *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__crypto__hd__v1__bip44_params__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto__INCLUDED */
