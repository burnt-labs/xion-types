/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/params/v1beta1/query.proto */

#ifndef PROTOBUF_C_cosmos_2fparams_2fv1beta1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fparams_2fv1beta1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "cosmos/params/v1beta1/params.pb-c.h"
#include "amino/amino.pb-c.h"
#include "cosmos_proto/cosmos.pb-c.h"

typedef struct Cosmos__Params__V1beta1__QueryParamsRequest Cosmos__Params__V1beta1__QueryParamsRequest;
typedef struct Cosmos__Params__V1beta1__QueryParamsResponse Cosmos__Params__V1beta1__QueryParamsResponse;
typedef struct Cosmos__Params__V1beta1__QuerySubspacesRequest Cosmos__Params__V1beta1__QuerySubspacesRequest;
typedef struct Cosmos__Params__V1beta1__QuerySubspacesResponse Cosmos__Params__V1beta1__QuerySubspacesResponse;
typedef struct Cosmos__Params__V1beta1__Subspace Cosmos__Params__V1beta1__Subspace;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryParamsRequest is request type for the Query/Params RPC method.
 */
struct  Cosmos__Params__V1beta1__QueryParamsRequest
{
  ProtobufCMessage base;
  /*
   * subspace defines the module to query the parameter for.
   */
  char *subspace;
  /*
   * key defines the key of the parameter in the subspace.
   */
  char *key;
};
#define COSMOS__PARAMS__V1BETA1__QUERY_PARAMS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__params__v1beta1__query_params_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryParamsResponse is response type for the Query/Params RPC method.
 */
struct  Cosmos__Params__V1beta1__QueryParamsResponse
{
  ProtobufCMessage base;
  /*
   * param defines the queried parameter.
   */
  Cosmos__Params__V1beta1__ParamChange *param;
};
#define COSMOS__PARAMS__V1BETA1__QUERY_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__params__v1beta1__query_params_response__descriptor) \
, NULL }


/*
 * QuerySubspacesRequest defines a request type for querying for all registered
 * subspaces and all keys for a subspace.
 */
struct  Cosmos__Params__V1beta1__QuerySubspacesRequest
{
  ProtobufCMessage base;
};
#define COSMOS__PARAMS__V1BETA1__QUERY_SUBSPACES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__params__v1beta1__query_subspaces_request__descriptor) \
 }


/*
 * QuerySubspacesResponse defines the response types for querying for all
 * registered subspaces and all keys for a subspace.
 */
struct  Cosmos__Params__V1beta1__QuerySubspacesResponse
{
  ProtobufCMessage base;
  size_t n_subspaces;
  Cosmos__Params__V1beta1__Subspace **subspaces;
};
#define COSMOS__PARAMS__V1BETA1__QUERY_SUBSPACES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__params__v1beta1__query_subspaces_response__descriptor) \
, 0,NULL }


/*
 * Subspace defines a parameter subspace name and all the keys that exist for
 * the subspace.
 */
struct  Cosmos__Params__V1beta1__Subspace
{
  ProtobufCMessage base;
  char *subspace;
  size_t n_keys;
  char **keys;
};
#define COSMOS__PARAMS__V1BETA1__SUBSPACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__params__v1beta1__subspace__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/* Cosmos__Params__V1beta1__QueryParamsRequest methods */
void   cosmos__params__v1beta1__query_params_request__init
                     (Cosmos__Params__V1beta1__QueryParamsRequest         *message);
size_t cosmos__params__v1beta1__query_params_request__get_packed_size
                     (const Cosmos__Params__V1beta1__QueryParamsRequest   *message);
size_t cosmos__params__v1beta1__query_params_request__pack
                     (const Cosmos__Params__V1beta1__QueryParamsRequest   *message,
                      uint8_t             *out);
size_t cosmos__params__v1beta1__query_params_request__pack_to_buffer
                     (const Cosmos__Params__V1beta1__QueryParamsRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Params__V1beta1__QueryParamsRequest *
       cosmos__params__v1beta1__query_params_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__params__v1beta1__query_params_request__free_unpacked
                     (Cosmos__Params__V1beta1__QueryParamsRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Params__V1beta1__QueryParamsResponse methods */
void   cosmos__params__v1beta1__query_params_response__init
                     (Cosmos__Params__V1beta1__QueryParamsResponse         *message);
size_t cosmos__params__v1beta1__query_params_response__get_packed_size
                     (const Cosmos__Params__V1beta1__QueryParamsResponse   *message);
size_t cosmos__params__v1beta1__query_params_response__pack
                     (const Cosmos__Params__V1beta1__QueryParamsResponse   *message,
                      uint8_t             *out);
size_t cosmos__params__v1beta1__query_params_response__pack_to_buffer
                     (const Cosmos__Params__V1beta1__QueryParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Params__V1beta1__QueryParamsResponse *
       cosmos__params__v1beta1__query_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__params__v1beta1__query_params_response__free_unpacked
                     (Cosmos__Params__V1beta1__QueryParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Params__V1beta1__QuerySubspacesRequest methods */
void   cosmos__params__v1beta1__query_subspaces_request__init
                     (Cosmos__Params__V1beta1__QuerySubspacesRequest         *message);
size_t cosmos__params__v1beta1__query_subspaces_request__get_packed_size
                     (const Cosmos__Params__V1beta1__QuerySubspacesRequest   *message);
size_t cosmos__params__v1beta1__query_subspaces_request__pack
                     (const Cosmos__Params__V1beta1__QuerySubspacesRequest   *message,
                      uint8_t             *out);
size_t cosmos__params__v1beta1__query_subspaces_request__pack_to_buffer
                     (const Cosmos__Params__V1beta1__QuerySubspacesRequest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Params__V1beta1__QuerySubspacesRequest *
       cosmos__params__v1beta1__query_subspaces_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__params__v1beta1__query_subspaces_request__free_unpacked
                     (Cosmos__Params__V1beta1__QuerySubspacesRequest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Params__V1beta1__QuerySubspacesResponse methods */
void   cosmos__params__v1beta1__query_subspaces_response__init
                     (Cosmos__Params__V1beta1__QuerySubspacesResponse         *message);
size_t cosmos__params__v1beta1__query_subspaces_response__get_packed_size
                     (const Cosmos__Params__V1beta1__QuerySubspacesResponse   *message);
size_t cosmos__params__v1beta1__query_subspaces_response__pack
                     (const Cosmos__Params__V1beta1__QuerySubspacesResponse   *message,
                      uint8_t             *out);
size_t cosmos__params__v1beta1__query_subspaces_response__pack_to_buffer
                     (const Cosmos__Params__V1beta1__QuerySubspacesResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Params__V1beta1__QuerySubspacesResponse *
       cosmos__params__v1beta1__query_subspaces_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__params__v1beta1__query_subspaces_response__free_unpacked
                     (Cosmos__Params__V1beta1__QuerySubspacesResponse *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Params__V1beta1__Subspace methods */
void   cosmos__params__v1beta1__subspace__init
                     (Cosmos__Params__V1beta1__Subspace         *message);
size_t cosmos__params__v1beta1__subspace__get_packed_size
                     (const Cosmos__Params__V1beta1__Subspace   *message);
size_t cosmos__params__v1beta1__subspace__pack
                     (const Cosmos__Params__V1beta1__Subspace   *message,
                      uint8_t             *out);
size_t cosmos__params__v1beta1__subspace__pack_to_buffer
                     (const Cosmos__Params__V1beta1__Subspace   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Params__V1beta1__Subspace *
       cosmos__params__v1beta1__subspace__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__params__v1beta1__subspace__free_unpacked
                     (Cosmos__Params__V1beta1__Subspace *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Params__V1beta1__QueryParamsRequest_Closure)
                 (const Cosmos__Params__V1beta1__QueryParamsRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Params__V1beta1__QueryParamsResponse_Closure)
                 (const Cosmos__Params__V1beta1__QueryParamsResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Params__V1beta1__QuerySubspacesRequest_Closure)
                 (const Cosmos__Params__V1beta1__QuerySubspacesRequest *message,
                  void *closure_data);
typedef void (*Cosmos__Params__V1beta1__QuerySubspacesResponse_Closure)
                 (const Cosmos__Params__V1beta1__QuerySubspacesResponse *message,
                  void *closure_data);
typedef void (*Cosmos__Params__V1beta1__Subspace_Closure)
                 (const Cosmos__Params__V1beta1__Subspace *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Params__V1beta1__Query_Service Cosmos__Params__V1beta1__Query_Service;
struct Cosmos__Params__V1beta1__Query_Service
{
  ProtobufCService base;
  void (*params)(Cosmos__Params__V1beta1__Query_Service *service,
                 const Cosmos__Params__V1beta1__QueryParamsRequest *input,
                 Cosmos__Params__V1beta1__QueryParamsResponse_Closure closure,
                 void *closure_data);
  void (*subspaces)(Cosmos__Params__V1beta1__Query_Service *service,
                    const Cosmos__Params__V1beta1__QuerySubspacesRequest *input,
                    Cosmos__Params__V1beta1__QuerySubspacesResponse_Closure closure,
                    void *closure_data);
};
typedef void (*Cosmos__Params__V1beta1__Query_ServiceDestroy)(Cosmos__Params__V1beta1__Query_Service *);
void cosmos__params__v1beta1__query__init (Cosmos__Params__V1beta1__Query_Service *service,
                                           Cosmos__Params__V1beta1__Query_ServiceDestroy destroy);
#define COSMOS__PARAMS__V1BETA1__QUERY__BASE_INIT \
    { &cosmos__params__v1beta1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__PARAMS__V1BETA1__QUERY__INIT(function_prefix__) \
    { COSMOS__PARAMS__V1BETA1__QUERY__BASE_INIT,\
      function_prefix__ ## params,\
      function_prefix__ ## subspaces  }
void cosmos__params__v1beta1__query__params(ProtobufCService *service,
                                            const Cosmos__Params__V1beta1__QueryParamsRequest *input,
                                            Cosmos__Params__V1beta1__QueryParamsResponse_Closure closure,
                                            void *closure_data);
void cosmos__params__v1beta1__query__subspaces(ProtobufCService *service,
                                               const Cosmos__Params__V1beta1__QuerySubspacesRequest *input,
                                               Cosmos__Params__V1beta1__QuerySubspacesResponse_Closure closure,
                                               void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__params__v1beta1__query_params_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__params__v1beta1__query_params_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__params__v1beta1__query_subspaces_request__descriptor;
extern const ProtobufCMessageDescriptor cosmos__params__v1beta1__query_subspaces_response__descriptor;
extern const ProtobufCMessageDescriptor cosmos__params__v1beta1__subspace__descriptor;
extern const ProtobufCServiceDescriptor cosmos__params__v1beta1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fparams_2fv1beta1_2fquery_2eproto__INCLUDED */
