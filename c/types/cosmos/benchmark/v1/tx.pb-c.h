/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cosmos/benchmark/v1/tx.proto */

#ifndef PROTOBUF_C_cosmos_2fbenchmark_2fv1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_cosmos_2fbenchmark_2fv1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/benchmark/v1/benchmark.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Cosmos__Benchmark__V1__MsgLoadTest Cosmos__Benchmark__V1__MsgLoadTest;
typedef struct Cosmos__Benchmark__V1__MsgLoadTestResponse Cosmos__Benchmark__V1__MsgLoadTestResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgLoadTestOps defines a message containing a sequence of load test operations.
 */
struct  Cosmos__Benchmark__V1__MsgLoadTest
{
  ProtobufCMessage base;
  ProtobufCBinaryData caller;
  size_t n_ops;
  Cosmos__Benchmark__V1__Op **ops;
};
#define COSMOS__BENCHMARK__V1__MSG_LOAD_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__benchmark__v1__msg_load_test__descriptor) \
, {0,NULL}, 0,NULL }


/*
 * MsgLoadTestResponse defines a message containing the results of a load test operation.
 */
struct  Cosmos__Benchmark__V1__MsgLoadTestResponse
{
  ProtobufCMessage base;
  uint64_t total_time;
  uint64_t total_errors;
};
#define COSMOS__BENCHMARK__V1__MSG_LOAD_TEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&cosmos__benchmark__v1__msg_load_test_response__descriptor) \
, 0, 0 }


/* Cosmos__Benchmark__V1__MsgLoadTest methods */
void   cosmos__benchmark__v1__msg_load_test__init
                     (Cosmos__Benchmark__V1__MsgLoadTest         *message);
size_t cosmos__benchmark__v1__msg_load_test__get_packed_size
                     (const Cosmos__Benchmark__V1__MsgLoadTest   *message);
size_t cosmos__benchmark__v1__msg_load_test__pack
                     (const Cosmos__Benchmark__V1__MsgLoadTest   *message,
                      uint8_t             *out);
size_t cosmos__benchmark__v1__msg_load_test__pack_to_buffer
                     (const Cosmos__Benchmark__V1__MsgLoadTest   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Benchmark__V1__MsgLoadTest *
       cosmos__benchmark__v1__msg_load_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__benchmark__v1__msg_load_test__free_unpacked
                     (Cosmos__Benchmark__V1__MsgLoadTest *message,
                      ProtobufCAllocator *allocator);
/* Cosmos__Benchmark__V1__MsgLoadTestResponse methods */
void   cosmos__benchmark__v1__msg_load_test_response__init
                     (Cosmos__Benchmark__V1__MsgLoadTestResponse         *message);
size_t cosmos__benchmark__v1__msg_load_test_response__get_packed_size
                     (const Cosmos__Benchmark__V1__MsgLoadTestResponse   *message);
size_t cosmos__benchmark__v1__msg_load_test_response__pack
                     (const Cosmos__Benchmark__V1__MsgLoadTestResponse   *message,
                      uint8_t             *out);
size_t cosmos__benchmark__v1__msg_load_test_response__pack_to_buffer
                     (const Cosmos__Benchmark__V1__MsgLoadTestResponse   *message,
                      ProtobufCBuffer     *buffer);
Cosmos__Benchmark__V1__MsgLoadTestResponse *
       cosmos__benchmark__v1__msg_load_test_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   cosmos__benchmark__v1__msg_load_test_response__free_unpacked
                     (Cosmos__Benchmark__V1__MsgLoadTestResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Cosmos__Benchmark__V1__MsgLoadTest_Closure)
                 (const Cosmos__Benchmark__V1__MsgLoadTest *message,
                  void *closure_data);
typedef void (*Cosmos__Benchmark__V1__MsgLoadTestResponse_Closure)
                 (const Cosmos__Benchmark__V1__MsgLoadTestResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Cosmos__Benchmark__V1__Msg_Service Cosmos__Benchmark__V1__Msg_Service;
struct Cosmos__Benchmark__V1__Msg_Service
{
  ProtobufCService base;
  void (*load_test)(Cosmos__Benchmark__V1__Msg_Service *service,
                    const Cosmos__Benchmark__V1__MsgLoadTest *input,
                    Cosmos__Benchmark__V1__MsgLoadTestResponse_Closure closure,
                    void *closure_data);
};
typedef void (*Cosmos__Benchmark__V1__Msg_ServiceDestroy)(Cosmos__Benchmark__V1__Msg_Service *);
void cosmos__benchmark__v1__msg__init (Cosmos__Benchmark__V1__Msg_Service *service,
                                       Cosmos__Benchmark__V1__Msg_ServiceDestroy destroy);
#define COSMOS__BENCHMARK__V1__MSG__BASE_INIT \
    { &cosmos__benchmark__v1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define COSMOS__BENCHMARK__V1__MSG__INIT(function_prefix__) \
    { COSMOS__BENCHMARK__V1__MSG__BASE_INIT,\
      function_prefix__ ## load_test  }
void cosmos__benchmark__v1__msg__load_test(ProtobufCService *service,
                                           const Cosmos__Benchmark__V1__MsgLoadTest *input,
                                           Cosmos__Benchmark__V1__MsgLoadTestResponse_Closure closure,
                                           void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor cosmos__benchmark__v1__msg_load_test__descriptor;
extern const ProtobufCMessageDescriptor cosmos__benchmark__v1__msg_load_test_response__descriptor;
extern const ProtobufCServiceDescriptor cosmos__benchmark__v1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cosmos_2fbenchmark_2fv1_2ftx_2eproto__INCLUDED */
