/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: packetforward/v1/genesis.proto */

#ifndef PROTOBUF_C_packetforward_2fv1_2fgenesis_2eproto__INCLUDED
#define PROTOBUF_C_packetforward_2fv1_2fgenesis_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "amino/amino.pb-c.h"

typedef struct Packetforward__V1__GenesisState Packetforward__V1__GenesisState;
typedef struct Packetforward__V1__GenesisState__InFlightPacketsEntry Packetforward__V1__GenesisState__InFlightPacketsEntry;
typedef struct Packetforward__V1__InFlightPacket Packetforward__V1__InFlightPacket;


/* --- enums --- */


/* --- messages --- */

struct  Packetforward__V1__GenesisState__InFlightPacketsEntry
{
  ProtobufCMessage base;
  char *key;
  Packetforward__V1__InFlightPacket *value;
};
#define PACKETFORWARD__V1__GENESIS_STATE__IN_FLIGHT_PACKETS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packetforward__v1__genesis_state__in_flight_packets_entry__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * GenesisState defines the packetforward genesis state
 */
struct  Packetforward__V1__GenesisState
{
  ProtobufCMessage base;
  /*
   * key - information about forwarded packet: src_channel
   * (parsedReceiver.Channel), src_port (parsedReceiver.Port), sequence value -
   * information about original packet for refunding if necessary: retries,
   * srcPacketSender, srcPacket.DestinationChannel, srcPacket.DestinationPort
   */
  size_t n_in_flight_packets;
  Packetforward__V1__GenesisState__InFlightPacketsEntry **in_flight_packets;
};
#define PACKETFORWARD__V1__GENESIS_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packetforward__v1__genesis_state__descriptor) \
, 0,NULL }


/*
 * InFlightPacket contains information about original packet for
 * writing the acknowledgement and refunding if necessary.
 */
struct  Packetforward__V1__InFlightPacket
{
  ProtobufCMessage base;
  char *original_sender_address;
  char *refund_channel_id;
  char *refund_port_id;
  char *packet_src_channel_id;
  char *packet_src_port_id;
  uint64_t packet_timeout_timestamp;
  char *packet_timeout_height;
  ProtobufCBinaryData packet_data;
  uint64_t refund_sequence;
  int32_t retries_remaining;
  uint64_t timeout;
  protobuf_c_boolean nonrefundable;
};
#define PACKETFORWARD__V1__IN_FLIGHT_PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&packetforward__v1__in_flight_packet__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, {0,NULL}, 0, 0, 0, 0 }


/* Packetforward__V1__GenesisState__InFlightPacketsEntry methods */
void   packetforward__v1__genesis_state__in_flight_packets_entry__init
                     (Packetforward__V1__GenesisState__InFlightPacketsEntry         *message);
/* Packetforward__V1__GenesisState methods */
void   packetforward__v1__genesis_state__init
                     (Packetforward__V1__GenesisState         *message);
size_t packetforward__v1__genesis_state__get_packed_size
                     (const Packetforward__V1__GenesisState   *message);
size_t packetforward__v1__genesis_state__pack
                     (const Packetforward__V1__GenesisState   *message,
                      uint8_t             *out);
size_t packetforward__v1__genesis_state__pack_to_buffer
                     (const Packetforward__V1__GenesisState   *message,
                      ProtobufCBuffer     *buffer);
Packetforward__V1__GenesisState *
       packetforward__v1__genesis_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   packetforward__v1__genesis_state__free_unpacked
                     (Packetforward__V1__GenesisState *message,
                      ProtobufCAllocator *allocator);
/* Packetforward__V1__InFlightPacket methods */
void   packetforward__v1__in_flight_packet__init
                     (Packetforward__V1__InFlightPacket         *message);
size_t packetforward__v1__in_flight_packet__get_packed_size
                     (const Packetforward__V1__InFlightPacket   *message);
size_t packetforward__v1__in_flight_packet__pack
                     (const Packetforward__V1__InFlightPacket   *message,
                      uint8_t             *out);
size_t packetforward__v1__in_flight_packet__pack_to_buffer
                     (const Packetforward__V1__InFlightPacket   *message,
                      ProtobufCBuffer     *buffer);
Packetforward__V1__InFlightPacket *
       packetforward__v1__in_flight_packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   packetforward__v1__in_flight_packet__free_unpacked
                     (Packetforward__V1__InFlightPacket *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Packetforward__V1__GenesisState__InFlightPacketsEntry_Closure)
                 (const Packetforward__V1__GenesisState__InFlightPacketsEntry *message,
                  void *closure_data);
typedef void (*Packetforward__V1__GenesisState_Closure)
                 (const Packetforward__V1__GenesisState *message,
                  void *closure_data);
typedef void (*Packetforward__V1__InFlightPacket_Closure)
                 (const Packetforward__V1__InFlightPacket *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor packetforward__v1__genesis_state__descriptor;
extern const ProtobufCMessageDescriptor packetforward__v1__genesis_state__in_flight_packets_entry__descriptor;
extern const ProtobufCMessageDescriptor packetforward__v1__in_flight_packet__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_packetforward_2fv1_2fgenesis_2eproto__INCLUDED */
