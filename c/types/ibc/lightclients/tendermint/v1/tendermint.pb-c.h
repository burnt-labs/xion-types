/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/lightclients/tendermint/v1/tendermint.proto */

#ifndef PROTOBUF_C_ibc_2flightclients_2ftendermint_2fv1_2ftendermint_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2flightclients_2ftendermint_2fv1_2ftendermint_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "tendermint/types/validator.pb-c.h"
#include "tendermint/types/types.pb-c.h"
#include "cosmos/ics23/v1/proofs.pb-c.h"
#include "google/protobuf/duration.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "ibc/core/client/v1/client.pb-c.h"
#include "ibc/core/commitment/v1/commitment.pb-c.h"
#include "gogoproto/gogo.pb-c.h"

typedef struct Ibc__Lightclients__Tendermint__V1__ClientState Ibc__Lightclients__Tendermint__V1__ClientState;
typedef struct Ibc__Lightclients__Tendermint__V1__ConsensusState Ibc__Lightclients__Tendermint__V1__ConsensusState;
typedef struct Ibc__Lightclients__Tendermint__V1__Misbehaviour Ibc__Lightclients__Tendermint__V1__Misbehaviour;
typedef struct Ibc__Lightclients__Tendermint__V1__Header Ibc__Lightclients__Tendermint__V1__Header;
typedef struct Ibc__Lightclients__Tendermint__V1__Fraction Ibc__Lightclients__Tendermint__V1__Fraction;


/* --- enums --- */


/* --- messages --- */

/*
 * ClientState from Tendermint tracks the current validator set, latest height,
 * and a possible frozen height.
 */
struct  Ibc__Lightclients__Tendermint__V1__ClientState
{
  ProtobufCMessage base;
  char *chain_id;
  Ibc__Lightclients__Tendermint__V1__Fraction *trust_level;
  /*
   * duration of the period since the LatestTimestamp during which the
   * submitted headers are valid for upgrade
   */
  Google__Protobuf__Duration *trusting_period;
  /*
   * duration of the staking unbonding period
   */
  Google__Protobuf__Duration *unbonding_period;
  /*
   * defines how much new (untrusted) header's Time can drift into the future.
   */
  Google__Protobuf__Duration *max_clock_drift;
  /*
   * Block height when the client was frozen due to a misbehaviour
   */
  Ibc__Core__Client__V1__Height *frozen_height;
  /*
   * Latest height the client was updated to
   */
  Ibc__Core__Client__V1__Height *latest_height;
  /*
   * Proof specifications used in verifying counterparty state
   */
  size_t n_proof_specs;
  Cosmos__Ics23__V1__ProofSpec **proof_specs;
  /*
   * Path at which next upgraded client will be committed.
   * Each element corresponds to the key for a single CommitmentProof in the
   * chained proof. NOTE: ClientState must stored under
   * `{upgradePath}/{upgradeHeight}/clientState` ConsensusState must be stored
   * under `{upgradepath}/{upgradeHeight}/consensusState` For SDK chains using
   * the default upgrade module, upgrade_path should be []string{"upgrade",
   * "upgradedIBCState"}`
   */
  size_t n_upgrade_path;
  char **upgrade_path;
  /*
   * allow_update_after_expiry is deprecated
   */
  protobuf_c_boolean allow_update_after_expiry PROTOBUF_C__DEPRECATED;
  /*
   * allow_update_after_misbehaviour is deprecated
   */
  protobuf_c_boolean allow_update_after_misbehaviour PROTOBUF_C__DEPRECATED;
};
#define IBC__LIGHTCLIENTS__TENDERMINT__V1__CLIENT_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__tendermint__v1__client_state__descriptor) \
, (char *)protobuf_c_empty_string, NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, 0, 0 }


/*
 * ConsensusState defines the consensus state from Tendermint.
 */
struct  Ibc__Lightclients__Tendermint__V1__ConsensusState
{
  ProtobufCMessage base;
  /*
   * timestamp that corresponds to the block height in which the ConsensusState
   * was stored.
   */
  Google__Protobuf__Timestamp *timestamp;
  /*
   * commitment root (i.e app hash)
   */
  Ibc__Core__Commitment__V1__MerkleRoot *root;
  ProtobufCBinaryData next_validators_hash;
};
#define IBC__LIGHTCLIENTS__TENDERMINT__V1__CONSENSUS_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__tendermint__v1__consensus_state__descriptor) \
, NULL, NULL, {0,NULL} }


/*
 * Misbehaviour is a wrapper over two conflicting Headers
 * that implements Misbehaviour interface expected by ICS-02
 */
struct  Ibc__Lightclients__Tendermint__V1__Misbehaviour
{
  ProtobufCMessage base;
  /*
   * ClientID is deprecated
   */
  char *client_id PROTOBUF_C__DEPRECATED;
  Ibc__Lightclients__Tendermint__V1__Header *header_1;
  Ibc__Lightclients__Tendermint__V1__Header *header_2;
};
#define IBC__LIGHTCLIENTS__TENDERMINT__V1__MISBEHAVIOUR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__tendermint__v1__misbehaviour__descriptor) \
, (char *)protobuf_c_empty_string, NULL, NULL }


/*
 * Header defines the Tendermint client consensus Header.
 * It encapsulates all the information necessary to update from a trusted
 * Tendermint ConsensusState. The inclusion of TrustedHeight and
 * TrustedValidators allows this update to process correctly, so long as the
 * ConsensusState for the TrustedHeight exists, this removes race conditions
 * among relayers The SignedHeader and ValidatorSet are the new untrusted update
 * fields for the client. The TrustedHeight is the height of a stored
 * ConsensusState on the client that will be used to verify the new untrusted
 * header. The Trusted ConsensusState must be within the unbonding period of
 * current time in order to correctly verify, and the TrustedValidators must
 * hash to TrustedConsensusState.NextValidatorsHash since that is the last
 * trusted validator set at the TrustedHeight.
 */
struct  Ibc__Lightclients__Tendermint__V1__Header
{
  ProtobufCMessage base;
  Tendermint__Types__SignedHeader *signed_header;
  Tendermint__Types__ValidatorSet *validator_set;
  Ibc__Core__Client__V1__Height *trusted_height;
  Tendermint__Types__ValidatorSet *trusted_validators;
};
#define IBC__LIGHTCLIENTS__TENDERMINT__V1__HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__tendermint__v1__header__descriptor) \
, NULL, NULL, NULL, NULL }


/*
 * Fraction defines the protobuf message type for tmmath.Fraction that only
 * supports positive values.
 */
struct  Ibc__Lightclients__Tendermint__V1__Fraction
{
  ProtobufCMessage base;
  uint64_t numerator;
  uint64_t denominator;
};
#define IBC__LIGHTCLIENTS__TENDERMINT__V1__FRACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__tendermint__v1__fraction__descriptor) \
, 0, 0 }


/* Ibc__Lightclients__Tendermint__V1__ClientState methods */
void   ibc__lightclients__tendermint__v1__client_state__init
                     (Ibc__Lightclients__Tendermint__V1__ClientState         *message);
size_t ibc__lightclients__tendermint__v1__client_state__get_packed_size
                     (const Ibc__Lightclients__Tendermint__V1__ClientState   *message);
size_t ibc__lightclients__tendermint__v1__client_state__pack
                     (const Ibc__Lightclients__Tendermint__V1__ClientState   *message,
                      uint8_t             *out);
size_t ibc__lightclients__tendermint__v1__client_state__pack_to_buffer
                     (const Ibc__Lightclients__Tendermint__V1__ClientState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Tendermint__V1__ClientState *
       ibc__lightclients__tendermint__v1__client_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__tendermint__v1__client_state__free_unpacked
                     (Ibc__Lightclients__Tendermint__V1__ClientState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Tendermint__V1__ConsensusState methods */
void   ibc__lightclients__tendermint__v1__consensus_state__init
                     (Ibc__Lightclients__Tendermint__V1__ConsensusState         *message);
size_t ibc__lightclients__tendermint__v1__consensus_state__get_packed_size
                     (const Ibc__Lightclients__Tendermint__V1__ConsensusState   *message);
size_t ibc__lightclients__tendermint__v1__consensus_state__pack
                     (const Ibc__Lightclients__Tendermint__V1__ConsensusState   *message,
                      uint8_t             *out);
size_t ibc__lightclients__tendermint__v1__consensus_state__pack_to_buffer
                     (const Ibc__Lightclients__Tendermint__V1__ConsensusState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Tendermint__V1__ConsensusState *
       ibc__lightclients__tendermint__v1__consensus_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__tendermint__v1__consensus_state__free_unpacked
                     (Ibc__Lightclients__Tendermint__V1__ConsensusState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Tendermint__V1__Misbehaviour methods */
void   ibc__lightclients__tendermint__v1__misbehaviour__init
                     (Ibc__Lightclients__Tendermint__V1__Misbehaviour         *message);
size_t ibc__lightclients__tendermint__v1__misbehaviour__get_packed_size
                     (const Ibc__Lightclients__Tendermint__V1__Misbehaviour   *message);
size_t ibc__lightclients__tendermint__v1__misbehaviour__pack
                     (const Ibc__Lightclients__Tendermint__V1__Misbehaviour   *message,
                      uint8_t             *out);
size_t ibc__lightclients__tendermint__v1__misbehaviour__pack_to_buffer
                     (const Ibc__Lightclients__Tendermint__V1__Misbehaviour   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Tendermint__V1__Misbehaviour *
       ibc__lightclients__tendermint__v1__misbehaviour__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__tendermint__v1__misbehaviour__free_unpacked
                     (Ibc__Lightclients__Tendermint__V1__Misbehaviour *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Tendermint__V1__Header methods */
void   ibc__lightclients__tendermint__v1__header__init
                     (Ibc__Lightclients__Tendermint__V1__Header         *message);
size_t ibc__lightclients__tendermint__v1__header__get_packed_size
                     (const Ibc__Lightclients__Tendermint__V1__Header   *message);
size_t ibc__lightclients__tendermint__v1__header__pack
                     (const Ibc__Lightclients__Tendermint__V1__Header   *message,
                      uint8_t             *out);
size_t ibc__lightclients__tendermint__v1__header__pack_to_buffer
                     (const Ibc__Lightclients__Tendermint__V1__Header   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Tendermint__V1__Header *
       ibc__lightclients__tendermint__v1__header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__tendermint__v1__header__free_unpacked
                     (Ibc__Lightclients__Tendermint__V1__Header *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Tendermint__V1__Fraction methods */
void   ibc__lightclients__tendermint__v1__fraction__init
                     (Ibc__Lightclients__Tendermint__V1__Fraction         *message);
size_t ibc__lightclients__tendermint__v1__fraction__get_packed_size
                     (const Ibc__Lightclients__Tendermint__V1__Fraction   *message);
size_t ibc__lightclients__tendermint__v1__fraction__pack
                     (const Ibc__Lightclients__Tendermint__V1__Fraction   *message,
                      uint8_t             *out);
size_t ibc__lightclients__tendermint__v1__fraction__pack_to_buffer
                     (const Ibc__Lightclients__Tendermint__V1__Fraction   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Tendermint__V1__Fraction *
       ibc__lightclients__tendermint__v1__fraction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__tendermint__v1__fraction__free_unpacked
                     (Ibc__Lightclients__Tendermint__V1__Fraction *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Lightclients__Tendermint__V1__ClientState_Closure)
                 (const Ibc__Lightclients__Tendermint__V1__ClientState *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Tendermint__V1__ConsensusState_Closure)
                 (const Ibc__Lightclients__Tendermint__V1__ConsensusState *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Tendermint__V1__Misbehaviour_Closure)
                 (const Ibc__Lightclients__Tendermint__V1__Misbehaviour *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Tendermint__V1__Header_Closure)
                 (const Ibc__Lightclients__Tendermint__V1__Header *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Tendermint__V1__Fraction_Closure)
                 (const Ibc__Lightclients__Tendermint__V1__Fraction *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__lightclients__tendermint__v1__client_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__tendermint__v1__consensus_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__tendermint__v1__misbehaviour__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__tendermint__v1__header__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__tendermint__v1__fraction__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2flightclients_2ftendermint_2fv1_2ftendermint_2eproto__INCLUDED */
