/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/lightclients/wasm/v1/wasm.proto */

#ifndef PROTOBUF_C_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "ibc/core/client/v1/client.pb-c.h"

typedef struct Ibc__Lightclients__Wasm__V1__ClientState Ibc__Lightclients__Wasm__V1__ClientState;
typedef struct Ibc__Lightclients__Wasm__V1__ConsensusState Ibc__Lightclients__Wasm__V1__ConsensusState;
typedef struct Ibc__Lightclients__Wasm__V1__ClientMessage Ibc__Lightclients__Wasm__V1__ClientMessage;
typedef struct Ibc__Lightclients__Wasm__V1__Checksums Ibc__Lightclients__Wasm__V1__Checksums;


/* --- enums --- */


/* --- messages --- */

/*
 * Wasm light client's Client state
 */
struct  Ibc__Lightclients__Wasm__V1__ClientState
{
  ProtobufCMessage base;
  /*
   * bytes encoding the client state of the underlying light client
   * implemented as a Wasm contract.
   */
  ProtobufCBinaryData data;
  ProtobufCBinaryData checksum;
  Ibc__Core__Client__V1__Height *latest_height;
};
#define IBC__LIGHTCLIENTS__WASM__V1__CLIENT_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__wasm__v1__client_state__descriptor) \
, {0,NULL}, {0,NULL}, NULL }


/*
 * Wasm light client's ConsensusState
 */
struct  Ibc__Lightclients__Wasm__V1__ConsensusState
{
  ProtobufCMessage base;
  /*
   * bytes encoding the consensus state of the underlying light client
   * implemented as a Wasm contract.
   */
  ProtobufCBinaryData data;
};
#define IBC__LIGHTCLIENTS__WASM__V1__CONSENSUS_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__wasm__v1__consensus_state__descriptor) \
, {0,NULL} }


/*
 * Wasm light client message (either header(s) or misbehaviour)
 */
struct  Ibc__Lightclients__Wasm__V1__ClientMessage
{
  ProtobufCMessage base;
  ProtobufCBinaryData data;
};
#define IBC__LIGHTCLIENTS__WASM__V1__CLIENT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__wasm__v1__client_message__descriptor) \
, {0,NULL} }


/*
 * Checksums defines a list of all checksums that are stored
 * Deprecated: This message is deprecated in favor of storing the checksums
 * using a Collections.KeySet.
 */
struct  Ibc__Lightclients__Wasm__V1__Checksums
{
  ProtobufCMessage base;
  size_t n_checksums;
  ProtobufCBinaryData *checksums;
};
#define IBC__LIGHTCLIENTS__WASM__V1__CHECKSUMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__lightclients__wasm__v1__checksums__descriptor) \
, 0,NULL }


/* Ibc__Lightclients__Wasm__V1__ClientState methods */
void   ibc__lightclients__wasm__v1__client_state__init
                     (Ibc__Lightclients__Wasm__V1__ClientState         *message);
size_t ibc__lightclients__wasm__v1__client_state__get_packed_size
                     (const Ibc__Lightclients__Wasm__V1__ClientState   *message);
size_t ibc__lightclients__wasm__v1__client_state__pack
                     (const Ibc__Lightclients__Wasm__V1__ClientState   *message,
                      uint8_t             *out);
size_t ibc__lightclients__wasm__v1__client_state__pack_to_buffer
                     (const Ibc__Lightclients__Wasm__V1__ClientState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Wasm__V1__ClientState *
       ibc__lightclients__wasm__v1__client_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__wasm__v1__client_state__free_unpacked
                     (Ibc__Lightclients__Wasm__V1__ClientState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Wasm__V1__ConsensusState methods */
void   ibc__lightclients__wasm__v1__consensus_state__init
                     (Ibc__Lightclients__Wasm__V1__ConsensusState         *message);
size_t ibc__lightclients__wasm__v1__consensus_state__get_packed_size
                     (const Ibc__Lightclients__Wasm__V1__ConsensusState   *message);
size_t ibc__lightclients__wasm__v1__consensus_state__pack
                     (const Ibc__Lightclients__Wasm__V1__ConsensusState   *message,
                      uint8_t             *out);
size_t ibc__lightclients__wasm__v1__consensus_state__pack_to_buffer
                     (const Ibc__Lightclients__Wasm__V1__ConsensusState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Wasm__V1__ConsensusState *
       ibc__lightclients__wasm__v1__consensus_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__wasm__v1__consensus_state__free_unpacked
                     (Ibc__Lightclients__Wasm__V1__ConsensusState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Wasm__V1__ClientMessage methods */
void   ibc__lightclients__wasm__v1__client_message__init
                     (Ibc__Lightclients__Wasm__V1__ClientMessage         *message);
size_t ibc__lightclients__wasm__v1__client_message__get_packed_size
                     (const Ibc__Lightclients__Wasm__V1__ClientMessage   *message);
size_t ibc__lightclients__wasm__v1__client_message__pack
                     (const Ibc__Lightclients__Wasm__V1__ClientMessage   *message,
                      uint8_t             *out);
size_t ibc__lightclients__wasm__v1__client_message__pack_to_buffer
                     (const Ibc__Lightclients__Wasm__V1__ClientMessage   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Wasm__V1__ClientMessage *
       ibc__lightclients__wasm__v1__client_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__wasm__v1__client_message__free_unpacked
                     (Ibc__Lightclients__Wasm__V1__ClientMessage *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Lightclients__Wasm__V1__Checksums methods */
void   ibc__lightclients__wasm__v1__checksums__init
                     (Ibc__Lightclients__Wasm__V1__Checksums         *message);
size_t ibc__lightclients__wasm__v1__checksums__get_packed_size
                     (const Ibc__Lightclients__Wasm__V1__Checksums   *message);
size_t ibc__lightclients__wasm__v1__checksums__pack
                     (const Ibc__Lightclients__Wasm__V1__Checksums   *message,
                      uint8_t             *out);
size_t ibc__lightclients__wasm__v1__checksums__pack_to_buffer
                     (const Ibc__Lightclients__Wasm__V1__Checksums   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Lightclients__Wasm__V1__Checksums *
       ibc__lightclients__wasm__v1__checksums__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__lightclients__wasm__v1__checksums__free_unpacked
                     (Ibc__Lightclients__Wasm__V1__Checksums *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Lightclients__Wasm__V1__ClientState_Closure)
                 (const Ibc__Lightclients__Wasm__V1__ClientState *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Wasm__V1__ConsensusState_Closure)
                 (const Ibc__Lightclients__Wasm__V1__ConsensusState *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Wasm__V1__ClientMessage_Closure)
                 (const Ibc__Lightclients__Wasm__V1__ClientMessage *message,
                  void *closure_data);
typedef void (*Ibc__Lightclients__Wasm__V1__Checksums_Closure)
                 (const Ibc__Lightclients__Wasm__V1__Checksums *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__lightclients__wasm__v1__client_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__wasm__v1__consensus_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__wasm__v1__client_message__descriptor;
extern const ProtobufCMessageDescriptor ibc__lightclients__wasm__v1__checksums__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto__INCLUDED */
