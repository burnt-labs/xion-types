/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/connection/v1/tx.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "ibc/core/client/v1/client.pb-c.h"
#include "ibc/core/connection/v1/connection.pb-c.h"

typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenInit Ibc__Core__Connection__V1__MsgConnectionOpenInit;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenTry Ibc__Core__Connection__V1__MsgConnectionOpenTry;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenAck Ibc__Core__Connection__V1__MsgConnectionOpenAck;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenConfirm Ibc__Core__Connection__V1__MsgConnectionOpenConfirm;
typedef struct Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse;
typedef struct Ibc__Core__Connection__V1__MsgUpdateParams Ibc__Core__Connection__V1__MsgUpdateParams;
typedef struct Ibc__Core__Connection__V1__MsgUpdateParamsResponse Ibc__Core__Connection__V1__MsgUpdateParamsResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * MsgConnectionOpenInit defines the msg sent by an account on Chain A to
 * initialize a connection with Chain B.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenInit
{
  ProtobufCMessage base;
  char *client_id;
  Ibc__Core__Connection__V1__Counterparty *counterparty;
  Ibc__Core__Connection__V1__Version *version;
  uint64_t delay_period;
  char *signer;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_INIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_init__descriptor) \
, (char *)protobuf_c_empty_string, NULL, NULL, 0, (char *)protobuf_c_empty_string }


/*
 * MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
 * type.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse
{
  ProtobufCMessage base;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_INIT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_init_response__descriptor) \
 }


/*
 * MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
 * connection on Chain B.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenTry
{
  ProtobufCMessage base;
  char *client_id;
  /*
   * Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC.
   */
  char *previous_connection_id PROTOBUF_C__DEPRECATED;
  /*
   * Deprecated: this field is unused.
   */
  Google__Protobuf__Any *client_state PROTOBUF_C__DEPRECATED;
  Ibc__Core__Connection__V1__Counterparty *counterparty;
  uint64_t delay_period;
  size_t n_counterparty_versions;
  Ibc__Core__Connection__V1__Version **counterparty_versions;
  Ibc__Core__Client__V1__Height *proof_height;
  /*
   * proof of the initialization the connection on Chain A: `UNINITIALIZED ->
   * INIT`
   */
  ProtobufCBinaryData proof_init;
  /*
   * Deprecated: this field is unused.
   */
  ProtobufCBinaryData proof_client PROTOBUF_C__DEPRECATED;
  /*
   * Deprecated: this field is unused.
   */
  ProtobufCBinaryData proof_consensus PROTOBUF_C__DEPRECATED;
  /*
   * Deprecated: this field is unused.
   */
  Ibc__Core__Client__V1__Height *consensus_height PROTOBUF_C__DEPRECATED;
  char *signer;
  /*
   * Deprecated: this field is unused.
   */
  ProtobufCBinaryData host_consensus_state_proof PROTOBUF_C__DEPRECATED;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_TRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_try__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, 0, 0,NULL, NULL, {0,NULL}, {0,NULL}, {0,NULL}, NULL, (char *)protobuf_c_empty_string, {0,NULL} }


/*
 * MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse
{
  ProtobufCMessage base;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_TRY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_try_response__descriptor) \
 }


/*
 * MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
 * acknowledge the change of connection state to TRYOPEN on Chain B.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenAck
{
  ProtobufCMessage base;
  char *connection_id;
  char *counterparty_connection_id;
  Ibc__Core__Connection__V1__Version *version;
  /*
   * Deprecated: this field is unused.
   */
  Google__Protobuf__Any *client_state PROTOBUF_C__DEPRECATED;
  Ibc__Core__Client__V1__Height *proof_height;
  /*
   * proof of the initialization the connection on Chain B: `UNINITIALIZED ->
   * TRYOPEN`
   */
  ProtobufCBinaryData proof_try;
  /*
   * Deprecated: this field is unused.
   */
  ProtobufCBinaryData proof_client PROTOBUF_C__DEPRECATED;
  /*
   * Deprecated: this field is unused.
   */
  ProtobufCBinaryData proof_consensus PROTOBUF_C__DEPRECATED;
  /*
   * Deprecated: this field is unused.
   */
  Ibc__Core__Client__V1__Height *consensus_height PROTOBUF_C__DEPRECATED;
  char *signer;
  /*
   * Deprecated: this field is unused.
   */
  ProtobufCBinaryData host_consensus_state_proof PROTOBUF_C__DEPRECATED;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_ACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_ack__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, NULL, {0,NULL}, {0,NULL}, {0,NULL}, NULL, (char *)protobuf_c_empty_string, {0,NULL} }


/*
 * MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse
{
  ProtobufCMessage base;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_ACK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_ack_response__descriptor) \
 }


/*
 * MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
 * acknowledge the change of connection state to OPEN on Chain A.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenConfirm
{
  ProtobufCMessage base;
  char *connection_id;
  /*
   * proof for the change of the connection state on Chain A: `INIT -> OPEN`
   */
  ProtobufCBinaryData proof_ack;
  Ibc__Core__Client__V1__Height *proof_height;
  char *signer;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_CONFIRM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_confirm__descriptor) \
, (char *)protobuf_c_empty_string, {0,NULL}, NULL, (char *)protobuf_c_empty_string }


/*
 * MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
 * response type.
 */
struct  Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse
{
  ProtobufCMessage base;
};
#define IBC__CORE__CONNECTION__V1__MSG_CONNECTION_OPEN_CONFIRM_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_connection_open_confirm_response__descriptor) \
 }


/*
 * MsgUpdateParams defines the sdk.Msg type to update the connection parameters.
 */
struct  Ibc__Core__Connection__V1__MsgUpdateParams
{
  ProtobufCMessage base;
  /*
   * signer address
   */
  char *signer;
  /*
   * params defines the connection parameters to update.
   * NOTE: All parameters must be supplied.
   */
  Ibc__Core__Connection__V1__Params *params;
};
#define IBC__CORE__CONNECTION__V1__MSG_UPDATE_PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_update_params__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * MsgUpdateParamsResponse defines the MsgUpdateParams response type.
 */
struct  Ibc__Core__Connection__V1__MsgUpdateParamsResponse
{
  ProtobufCMessage base;
};
#define IBC__CORE__CONNECTION__V1__MSG_UPDATE_PARAMS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__connection__v1__msg_update_params_response__descriptor) \
 }


/* Ibc__Core__Connection__V1__MsgConnectionOpenInit methods */
void   ibc__core__connection__v1__msg_connection_open_init__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenInit         *message);
size_t ibc__core__connection__v1__msg_connection_open_init__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenInit   *message);
size_t ibc__core__connection__v1__msg_connection_open_init__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenInit   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_init__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenInit   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenInit *
       ibc__core__connection__v1__msg_connection_open_init__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_init__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenInit *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse methods */
void   ibc__core__connection__v1__msg_connection_open_init_response__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse         *message);
size_t ibc__core__connection__v1__msg_connection_open_init_response__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse   *message);
size_t ibc__core__connection__v1__msg_connection_open_init_response__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_init_response__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse *
       ibc__core__connection__v1__msg_connection_open_init_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_init_response__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenTry methods */
void   ibc__core__connection__v1__msg_connection_open_try__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenTry         *message);
size_t ibc__core__connection__v1__msg_connection_open_try__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenTry   *message);
size_t ibc__core__connection__v1__msg_connection_open_try__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenTry   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_try__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenTry   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenTry *
       ibc__core__connection__v1__msg_connection_open_try__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_try__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenTry *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse methods */
void   ibc__core__connection__v1__msg_connection_open_try_response__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse         *message);
size_t ibc__core__connection__v1__msg_connection_open_try_response__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse   *message);
size_t ibc__core__connection__v1__msg_connection_open_try_response__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_try_response__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse *
       ibc__core__connection__v1__msg_connection_open_try_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_try_response__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenAck methods */
void   ibc__core__connection__v1__msg_connection_open_ack__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenAck         *message);
size_t ibc__core__connection__v1__msg_connection_open_ack__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenAck   *message);
size_t ibc__core__connection__v1__msg_connection_open_ack__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenAck   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_ack__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenAck   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenAck *
       ibc__core__connection__v1__msg_connection_open_ack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_ack__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenAck *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse methods */
void   ibc__core__connection__v1__msg_connection_open_ack_response__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse         *message);
size_t ibc__core__connection__v1__msg_connection_open_ack_response__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse   *message);
size_t ibc__core__connection__v1__msg_connection_open_ack_response__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_ack_response__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse *
       ibc__core__connection__v1__msg_connection_open_ack_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_ack_response__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenConfirm methods */
void   ibc__core__connection__v1__msg_connection_open_confirm__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenConfirm         *message);
size_t ibc__core__connection__v1__msg_connection_open_confirm__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirm   *message);
size_t ibc__core__connection__v1__msg_connection_open_confirm__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirm   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_confirm__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirm   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenConfirm *
       ibc__core__connection__v1__msg_connection_open_confirm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_confirm__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenConfirm *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse methods */
void   ibc__core__connection__v1__msg_connection_open_confirm_response__init
                     (Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse         *message);
size_t ibc__core__connection__v1__msg_connection_open_confirm_response__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse   *message);
size_t ibc__core__connection__v1__msg_connection_open_confirm_response__pack
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_connection_open_confirm_response__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse *
       ibc__core__connection__v1__msg_connection_open_confirm_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_connection_open_confirm_response__free_unpacked
                     (Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgUpdateParams methods */
void   ibc__core__connection__v1__msg_update_params__init
                     (Ibc__Core__Connection__V1__MsgUpdateParams         *message);
size_t ibc__core__connection__v1__msg_update_params__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgUpdateParams   *message);
size_t ibc__core__connection__v1__msg_update_params__pack
                     (const Ibc__Core__Connection__V1__MsgUpdateParams   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_update_params__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgUpdateParams   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgUpdateParams *
       ibc__core__connection__v1__msg_update_params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_update_params__free_unpacked
                     (Ibc__Core__Connection__V1__MsgUpdateParams *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Connection__V1__MsgUpdateParamsResponse methods */
void   ibc__core__connection__v1__msg_update_params_response__init
                     (Ibc__Core__Connection__V1__MsgUpdateParamsResponse         *message);
size_t ibc__core__connection__v1__msg_update_params_response__get_packed_size
                     (const Ibc__Core__Connection__V1__MsgUpdateParamsResponse   *message);
size_t ibc__core__connection__v1__msg_update_params_response__pack
                     (const Ibc__Core__Connection__V1__MsgUpdateParamsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__connection__v1__msg_update_params_response__pack_to_buffer
                     (const Ibc__Core__Connection__V1__MsgUpdateParamsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Connection__V1__MsgUpdateParamsResponse *
       ibc__core__connection__v1__msg_update_params_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__connection__v1__msg_update_params_response__free_unpacked
                     (Ibc__Core__Connection__V1__MsgUpdateParamsResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenInit_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenInit *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenTry_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenTry *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenAck_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenAck *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenConfirm_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirm *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse_Closure)
                 (const Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgUpdateParams_Closure)
                 (const Ibc__Core__Connection__V1__MsgUpdateParams *message,
                  void *closure_data);
typedef void (*Ibc__Core__Connection__V1__MsgUpdateParamsResponse_Closure)
                 (const Ibc__Core__Connection__V1__MsgUpdateParamsResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Ibc__Core__Connection__V1__Msg_Service Ibc__Core__Connection__V1__Msg_Service;
struct Ibc__Core__Connection__V1__Msg_Service
{
  ProtobufCService base;
  void (*connection_open_init)(Ibc__Core__Connection__V1__Msg_Service *service,
                               const Ibc__Core__Connection__V1__MsgConnectionOpenInit *input,
                               Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse_Closure closure,
                               void *closure_data);
  void (*connection_open_try)(Ibc__Core__Connection__V1__Msg_Service *service,
                              const Ibc__Core__Connection__V1__MsgConnectionOpenTry *input,
                              Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse_Closure closure,
                              void *closure_data);
  void (*connection_open_ack)(Ibc__Core__Connection__V1__Msg_Service *service,
                              const Ibc__Core__Connection__V1__MsgConnectionOpenAck *input,
                              Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse_Closure closure,
                              void *closure_data);
  void (*connection_open_confirm)(Ibc__Core__Connection__V1__Msg_Service *service,
                                  const Ibc__Core__Connection__V1__MsgConnectionOpenConfirm *input,
                                  Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse_Closure closure,
                                  void *closure_data);
  void (*update_connection_params)(Ibc__Core__Connection__V1__Msg_Service *service,
                                   const Ibc__Core__Connection__V1__MsgUpdateParams *input,
                                   Ibc__Core__Connection__V1__MsgUpdateParamsResponse_Closure closure,
                                   void *closure_data);
};
typedef void (*Ibc__Core__Connection__V1__Msg_ServiceDestroy)(Ibc__Core__Connection__V1__Msg_Service *);
void ibc__core__connection__v1__msg__init (Ibc__Core__Connection__V1__Msg_Service *service,
                                           Ibc__Core__Connection__V1__Msg_ServiceDestroy destroy);
#define IBC__CORE__CONNECTION__V1__MSG__BASE_INIT \
    { &ibc__core__connection__v1__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define IBC__CORE__CONNECTION__V1__MSG__INIT(function_prefix__) \
    { IBC__CORE__CONNECTION__V1__MSG__BASE_INIT,\
      function_prefix__ ## connection_open_init,\
      function_prefix__ ## connection_open_try,\
      function_prefix__ ## connection_open_ack,\
      function_prefix__ ## connection_open_confirm,\
      function_prefix__ ## update_connection_params  }
void ibc__core__connection__v1__msg__connection_open_init(ProtobufCService *service,
                                                          const Ibc__Core__Connection__V1__MsgConnectionOpenInit *input,
                                                          Ibc__Core__Connection__V1__MsgConnectionOpenInitResponse_Closure closure,
                                                          void *closure_data);
void ibc__core__connection__v1__msg__connection_open_try(ProtobufCService *service,
                                                         const Ibc__Core__Connection__V1__MsgConnectionOpenTry *input,
                                                         Ibc__Core__Connection__V1__MsgConnectionOpenTryResponse_Closure closure,
                                                         void *closure_data);
void ibc__core__connection__v1__msg__connection_open_ack(ProtobufCService *service,
                                                         const Ibc__Core__Connection__V1__MsgConnectionOpenAck *input,
                                                         Ibc__Core__Connection__V1__MsgConnectionOpenAckResponse_Closure closure,
                                                         void *closure_data);
void ibc__core__connection__v1__msg__connection_open_confirm(ProtobufCService *service,
                                                             const Ibc__Core__Connection__V1__MsgConnectionOpenConfirm *input,
                                                             Ibc__Core__Connection__V1__MsgConnectionOpenConfirmResponse_Closure closure,
                                                             void *closure_data);
void ibc__core__connection__v1__msg__update_connection_params(ProtobufCService *service,
                                                              const Ibc__Core__Connection__V1__MsgUpdateParams *input,
                                                              Ibc__Core__Connection__V1__MsgUpdateParamsResponse_Closure closure,
                                                              void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_init__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_init_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_try__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_try_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_ack__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_ack_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_confirm__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_connection_open_confirm_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_update_params__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__connection__v1__msg_update_params_response__descriptor;
extern const ProtobufCServiceDescriptor ibc__core__connection__v1__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto__INCLUDED */
