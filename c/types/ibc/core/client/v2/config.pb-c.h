/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/client/v2/config.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fclient_2fv2_2fconfig_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fclient_2fv2_2fconfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Ibc__Core__Client__V2__Config Ibc__Core__Client__V2__Config;


/* --- enums --- */


/* --- messages --- */

/*
 * Config is a **per-client** configuration struct that sets which relayers are allowed to relay v2 IBC messages
 * for a given client.
 * If it is set, then only relayers in the allow list can send v2 messages
 * If it is not set, then the client allows permissionless relaying of v2 messages
 */
struct  Ibc__Core__Client__V2__Config
{
  ProtobufCMessage base;
  /*
   * allowed_relayers defines the set of allowed relayers for IBC V2 protocol for the given client
   */
  size_t n_allowed_relayers;
  char **allowed_relayers;
};
#define IBC__CORE__CLIENT__V2__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__client__v2__config__descriptor) \
, 0,NULL }


/* Ibc__Core__Client__V2__Config methods */
void   ibc__core__client__v2__config__init
                     (Ibc__Core__Client__V2__Config         *message);
size_t ibc__core__client__v2__config__get_packed_size
                     (const Ibc__Core__Client__V2__Config   *message);
size_t ibc__core__client__v2__config__pack
                     (const Ibc__Core__Client__V2__Config   *message,
                      uint8_t             *out);
size_t ibc__core__client__v2__config__pack_to_buffer
                     (const Ibc__Core__Client__V2__Config   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Client__V2__Config *
       ibc__core__client__v2__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__client__v2__config__free_unpacked
                     (Ibc__Core__Client__V2__Config *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Client__V2__Config_Closure)
                 (const Ibc__Core__Client__V2__Config *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__core__client__v2__config__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fclient_2fv2_2fconfig_2eproto__INCLUDED */
