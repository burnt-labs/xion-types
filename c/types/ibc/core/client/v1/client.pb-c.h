/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/client/v1/client.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fclient_2fv1_2fclient_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fclient_2fv1_2fclient_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "google/protobuf/any.pb-c.h"

typedef struct Ibc__Core__Client__V1__IdentifiedClientState Ibc__Core__Client__V1__IdentifiedClientState;
typedef struct Ibc__Core__Client__V1__ConsensusStateWithHeight Ibc__Core__Client__V1__ConsensusStateWithHeight;
typedef struct Ibc__Core__Client__V1__ClientConsensusStates Ibc__Core__Client__V1__ClientConsensusStates;
typedef struct Ibc__Core__Client__V1__Height Ibc__Core__Client__V1__Height;
typedef struct Ibc__Core__Client__V1__Params Ibc__Core__Client__V1__Params;


/* --- enums --- */


/* --- messages --- */

/*
 * IdentifiedClientState defines a client state with an additional client
 * identifier field.
 */
struct  Ibc__Core__Client__V1__IdentifiedClientState
{
  ProtobufCMessage base;
  /*
   * client identifier
   */
  char *client_id;
  /*
   * client state
   */
  Google__Protobuf__Any *client_state;
};
#define IBC__CORE__CLIENT__V1__IDENTIFIED_CLIENT_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__client__v1__identified_client_state__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * ConsensusStateWithHeight defines a consensus state with an additional height
 * field.
 */
struct  Ibc__Core__Client__V1__ConsensusStateWithHeight
{
  ProtobufCMessage base;
  /*
   * consensus state height
   */
  Ibc__Core__Client__V1__Height *height;
  /*
   * consensus state
   */
  Google__Protobuf__Any *consensus_state;
};
#define IBC__CORE__CLIENT__V1__CONSENSUS_STATE_WITH_HEIGHT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__client__v1__consensus_state_with_height__descriptor) \
, NULL, NULL }


/*
 * ClientConsensusStates defines all the stored consensus states for a given
 * client.
 */
struct  Ibc__Core__Client__V1__ClientConsensusStates
{
  ProtobufCMessage base;
  /*
   * client identifier
   */
  char *client_id;
  /*
   * consensus states and their heights associated with the client
   */
  size_t n_consensus_states;
  Ibc__Core__Client__V1__ConsensusStateWithHeight **consensus_states;
};
#define IBC__CORE__CLIENT__V1__CLIENT_CONSENSUS_STATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__client__v1__client_consensus_states__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * Height is a monotonically increasing data type
 * that can be compared against another Height for the purposes of updating and
 * freezing clients
 * Normally the RevisionHeight is incremented at each height while keeping
 * RevisionNumber the same. However some consensus algorithms may choose to
 * reset the height in certain conditions e.g. hard forks, state-machine
 * breaking changes In these cases, the RevisionNumber is incremented so that
 * height continues to be monitonically increasing even as the RevisionHeight
 * gets reset
 * Please note that json tags for generated Go code are overridden to explicitly exclude the omitempty jsontag.
 * This enforces the Go json marshaller to always emit zero values for both revision_number and revision_height.
 */
struct  Ibc__Core__Client__V1__Height
{
  ProtobufCMessage base;
  /*
   * the revision that the client is currently on
   */
  uint64_t revision_number;
  /*
   * the height within the given revision
   */
  uint64_t revision_height;
};
#define IBC__CORE__CLIENT__V1__HEIGHT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__client__v1__height__descriptor) \
, 0, 0 }


/*
 * Params defines the set of IBC light client parameters.
 */
struct  Ibc__Core__Client__V1__Params
{
  ProtobufCMessage base;
  /*
   * allowed_clients defines the list of allowed client state types which can be created
   * and interacted with. If a client type is removed from the allowed clients list, usage
   * of this client will be disabled until it is added again to the list.
   */
  size_t n_allowed_clients;
  char **allowed_clients;
};
#define IBC__CORE__CLIENT__V1__PARAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__client__v1__params__descriptor) \
, 0,NULL }


/* Ibc__Core__Client__V1__IdentifiedClientState methods */
void   ibc__core__client__v1__identified_client_state__init
                     (Ibc__Core__Client__V1__IdentifiedClientState         *message);
size_t ibc__core__client__v1__identified_client_state__get_packed_size
                     (const Ibc__Core__Client__V1__IdentifiedClientState   *message);
size_t ibc__core__client__v1__identified_client_state__pack
                     (const Ibc__Core__Client__V1__IdentifiedClientState   *message,
                      uint8_t             *out);
size_t ibc__core__client__v1__identified_client_state__pack_to_buffer
                     (const Ibc__Core__Client__V1__IdentifiedClientState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Client__V1__IdentifiedClientState *
       ibc__core__client__v1__identified_client_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__client__v1__identified_client_state__free_unpacked
                     (Ibc__Core__Client__V1__IdentifiedClientState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Client__V1__ConsensusStateWithHeight methods */
void   ibc__core__client__v1__consensus_state_with_height__init
                     (Ibc__Core__Client__V1__ConsensusStateWithHeight         *message);
size_t ibc__core__client__v1__consensus_state_with_height__get_packed_size
                     (const Ibc__Core__Client__V1__ConsensusStateWithHeight   *message);
size_t ibc__core__client__v1__consensus_state_with_height__pack
                     (const Ibc__Core__Client__V1__ConsensusStateWithHeight   *message,
                      uint8_t             *out);
size_t ibc__core__client__v1__consensus_state_with_height__pack_to_buffer
                     (const Ibc__Core__Client__V1__ConsensusStateWithHeight   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Client__V1__ConsensusStateWithHeight *
       ibc__core__client__v1__consensus_state_with_height__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__client__v1__consensus_state_with_height__free_unpacked
                     (Ibc__Core__Client__V1__ConsensusStateWithHeight *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Client__V1__ClientConsensusStates methods */
void   ibc__core__client__v1__client_consensus_states__init
                     (Ibc__Core__Client__V1__ClientConsensusStates         *message);
size_t ibc__core__client__v1__client_consensus_states__get_packed_size
                     (const Ibc__Core__Client__V1__ClientConsensusStates   *message);
size_t ibc__core__client__v1__client_consensus_states__pack
                     (const Ibc__Core__Client__V1__ClientConsensusStates   *message,
                      uint8_t             *out);
size_t ibc__core__client__v1__client_consensus_states__pack_to_buffer
                     (const Ibc__Core__Client__V1__ClientConsensusStates   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Client__V1__ClientConsensusStates *
       ibc__core__client__v1__client_consensus_states__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__client__v1__client_consensus_states__free_unpacked
                     (Ibc__Core__Client__V1__ClientConsensusStates *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Client__V1__Height methods */
void   ibc__core__client__v1__height__init
                     (Ibc__Core__Client__V1__Height         *message);
size_t ibc__core__client__v1__height__get_packed_size
                     (const Ibc__Core__Client__V1__Height   *message);
size_t ibc__core__client__v1__height__pack
                     (const Ibc__Core__Client__V1__Height   *message,
                      uint8_t             *out);
size_t ibc__core__client__v1__height__pack_to_buffer
                     (const Ibc__Core__Client__V1__Height   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Client__V1__Height *
       ibc__core__client__v1__height__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__client__v1__height__free_unpacked
                     (Ibc__Core__Client__V1__Height *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Client__V1__Params methods */
void   ibc__core__client__v1__params__init
                     (Ibc__Core__Client__V1__Params         *message);
size_t ibc__core__client__v1__params__get_packed_size
                     (const Ibc__Core__Client__V1__Params   *message);
size_t ibc__core__client__v1__params__pack
                     (const Ibc__Core__Client__V1__Params   *message,
                      uint8_t             *out);
size_t ibc__core__client__v1__params__pack_to_buffer
                     (const Ibc__Core__Client__V1__Params   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Client__V1__Params *
       ibc__core__client__v1__params__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__client__v1__params__free_unpacked
                     (Ibc__Core__Client__V1__Params *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Client__V1__IdentifiedClientState_Closure)
                 (const Ibc__Core__Client__V1__IdentifiedClientState *message,
                  void *closure_data);
typedef void (*Ibc__Core__Client__V1__ConsensusStateWithHeight_Closure)
                 (const Ibc__Core__Client__V1__ConsensusStateWithHeight *message,
                  void *closure_data);
typedef void (*Ibc__Core__Client__V1__ClientConsensusStates_Closure)
                 (const Ibc__Core__Client__V1__ClientConsensusStates *message,
                  void *closure_data);
typedef void (*Ibc__Core__Client__V1__Height_Closure)
                 (const Ibc__Core__Client__V1__Height *message,
                  void *closure_data);
typedef void (*Ibc__Core__Client__V1__Params_Closure)
                 (const Ibc__Core__Client__V1__Params *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__core__client__v1__identified_client_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__client__v1__consensus_state_with_height__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__client__v1__client_consensus_states__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__client__v1__height__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__client__v1__params__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fclient_2fv1_2fclient_2eproto__INCLUDED */
