/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/channel/v2/tx.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2ftx_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2ftx_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"
#include "cosmos/msg/v1/msg.pb-c.h"
#include "ibc/core/channel/v2/packet.pb-c.h"
#include "ibc/core/client/v1/client.pb-c.h"

typedef struct Ibc__Core__Channel__V2__MsgSendPacket Ibc__Core__Channel__V2__MsgSendPacket;
typedef struct Ibc__Core__Channel__V2__MsgSendPacketResponse Ibc__Core__Channel__V2__MsgSendPacketResponse;
typedef struct Ibc__Core__Channel__V2__MsgRecvPacket Ibc__Core__Channel__V2__MsgRecvPacket;
typedef struct Ibc__Core__Channel__V2__MsgRecvPacketResponse Ibc__Core__Channel__V2__MsgRecvPacketResponse;
typedef struct Ibc__Core__Channel__V2__MsgTimeout Ibc__Core__Channel__V2__MsgTimeout;
typedef struct Ibc__Core__Channel__V2__MsgTimeoutResponse Ibc__Core__Channel__V2__MsgTimeoutResponse;
typedef struct Ibc__Core__Channel__V2__MsgAcknowledgement Ibc__Core__Channel__V2__MsgAcknowledgement;
typedef struct Ibc__Core__Channel__V2__MsgAcknowledgementResponse Ibc__Core__Channel__V2__MsgAcknowledgementResponse;


/* --- enums --- */

/*
 * ResponseResultType defines the possible outcomes of the execution of a message
 */
typedef enum _Ibc__Core__Channel__V2__ResponseResultType {
  /*
   * Default zero value enumeration
   */
  IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_UNSPECIFIED = 0,
  /*
   * The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
   */
  IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_NOOP = 1,
  /*
   * The message was executed successfully
   */
  IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_SUCCESS = 2,
  /*
   * The message was executed unsuccessfully
   */
  IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_FAILURE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE)
} Ibc__Core__Channel__V2__ResponseResultType;

/* --- messages --- */

/*
 * MsgSendPacket sends an outgoing IBC packet.
 */
struct  Ibc__Core__Channel__V2__MsgSendPacket
{
  ProtobufCMessage base;
  char *source_client;
  uint64_t timeout_timestamp;
  size_t n_payloads;
  Ibc__Core__Channel__V2__Payload **payloads;
  char *signer;
};
#define IBC__CORE__CHANNEL__V2__MSG_SEND_PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_send_packet__descriptor) \
, (char *)protobuf_c_empty_string, 0, 0,NULL, (char *)protobuf_c_empty_string }


/*
 * MsgSendPacketResponse defines the Msg/SendPacket response type.
 */
struct  Ibc__Core__Channel__V2__MsgSendPacketResponse
{
  ProtobufCMessage base;
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V2__MSG_SEND_PACKET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_send_packet_response__descriptor) \
, 0 }


/*
 * MsgRecvPacket receives an incoming IBC packet.
 */
struct  Ibc__Core__Channel__V2__MsgRecvPacket
{
  ProtobufCMessage base;
  Ibc__Core__Channel__V2__Packet *packet;
  ProtobufCBinaryData proof_commitment;
  Ibc__Core__Client__V1__Height *proof_height;
  char *signer;
};
#define IBC__CORE__CHANNEL__V2__MSG_RECV_PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_recv_packet__descriptor) \
, NULL, {0,NULL}, NULL, (char *)protobuf_c_empty_string }


/*
 * MsgRecvPacketResponse defines the Msg/RecvPacket response type.
 */
struct  Ibc__Core__Channel__V2__MsgRecvPacketResponse
{
  ProtobufCMessage base;
  Ibc__Core__Channel__V2__ResponseResultType result;
};
#define IBC__CORE__CHANNEL__V2__MSG_RECV_PACKET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_recv_packet_response__descriptor) \
, IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_UNSPECIFIED }


/*
 * MsgTimeout receives timed-out packet
 */
struct  Ibc__Core__Channel__V2__MsgTimeout
{
  ProtobufCMessage base;
  Ibc__Core__Channel__V2__Packet *packet;
  ProtobufCBinaryData proof_unreceived;
  Ibc__Core__Client__V1__Height *proof_height;
  char *signer;
};
#define IBC__CORE__CHANNEL__V2__MSG_TIMEOUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_timeout__descriptor) \
, NULL, {0,NULL}, NULL, (char *)protobuf_c_empty_string }


/*
 * MsgTimeoutResponse defines the Msg/Timeout response type.
 */
struct  Ibc__Core__Channel__V2__MsgTimeoutResponse
{
  ProtobufCMessage base;
  Ibc__Core__Channel__V2__ResponseResultType result;
};
#define IBC__CORE__CHANNEL__V2__MSG_TIMEOUT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_timeout_response__descriptor) \
, IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_UNSPECIFIED }


/*
 * MsgAcknowledgement receives incoming IBC acknowledgement.
 */
struct  Ibc__Core__Channel__V2__MsgAcknowledgement
{
  ProtobufCMessage base;
  Ibc__Core__Channel__V2__Packet *packet;
  Ibc__Core__Channel__V2__Acknowledgement *acknowledgement;
  ProtobufCBinaryData proof_acked;
  Ibc__Core__Client__V1__Height *proof_height;
  char *signer;
};
#define IBC__CORE__CHANNEL__V2__MSG_ACKNOWLEDGEMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_acknowledgement__descriptor) \
, NULL, NULL, {0,NULL}, NULL, (char *)protobuf_c_empty_string }


/*
 * MsgAcknowledgementResponse defines the Msg/Acknowledgement response type.
 */
struct  Ibc__Core__Channel__V2__MsgAcknowledgementResponse
{
  ProtobufCMessage base;
  Ibc__Core__Channel__V2__ResponseResultType result;
};
#define IBC__CORE__CHANNEL__V2__MSG_ACKNOWLEDGEMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__msg_acknowledgement_response__descriptor) \
, IBC__CORE__CHANNEL__V2__RESPONSE_RESULT_TYPE__RESPONSE_RESULT_TYPE_UNSPECIFIED }


/* Ibc__Core__Channel__V2__MsgSendPacket methods */
void   ibc__core__channel__v2__msg_send_packet__init
                     (Ibc__Core__Channel__V2__MsgSendPacket         *message);
size_t ibc__core__channel__v2__msg_send_packet__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgSendPacket   *message);
size_t ibc__core__channel__v2__msg_send_packet__pack
                     (const Ibc__Core__Channel__V2__MsgSendPacket   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_send_packet__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgSendPacket   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgSendPacket *
       ibc__core__channel__v2__msg_send_packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_send_packet__free_unpacked
                     (Ibc__Core__Channel__V2__MsgSendPacket *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgSendPacketResponse methods */
void   ibc__core__channel__v2__msg_send_packet_response__init
                     (Ibc__Core__Channel__V2__MsgSendPacketResponse         *message);
size_t ibc__core__channel__v2__msg_send_packet_response__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgSendPacketResponse   *message);
size_t ibc__core__channel__v2__msg_send_packet_response__pack
                     (const Ibc__Core__Channel__V2__MsgSendPacketResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_send_packet_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgSendPacketResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgSendPacketResponse *
       ibc__core__channel__v2__msg_send_packet_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_send_packet_response__free_unpacked
                     (Ibc__Core__Channel__V2__MsgSendPacketResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgRecvPacket methods */
void   ibc__core__channel__v2__msg_recv_packet__init
                     (Ibc__Core__Channel__V2__MsgRecvPacket         *message);
size_t ibc__core__channel__v2__msg_recv_packet__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgRecvPacket   *message);
size_t ibc__core__channel__v2__msg_recv_packet__pack
                     (const Ibc__Core__Channel__V2__MsgRecvPacket   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_recv_packet__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgRecvPacket   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgRecvPacket *
       ibc__core__channel__v2__msg_recv_packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_recv_packet__free_unpacked
                     (Ibc__Core__Channel__V2__MsgRecvPacket *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgRecvPacketResponse methods */
void   ibc__core__channel__v2__msg_recv_packet_response__init
                     (Ibc__Core__Channel__V2__MsgRecvPacketResponse         *message);
size_t ibc__core__channel__v2__msg_recv_packet_response__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgRecvPacketResponse   *message);
size_t ibc__core__channel__v2__msg_recv_packet_response__pack
                     (const Ibc__Core__Channel__V2__MsgRecvPacketResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_recv_packet_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgRecvPacketResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgRecvPacketResponse *
       ibc__core__channel__v2__msg_recv_packet_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_recv_packet_response__free_unpacked
                     (Ibc__Core__Channel__V2__MsgRecvPacketResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgTimeout methods */
void   ibc__core__channel__v2__msg_timeout__init
                     (Ibc__Core__Channel__V2__MsgTimeout         *message);
size_t ibc__core__channel__v2__msg_timeout__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgTimeout   *message);
size_t ibc__core__channel__v2__msg_timeout__pack
                     (const Ibc__Core__Channel__V2__MsgTimeout   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_timeout__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgTimeout   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgTimeout *
       ibc__core__channel__v2__msg_timeout__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_timeout__free_unpacked
                     (Ibc__Core__Channel__V2__MsgTimeout *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgTimeoutResponse methods */
void   ibc__core__channel__v2__msg_timeout_response__init
                     (Ibc__Core__Channel__V2__MsgTimeoutResponse         *message);
size_t ibc__core__channel__v2__msg_timeout_response__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgTimeoutResponse   *message);
size_t ibc__core__channel__v2__msg_timeout_response__pack
                     (const Ibc__Core__Channel__V2__MsgTimeoutResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_timeout_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgTimeoutResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgTimeoutResponse *
       ibc__core__channel__v2__msg_timeout_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_timeout_response__free_unpacked
                     (Ibc__Core__Channel__V2__MsgTimeoutResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgAcknowledgement methods */
void   ibc__core__channel__v2__msg_acknowledgement__init
                     (Ibc__Core__Channel__V2__MsgAcknowledgement         *message);
size_t ibc__core__channel__v2__msg_acknowledgement__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgAcknowledgement   *message);
size_t ibc__core__channel__v2__msg_acknowledgement__pack
                     (const Ibc__Core__Channel__V2__MsgAcknowledgement   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_acknowledgement__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgAcknowledgement   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgAcknowledgement *
       ibc__core__channel__v2__msg_acknowledgement__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_acknowledgement__free_unpacked
                     (Ibc__Core__Channel__V2__MsgAcknowledgement *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__MsgAcknowledgementResponse methods */
void   ibc__core__channel__v2__msg_acknowledgement_response__init
                     (Ibc__Core__Channel__V2__MsgAcknowledgementResponse         *message);
size_t ibc__core__channel__v2__msg_acknowledgement_response__get_packed_size
                     (const Ibc__Core__Channel__V2__MsgAcknowledgementResponse   *message);
size_t ibc__core__channel__v2__msg_acknowledgement_response__pack
                     (const Ibc__Core__Channel__V2__MsgAcknowledgementResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__msg_acknowledgement_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__MsgAcknowledgementResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__MsgAcknowledgementResponse *
       ibc__core__channel__v2__msg_acknowledgement_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__msg_acknowledgement_response__free_unpacked
                     (Ibc__Core__Channel__V2__MsgAcknowledgementResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Channel__V2__MsgSendPacket_Closure)
                 (const Ibc__Core__Channel__V2__MsgSendPacket *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgSendPacketResponse_Closure)
                 (const Ibc__Core__Channel__V2__MsgSendPacketResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgRecvPacket_Closure)
                 (const Ibc__Core__Channel__V2__MsgRecvPacket *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgRecvPacketResponse_Closure)
                 (const Ibc__Core__Channel__V2__MsgRecvPacketResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgTimeout_Closure)
                 (const Ibc__Core__Channel__V2__MsgTimeout *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgTimeoutResponse_Closure)
                 (const Ibc__Core__Channel__V2__MsgTimeoutResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgAcknowledgement_Closure)
                 (const Ibc__Core__Channel__V2__MsgAcknowledgement *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__MsgAcknowledgementResponse_Closure)
                 (const Ibc__Core__Channel__V2__MsgAcknowledgementResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Ibc__Core__Channel__V2__Msg_Service Ibc__Core__Channel__V2__Msg_Service;
struct Ibc__Core__Channel__V2__Msg_Service
{
  ProtobufCService base;
  void (*send_packet)(Ibc__Core__Channel__V2__Msg_Service *service,
                      const Ibc__Core__Channel__V2__MsgSendPacket *input,
                      Ibc__Core__Channel__V2__MsgSendPacketResponse_Closure closure,
                      void *closure_data);
  void (*recv_packet)(Ibc__Core__Channel__V2__Msg_Service *service,
                      const Ibc__Core__Channel__V2__MsgRecvPacket *input,
                      Ibc__Core__Channel__V2__MsgRecvPacketResponse_Closure closure,
                      void *closure_data);
  void (*timeout)(Ibc__Core__Channel__V2__Msg_Service *service,
                  const Ibc__Core__Channel__V2__MsgTimeout *input,
                  Ibc__Core__Channel__V2__MsgTimeoutResponse_Closure closure,
                  void *closure_data);
  void (*acknowledgement)(Ibc__Core__Channel__V2__Msg_Service *service,
                          const Ibc__Core__Channel__V2__MsgAcknowledgement *input,
                          Ibc__Core__Channel__V2__MsgAcknowledgementResponse_Closure closure,
                          void *closure_data);
};
typedef void (*Ibc__Core__Channel__V2__Msg_ServiceDestroy)(Ibc__Core__Channel__V2__Msg_Service *);
void ibc__core__channel__v2__msg__init (Ibc__Core__Channel__V2__Msg_Service *service,
                                        Ibc__Core__Channel__V2__Msg_ServiceDestroy destroy);
#define IBC__CORE__CHANNEL__V2__MSG__BASE_INIT \
    { &ibc__core__channel__v2__msg__descriptor, protobuf_c_service_invoke_internal, NULL }
#define IBC__CORE__CHANNEL__V2__MSG__INIT(function_prefix__) \
    { IBC__CORE__CHANNEL__V2__MSG__BASE_INIT,\
      function_prefix__ ## send_packet,\
      function_prefix__ ## recv_packet,\
      function_prefix__ ## timeout,\
      function_prefix__ ## acknowledgement  }
void ibc__core__channel__v2__msg__send_packet(ProtobufCService *service,
                                              const Ibc__Core__Channel__V2__MsgSendPacket *input,
                                              Ibc__Core__Channel__V2__MsgSendPacketResponse_Closure closure,
                                              void *closure_data);
void ibc__core__channel__v2__msg__recv_packet(ProtobufCService *service,
                                              const Ibc__Core__Channel__V2__MsgRecvPacket *input,
                                              Ibc__Core__Channel__V2__MsgRecvPacketResponse_Closure closure,
                                              void *closure_data);
void ibc__core__channel__v2__msg__timeout(ProtobufCService *service,
                                          const Ibc__Core__Channel__V2__MsgTimeout *input,
                                          Ibc__Core__Channel__V2__MsgTimeoutResponse_Closure closure,
                                          void *closure_data);
void ibc__core__channel__v2__msg__acknowledgement(ProtobufCService *service,
                                                  const Ibc__Core__Channel__V2__MsgAcknowledgement *input,
                                                  Ibc__Core__Channel__V2__MsgAcknowledgementResponse_Closure closure,
                                                  void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ibc__core__channel__v2__response_result_type__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_send_packet__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_send_packet_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_recv_packet__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_recv_packet_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_timeout__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_timeout_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_acknowledgement__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__msg_acknowledgement_response__descriptor;
extern const ProtobufCServiceDescriptor ibc__core__channel__v2__msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2ftx_2eproto__INCLUDED */
