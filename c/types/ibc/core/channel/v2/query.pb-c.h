/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/channel/v2/query.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "ibc/core/channel/v2/genesis.pb-c.h"
#include "ibc/core/client/v1/client.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "gogoproto/gogo.pb-c.h"

typedef struct Ibc__Core__Channel__V2__QueryNextSequenceSendRequest Ibc__Core__Channel__V2__QueryNextSequenceSendRequest;
typedef struct Ibc__Core__Channel__V2__QueryNextSequenceSendResponse Ibc__Core__Channel__V2__QueryNextSequenceSendResponse;
typedef struct Ibc__Core__Channel__V2__QueryPacketCommitmentRequest Ibc__Core__Channel__V2__QueryPacketCommitmentRequest;
typedef struct Ibc__Core__Channel__V2__QueryPacketCommitmentResponse Ibc__Core__Channel__V2__QueryPacketCommitmentResponse;
typedef struct Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest;
typedef struct Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse;
typedef struct Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest;
typedef struct Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse;
typedef struct Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest;
typedef struct Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse;
typedef struct Ibc__Core__Channel__V2__QueryPacketReceiptRequest Ibc__Core__Channel__V2__QueryPacketReceiptRequest;
typedef struct Ibc__Core__Channel__V2__QueryPacketReceiptResponse Ibc__Core__Channel__V2__QueryPacketReceiptResponse;
typedef struct Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest;
typedef struct Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse;
typedef struct Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest;
typedef struct Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryNextSequenceSendRequest is the request type for the Query/QueryNextSequenceSend RPC method
 */
struct  Ibc__Core__Channel__V2__QueryNextSequenceSendRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
};
#define IBC__CORE__CHANNEL__V2__QUERY_NEXT_SEQUENCE_SEND_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_next_sequence_send_request__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * QueryNextSequenceSendResponse is the response type for the Query/QueryNextSequenceSend RPC method
 */
struct  Ibc__Core__Channel__V2__QueryNextSequenceSendResponse
{
  ProtobufCMessage base;
  /*
   * next sequence send number
   */
  uint64_t next_sequence_send;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_NEXT_SEQUENCE_SEND_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_next_sequence_send_response__descriptor) \
, 0, {0,NULL}, NULL }


/*
 * QueryPacketCommitmentRequest is the request type for the Query/PacketCommitment RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketCommitmentRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_COMMITMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_commitment_request__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/*
 * QueryPacketCommitmentResponse is the response type for the Query/PacketCommitment RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketCommitmentResponse
{
  ProtobufCMessage base;
  /*
   * packet associated with the request fields
   */
  ProtobufCBinaryData commitment;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_COMMITMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_commitment_response__descriptor) \
, {0,NULL}, {0,NULL}, NULL }


/*
 * QueryPacketCommitmentsRequest is the request type for the Query/PacketCommitments RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * pagination request
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_COMMITMENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_commitments_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryPacketCommitmentResponse is the response type for the Query/PacketCommitment RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse
{
  ProtobufCMessage base;
  /*
   * collection of packet commitments for the requested channel identifier.
   */
  size_t n_commitments;
  Ibc__Core__Channel__V2__PacketState **commitments;
  /*
   * pagination response.
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
  /*
   * query block height.
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_COMMITMENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_commitments_response__descriptor) \
, 0,NULL, NULL, NULL }


/*
 * QueryPacketAcknowledgementRequest is the request type for the Query/PacketAcknowledgement RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_ACKNOWLEDGEMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_acknowledgement_request__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/*
 * QueryPacketAcknowledgementResponse is the response type for the Query/PacketAcknowledgement RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse
{
  ProtobufCMessage base;
  /*
   * acknowledgement associated with the request fields
   */
  ProtobufCBinaryData acknowledgement;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_ACKNOWLEDGEMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_acknowledgement_response__descriptor) \
, {0,NULL}, {0,NULL}, NULL }


/*
 * QueryPacketAcknowledgementsRequest is the request type for the
 * Query/QueryPacketCommitments RPC method
 */
struct  Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * pagination request
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
  /*
   * list of packet sequences
   */
  size_t n_packet_commitment_sequences;
  uint64_t *packet_commitment_sequences;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_ACKNOWLEDGEMENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_acknowledgements_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL, 0,NULL }


/*
 * QueryPacketAcknowledgemetsResponse is the request type for the
 * Query/QueryPacketAcknowledgements RPC method
 */
struct  Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse
{
  ProtobufCMessage base;
  size_t n_acknowledgements;
  Ibc__Core__Channel__V2__PacketState **acknowledgements;
  /*
   * pagination response
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_ACKNOWLEDGEMENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_acknowledgements_response__descriptor) \
, 0,NULL, NULL, NULL }


/*
 * QueryPacketReceiptRequest is the request type for the Query/PacketReceipt RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketReceiptRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_RECEIPT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_receipt_request__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/*
 * QueryPacketReceiptResponse is the response type for the Query/PacketReceipt RPC method.
 */
struct  Ibc__Core__Channel__V2__QueryPacketReceiptResponse
{
  ProtobufCMessage base;
  /*
   * success flag for if receipt exists
   */
  protobuf_c_boolean received;
  /*
   * merkle proof of existence or absence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_PACKET_RECEIPT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_packet_receipt_response__descriptor) \
, 0, {0,NULL}, NULL }


/*
 * QueryUnreceivedPacketsRequest is the request type for the Query/UnreceivedPackets RPC method
 */
struct  Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * list of packet sequences
   */
  size_t n_sequences;
  uint64_t *sequences;
};
#define IBC__CORE__CHANNEL__V2__QUERY_UNRECEIVED_PACKETS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_unreceived_packets_request__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * QueryUnreceivedPacketsResponse is the response type for the Query/UnreceivedPacketCommitments RPC method
 */
struct  Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse
{
  ProtobufCMessage base;
  /*
   * list of unreceived packet sequences
   */
  size_t n_sequences;
  uint64_t *sequences;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_UNRECEIVED_PACKETS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_unreceived_packets_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryUnreceivedAcks is the request type for the
 * Query/UnreceivedAcks RPC method
 */
struct  Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest
{
  ProtobufCMessage base;
  /*
   * client unique identifier
   */
  char *client_id;
  /*
   * list of acknowledgement sequences
   */
  size_t n_packet_ack_sequences;
  uint64_t *packet_ack_sequences;
};
#define IBC__CORE__CHANNEL__V2__QUERY_UNRECEIVED_ACKS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_unreceived_acks_request__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * QueryUnreceivedAcksResponse is the response type for the
 * Query/UnreceivedAcks RPC method
 */
struct  Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse
{
  ProtobufCMessage base;
  /*
   * list of unreceived acknowledgement sequences
   */
  size_t n_sequences;
  uint64_t *sequences;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V2__QUERY_UNRECEIVED_ACKS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__query_unreceived_acks_response__descriptor) \
, 0,NULL, NULL }


/* Ibc__Core__Channel__V2__QueryNextSequenceSendRequest methods */
void   ibc__core__channel__v2__query_next_sequence_send_request__init
                     (Ibc__Core__Channel__V2__QueryNextSequenceSendRequest         *message);
size_t ibc__core__channel__v2__query_next_sequence_send_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryNextSequenceSendRequest   *message);
size_t ibc__core__channel__v2__query_next_sequence_send_request__pack
                     (const Ibc__Core__Channel__V2__QueryNextSequenceSendRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_next_sequence_send_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryNextSequenceSendRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryNextSequenceSendRequest *
       ibc__core__channel__v2__query_next_sequence_send_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_next_sequence_send_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryNextSequenceSendRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryNextSequenceSendResponse methods */
void   ibc__core__channel__v2__query_next_sequence_send_response__init
                     (Ibc__Core__Channel__V2__QueryNextSequenceSendResponse         *message);
size_t ibc__core__channel__v2__query_next_sequence_send_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryNextSequenceSendResponse   *message);
size_t ibc__core__channel__v2__query_next_sequence_send_response__pack
                     (const Ibc__Core__Channel__V2__QueryNextSequenceSendResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_next_sequence_send_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryNextSequenceSendResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryNextSequenceSendResponse *
       ibc__core__channel__v2__query_next_sequence_send_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_next_sequence_send_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryNextSequenceSendResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketCommitmentRequest methods */
void   ibc__core__channel__v2__query_packet_commitment_request__init
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentRequest         *message);
size_t ibc__core__channel__v2__query_packet_commitment_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentRequest   *message);
size_t ibc__core__channel__v2__query_packet_commitment_request__pack
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_commitment_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketCommitmentRequest *
       ibc__core__channel__v2__query_packet_commitment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_commitment_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketCommitmentResponse methods */
void   ibc__core__channel__v2__query_packet_commitment_response__init
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentResponse         *message);
size_t ibc__core__channel__v2__query_packet_commitment_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentResponse   *message);
size_t ibc__core__channel__v2__query_packet_commitment_response__pack
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_commitment_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketCommitmentResponse *
       ibc__core__channel__v2__query_packet_commitment_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_commitment_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest methods */
void   ibc__core__channel__v2__query_packet_commitments_request__init
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest         *message);
size_t ibc__core__channel__v2__query_packet_commitments_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest   *message);
size_t ibc__core__channel__v2__query_packet_commitments_request__pack
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_commitments_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest *
       ibc__core__channel__v2__query_packet_commitments_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_commitments_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse methods */
void   ibc__core__channel__v2__query_packet_commitments_response__init
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse         *message);
size_t ibc__core__channel__v2__query_packet_commitments_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse   *message);
size_t ibc__core__channel__v2__query_packet_commitments_response__pack
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_commitments_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse *
       ibc__core__channel__v2__query_packet_commitments_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_commitments_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest methods */
void   ibc__core__channel__v2__query_packet_acknowledgement_request__init
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest         *message);
size_t ibc__core__channel__v2__query_packet_acknowledgement_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest   *message);
size_t ibc__core__channel__v2__query_packet_acknowledgement_request__pack
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_acknowledgement_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest *
       ibc__core__channel__v2__query_packet_acknowledgement_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_acknowledgement_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse methods */
void   ibc__core__channel__v2__query_packet_acknowledgement_response__init
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse         *message);
size_t ibc__core__channel__v2__query_packet_acknowledgement_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse   *message);
size_t ibc__core__channel__v2__query_packet_acknowledgement_response__pack
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_acknowledgement_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse *
       ibc__core__channel__v2__query_packet_acknowledgement_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_acknowledgement_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest methods */
void   ibc__core__channel__v2__query_packet_acknowledgements_request__init
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest         *message);
size_t ibc__core__channel__v2__query_packet_acknowledgements_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest   *message);
size_t ibc__core__channel__v2__query_packet_acknowledgements_request__pack
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_acknowledgements_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest *
       ibc__core__channel__v2__query_packet_acknowledgements_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_acknowledgements_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse methods */
void   ibc__core__channel__v2__query_packet_acknowledgements_response__init
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse         *message);
size_t ibc__core__channel__v2__query_packet_acknowledgements_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse   *message);
size_t ibc__core__channel__v2__query_packet_acknowledgements_response__pack
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_acknowledgements_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse *
       ibc__core__channel__v2__query_packet_acknowledgements_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_acknowledgements_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketReceiptRequest methods */
void   ibc__core__channel__v2__query_packet_receipt_request__init
                     (Ibc__Core__Channel__V2__QueryPacketReceiptRequest         *message);
size_t ibc__core__channel__v2__query_packet_receipt_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketReceiptRequest   *message);
size_t ibc__core__channel__v2__query_packet_receipt_request__pack
                     (const Ibc__Core__Channel__V2__QueryPacketReceiptRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_receipt_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketReceiptRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketReceiptRequest *
       ibc__core__channel__v2__query_packet_receipt_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_receipt_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketReceiptRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryPacketReceiptResponse methods */
void   ibc__core__channel__v2__query_packet_receipt_response__init
                     (Ibc__Core__Channel__V2__QueryPacketReceiptResponse         *message);
size_t ibc__core__channel__v2__query_packet_receipt_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryPacketReceiptResponse   *message);
size_t ibc__core__channel__v2__query_packet_receipt_response__pack
                     (const Ibc__Core__Channel__V2__QueryPacketReceiptResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_packet_receipt_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryPacketReceiptResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryPacketReceiptResponse *
       ibc__core__channel__v2__query_packet_receipt_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_packet_receipt_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryPacketReceiptResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest methods */
void   ibc__core__channel__v2__query_unreceived_packets_request__init
                     (Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest         *message);
size_t ibc__core__channel__v2__query_unreceived_packets_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest   *message);
size_t ibc__core__channel__v2__query_unreceived_packets_request__pack
                     (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_unreceived_packets_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest *
       ibc__core__channel__v2__query_unreceived_packets_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_unreceived_packets_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse methods */
void   ibc__core__channel__v2__query_unreceived_packets_response__init
                     (Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse         *message);
size_t ibc__core__channel__v2__query_unreceived_packets_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse   *message);
size_t ibc__core__channel__v2__query_unreceived_packets_response__pack
                     (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_unreceived_packets_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse *
       ibc__core__channel__v2__query_unreceived_packets_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_unreceived_packets_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest methods */
void   ibc__core__channel__v2__query_unreceived_acks_request__init
                     (Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest         *message);
size_t ibc__core__channel__v2__query_unreceived_acks_request__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest   *message);
size_t ibc__core__channel__v2__query_unreceived_acks_request__pack
                     (const Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_unreceived_acks_request__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest *
       ibc__core__channel__v2__query_unreceived_acks_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_unreceived_acks_request__free_unpacked
                     (Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse methods */
void   ibc__core__channel__v2__query_unreceived_acks_response__init
                     (Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse         *message);
size_t ibc__core__channel__v2__query_unreceived_acks_response__get_packed_size
                     (const Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse   *message);
size_t ibc__core__channel__v2__query_unreceived_acks_response__pack
                     (const Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__query_unreceived_acks_response__pack_to_buffer
                     (const Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse *
       ibc__core__channel__v2__query_unreceived_acks_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__query_unreceived_acks_response__free_unpacked
                     (Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Channel__V2__QueryNextSequenceSendRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryNextSequenceSendRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryNextSequenceSendResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryNextSequenceSendResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketCommitmentRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketCommitmentRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketCommitmentResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketCommitmentResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketReceiptRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketReceiptRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryPacketReceiptResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryPacketReceiptResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest_Closure)
                 (const Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse_Closure)
                 (const Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Ibc__Core__Channel__V2__Query_Service Ibc__Core__Channel__V2__Query_Service;
struct Ibc__Core__Channel__V2__Query_Service
{
  ProtobufCService base;
  void (*next_sequence_send)(Ibc__Core__Channel__V2__Query_Service *service,
                             const Ibc__Core__Channel__V2__QueryNextSequenceSendRequest *input,
                             Ibc__Core__Channel__V2__QueryNextSequenceSendResponse_Closure closure,
                             void *closure_data);
  void (*packet_commitment)(Ibc__Core__Channel__V2__Query_Service *service,
                            const Ibc__Core__Channel__V2__QueryPacketCommitmentRequest *input,
                            Ibc__Core__Channel__V2__QueryPacketCommitmentResponse_Closure closure,
                            void *closure_data);
  void (*packet_commitments)(Ibc__Core__Channel__V2__Query_Service *service,
                             const Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest *input,
                             Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse_Closure closure,
                             void *closure_data);
  void (*packet_acknowledgement)(Ibc__Core__Channel__V2__Query_Service *service,
                                 const Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest *input,
                                 Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse_Closure closure,
                                 void *closure_data);
  void (*packet_acknowledgements)(Ibc__Core__Channel__V2__Query_Service *service,
                                  const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest *input,
                                  Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse_Closure closure,
                                  void *closure_data);
  void (*packet_receipt)(Ibc__Core__Channel__V2__Query_Service *service,
                         const Ibc__Core__Channel__V2__QueryPacketReceiptRequest *input,
                         Ibc__Core__Channel__V2__QueryPacketReceiptResponse_Closure closure,
                         void *closure_data);
  void (*unreceived_packets)(Ibc__Core__Channel__V2__Query_Service *service,
                             const Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest *input,
                             Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse_Closure closure,
                             void *closure_data);
  void (*unreceived_acks)(Ibc__Core__Channel__V2__Query_Service *service,
                          const Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest *input,
                          Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse_Closure closure,
                          void *closure_data);
};
typedef void (*Ibc__Core__Channel__V2__Query_ServiceDestroy)(Ibc__Core__Channel__V2__Query_Service *);
void ibc__core__channel__v2__query__init (Ibc__Core__Channel__V2__Query_Service *service,
                                          Ibc__Core__Channel__V2__Query_ServiceDestroy destroy);
#define IBC__CORE__CHANNEL__V2__QUERY__BASE_INIT \
    { &ibc__core__channel__v2__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define IBC__CORE__CHANNEL__V2__QUERY__INIT(function_prefix__) \
    { IBC__CORE__CHANNEL__V2__QUERY__BASE_INIT,\
      function_prefix__ ## next_sequence_send,\
      function_prefix__ ## packet_commitment,\
      function_prefix__ ## packet_commitments,\
      function_prefix__ ## packet_acknowledgement,\
      function_prefix__ ## packet_acknowledgements,\
      function_prefix__ ## packet_receipt,\
      function_prefix__ ## unreceived_packets,\
      function_prefix__ ## unreceived_acks  }
void ibc__core__channel__v2__query__next_sequence_send(ProtobufCService *service,
                                                       const Ibc__Core__Channel__V2__QueryNextSequenceSendRequest *input,
                                                       Ibc__Core__Channel__V2__QueryNextSequenceSendResponse_Closure closure,
                                                       void *closure_data);
void ibc__core__channel__v2__query__packet_commitment(ProtobufCService *service,
                                                      const Ibc__Core__Channel__V2__QueryPacketCommitmentRequest *input,
                                                      Ibc__Core__Channel__V2__QueryPacketCommitmentResponse_Closure closure,
                                                      void *closure_data);
void ibc__core__channel__v2__query__packet_commitments(ProtobufCService *service,
                                                       const Ibc__Core__Channel__V2__QueryPacketCommitmentsRequest *input,
                                                       Ibc__Core__Channel__V2__QueryPacketCommitmentsResponse_Closure closure,
                                                       void *closure_data);
void ibc__core__channel__v2__query__packet_acknowledgement(ProtobufCService *service,
                                                           const Ibc__Core__Channel__V2__QueryPacketAcknowledgementRequest *input,
                                                           Ibc__Core__Channel__V2__QueryPacketAcknowledgementResponse_Closure closure,
                                                           void *closure_data);
void ibc__core__channel__v2__query__packet_acknowledgements(ProtobufCService *service,
                                                            const Ibc__Core__Channel__V2__QueryPacketAcknowledgementsRequest *input,
                                                            Ibc__Core__Channel__V2__QueryPacketAcknowledgementsResponse_Closure closure,
                                                            void *closure_data);
void ibc__core__channel__v2__query__packet_receipt(ProtobufCService *service,
                                                   const Ibc__Core__Channel__V2__QueryPacketReceiptRequest *input,
                                                   Ibc__Core__Channel__V2__QueryPacketReceiptResponse_Closure closure,
                                                   void *closure_data);
void ibc__core__channel__v2__query__unreceived_packets(ProtobufCService *service,
                                                       const Ibc__Core__Channel__V2__QueryUnreceivedPacketsRequest *input,
                                                       Ibc__Core__Channel__V2__QueryUnreceivedPacketsResponse_Closure closure,
                                                       void *closure_data);
void ibc__core__channel__v2__query__unreceived_acks(ProtobufCService *service,
                                                    const Ibc__Core__Channel__V2__QueryUnreceivedAcksRequest *input,
                                                    Ibc__Core__Channel__V2__QueryUnreceivedAcksResponse_Closure closure,
                                                    void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_next_sequence_send_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_next_sequence_send_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_commitment_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_commitment_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_commitments_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_commitments_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_acknowledgement_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_acknowledgement_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_acknowledgements_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_acknowledgements_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_receipt_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_packet_receipt_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_unreceived_packets_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_unreceived_packets_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_unreceived_acks_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__query_unreceived_acks_response__descriptor;
extern const ProtobufCServiceDescriptor ibc__core__channel__v2__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2fquery_2eproto__INCLUDED */
