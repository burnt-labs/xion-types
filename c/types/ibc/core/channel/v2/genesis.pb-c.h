/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/channel/v2/genesis.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2fgenesis_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2fgenesis_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"

typedef struct Ibc__Core__Channel__V2__GenesisState Ibc__Core__Channel__V2__GenesisState;
typedef struct Ibc__Core__Channel__V2__PacketState Ibc__Core__Channel__V2__PacketState;
typedef struct Ibc__Core__Channel__V2__PacketSequence Ibc__Core__Channel__V2__PacketSequence;


/* --- enums --- */


/* --- messages --- */

/*
 * GenesisState defines the ibc channel/v2 submodule's genesis state.
 */
struct  Ibc__Core__Channel__V2__GenesisState
{
  ProtobufCMessage base;
  size_t n_acknowledgements;
  Ibc__Core__Channel__V2__PacketState **acknowledgements;
  size_t n_commitments;
  Ibc__Core__Channel__V2__PacketState **commitments;
  size_t n_receipts;
  Ibc__Core__Channel__V2__PacketState **receipts;
  size_t n_async_packets;
  Ibc__Core__Channel__V2__PacketState **async_packets;
  size_t n_send_sequences;
  Ibc__Core__Channel__V2__PacketSequence **send_sequences;
};
#define IBC__CORE__CHANNEL__V2__GENESIS_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__genesis_state__descriptor) \
, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * PacketState defines the generic type necessary to retrieve and store
 * packet commitments, acknowledgements, and receipts.
 * Caller is responsible for knowing the context necessary to interpret this
 * state as a commitment, acknowledgement, or a receipt.
 */
struct  Ibc__Core__Channel__V2__PacketState
{
  ProtobufCMessage base;
  /*
   * client unique identifier.
   */
  char *client_id;
  /*
   * packet sequence.
   */
  uint64_t sequence;
  /*
   * embedded data that represents packet state.
   */
  ProtobufCBinaryData data;
};
#define IBC__CORE__CHANNEL__V2__PACKET_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__packet_state__descriptor) \
, (char *)protobuf_c_empty_string, 0, {0,NULL} }


/*
 * PacketSequence defines the genesis type necessary to retrieve and store next send sequences.
 */
struct  Ibc__Core__Channel__V2__PacketSequence
{
  ProtobufCMessage base;
  /*
   * client unique identifier.
   */
  char *client_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V2__PACKET_SEQUENCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v2__packet_sequence__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/* Ibc__Core__Channel__V2__GenesisState methods */
void   ibc__core__channel__v2__genesis_state__init
                     (Ibc__Core__Channel__V2__GenesisState         *message);
size_t ibc__core__channel__v2__genesis_state__get_packed_size
                     (const Ibc__Core__Channel__V2__GenesisState   *message);
size_t ibc__core__channel__v2__genesis_state__pack
                     (const Ibc__Core__Channel__V2__GenesisState   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__genesis_state__pack_to_buffer
                     (const Ibc__Core__Channel__V2__GenesisState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__GenesisState *
       ibc__core__channel__v2__genesis_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__genesis_state__free_unpacked
                     (Ibc__Core__Channel__V2__GenesisState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__PacketState methods */
void   ibc__core__channel__v2__packet_state__init
                     (Ibc__Core__Channel__V2__PacketState         *message);
size_t ibc__core__channel__v2__packet_state__get_packed_size
                     (const Ibc__Core__Channel__V2__PacketState   *message);
size_t ibc__core__channel__v2__packet_state__pack
                     (const Ibc__Core__Channel__V2__PacketState   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__packet_state__pack_to_buffer
                     (const Ibc__Core__Channel__V2__PacketState   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__PacketState *
       ibc__core__channel__v2__packet_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__packet_state__free_unpacked
                     (Ibc__Core__Channel__V2__PacketState *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V2__PacketSequence methods */
void   ibc__core__channel__v2__packet_sequence__init
                     (Ibc__Core__Channel__V2__PacketSequence         *message);
size_t ibc__core__channel__v2__packet_sequence__get_packed_size
                     (const Ibc__Core__Channel__V2__PacketSequence   *message);
size_t ibc__core__channel__v2__packet_sequence__pack
                     (const Ibc__Core__Channel__V2__PacketSequence   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v2__packet_sequence__pack_to_buffer
                     (const Ibc__Core__Channel__V2__PacketSequence   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V2__PacketSequence *
       ibc__core__channel__v2__packet_sequence__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v2__packet_sequence__free_unpacked
                     (Ibc__Core__Channel__V2__PacketSequence *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Channel__V2__GenesisState_Closure)
                 (const Ibc__Core__Channel__V2__GenesisState *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__PacketState_Closure)
                 (const Ibc__Core__Channel__V2__PacketState *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V2__PacketSequence_Closure)
                 (const Ibc__Core__Channel__V2__PacketSequence *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__core__channel__v2__genesis_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__packet_state__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v2__packet_sequence__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fchannel_2fv2_2fgenesis_2eproto__INCLUDED */
