/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/core/channel/v1/query.proto */

#ifndef PROTOBUF_C_ibc_2fcore_2fchannel_2fv1_2fquery_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fcore_2fchannel_2fv1_2fquery_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "ibc/core/client/v1/client.pb-c.h"
#include "cosmos/base/query/v1beta1/pagination.pb-c.h"
#include "ibc/core/channel/v1/channel.pb-c.h"
#include "google/api/annotations.pb-c.h"
#include "google/protobuf/any.pb-c.h"
#include "gogoproto/gogo.pb-c.h"

typedef struct Ibc__Core__Channel__V1__QueryChannelRequest Ibc__Core__Channel__V1__QueryChannelRequest;
typedef struct Ibc__Core__Channel__V1__QueryChannelResponse Ibc__Core__Channel__V1__QueryChannelResponse;
typedef struct Ibc__Core__Channel__V1__QueryChannelsRequest Ibc__Core__Channel__V1__QueryChannelsRequest;
typedef struct Ibc__Core__Channel__V1__QueryChannelsResponse Ibc__Core__Channel__V1__QueryChannelsResponse;
typedef struct Ibc__Core__Channel__V1__QueryConnectionChannelsRequest Ibc__Core__Channel__V1__QueryConnectionChannelsRequest;
typedef struct Ibc__Core__Channel__V1__QueryConnectionChannelsResponse Ibc__Core__Channel__V1__QueryConnectionChannelsResponse;
typedef struct Ibc__Core__Channel__V1__QueryChannelClientStateRequest Ibc__Core__Channel__V1__QueryChannelClientStateRequest;
typedef struct Ibc__Core__Channel__V1__QueryChannelClientStateResponse Ibc__Core__Channel__V1__QueryChannelClientStateResponse;
typedef struct Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest;
typedef struct Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse;
typedef struct Ibc__Core__Channel__V1__QueryPacketCommitmentRequest Ibc__Core__Channel__V1__QueryPacketCommitmentRequest;
typedef struct Ibc__Core__Channel__V1__QueryPacketCommitmentResponse Ibc__Core__Channel__V1__QueryPacketCommitmentResponse;
typedef struct Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest;
typedef struct Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse;
typedef struct Ibc__Core__Channel__V1__QueryPacketReceiptRequest Ibc__Core__Channel__V1__QueryPacketReceiptRequest;
typedef struct Ibc__Core__Channel__V1__QueryPacketReceiptResponse Ibc__Core__Channel__V1__QueryPacketReceiptResponse;
typedef struct Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest;
typedef struct Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse;
typedef struct Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest;
typedef struct Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse;
typedef struct Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest;
typedef struct Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse;
typedef struct Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest;
typedef struct Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse;
typedef struct Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest;
typedef struct Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse;
typedef struct Ibc__Core__Channel__V1__QueryNextSequenceSendRequest Ibc__Core__Channel__V1__QueryNextSequenceSendRequest;
typedef struct Ibc__Core__Channel__V1__QueryNextSequenceSendResponse Ibc__Core__Channel__V1__QueryNextSequenceSendResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * QueryChannelRequest is the request type for the Query/Channel RPC method
 */
struct  Ibc__Core__Channel__V1__QueryChannelRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNEL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channel_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryChannelResponse is the response type for the Query/Channel RPC method.
 * Besides the Channel end, it includes a proof and the height from which the
 * proof was retrieved.
 */
struct  Ibc__Core__Channel__V1__QueryChannelResponse
{
  ProtobufCMessage base;
  /*
   * channel associated with the request identifiers
   */
  Ibc__Core__Channel__V1__Channel *channel;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNEL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channel_response__descriptor) \
, NULL, {0,NULL}, NULL }


/*
 * QueryChannelsRequest is the request type for the Query/Channels RPC method
 */
struct  Ibc__Core__Channel__V1__QueryChannelsRequest
{
  ProtobufCMessage base;
  /*
   * pagination request
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNELS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channels_request__descriptor) \
, NULL }


/*
 * QueryChannelsResponse is the response type for the Query/Channels RPC method.
 */
struct  Ibc__Core__Channel__V1__QueryChannelsResponse
{
  ProtobufCMessage base;
  /*
   * list of stored channels of the chain.
   */
  size_t n_channels;
  Ibc__Core__Channel__V1__IdentifiedChannel **channels;
  /*
   * pagination response
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNELS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channels_response__descriptor) \
, 0,NULL, NULL, NULL }


/*
 * QueryConnectionChannelsRequest is the request type for the
 * Query/QueryConnectionChannels RPC method
 */
struct  Ibc__Core__Channel__V1__QueryConnectionChannelsRequest
{
  ProtobufCMessage base;
  /*
   * connection unique identifier
   */
  char *connection;
  /*
   * pagination request
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CONNECTION_CHANNELS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_connection_channels_request__descriptor) \
, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryConnectionChannelsResponse is the Response type for the
 * Query/QueryConnectionChannels RPC method
 */
struct  Ibc__Core__Channel__V1__QueryConnectionChannelsResponse
{
  ProtobufCMessage base;
  /*
   * list of channels associated with a connection.
   */
  size_t n_channels;
  Ibc__Core__Channel__V1__IdentifiedChannel **channels;
  /*
   * pagination response
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CONNECTION_CHANNELS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_connection_channels_response__descriptor) \
, 0,NULL, NULL, NULL }


/*
 * QueryChannelClientStateRequest is the request type for the Query/ClientState
 * RPC method
 */
struct  Ibc__Core__Channel__V1__QueryChannelClientStateRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNEL_CLIENT_STATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channel_client_state_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryChannelClientStateResponse is the Response type for the
 * Query/QueryChannelClientState RPC method
 */
struct  Ibc__Core__Channel__V1__QueryChannelClientStateResponse
{
  ProtobufCMessage base;
  /*
   * client state associated with the channel
   */
  Ibc__Core__Client__V1__IdentifiedClientState *identified_client_state;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNEL_CLIENT_STATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channel_client_state_response__descriptor) \
, NULL, {0,NULL}, NULL }


/*
 * QueryChannelConsensusStateRequest is the request type for the
 * Query/ConsensusState RPC method
 */
struct  Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * revision number of the consensus state
   */
  uint64_t revision_number;
  /*
   * revision height of the consensus state
   */
  uint64_t revision_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNEL_CONSENSUS_STATE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channel_consensus_state_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0 }


/*
 * QueryChannelClientStateResponse is the Response type for the
 * Query/QueryChannelClientState RPC method
 */
struct  Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse
{
  ProtobufCMessage base;
  /*
   * consensus state associated with the channel
   */
  Google__Protobuf__Any *consensus_state;
  /*
   * client ID associated with the consensus state
   */
  char *client_id;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_CHANNEL_CONSENSUS_STATE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_channel_consensus_state_response__descriptor) \
, NULL, (char *)protobuf_c_empty_string, {0,NULL}, NULL }


/*
 * QueryPacketCommitmentRequest is the request type for the
 * Query/PacketCommitment RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketCommitmentRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_COMMITMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_commitment_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * QueryPacketCommitmentResponse defines the client query response for a packet
 * which also includes a proof and the height from which the proof was
 * retrieved
 */
struct  Ibc__Core__Channel__V1__QueryPacketCommitmentResponse
{
  ProtobufCMessage base;
  /*
   * packet associated with the request fields
   */
  ProtobufCBinaryData commitment;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_COMMITMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_commitment_response__descriptor) \
, {0,NULL}, {0,NULL}, NULL }


/*
 * QueryPacketCommitmentsRequest is the request type for the
 * Query/QueryPacketCommitments RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * pagination request
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_COMMITMENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_commitments_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL }


/*
 * QueryPacketCommitmentsResponse is the request type for the
 * Query/QueryPacketCommitments RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse
{
  ProtobufCMessage base;
  size_t n_commitments;
  Ibc__Core__Channel__V1__PacketState **commitments;
  /*
   * pagination response
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_COMMITMENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_commitments_response__descriptor) \
, 0,NULL, NULL, NULL }


/*
 * QueryPacketReceiptRequest is the request type for the
 * Query/PacketReceipt RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketReceiptRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_RECEIPT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_receipt_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * QueryPacketReceiptResponse defines the client query response for a packet
 * receipt which also includes a proof, and the height from which the proof was
 * retrieved
 */
struct  Ibc__Core__Channel__V1__QueryPacketReceiptResponse
{
  ProtobufCMessage base;
  /*
   * success flag for if receipt exists
   */
  protobuf_c_boolean received;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_RECEIPT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_receipt_response__descriptor) \
, 0, {0,NULL}, NULL }


/*
 * QueryPacketAcknowledgementRequest is the request type for the
 * Query/PacketAcknowledgement RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * packet sequence
   */
  uint64_t sequence;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_ACKNOWLEDGEMENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_acknowledgement_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


/*
 * QueryPacketAcknowledgementResponse defines the client query response for a
 * packet which also includes a proof and the height from which the
 * proof was retrieved
 */
struct  Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse
{
  ProtobufCMessage base;
  /*
   * packet associated with the request fields
   */
  ProtobufCBinaryData acknowledgement;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_ACKNOWLEDGEMENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_acknowledgement_response__descriptor) \
, {0,NULL}, {0,NULL}, NULL }


/*
 * QueryPacketAcknowledgementsRequest is the request type for the
 * Query/QueryPacketCommitments RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * pagination request
   */
  Cosmos__Base__Query__V1beta1__PageRequest *pagination;
  /*
   * list of packet sequences
   */
  size_t n_packet_commitment_sequences;
  uint64_t *packet_commitment_sequences;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_ACKNOWLEDGEMENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_acknowledgements_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, 0,NULL }


/*
 * QueryPacketAcknowledgemetsResponse is the request type for the
 * Query/QueryPacketAcknowledgements RPC method
 */
struct  Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse
{
  ProtobufCMessage base;
  size_t n_acknowledgements;
  Ibc__Core__Channel__V1__PacketState **acknowledgements;
  /*
   * pagination response
   */
  Cosmos__Base__Query__V1beta1__PageResponse *pagination;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_PACKET_ACKNOWLEDGEMENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_packet_acknowledgements_response__descriptor) \
, 0,NULL, NULL, NULL }


/*
 * QueryUnreceivedPacketsRequest is the request type for the
 * Query/UnreceivedPackets RPC method
 */
struct  Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * list of packet sequences
   */
  size_t n_packet_commitment_sequences;
  uint64_t *packet_commitment_sequences;
};
#define IBC__CORE__CHANNEL__V1__QUERY_UNRECEIVED_PACKETS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_unreceived_packets_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * QueryUnreceivedPacketsResponse is the response type for the
 * Query/UnreceivedPacketCommitments RPC method
 */
struct  Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse
{
  ProtobufCMessage base;
  /*
   * list of unreceived packet sequences
   */
  size_t n_sequences;
  uint64_t *sequences;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_UNRECEIVED_PACKETS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_unreceived_packets_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryUnreceivedAcks is the request type for the
 * Query/UnreceivedAcks RPC method
 */
struct  Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
  /*
   * list of acknowledgement sequences
   */
  size_t n_packet_ack_sequences;
  uint64_t *packet_ack_sequences;
};
#define IBC__CORE__CHANNEL__V1__QUERY_UNRECEIVED_ACKS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_unreceived_acks_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * QueryUnreceivedAcksResponse is the response type for the
 * Query/UnreceivedAcks RPC method
 */
struct  Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse
{
  ProtobufCMessage base;
  /*
   * list of unreceived acknowledgement sequences
   */
  size_t n_sequences;
  uint64_t *sequences;
  /*
   * query block height
   */
  Ibc__Core__Client__V1__Height *height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_UNRECEIVED_ACKS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_unreceived_acks_response__descriptor) \
, 0,NULL, NULL }


/*
 * QueryNextSequenceReceiveRequest is the request type for the
 * Query/QueryNextSequenceReceiveRequest RPC method
 */
struct  Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
};
#define IBC__CORE__CHANNEL__V1__QUERY_NEXT_SEQUENCE_RECEIVE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_next_sequence_receive_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QuerySequenceResponse is the response type for the
 * Query/QueryNextSequenceReceiveResponse RPC method
 */
struct  Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse
{
  ProtobufCMessage base;
  /*
   * next sequence receive number
   */
  uint64_t next_sequence_receive;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_NEXT_SEQUENCE_RECEIVE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_next_sequence_receive_response__descriptor) \
, 0, {0,NULL}, NULL }


/*
 * QueryNextSequenceSendRequest is the request type for the
 * Query/QueryNextSequenceSend RPC method
 */
struct  Ibc__Core__Channel__V1__QueryNextSequenceSendRequest
{
  ProtobufCMessage base;
  /*
   * port unique identifier
   */
  char *port_id;
  /*
   * channel unique identifier
   */
  char *channel_id;
};
#define IBC__CORE__CHANNEL__V1__QUERY_NEXT_SEQUENCE_SEND_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_next_sequence_send_request__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * QueryNextSequenceSendResponse is the request type for the
 * Query/QueryNextSequenceSend RPC method
 */
struct  Ibc__Core__Channel__V1__QueryNextSequenceSendResponse
{
  ProtobufCMessage base;
  /*
   * next sequence send number
   */
  uint64_t next_sequence_send;
  /*
   * merkle proof of existence
   */
  ProtobufCBinaryData proof;
  /*
   * height at which the proof was retrieved
   */
  Ibc__Core__Client__V1__Height *proof_height;
};
#define IBC__CORE__CHANNEL__V1__QUERY_NEXT_SEQUENCE_SEND_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__core__channel__v1__query_next_sequence_send_response__descriptor) \
, 0, {0,NULL}, NULL }


/* Ibc__Core__Channel__V1__QueryChannelRequest methods */
void   ibc__core__channel__v1__query_channel_request__init
                     (Ibc__Core__Channel__V1__QueryChannelRequest         *message);
size_t ibc__core__channel__v1__query_channel_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelRequest   *message);
size_t ibc__core__channel__v1__query_channel_request__pack
                     (const Ibc__Core__Channel__V1__QueryChannelRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channel_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelRequest *
       ibc__core__channel__v1__query_channel_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channel_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelResponse methods */
void   ibc__core__channel__v1__query_channel_response__init
                     (Ibc__Core__Channel__V1__QueryChannelResponse         *message);
size_t ibc__core__channel__v1__query_channel_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelResponse   *message);
size_t ibc__core__channel__v1__query_channel_response__pack
                     (const Ibc__Core__Channel__V1__QueryChannelResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channel_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelResponse *
       ibc__core__channel__v1__query_channel_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channel_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelsRequest methods */
void   ibc__core__channel__v1__query_channels_request__init
                     (Ibc__Core__Channel__V1__QueryChannelsRequest         *message);
size_t ibc__core__channel__v1__query_channels_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelsRequest   *message);
size_t ibc__core__channel__v1__query_channels_request__pack
                     (const Ibc__Core__Channel__V1__QueryChannelsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channels_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelsRequest *
       ibc__core__channel__v1__query_channels_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channels_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelsResponse methods */
void   ibc__core__channel__v1__query_channels_response__init
                     (Ibc__Core__Channel__V1__QueryChannelsResponse         *message);
size_t ibc__core__channel__v1__query_channels_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelsResponse   *message);
size_t ibc__core__channel__v1__query_channels_response__pack
                     (const Ibc__Core__Channel__V1__QueryChannelsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channels_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelsResponse *
       ibc__core__channel__v1__query_channels_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channels_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryConnectionChannelsRequest methods */
void   ibc__core__channel__v1__query_connection_channels_request__init
                     (Ibc__Core__Channel__V1__QueryConnectionChannelsRequest         *message);
size_t ibc__core__channel__v1__query_connection_channels_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryConnectionChannelsRequest   *message);
size_t ibc__core__channel__v1__query_connection_channels_request__pack
                     (const Ibc__Core__Channel__V1__QueryConnectionChannelsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_connection_channels_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryConnectionChannelsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryConnectionChannelsRequest *
       ibc__core__channel__v1__query_connection_channels_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_connection_channels_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryConnectionChannelsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryConnectionChannelsResponse methods */
void   ibc__core__channel__v1__query_connection_channels_response__init
                     (Ibc__Core__Channel__V1__QueryConnectionChannelsResponse         *message);
size_t ibc__core__channel__v1__query_connection_channels_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryConnectionChannelsResponse   *message);
size_t ibc__core__channel__v1__query_connection_channels_response__pack
                     (const Ibc__Core__Channel__V1__QueryConnectionChannelsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_connection_channels_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryConnectionChannelsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryConnectionChannelsResponse *
       ibc__core__channel__v1__query_connection_channels_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_connection_channels_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryConnectionChannelsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelClientStateRequest methods */
void   ibc__core__channel__v1__query_channel_client_state_request__init
                     (Ibc__Core__Channel__V1__QueryChannelClientStateRequest         *message);
size_t ibc__core__channel__v1__query_channel_client_state_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelClientStateRequest   *message);
size_t ibc__core__channel__v1__query_channel_client_state_request__pack
                     (const Ibc__Core__Channel__V1__QueryChannelClientStateRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channel_client_state_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelClientStateRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelClientStateRequest *
       ibc__core__channel__v1__query_channel_client_state_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channel_client_state_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelClientStateRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelClientStateResponse methods */
void   ibc__core__channel__v1__query_channel_client_state_response__init
                     (Ibc__Core__Channel__V1__QueryChannelClientStateResponse         *message);
size_t ibc__core__channel__v1__query_channel_client_state_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelClientStateResponse   *message);
size_t ibc__core__channel__v1__query_channel_client_state_response__pack
                     (const Ibc__Core__Channel__V1__QueryChannelClientStateResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channel_client_state_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelClientStateResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelClientStateResponse *
       ibc__core__channel__v1__query_channel_client_state_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channel_client_state_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelClientStateResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest methods */
void   ibc__core__channel__v1__query_channel_consensus_state_request__init
                     (Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest         *message);
size_t ibc__core__channel__v1__query_channel_consensus_state_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest   *message);
size_t ibc__core__channel__v1__query_channel_consensus_state_request__pack
                     (const Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channel_consensus_state_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest *
       ibc__core__channel__v1__query_channel_consensus_state_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channel_consensus_state_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse methods */
void   ibc__core__channel__v1__query_channel_consensus_state_response__init
                     (Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse         *message);
size_t ibc__core__channel__v1__query_channel_consensus_state_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse   *message);
size_t ibc__core__channel__v1__query_channel_consensus_state_response__pack
                     (const Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_channel_consensus_state_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse *
       ibc__core__channel__v1__query_channel_consensus_state_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_channel_consensus_state_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketCommitmentRequest methods */
void   ibc__core__channel__v1__query_packet_commitment_request__init
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentRequest         *message);
size_t ibc__core__channel__v1__query_packet_commitment_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentRequest   *message);
size_t ibc__core__channel__v1__query_packet_commitment_request__pack
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_commitment_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketCommitmentRequest *
       ibc__core__channel__v1__query_packet_commitment_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_commitment_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketCommitmentResponse methods */
void   ibc__core__channel__v1__query_packet_commitment_response__init
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentResponse         *message);
size_t ibc__core__channel__v1__query_packet_commitment_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentResponse   *message);
size_t ibc__core__channel__v1__query_packet_commitment_response__pack
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_commitment_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketCommitmentResponse *
       ibc__core__channel__v1__query_packet_commitment_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_commitment_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest methods */
void   ibc__core__channel__v1__query_packet_commitments_request__init
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest         *message);
size_t ibc__core__channel__v1__query_packet_commitments_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest   *message);
size_t ibc__core__channel__v1__query_packet_commitments_request__pack
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_commitments_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest *
       ibc__core__channel__v1__query_packet_commitments_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_commitments_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse methods */
void   ibc__core__channel__v1__query_packet_commitments_response__init
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse         *message);
size_t ibc__core__channel__v1__query_packet_commitments_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse   *message);
size_t ibc__core__channel__v1__query_packet_commitments_response__pack
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_commitments_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse *
       ibc__core__channel__v1__query_packet_commitments_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_commitments_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketReceiptRequest methods */
void   ibc__core__channel__v1__query_packet_receipt_request__init
                     (Ibc__Core__Channel__V1__QueryPacketReceiptRequest         *message);
size_t ibc__core__channel__v1__query_packet_receipt_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketReceiptRequest   *message);
size_t ibc__core__channel__v1__query_packet_receipt_request__pack
                     (const Ibc__Core__Channel__V1__QueryPacketReceiptRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_receipt_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketReceiptRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketReceiptRequest *
       ibc__core__channel__v1__query_packet_receipt_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_receipt_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketReceiptRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketReceiptResponse methods */
void   ibc__core__channel__v1__query_packet_receipt_response__init
                     (Ibc__Core__Channel__V1__QueryPacketReceiptResponse         *message);
size_t ibc__core__channel__v1__query_packet_receipt_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketReceiptResponse   *message);
size_t ibc__core__channel__v1__query_packet_receipt_response__pack
                     (const Ibc__Core__Channel__V1__QueryPacketReceiptResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_receipt_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketReceiptResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketReceiptResponse *
       ibc__core__channel__v1__query_packet_receipt_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_receipt_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketReceiptResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest methods */
void   ibc__core__channel__v1__query_packet_acknowledgement_request__init
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest         *message);
size_t ibc__core__channel__v1__query_packet_acknowledgement_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest   *message);
size_t ibc__core__channel__v1__query_packet_acknowledgement_request__pack
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_acknowledgement_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest *
       ibc__core__channel__v1__query_packet_acknowledgement_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_acknowledgement_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse methods */
void   ibc__core__channel__v1__query_packet_acknowledgement_response__init
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse         *message);
size_t ibc__core__channel__v1__query_packet_acknowledgement_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse   *message);
size_t ibc__core__channel__v1__query_packet_acknowledgement_response__pack
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_acknowledgement_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse *
       ibc__core__channel__v1__query_packet_acknowledgement_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_acknowledgement_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest methods */
void   ibc__core__channel__v1__query_packet_acknowledgements_request__init
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest         *message);
size_t ibc__core__channel__v1__query_packet_acknowledgements_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest   *message);
size_t ibc__core__channel__v1__query_packet_acknowledgements_request__pack
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_acknowledgements_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest *
       ibc__core__channel__v1__query_packet_acknowledgements_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_acknowledgements_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse methods */
void   ibc__core__channel__v1__query_packet_acknowledgements_response__init
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse         *message);
size_t ibc__core__channel__v1__query_packet_acknowledgements_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse   *message);
size_t ibc__core__channel__v1__query_packet_acknowledgements_response__pack
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_packet_acknowledgements_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse *
       ibc__core__channel__v1__query_packet_acknowledgements_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_packet_acknowledgements_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest methods */
void   ibc__core__channel__v1__query_unreceived_packets_request__init
                     (Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest         *message);
size_t ibc__core__channel__v1__query_unreceived_packets_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest   *message);
size_t ibc__core__channel__v1__query_unreceived_packets_request__pack
                     (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_unreceived_packets_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest *
       ibc__core__channel__v1__query_unreceived_packets_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_unreceived_packets_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse methods */
void   ibc__core__channel__v1__query_unreceived_packets_response__init
                     (Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse         *message);
size_t ibc__core__channel__v1__query_unreceived_packets_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse   *message);
size_t ibc__core__channel__v1__query_unreceived_packets_response__pack
                     (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_unreceived_packets_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse *
       ibc__core__channel__v1__query_unreceived_packets_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_unreceived_packets_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest methods */
void   ibc__core__channel__v1__query_unreceived_acks_request__init
                     (Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest         *message);
size_t ibc__core__channel__v1__query_unreceived_acks_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest   *message);
size_t ibc__core__channel__v1__query_unreceived_acks_request__pack
                     (const Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_unreceived_acks_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest *
       ibc__core__channel__v1__query_unreceived_acks_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_unreceived_acks_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse methods */
void   ibc__core__channel__v1__query_unreceived_acks_response__init
                     (Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse         *message);
size_t ibc__core__channel__v1__query_unreceived_acks_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse   *message);
size_t ibc__core__channel__v1__query_unreceived_acks_response__pack
                     (const Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_unreceived_acks_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse *
       ibc__core__channel__v1__query_unreceived_acks_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_unreceived_acks_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest methods */
void   ibc__core__channel__v1__query_next_sequence_receive_request__init
                     (Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest         *message);
size_t ibc__core__channel__v1__query_next_sequence_receive_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest   *message);
size_t ibc__core__channel__v1__query_next_sequence_receive_request__pack
                     (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_next_sequence_receive_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest *
       ibc__core__channel__v1__query_next_sequence_receive_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_next_sequence_receive_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse methods */
void   ibc__core__channel__v1__query_next_sequence_receive_response__init
                     (Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse         *message);
size_t ibc__core__channel__v1__query_next_sequence_receive_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse   *message);
size_t ibc__core__channel__v1__query_next_sequence_receive_response__pack
                     (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_next_sequence_receive_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse *
       ibc__core__channel__v1__query_next_sequence_receive_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_next_sequence_receive_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryNextSequenceSendRequest methods */
void   ibc__core__channel__v1__query_next_sequence_send_request__init
                     (Ibc__Core__Channel__V1__QueryNextSequenceSendRequest         *message);
size_t ibc__core__channel__v1__query_next_sequence_send_request__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryNextSequenceSendRequest   *message);
size_t ibc__core__channel__v1__query_next_sequence_send_request__pack
                     (const Ibc__Core__Channel__V1__QueryNextSequenceSendRequest   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_next_sequence_send_request__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryNextSequenceSendRequest   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryNextSequenceSendRequest *
       ibc__core__channel__v1__query_next_sequence_send_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_next_sequence_send_request__free_unpacked
                     (Ibc__Core__Channel__V1__QueryNextSequenceSendRequest *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Core__Channel__V1__QueryNextSequenceSendResponse methods */
void   ibc__core__channel__v1__query_next_sequence_send_response__init
                     (Ibc__Core__Channel__V1__QueryNextSequenceSendResponse         *message);
size_t ibc__core__channel__v1__query_next_sequence_send_response__get_packed_size
                     (const Ibc__Core__Channel__V1__QueryNextSequenceSendResponse   *message);
size_t ibc__core__channel__v1__query_next_sequence_send_response__pack
                     (const Ibc__Core__Channel__V1__QueryNextSequenceSendResponse   *message,
                      uint8_t             *out);
size_t ibc__core__channel__v1__query_next_sequence_send_response__pack_to_buffer
                     (const Ibc__Core__Channel__V1__QueryNextSequenceSendResponse   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Core__Channel__V1__QueryNextSequenceSendResponse *
       ibc__core__channel__v1__query_next_sequence_send_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__core__channel__v1__query_next_sequence_send_response__free_unpacked
                     (Ibc__Core__Channel__V1__QueryNextSequenceSendResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Core__Channel__V1__QueryChannelRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelsRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelsResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryConnectionChannelsRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryConnectionChannelsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryConnectionChannelsResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryConnectionChannelsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelClientStateRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelClientStateRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelClientStateResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelClientStateResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketCommitmentRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketCommitmentRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketCommitmentResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketCommitmentResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketReceiptRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketReceiptRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketReceiptResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketReceiptResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryNextSequenceSendRequest_Closure)
                 (const Ibc__Core__Channel__V1__QueryNextSequenceSendRequest *message,
                  void *closure_data);
typedef void (*Ibc__Core__Channel__V1__QueryNextSequenceSendResponse_Closure)
                 (const Ibc__Core__Channel__V1__QueryNextSequenceSendResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Ibc__Core__Channel__V1__Query_Service Ibc__Core__Channel__V1__Query_Service;
struct Ibc__Core__Channel__V1__Query_Service
{
  ProtobufCService base;
  void (*channel)(Ibc__Core__Channel__V1__Query_Service *service,
                  const Ibc__Core__Channel__V1__QueryChannelRequest *input,
                  Ibc__Core__Channel__V1__QueryChannelResponse_Closure closure,
                  void *closure_data);
  void (*channels)(Ibc__Core__Channel__V1__Query_Service *service,
                   const Ibc__Core__Channel__V1__QueryChannelsRequest *input,
                   Ibc__Core__Channel__V1__QueryChannelsResponse_Closure closure,
                   void *closure_data);
  void (*connection_channels)(Ibc__Core__Channel__V1__Query_Service *service,
                              const Ibc__Core__Channel__V1__QueryConnectionChannelsRequest *input,
                              Ibc__Core__Channel__V1__QueryConnectionChannelsResponse_Closure closure,
                              void *closure_data);
  void (*channel_client_state)(Ibc__Core__Channel__V1__Query_Service *service,
                               const Ibc__Core__Channel__V1__QueryChannelClientStateRequest *input,
                               Ibc__Core__Channel__V1__QueryChannelClientStateResponse_Closure closure,
                               void *closure_data);
  void (*channel_consensus_state)(Ibc__Core__Channel__V1__Query_Service *service,
                                  const Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest *input,
                                  Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse_Closure closure,
                                  void *closure_data);
  void (*packet_commitment)(Ibc__Core__Channel__V1__Query_Service *service,
                            const Ibc__Core__Channel__V1__QueryPacketCommitmentRequest *input,
                            Ibc__Core__Channel__V1__QueryPacketCommitmentResponse_Closure closure,
                            void *closure_data);
  void (*packet_commitments)(Ibc__Core__Channel__V1__Query_Service *service,
                             const Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest *input,
                             Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse_Closure closure,
                             void *closure_data);
  void (*packet_receipt)(Ibc__Core__Channel__V1__Query_Service *service,
                         const Ibc__Core__Channel__V1__QueryPacketReceiptRequest *input,
                         Ibc__Core__Channel__V1__QueryPacketReceiptResponse_Closure closure,
                         void *closure_data);
  void (*packet_acknowledgement)(Ibc__Core__Channel__V1__Query_Service *service,
                                 const Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest *input,
                                 Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse_Closure closure,
                                 void *closure_data);
  void (*packet_acknowledgements)(Ibc__Core__Channel__V1__Query_Service *service,
                                  const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest *input,
                                  Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse_Closure closure,
                                  void *closure_data);
  void (*unreceived_packets)(Ibc__Core__Channel__V1__Query_Service *service,
                             const Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest *input,
                             Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse_Closure closure,
                             void *closure_data);
  void (*unreceived_acks)(Ibc__Core__Channel__V1__Query_Service *service,
                          const Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest *input,
                          Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse_Closure closure,
                          void *closure_data);
  void (*next_sequence_receive)(Ibc__Core__Channel__V1__Query_Service *service,
                                const Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest *input,
                                Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse_Closure closure,
                                void *closure_data);
  void (*next_sequence_send)(Ibc__Core__Channel__V1__Query_Service *service,
                             const Ibc__Core__Channel__V1__QueryNextSequenceSendRequest *input,
                             Ibc__Core__Channel__V1__QueryNextSequenceSendResponse_Closure closure,
                             void *closure_data);
};
typedef void (*Ibc__Core__Channel__V1__Query_ServiceDestroy)(Ibc__Core__Channel__V1__Query_Service *);
void ibc__core__channel__v1__query__init (Ibc__Core__Channel__V1__Query_Service *service,
                                          Ibc__Core__Channel__V1__Query_ServiceDestroy destroy);
#define IBC__CORE__CHANNEL__V1__QUERY__BASE_INIT \
    { &ibc__core__channel__v1__query__descriptor, protobuf_c_service_invoke_internal, NULL }
#define IBC__CORE__CHANNEL__V1__QUERY__INIT(function_prefix__) \
    { IBC__CORE__CHANNEL__V1__QUERY__BASE_INIT,\
      function_prefix__ ## channel,\
      function_prefix__ ## channels,\
      function_prefix__ ## connection_channels,\
      function_prefix__ ## channel_client_state,\
      function_prefix__ ## channel_consensus_state,\
      function_prefix__ ## packet_commitment,\
      function_prefix__ ## packet_commitments,\
      function_prefix__ ## packet_receipt,\
      function_prefix__ ## packet_acknowledgement,\
      function_prefix__ ## packet_acknowledgements,\
      function_prefix__ ## unreceived_packets,\
      function_prefix__ ## unreceived_acks,\
      function_prefix__ ## next_sequence_receive,\
      function_prefix__ ## next_sequence_send  }
void ibc__core__channel__v1__query__channel(ProtobufCService *service,
                                            const Ibc__Core__Channel__V1__QueryChannelRequest *input,
                                            Ibc__Core__Channel__V1__QueryChannelResponse_Closure closure,
                                            void *closure_data);
void ibc__core__channel__v1__query__channels(ProtobufCService *service,
                                             const Ibc__Core__Channel__V1__QueryChannelsRequest *input,
                                             Ibc__Core__Channel__V1__QueryChannelsResponse_Closure closure,
                                             void *closure_data);
void ibc__core__channel__v1__query__connection_channels(ProtobufCService *service,
                                                        const Ibc__Core__Channel__V1__QueryConnectionChannelsRequest *input,
                                                        Ibc__Core__Channel__V1__QueryConnectionChannelsResponse_Closure closure,
                                                        void *closure_data);
void ibc__core__channel__v1__query__channel_client_state(ProtobufCService *service,
                                                         const Ibc__Core__Channel__V1__QueryChannelClientStateRequest *input,
                                                         Ibc__Core__Channel__V1__QueryChannelClientStateResponse_Closure closure,
                                                         void *closure_data);
void ibc__core__channel__v1__query__channel_consensus_state(ProtobufCService *service,
                                                            const Ibc__Core__Channel__V1__QueryChannelConsensusStateRequest *input,
                                                            Ibc__Core__Channel__V1__QueryChannelConsensusStateResponse_Closure closure,
                                                            void *closure_data);
void ibc__core__channel__v1__query__packet_commitment(ProtobufCService *service,
                                                      const Ibc__Core__Channel__V1__QueryPacketCommitmentRequest *input,
                                                      Ibc__Core__Channel__V1__QueryPacketCommitmentResponse_Closure closure,
                                                      void *closure_data);
void ibc__core__channel__v1__query__packet_commitments(ProtobufCService *service,
                                                       const Ibc__Core__Channel__V1__QueryPacketCommitmentsRequest *input,
                                                       Ibc__Core__Channel__V1__QueryPacketCommitmentsResponse_Closure closure,
                                                       void *closure_data);
void ibc__core__channel__v1__query__packet_receipt(ProtobufCService *service,
                                                   const Ibc__Core__Channel__V1__QueryPacketReceiptRequest *input,
                                                   Ibc__Core__Channel__V1__QueryPacketReceiptResponse_Closure closure,
                                                   void *closure_data);
void ibc__core__channel__v1__query__packet_acknowledgement(ProtobufCService *service,
                                                           const Ibc__Core__Channel__V1__QueryPacketAcknowledgementRequest *input,
                                                           Ibc__Core__Channel__V1__QueryPacketAcknowledgementResponse_Closure closure,
                                                           void *closure_data);
void ibc__core__channel__v1__query__packet_acknowledgements(ProtobufCService *service,
                                                            const Ibc__Core__Channel__V1__QueryPacketAcknowledgementsRequest *input,
                                                            Ibc__Core__Channel__V1__QueryPacketAcknowledgementsResponse_Closure closure,
                                                            void *closure_data);
void ibc__core__channel__v1__query__unreceived_packets(ProtobufCService *service,
                                                       const Ibc__Core__Channel__V1__QueryUnreceivedPacketsRequest *input,
                                                       Ibc__Core__Channel__V1__QueryUnreceivedPacketsResponse_Closure closure,
                                                       void *closure_data);
void ibc__core__channel__v1__query__unreceived_acks(ProtobufCService *service,
                                                    const Ibc__Core__Channel__V1__QueryUnreceivedAcksRequest *input,
                                                    Ibc__Core__Channel__V1__QueryUnreceivedAcksResponse_Closure closure,
                                                    void *closure_data);
void ibc__core__channel__v1__query__next_sequence_receive(ProtobufCService *service,
                                                          const Ibc__Core__Channel__V1__QueryNextSequenceReceiveRequest *input,
                                                          Ibc__Core__Channel__V1__QueryNextSequenceReceiveResponse_Closure closure,
                                                          void *closure_data);
void ibc__core__channel__v1__query__next_sequence_send(ProtobufCService *service,
                                                       const Ibc__Core__Channel__V1__QueryNextSequenceSendRequest *input,
                                                       Ibc__Core__Channel__V1__QueryNextSequenceSendResponse_Closure closure,
                                                       void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channel_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channel_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channels_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channels_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_connection_channels_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_connection_channels_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channel_client_state_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channel_client_state_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channel_consensus_state_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_channel_consensus_state_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_commitment_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_commitment_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_commitments_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_commitments_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_receipt_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_receipt_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_acknowledgement_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_acknowledgement_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_acknowledgements_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_packet_acknowledgements_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_unreceived_packets_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_unreceived_packets_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_unreceived_acks_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_unreceived_acks_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_next_sequence_receive_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_next_sequence_receive_response__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_next_sequence_send_request__descriptor;
extern const ProtobufCMessageDescriptor ibc__core__channel__v1__query_next_sequence_send_response__descriptor;
extern const ProtobufCServiceDescriptor ibc__core__channel__v1__query__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fcore_2fchannel_2fv1_2fquery_2eproto__INCLUDED */
