/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/applications/transfer/v1/authz.proto */

#ifndef PROTOBUF_C_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "cosmos_proto/cosmos.pb-c.h"
#include "gogoproto/gogo.pb-c.h"
#include "cosmos/base/v1beta1/coin.pb-c.h"

typedef struct Ibc__Applications__Transfer__V1__Allocation Ibc__Applications__Transfer__V1__Allocation;
typedef struct Ibc__Applications__Transfer__V1__TransferAuthorization Ibc__Applications__Transfer__V1__TransferAuthorization;


/* --- enums --- */


/* --- messages --- */

/*
 * Allocation defines the spend limit for a particular port and channel
 */
struct  Ibc__Applications__Transfer__V1__Allocation
{
  ProtobufCMessage base;
  /*
   * the port on which the packet will be sent
   */
  char *source_port;
  /*
   * the channel by which the packet will be sent
   */
  char *source_channel;
  /*
   * spend limitation on the channel
   */
  size_t n_spend_limit;
  Cosmos__Base__V1beta1__Coin **spend_limit;
  /*
   * allow list of receivers, an empty allow list permits any receiver address
   */
  size_t n_allow_list;
  char **allow_list;
  /*
   * allow list of memo strings, an empty list prohibits all memo strings;
   * a list only with "*" permits any memo string
   */
  size_t n_allowed_packet_data;
  char **allowed_packet_data;
};
#define IBC__APPLICATIONS__TRANSFER__V1__ALLOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__applications__transfer__v1__allocation__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL }


/*
 * TransferAuthorization allows the grantee to spend up to spend_limit coins from
 * the granter's account for ibc transfer on a specific channel
 */
struct  Ibc__Applications__Transfer__V1__TransferAuthorization
{
  ProtobufCMessage base;
  /*
   * port and channel amounts
   */
  size_t n_allocations;
  Ibc__Applications__Transfer__V1__Allocation **allocations;
};
#define IBC__APPLICATIONS__TRANSFER__V1__TRANSFER_AUTHORIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__applications__transfer__v1__transfer_authorization__descriptor) \
, 0,NULL }


/* Ibc__Applications__Transfer__V1__Allocation methods */
void   ibc__applications__transfer__v1__allocation__init
                     (Ibc__Applications__Transfer__V1__Allocation         *message);
size_t ibc__applications__transfer__v1__allocation__get_packed_size
                     (const Ibc__Applications__Transfer__V1__Allocation   *message);
size_t ibc__applications__transfer__v1__allocation__pack
                     (const Ibc__Applications__Transfer__V1__Allocation   *message,
                      uint8_t             *out);
size_t ibc__applications__transfer__v1__allocation__pack_to_buffer
                     (const Ibc__Applications__Transfer__V1__Allocation   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Applications__Transfer__V1__Allocation *
       ibc__applications__transfer__v1__allocation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__applications__transfer__v1__allocation__free_unpacked
                     (Ibc__Applications__Transfer__V1__Allocation *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Applications__Transfer__V1__TransferAuthorization methods */
void   ibc__applications__transfer__v1__transfer_authorization__init
                     (Ibc__Applications__Transfer__V1__TransferAuthorization         *message);
size_t ibc__applications__transfer__v1__transfer_authorization__get_packed_size
                     (const Ibc__Applications__Transfer__V1__TransferAuthorization   *message);
size_t ibc__applications__transfer__v1__transfer_authorization__pack
                     (const Ibc__Applications__Transfer__V1__TransferAuthorization   *message,
                      uint8_t             *out);
size_t ibc__applications__transfer__v1__transfer_authorization__pack_to_buffer
                     (const Ibc__Applications__Transfer__V1__TransferAuthorization   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Applications__Transfer__V1__TransferAuthorization *
       ibc__applications__transfer__v1__transfer_authorization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__applications__transfer__v1__transfer_authorization__free_unpacked
                     (Ibc__Applications__Transfer__V1__TransferAuthorization *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Applications__Transfer__V1__Allocation_Closure)
                 (const Ibc__Applications__Transfer__V1__Allocation *message,
                  void *closure_data);
typedef void (*Ibc__Applications__Transfer__V1__TransferAuthorization_Closure)
                 (const Ibc__Applications__Transfer__V1__TransferAuthorization *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__applications__transfer__v1__allocation__descriptor;
extern const ProtobufCMessageDescriptor ibc__applications__transfer__v1__transfer_authorization__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto__INCLUDED */
