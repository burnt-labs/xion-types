/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: ibc/applications/transfer/v1/token.proto */

#ifndef PROTOBUF_C_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto__INCLUDED
#define PROTOBUF_C_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "gogoproto/gogo.pb-c.h"

typedef struct Ibc__Applications__Transfer__V1__Token Ibc__Applications__Transfer__V1__Token;
typedef struct Ibc__Applications__Transfer__V1__Denom Ibc__Applications__Transfer__V1__Denom;
typedef struct Ibc__Applications__Transfer__V1__Hop Ibc__Applications__Transfer__V1__Hop;


/* --- enums --- */


/* --- messages --- */

/*
 * Token defines a struct which represents a token to be transferred.
 */
struct  Ibc__Applications__Transfer__V1__Token
{
  ProtobufCMessage base;
  /*
   * the token denomination
   */
  Ibc__Applications__Transfer__V1__Denom *denom;
  /*
   * the token amount to be transferred
   */
  char *amount;
};
#define IBC__APPLICATIONS__TRANSFER__V1__TOKEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__applications__transfer__v1__token__descriptor) \
, NULL, (char *)protobuf_c_empty_string }


/*
 * Denom holds the base denom of a Token and a trace of the chains it was sent through.
 */
struct  Ibc__Applications__Transfer__V1__Denom
{
  ProtobufCMessage base;
  /*
   * the base token denomination
   */
  char *base;
  /*
   * the trace of the token
   */
  size_t n_trace;
  Ibc__Applications__Transfer__V1__Hop **trace;
};
#define IBC__APPLICATIONS__TRANSFER__V1__DENOM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__applications__transfer__v1__denom__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * Hop defines a port ID, channel ID pair specifying a unique "hop" in a trace
 */
struct  Ibc__Applications__Transfer__V1__Hop
{
  ProtobufCMessage base;
  char *port_id;
  char *channel_id;
};
#define IBC__APPLICATIONS__TRANSFER__V1__HOP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ibc__applications__transfer__v1__hop__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Ibc__Applications__Transfer__V1__Token methods */
void   ibc__applications__transfer__v1__token__init
                     (Ibc__Applications__Transfer__V1__Token         *message);
size_t ibc__applications__transfer__v1__token__get_packed_size
                     (const Ibc__Applications__Transfer__V1__Token   *message);
size_t ibc__applications__transfer__v1__token__pack
                     (const Ibc__Applications__Transfer__V1__Token   *message,
                      uint8_t             *out);
size_t ibc__applications__transfer__v1__token__pack_to_buffer
                     (const Ibc__Applications__Transfer__V1__Token   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Applications__Transfer__V1__Token *
       ibc__applications__transfer__v1__token__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__applications__transfer__v1__token__free_unpacked
                     (Ibc__Applications__Transfer__V1__Token *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Applications__Transfer__V1__Denom methods */
void   ibc__applications__transfer__v1__denom__init
                     (Ibc__Applications__Transfer__V1__Denom         *message);
size_t ibc__applications__transfer__v1__denom__get_packed_size
                     (const Ibc__Applications__Transfer__V1__Denom   *message);
size_t ibc__applications__transfer__v1__denom__pack
                     (const Ibc__Applications__Transfer__V1__Denom   *message,
                      uint8_t             *out);
size_t ibc__applications__transfer__v1__denom__pack_to_buffer
                     (const Ibc__Applications__Transfer__V1__Denom   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Applications__Transfer__V1__Denom *
       ibc__applications__transfer__v1__denom__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__applications__transfer__v1__denom__free_unpacked
                     (Ibc__Applications__Transfer__V1__Denom *message,
                      ProtobufCAllocator *allocator);
/* Ibc__Applications__Transfer__V1__Hop methods */
void   ibc__applications__transfer__v1__hop__init
                     (Ibc__Applications__Transfer__V1__Hop         *message);
size_t ibc__applications__transfer__v1__hop__get_packed_size
                     (const Ibc__Applications__Transfer__V1__Hop   *message);
size_t ibc__applications__transfer__v1__hop__pack
                     (const Ibc__Applications__Transfer__V1__Hop   *message,
                      uint8_t             *out);
size_t ibc__applications__transfer__v1__hop__pack_to_buffer
                     (const Ibc__Applications__Transfer__V1__Hop   *message,
                      ProtobufCBuffer     *buffer);
Ibc__Applications__Transfer__V1__Hop *
       ibc__applications__transfer__v1__hop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ibc__applications__transfer__v1__hop__free_unpacked
                     (Ibc__Applications__Transfer__V1__Hop *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ibc__Applications__Transfer__V1__Token_Closure)
                 (const Ibc__Applications__Transfer__V1__Token *message,
                  void *closure_data);
typedef void (*Ibc__Applications__Transfer__V1__Denom_Closure)
                 (const Ibc__Applications__Transfer__V1__Denom *message,
                  void *closure_data);
typedef void (*Ibc__Applications__Transfer__V1__Hop_Closure)
                 (const Ibc__Applications__Transfer__V1__Hop *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ibc__applications__transfer__v1__token__descriptor;
extern const ProtobufCMessageDescriptor ibc__applications__transfer__v1__denom__descriptor;
extern const ProtobufCMessageDescriptor ibc__applications__transfer__v1__hop__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto__INCLUDED */
